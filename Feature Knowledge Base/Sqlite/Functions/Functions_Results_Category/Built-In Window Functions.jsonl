{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["row_number()"], "Description": ["The number of the row within the current partition, starting from 1 in the order defined by the ORDER BY clause in the window definition, or in arbitrary order otherwise."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["rank()"], "Description": ["The row_number of the first peer in each group - the rank of the current row with gaps. If there is no ORDER BY clause, then all rows are considered peers and this function always returns 1."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["dense_rank()"], "Description": ["The number of the current row's peer group within its partition - the rank of the current row without gaps. If there is no ORDER BY clause, then all rows are considered peers and this function always returns 1."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["percent_rank()"], "Description": ["Despite the name, this function always returns a value between 0.0 and 1.0 equal to (rank - 1)/(partition-rows - 1), where rank is the value returned by built-in window function rank() and partition-rows is the total number of rows in the partition. If the partition contains only one row, this function returns 0.0."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["cume_dist()"], "Description": ["The cumulative distribution, calculated as row-number/partition-rows, where row-number is the value returned by row_number for the last peer in the group and partition-rows is the number of rows in the partition."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["ntile(N)"], "Description": ["Argument N is handled as an integer. This function divides the partition into N groups as evenly as possible and assigns an integer between 1 and N to each group, in the order defined by the ORDER BY clause, or in arbitrary order otherwise. If necessary, larger groups occur first. This function returns the integer value assigned to the group that the current row is a part of."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["lag(expr)\nlag(expr, offset)\nlag(expr, offset, default)"], "Description": ["The first form of the lag() function returns the result of evaluating expression expr against the previous row in the partition. Or, if there is no previous row (because the current row is the first), NULL.", "If the offset argument is provided, then it must be a non-negative integer. In this case the value returned is the result of evaluating expr against the row offset rows before the current row within the partition. If offset is 0, then expr is evaluated against the current row. If there is no row offset rows before the current row, NULL is returned.", "If default is also provided, then it is returned instead of NULL if the row identified by offset does not exist."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["lead(expr)\nlead(expr, offset)\nlead(expr, offset, default)"], "Description": ["The first form of the lead() function returns the result of evaluating expression expr against the next row in the partition. Or, if there is no next row (because the current row is the last), NULL.", "If the offset argument is provided, then it must be a non-negative integer. In this case the value returned is the result of evaluating expr against the row offset rows after the current row within the partition. If offset is 0, then expr is evaluated against the current row. If there is no row offset rows after the current row, NULL is returned.", "If default is also provided, then it is returned instead of NULL if the row identified by offset does not exist."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["first_value(expr)"], "Description": ["This function returns the value of the expression evaluated against the first row in the window frame for each row."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["last_value(expr)"], "Description": ["This function returns the value of the expression evaluated against the last row in the window frame for each row."], "Examples": [], "Category": ["Built-In Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["Built-In Window Function"], "Feature": ["nth_value(expr, N)"], "Description": ["This function returns the value of the expression evaluated against the Nth row in the window frame. If there is no Nth row in the partition, then NULL is returned."], "Examples": [], "Category": ["Built-In Window Functions"]}
