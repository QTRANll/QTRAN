{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_extract(string, pattern[, group = 0][, options])"], "Feature": ["regexp_extract(string, pattern[, group = 0][, options])"], "Description": ["If string contains the regexp pattern, returns the capturing group specified by optional parameter group. The group must be a constant value. If no group is given, it defaults to 0. A set of optional options can be set."], "Examples": ["regexp_extract('abc', '([a-z])(b)', 1)"], "Category": ["Regular Expressions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_extract(string, pattern, name_list[, options])"], "Feature": ["regexp_extract(string, pattern, name_list[, options])"], "Description": ["If string contains the regexp pattern, returns the capturing groups as a struct with corresponding names from name_list.", "If string contains the regexp pattern, returns the capturing groups as a struct with corresponding names from name_list. A set of optional options can be set."], "Examples": ["regexp_extract('2023-04-15', '(\\d+)-(\\d+)-(\\d+)', ['y', 'm', 'd'])"], "Category": ["Regular Expressions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_extract_all(string, regex[, group = 0][, options])"], "Feature": ["regexp_extract_all(string, regex[, group = 0][, options])"], "Description": ["Split the string along the regex and extract all occurrences of group.", "Split the string along the regex and extract all occurrences of group. A set of optional options can be set."], "Examples": ["regexp_extract_all('hello_world', '([a-z ]+)_?', 1)"], "Category": ["Regular Expressions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_full_match(string, regex[, options])"], "Feature": ["regexp_full_match(string, regex[, options])"], "Description": ["Returns true if the entire string matches the regex.", "Returns true if the entire string matches the regex. A set of optional options can be set."], "Examples": ["regexp_full_match('anabanana', '(an)*')"], "Category": ["Regular Expressions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_matches(string, pattern[, options])"], "Feature": ["regexp_matches(string, pattern[, options])"], "Description": ["Returns true if  string contains the regexp pattern, false otherwise.", "Returns true if  string contains the regexp pattern, false otherwise. A set of optional options can be set."], "Examples": ["regexp_matches('anabanana', '(an)*')"], "Category": ["Regular Expressions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_replace(string, pattern, replacement[, options])"], "Feature": ["regexp_replace(string, pattern, replacement[, options])"], "Description": ["If string contains the regexp pattern, replaces the matching part with replacement.", "If string contains the regexp pattern, replaces the matching part with replacement. A set of optional options can be set."], "Examples": ["regexp_replace('hello', '[lo]', '-')"], "Category": ["Regular Expressions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_split_to_array(string, regex[, options])"], "Feature": ["regexp_split_to_array(string, regex[, options])"], "Description": ["Alias of string_split_regex. Splits the string along the regex.", "Alias of string_split_regex. Splits the string along the regex. A set of optional options can be set."], "Examples": ["regexp_split_to_array('hello world; 42', ';? ')"], "Category": ["Regular Expressions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/regular_expressions"], "Title": ["regexp_split_to_table(string, regex[, options])"], "Feature": ["regexp_split_to_table(string, regex[, options])"], "Description": ["Splits the string along the regex and returns a row for each part.", "Splits the string along the regex and returns a row for each part. A set of optional options can be set."], "Examples": ["regexp_split_to_table('hello world; 42', ';? ')"], "Category": ["Regular Expressions"]}
