{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["current_setting"], "Feature": ["current_setting ( setting_name text [, missing_ok boolean ] ) \u2192 text"], "Description": ["Returns the current value of the setting setting_name. If there is no such setting, current_setting throws an error unless missing_ok is supplied and is true (in which case NULL is returned). This function corresponds to the SQL command SHOW."], "Examples": ["current_setting('datestyle') \u2192 ISO, MDY"], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["set_config"], "Feature": ["set_config ( setting_name text, new_value text, is_local boolean ) \u2192 text"], "Description": ["Sets the parameter setting_name to new_value, and returns that value. If is_local is true, the new value will only apply during the current transaction. If you want the new value to apply for the rest of the current session, use false instead. This function corresponds to the SQL command SET."], "Examples": ["set_config('log_statement_stats', 'off', false) \u2192 off"], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_cancel_backend"], "Feature": ["pg_cancel_backend ( pid integer ) \u2192 boolean"], "Description": ["Cancels the current query of the session whose backend process has the specified process ID. This is also allowed if the calling role is a member of the role whose backend is being canceled or the calling role has privileges of pg_signal_backend, however only superusers can cancel superuser backends."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_log_backend_memory_contexts"], "Feature": ["pg_log_backend_memory_contexts ( pid integer ) \u2192 boolean"], "Description": ["Requests to log the memory contexts of the backend with the specified process ID. This function can send the request to backends and auxiliary processes except logger. These memory contexts will be logged at LOG message level. They will appear in the server log based on the log configuration set (see Section\u00a020.8 for more information), but will not be sent to the client regardless of client_min_messages."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_reload_conf"], "Feature": ["pg_reload_conf () \u2192 boolean"], "Description": ["Causes all processes of the PostgreSQL server to reload their configuration files. (This is initiated by sending a SIGHUP signal to the postmaster process, which in turn sends SIGHUP to each of its children.) You can use the pg_file_settings, pg_hba_file_rules and pg_ident_file_mappings views to check the configuration files for possible errors, before reloading."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_rotate_logfile"], "Feature": ["pg_rotate_logfile () \u2192 boolean"], "Description": ["Signals the log-file manager to switch to a new output file immediately. This works only when the built-in log collector is running, since otherwise there is no log-file manager subprocess."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_terminate_backend"], "Feature": ["pg_terminate_backend ( pid integer, timeout bigint DEFAULT 0 ) \u2192 boolean"], "Description": ["Terminates the session whose backend process has the specified process ID. This is also allowed if the calling role is a member of the role whose backend is being terminated or the calling role has privileges of pg_signal_backend, however only superusers can terminate superuser backends.", "If timeout is not specified or zero, this function returns true whether the process actually terminates or not, indicating only that the sending of the signal was successful. If the timeout is specified (in milliseconds) and greater than zero, the function waits until the process is actually terminated or until the given time has passed. If the process is terminated, the function returns true. On timeout, a warning is emitted and false is returned."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_create_restore_point"], "Feature": ["pg_create_restore_point ( name text ) \u2192 pg_lsn"], "Description": ["Creates a named marker record in the write-ahead log that can later be used as a recovery target, and returns the corresponding write-ahead log location. The given name can then be used with recovery_target_name to specify the point up to which recovery will proceed. Avoid creating multiple restore points with the same name, since recovery will stop at the first one whose name matches the recovery target.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_current_wal_flush_lsn"], "Feature": ["pg_current_wal_flush_lsn () \u2192 pg_lsn"], "Description": ["Returns the current write-ahead log flush location (see notes below)."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_current_wal_insert_lsn"], "Feature": ["pg_current_wal_insert_lsn () \u2192 pg_lsn"], "Description": ["Returns the current write-ahead log insert location (see notes below)."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_current_wal_lsn"], "Feature": ["pg_current_wal_lsn () \u2192 pg_lsn"], "Description": ["Returns the current write-ahead log write location (see notes below)."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_backup_start"], "Feature": ["pg_backup_start ( label text [, fast boolean ] ) \u2192 pg_lsn"], "Description": ["Prepares the server to begin an on-line backup. The only required parameter is an arbitrary user-defined label for the backup. (Typically this would be the name under which the backup dump file will be stored.) If the optional second parameter is given as true, it specifies executing pg_backup_start as quickly as possible. This forces an immediate checkpoint which will cause a spike in I/O operations, slowing any concurrently executing queries.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_backup_stop"], "Feature": ["pg_backup_stop ( [wait_for_archive boolean ] ) \u2192 record ( lsn pg_lsn, labelfile text, spcmapfile text )"], "Description": ["Finishes performing an on-line backup. The desired contents of the backup label file and the tablespace map file are returned as part of the result of the function and must be written to files in the backup area. These files must not be written to the live data directory (doing so will cause PostgreSQL to fail to restart in the event of a crash).", "There is an optional parameter of type boolean. If false, the function will return immediately after the backup is completed, without waiting for WAL to be archived. This behavior is only useful with backup software that independently monitors WAL archiving. Otherwise, WAL required to make the backup consistent might be missing and make the backup useless. By default or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is enabled. (On a standby, this means that it will wait only when archive_mode = always. If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger an immediate segment switch.)", "When executed on a primary, this function also creates a backup history file in the write-ahead log archive area. The history file includes the label given to pg_backup_start, the starting and ending write-ahead log locations for the backup, and the starting and ending times of the backup. After recording the ending location, the current write-ahead log insertion point is automatically advanced to the next write-ahead log file, so that the ending write-ahead log file can be archived immediately to complete the backup.", "The result of the function is a single record. The lsn column holds the backup's ending write-ahead log location (which again can be ignored). The second column returns the contents of the backup label file, and the third column returns the contents of the tablespace map file. These must be stored as part of the backup and are required as part of the restore process.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_switch_wal"], "Feature": ["pg_switch_wal () \u2192 pg_lsn"], "Description": ["Forces the server to switch to a new write-ahead log file, which allows the current file to be archived (assuming you are using continuous archiving). The result is the ending write-ahead log location plus 1 within the just-completed write-ahead log file. If there has been no write-ahead log activity since the last write-ahead log switch, pg_switch_wal does nothing and returns the start location of the write-ahead log file currently in use.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_walfile_name"], "Feature": ["pg_walfile_name ( lsn pg_lsn ) \u2192 text"], "Description": ["Converts a write-ahead log location to the name of the WAL file holding that location."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_walfile_name_offset"], "Feature": ["pg_walfile_name_offset ( lsn pg_lsn ) \u2192 record ( file_name text, file_offset integer )"], "Description": ["Converts a write-ahead log location to a WAL file name and byte offset within that file."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_split_walfile_name"], "Feature": ["pg_split_walfile_name ( file_name text ) \u2192 record ( segment_number numeric, timeline_id bigint )"], "Description": ["Extracts the sequence number and timeline ID from a WAL file name."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_wal_lsn_diff"], "Feature": ["pg_wal_lsn_diff ( lsn1 pg_lsn, lsn2 pg_lsn ) \u2192 numeric"], "Description": ["Calculates the difference in bytes (lsn1 - lsn2) between two write-ahead log locations. This can be used with pg_stat_replication or some of the functions shown in Table\u00a09.91 to get the replication lag."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_is_in_recovery"], "Feature": ["pg_is_in_recovery () \u2192 boolean"], "Description": ["Returns true if recovery is still in progress."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_last_wal_receive_lsn"], "Feature": ["pg_last_wal_receive_lsn () \u2192 pg_lsn"], "Description": ["Returns the last write-ahead log location that has been received and synced to disk by streaming replication. While streaming replication is in progress this will increase monotonically. If recovery has completed then this will remain static at the location of the last WAL record received and synced to disk during recovery. If streaming replication is disabled, or if it has not yet started, the function returns NULL."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_last_wal_replay_lsn"], "Feature": ["pg_last_wal_replay_lsn () \u2192 pg_lsn"], "Description": ["Returns the last write-ahead log location that has been replayed during recovery. If recovery is still in progress this will increase monotonically. If recovery has completed then this will remain static at the location of the last WAL record applied during recovery. When the server has been started normally without recovery, the function returns NULL."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_last_xact_replay_timestamp"], "Feature": ["pg_last_xact_replay_timestamp () \u2192 timestamp with time zone"], "Description": ["Returns the time stamp of the last transaction replayed during recovery. This is the time at which the commit or abort WAL record for that transaction was generated on the primary. If no transactions have been replayed during recovery, the function returns NULL. Otherwise, if recovery is still in progress this will increase monotonically. If recovery has completed then this will remain static at the time of the last transaction applied during recovery. When the server has been started normally without recovery, the function returns NULL."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_get_wal_resource_managers"], "Feature": ["pg_get_wal_resource_managers () \u2192 setof record ( rm_id integer, rm_name text, rm_builtin boolean )"], "Description": ["Returns the currently-loaded WAL resource managers in the system. The column rm_builtin indicates whether it's a built-in resource manager, or a custom resource manager loaded by an extension."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_is_wal_replay_paused"], "Feature": ["pg_is_wal_replay_paused () \u2192 boolean"], "Description": ["Returns true if recovery pause is requested."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_get_wal_replay_pause_state"], "Feature": ["pg_get_wal_replay_pause_state () \u2192 text"], "Description": ["Returns recovery pause state. The return values are not paused if pause is not requested, pause requested if pause is requested but recovery is not yet paused, and paused if the recovery is actually paused."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_promote"], "Feature": ["pg_promote ( wait boolean DEFAULT true, wait_seconds integer DEFAULT 60 ) \u2192 boolean"], "Description": ["Promotes a standby server to primary status. With wait set to true (the default), the function waits until promotion is completed or wait_seconds seconds have passed, and returns true if promotion is successful and false otherwise. If wait is set to false, the function returns true immediately after sending a SIGUSR1 signal to the postmaster to trigger promotion.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_wal_replay_pause"], "Feature": ["pg_wal_replay_pause () \u2192 void"], "Description": ["Request to pause recovery. A request doesn't mean that recovery stops right away. If you want a guarantee that recovery is actually paused, you need to check for the recovery pause state returned by pg_get_wal_replay_pause_state(). Note that pg_is_wal_replay_paused() returns whether a request is made. While recovery is paused, no further database changes are applied. If hot standby is active, all new queries will see the same consistent snapshot of the database, and no further query conflicts will be generated until recovery is resumed.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_wal_replay_resume"], "Feature": ["pg_wal_replay_resume () \u2192 void"], "Description": ["Restarts recovery if it was paused.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_export_snapshot"], "Feature": ["pg_export_snapshot () \u2192 text"], "Description": ["Saves the transaction's current snapshot and returns a text string identifying the snapshot. This string must be passed (outside the database) to clients that want to import the snapshot. The snapshot is available for import only until the end of the transaction that exported it.", "A transaction can export more than one snapshot, if needed. Note that doing so is only useful in READ COMMITTED transactions, since in REPEATABLE READ and higher isolation levels, transactions use the same snapshot throughout their lifetime. Once a transaction has exported any snapshots, it cannot be prepared with PREPARE TRANSACTION."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_log_standby_snapshot"], "Feature": ["pg_log_standby_snapshot () \u2192 pg_lsn"], "Description": ["Take a snapshot of running transactions and write it to WAL, without having to wait for bgwriter or checkpointer to log one. This is useful for logical decoding on standby, as logical slot creation has to wait until such a record is replayed on the standby."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_create_physical_replication_slot"], "Feature": ["pg_create_physical_replication_slot ( slot_name name [, immediately_reserve boolean, temporary boolean ] ) \u2192 record ( slot_name name, lsn pg_lsn )"], "Description": ["Creates a new physical replication slot named slot_name. The optional second parameter, when true, specifies that the LSN for this replication slot be reserved immediately; otherwise the LSN is reserved on first connection from a streaming replication client. Streaming changes from a physical slot is only possible with the streaming-replication protocol \u2014 see Section\u00a055.4. The optional third parameter, temporary, when set to true, specifies that the slot should not be permanently stored to disk and is only meant for use by the current session. Temporary slots are also released upon any error. This function corresponds to the replication protocol command CREATE_REPLICATION_SLOT ... PHYSICAL."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_drop_replication_slot"], "Feature": ["pg_drop_replication_slot ( slot_name name ) \u2192 void"], "Description": ["Drops the physical or logical replication slot named slot_name. Same as replication protocol command DROP_REPLICATION_SLOT. For logical slots, this must be called while connected to the same database the slot was created on."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_create_logical_replication_slot"], "Feature": ["pg_create_logical_replication_slot ( slot_name name, plugin name [, temporary boolean, twophase boolean ] ) \u2192 record ( slot_name name, lsn pg_lsn )"], "Description": ["Creates a new logical (decoding) replication slot named slot_name using the output plugin plugin. The optional third parameter, temporary, when set to true, specifies that the slot should not be permanently stored to disk and is only meant for use by the current session. Temporary slots are also released upon any error. The optional fourth parameter, twophase, when set to true, specifies that the decoding of prepared transactions is enabled for this slot. A call to this function has the same effect as the replication protocol command CREATE_REPLICATION_SLOT ... LOGICAL."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_copy_physical_replication_slot"], "Feature": ["pg_copy_physical_replication_slot ( src_slot_name name, dst_slot_name name [, temporary boolean ] ) \u2192 record ( slot_name name, lsn pg_lsn )"], "Description": ["Copies an existing physical replication slot named src_slot_name to a physical replication slot named dst_slot_name. The copied physical slot starts to reserve WAL from the same LSN as the source slot. temporary is optional. If temporary is omitted, the same value as the source slot is used."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_copy_logical_replication_slot"], "Feature": ["pg_copy_logical_replication_slot ( src_slot_name name, dst_slot_name name [, temporary boolean [, plugin name ]] ) \u2192 record ( slot_name name, lsn pg_lsn )"], "Description": ["Copies an existing logical replication slot named src_slot_name to a logical replication slot named dst_slot_name, optionally changing the output plugin and persistence. The copied logical slot starts from the same LSN as the source logical slot. Both temporary and plugin are optional; if they are omitted, the values of the source slot are used."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_logical_slot_get_changes"], "Feature": ["pg_logical_slot_get_changes ( slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] ) \u2192 setof record ( lsn pg_lsn, xid xid, data text )"], "Description": ["Returns changes in the slot slot_name, starting from the point from which changes have been consumed last. If upto_lsn and upto_nchanges are NULL, logical decoding will continue until end of WAL. If upto_lsn is non-NULL, decoding will include only those transactions which commit prior to the specified LSN. If upto_nchanges is non-NULL, decoding will stop when the number of rows produced by decoding exceeds the specified value. Note, however, that the actual number of rows returned may be larger, since this limit is only checked after adding the rows produced when decoding each new transaction commit."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_logical_slot_peek_changes"], "Feature": ["pg_logical_slot_peek_changes ( slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] ) \u2192 setof record ( lsn pg_lsn, xid xid, data text )"], "Description": ["Behaves just like the pg_logical_slot_get_changes() function, except that changes are not consumed; that is, they will be returned again on future calls."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_logical_slot_get_binary_changes"], "Feature": ["pg_logical_slot_get_binary_changes ( slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] ) \u2192 setof record ( lsn pg_lsn, xid xid, data bytea )"], "Description": ["Behaves just like the pg_logical_slot_get_changes() function, except that changes are returned as bytea."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_logical_slot_peek_binary_changes"], "Feature": ["pg_logical_slot_peek_binary_changes ( slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] ) \u2192 setof record ( lsn pg_lsn, xid xid, data bytea )"], "Description": ["Behaves just like the pg_logical_slot_peek_changes() function, except that changes are returned as bytea."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_slot_advance"], "Feature": ["pg_replication_slot_advance ( slot_name name, upto_lsn pg_lsn ) \u2192 record ( slot_name name, end_lsn pg_lsn )"], "Description": ["Advances the current confirmed position of a replication slot named slot_name. The slot will not be moved backwards, and it will not be moved beyond the current insert location. Returns the name of the slot and the actual position that it was advanced to. The updated slot position information is written out at the next checkpoint if any advancing is done. So in the event of a crash, the slot may return to an earlier position."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_create"], "Feature": ["pg_replication_origin_create ( node_name text ) \u2192 oid"], "Description": ["Creates a replication origin with the given external name, and returns the internal ID assigned to it."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_drop"], "Feature": ["pg_replication_origin_drop ( node_name text ) \u2192 void"], "Description": ["Deletes a previously-created replication origin, including any associated replay progress."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_oid"], "Feature": ["pg_replication_origin_oid ( node_name text ) \u2192 oid"], "Description": ["Looks up a replication origin by name and returns the internal ID. If no such replication origin is found, NULL is returned."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_session_setup"], "Feature": ["pg_replication_origin_session_setup ( node_name text ) \u2192 void"], "Description": ["Marks the current session as replaying from the given origin, allowing replay progress to be tracked. Can only be used if no origin is currently selected. Use pg_replication_origin_session_reset to undo."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_session_reset"], "Feature": ["pg_replication_origin_session_reset () \u2192 void"], "Description": ["Cancels the effects of pg_replication_origin_session_setup()."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_session_is_setup"], "Feature": ["pg_replication_origin_session_is_setup () \u2192 boolean"], "Description": ["Returns true if a replication origin has been selected in the current session."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_session_progress"], "Feature": ["pg_replication_origin_session_progress ( flush boolean ) \u2192 pg_lsn"], "Description": ["Returns the replay location for the replication origin selected in the current session. The parameter flush determines whether the corresponding local transaction will be guaranteed to have been flushed to disk or not."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_xact_setup"], "Feature": ["pg_replication_origin_xact_setup ( origin_lsn pg_lsn, origin_timestamp timestamp with time zone ) \u2192 void"], "Description": ["Marks the current transaction as replaying a transaction that has committed at the given LSN and timestamp. Can only be called when a replication origin has been selected using pg_replication_origin_session_setup."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_xact_reset"], "Feature": ["pg_replication_origin_xact_reset () \u2192 void"], "Description": ["Cancels the effects of pg_replication_origin_xact_setup()."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_advance"], "Feature": ["pg_replication_origin_advance ( node_name text, lsn pg_lsn ) \u2192 void"], "Description": ["Sets replication progress for the given node to the given location. This is primarily useful for setting up the initial location, or setting a new location after configuration changes and similar. Be aware that careless use of this function can lead to inconsistently replicated data."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_replication_origin_progress"], "Feature": ["pg_replication_origin_progress ( node_name text, flush boolean ) \u2192 pg_lsn"], "Description": ["Returns the replay location for the given replication origin. The parameter flush determines whether the corresponding local transaction will be guaranteed to have been flushed to disk or not."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_logical_emit_message"], "Feature": ["pg_logical_emit_message ( transactional boolean, prefix text, content text ) \u2192 pg_lsn", "pg_logical_emit_message ( transactional boolean, prefix text, content bytea ) \u2192 pg_lsn"], "Description": ["Emits a logical decoding message. This can be used to pass generic messages to logical decoding plugins through WAL. The transactional parameter specifies if the message should be part of the current transaction, or if it should be written immediately and decoded as soon as the logical decoder reads the record. The prefix parameter is a textual prefix that can be used by logical decoding plugins to easily recognize messages that are interesting for them. The content parameter is the content of the message, given either in text or binary form."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_column_size"], "Feature": ["pg_column_size ( \"any\" ) \u2192 integer"], "Description": ["Shows the number of bytes used to store any individual data value. If applied directly to a table column value, this reflects any compression that was done."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_column_compression"], "Feature": ["pg_column_compression ( \"any\" ) \u2192 text"], "Description": ["Shows the compression algorithm that was used to compress an individual variable-length value. Returns NULL if the value is not compressed."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_database_size"], "Feature": ["pg_database_size ( name ) \u2192 bigint", "pg_database_size ( oid ) \u2192 bigint"], "Description": ["Computes the total disk space used by the database with the specified name or OID. To use this function, you must have CONNECT privilege on the specified database (which is granted by default) or have privileges of the pg_read_all_stats role."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_indexes_size"], "Feature": ["pg_indexes_size ( regclass ) \u2192 bigint"], "Description": ["Computes the total disk space used by indexes attached to the specified table."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_relation_size"], "Feature": ["pg_relation_size ( relation regclass [, fork text ] ) \u2192 bigint"], "Description": ["Computes the disk space used by one \u201cfork\u201d of the specified relation. (Note that for most purposes it is more convenient to use the higher-level functions pg_total_relation_size or pg_table_size, which sum the sizes of all forks.) With one argument, this returns the size of the main data fork of the relation. The second argument can be provided to specify which fork to examine:", "main returns the size of the main data fork of the relation.", "fsm returns the size of the Free Space Map (see Section\u00a073.3) associated with the relation.", "vm returns the size of the Visibility Map (see Section\u00a073.4) associated with the relation.", "init returns the size of the initialization fork, if any, associated with the relation."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_size_bytes"], "Feature": ["pg_size_bytes ( text ) \u2192 bigint"], "Description": ["Converts a size in human-readable format (as returned by pg_size_pretty) into bytes. Valid units are bytes, B, kB, MB, GB, TB, and PB."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_size_pretty"], "Feature": ["pg_size_pretty ( bigint ) \u2192 text", "pg_size_pretty ( numeric ) \u2192 text"], "Description": ["Converts a size in bytes into a more easily human-readable format with size units (bytes, kB, MB, GB, TB, or PB as appropriate). Note that the units are powers of 2 rather than powers of 10, so 1kB is 1024 bytes, 1MB is 10242 = 1048576 bytes, and so on."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_table_size"], "Feature": ["pg_table_size ( regclass ) \u2192 bigint"], "Description": ["Computes the disk space used by the specified table, excluding indexes (but including its TOAST table if any, free space map, and visibility map)."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_tablespace_size"], "Feature": ["pg_tablespace_size ( name ) \u2192 bigint", "pg_tablespace_size ( oid ) \u2192 bigint"], "Description": ["Computes the total disk space used in the tablespace with the specified name or OID. To use this function, you must have CREATE privilege on the specified tablespace or have privileges of the pg_read_all_stats role, unless it is the default tablespace for the current database."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_total_relation_size"], "Feature": ["pg_total_relation_size ( regclass ) \u2192 bigint"], "Description": ["Computes the total disk space used by the specified table, including all indexes and TOAST data. The result is equivalent to pg_table_size + pg_indexes_size."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_relation_filenode"], "Feature": ["pg_relation_filenode ( relation regclass ) \u2192 oid"], "Description": ["Returns the \u201cfilenode\u201d number currently assigned to the specified relation. The filenode is the base component of the file name(s) used for the relation (see Section\u00a073.1 for more information). For most relations the result is the same as pg_class.relfilenode, but for certain system catalogs relfilenode is zero and this function must be used to get the correct value. The function returns NULL if passed a relation that does not have storage, such as a view."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_relation_filepath"], "Feature": ["pg_relation_filepath ( relation regclass ) \u2192 text"], "Description": ["Returns the entire file path name (relative to the database cluster's data directory, PGDATA) of the relation."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_filenode_relation"], "Feature": ["pg_filenode_relation ( tablespace oid, filenode oid ) \u2192 regclass"], "Description": ["Returns a relation's OID given the tablespace OID and filenode it is stored under. This is essentially the inverse mapping of pg_relation_filepath. For a relation in the database's default tablespace, the tablespace can be specified as zero. Returns NULL if no relation in the current database is associated with the given values."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_collation_actual_version"], "Feature": ["pg_collation_actual_version ( oid ) \u2192 text"], "Description": ["Returns the actual version of the collation object as it is currently installed in the operating system. If this is different from the value in pg_collation.collversion, then objects depending on the collation might need to be rebuilt. See also ALTER COLLATION."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_database_collation_actual_version"], "Feature": ["pg_database_collation_actual_version ( oid ) \u2192 text"], "Description": ["Returns the actual version of the database's collation as it is currently installed in the operating system. If this is different from the value in pg_database.datcollversion, then objects depending on the collation might need to be rebuilt. See also ALTER DATABASE."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_import_system_collations"], "Feature": ["pg_import_system_collations ( schema regnamespace ) \u2192 integer"], "Description": ["Adds collations to the system catalog pg_collation based on all the locales it finds in the operating system. This is what initdb uses; see Section\u00a024.2.2 for more details. If additional locales are installed into the operating system later on, this function can be run again to add collations for the new locales. Locales that match existing entries in pg_collation will be skipped. (But collation objects based on locales that are no longer present in the operating system are not removed by this function.) The schema parameter would typically be pg_catalog, but that is not a requirement; the collations could be installed into some other schema as well. The function returns the number of new collation objects it created. Use of this function is restricted to superusers."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_partition_tree"], "Feature": ["pg_partition_tree ( regclass ) \u2192 setof record ( relid regclass, parentrelid regclass, isleaf boolean, level integer )"], "Description": ["Lists the tables or indexes in the partition tree of the given partitioned table or partitioned index, with one row for each partition. Information provided includes the OID of the partition, the OID of its immediate parent, a boolean value telling if the partition is a leaf, and an integer telling its level in the hierarchy. The level value is 0 for the input table or index, 1 for its immediate child partitions, 2 for their partitions, and so on. Returns no rows if the relation does not exist or is not a partition or partitioned table."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_partition_ancestors"], "Feature": ["pg_partition_ancestors ( regclass ) \u2192 setof regclass"], "Description": ["Lists the ancestor relations of the given partition, including the relation itself. Returns no rows if the relation does not exist or is not a partition or partitioned table."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_partition_root"], "Feature": ["pg_partition_root ( regclass ) \u2192 regclass"], "Description": ["Returns the top-most parent of the partition tree to which the given relation belongs. Returns NULL if the relation does not exist or is not a partition or partitioned table."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["brin_summarize_new_values"], "Feature": ["brin_summarize_new_values ( index regclass ) \u2192 integer"], "Description": ["Scans the specified BRIN index to find page ranges in the base table that are not currently summarized by the index; for any such range it creates a new summary index tuple by scanning those table pages. Returns the number of new page range summaries that were inserted into the index."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["brin_summarize_range"], "Feature": ["brin_summarize_range ( index regclass, blockNumber bigint ) \u2192 integer"], "Description": ["Summarizes the page range covering the given block, if not already summarized. This is like brin_summarize_new_values except that it only processes the page range that covers the given table block number."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["brin_desummarize_range"], "Feature": ["brin_desummarize_range ( index regclass, blockNumber bigint ) \u2192 void"], "Description": ["Removes the BRIN index tuple that summarizes the page range covering the given table block, if there is one."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["gin_clean_pending_list"], "Feature": ["gin_clean_pending_list ( index regclass ) \u2192 bigint"], "Description": ["Cleans up the \u201cpending\u201d list of the specified GIN index by moving entries in it, in bulk, to the main GIN data structure. Returns the number of pages removed from the pending list. If the argument is a GIN index built with the fastupdate option disabled, no cleanup happens and the result is zero, because the index doesn't have a pending list. See Section\u00a070.4.1 and Section\u00a070.5 for details about the pending list and fastupdate option."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_dir"], "Feature": ["pg_ls_dir ( dirname text [, missing_ok boolean, include_dot_dirs boolean ] ) \u2192 setof text"], "Description": ["Returns the names of all files (and directories and other special files) in the specified directory. The include_dot_dirs parameter indicates whether \u201c.\u201d and \u201c..\u201d are to be included in the result set; the default is to exclude them. Including them can be useful when missing_ok is true, to distinguish an empty directory from a non-existent directory.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_logdir"], "Feature": ["pg_ls_logdir () \u2192 setof record ( name text, size bigint, modification timestamp with time zone )"], "Description": ["Returns the name, size, and last modification time (mtime) of each ordinary file in the server's log directory. Filenames beginning with a dot, directories, and other special files are excluded.", "This function is restricted to superusers and roles with privileges of the pg_monitor role by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_waldir"], "Feature": ["pg_ls_waldir () \u2192 setof record ( name text, size bigint, modification timestamp with time zone )"], "Description": ["Returns the name, size, and last modification time (mtime) of each ordinary file in the server's write-ahead log (WAL) directory. Filenames beginning with a dot, directories, and other special files are excluded.", "This function is restricted to superusers and roles with privileges of the pg_monitor role by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_logicalmapdir"], "Feature": ["pg_ls_logicalmapdir () \u2192 setof record ( name text, size bigint, modification timestamp with time zone )"], "Description": ["Returns the name, size, and last modification time (mtime) of each ordinary file in the server's pg_logical/mappings directory. Filenames beginning with a dot, directories, and other special files are excluded.", "This function is restricted to superusers and members of the pg_monitor role by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_logicalsnapdir"], "Feature": ["pg_ls_logicalsnapdir () \u2192 setof record ( name text, size bigint, modification timestamp with time zone )"], "Description": ["Returns the name, size, and last modification time (mtime) of each ordinary file in the server's pg_logical/snapshots directory. Filenames beginning with a dot, directories, and other special files are excluded.", "This function is restricted to superusers and members of the pg_monitor role by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_replslotdir"], "Feature": ["pg_ls_replslotdir ( slot_name text ) \u2192 setof record ( name text, size bigint, modification timestamp with time zone )"], "Description": ["Returns the name, size, and last modification time (mtime) of each ordinary file in the server's pg_replslot/slot_name directory, where slot_name is the name of the replication slot provided as input of the function. Filenames beginning with a dot, directories, and other special files are excluded.", "This function is restricted to superusers and members of the pg_monitor role by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_archive_statusdir"], "Feature": ["pg_ls_archive_statusdir () \u2192 setof record ( name text, size bigint, modification timestamp with time zone )"], "Description": ["Returns the name, size, and last modification time (mtime) of each ordinary file in the server's WAL archive status directory (pg_wal/archive_status). Filenames beginning with a dot, directories, and other special files are excluded.", "This function is restricted to superusers and members of the pg_monitor role by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_ls_tmpdir"], "Feature": ["pg_ls_tmpdir ( [ tablespace oid ] ) \u2192 setof record ( name text, size bigint, modification timestamp with time zone )"], "Description": ["Returns the name, size, and last modification time (mtime) of each ordinary file in the temporary file directory for the specified tablespace. If tablespace is not provided, the pg_default tablespace is examined. Filenames beginning with a dot, directories, and other special files are excluded.", "This function is restricted to superusers and members of the pg_monitor role by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_read_file"], "Feature": ["pg_read_file ( filename text [, offset bigint, length bigint ] [, missing_ok boolean ] ) \u2192 text"], "Description": ["Returns all or part of a text file, starting at the given byte offset, returning at most length bytes (less if the end of file is reached first). If offset is negative, it is relative to the end of the file. If offset and length are omitted, the entire file is returned. The bytes read from the file are interpreted as a string in the database's encoding; an error is thrown if they are not valid in that encoding.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_read_binary_file"], "Feature": ["pg_read_binary_file ( filename text [, offset bigint, length bigint ] [, missing_ok boolean ] ) \u2192 bytea"], "Description": ["Returns all or part of a file. This function is identical to pg_read_file except that it can read arbitrary binary data, returning the result as bytea not text; accordingly, no encoding checks are performed.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function.", "In combination with the convert_from function, this function can be used to read a text file in a specified encoding and convert to the database's encoding:"], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_stat_file"], "Feature": ["pg_stat_file ( filename text [, missing_ok boolean ] ) \u2192 record ( size bigint, access timestamp with time zone, modification timestamp with time zone, change timestamp with time zone, creation timestamp with time zone, isdir boolean )"], "Description": ["Returns a record containing the file's size, last access time stamp, last modification time stamp, last file status change time stamp (Unix platforms only), file creation time stamp (Windows only), and a flag indicating if it is a directory.", "This function is restricted to superusers by default, but other users can be granted EXECUTE to run the function."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_advisory_lock"], "Feature": ["pg_advisory_lock ( key bigint ) \u2192 void", "pg_advisory_lock ( key1 integer, key2 integer ) \u2192 void"], "Description": ["Obtains an exclusive session-level advisory lock, waiting if necessary."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_advisory_lock_shared"], "Feature": ["pg_advisory_lock_shared ( key bigint ) \u2192 void", "pg_advisory_lock_shared ( key1 integer, key2 integer ) \u2192 void"], "Description": ["Obtains a shared session-level advisory lock, waiting if necessary."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_advisory_unlock"], "Feature": ["pg_advisory_unlock ( key bigint ) \u2192 boolean", "pg_advisory_unlock ( key1 integer, key2 integer ) \u2192 boolean"], "Description": ["Releases a previously-acquired exclusive session-level advisory lock. Returns true if the lock is successfully released. If the lock was not held, false is returned, and in addition, an SQL warning will be reported by the server."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_advisory_unlock_all"], "Feature": ["pg_advisory_unlock_all () \u2192 void"], "Description": ["Releases all session-level advisory locks held by the current session. (This function is implicitly invoked at session end, even if the client disconnects ungracefully.)"], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_advisory_unlock_shared"], "Feature": ["pg_advisory_unlock_shared ( key bigint ) \u2192 boolean", "pg_advisory_unlock_shared ( key1 integer, key2 integer ) \u2192 boolean"], "Description": ["Releases a previously-acquired shared session-level advisory lock. Returns true if the lock is successfully released. If the lock was not held, false is returned, and in addition, an SQL warning will be reported by the server."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_advisory_xact_lock"], "Feature": ["pg_advisory_xact_lock ( key bigint ) \u2192 void", "pg_advisory_xact_lock ( key1 integer, key2 integer ) \u2192 void"], "Description": ["Obtains an exclusive transaction-level advisory lock, waiting if necessary."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_advisory_xact_lock_shared"], "Feature": ["pg_advisory_xact_lock_shared ( key bigint ) \u2192 void", "pg_advisory_xact_lock_shared ( key1 integer, key2 integer ) \u2192 void"], "Description": ["Obtains a shared transaction-level advisory lock, waiting if necessary."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_try_advisory_lock"], "Feature": ["pg_try_advisory_lock ( key bigint ) \u2192 boolean", "pg_try_advisory_lock ( key1 integer, key2 integer ) \u2192 boolean"], "Description": ["Obtains an exclusive session-level advisory lock if available. This will either obtain the lock immediately and return true, or return false without waiting if the lock cannot be acquired immediately."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_try_advisory_lock_shared"], "Feature": ["pg_try_advisory_lock_shared ( key bigint ) \u2192 boolean", "pg_try_advisory_lock_shared ( key1 integer, key2 integer ) \u2192 boolean"], "Description": ["Obtains a shared session-level advisory lock if available. This will either obtain the lock immediately and return true, or return false without waiting if the lock cannot be acquired immediately."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_try_advisory_xact_lock"], "Feature": ["pg_try_advisory_xact_lock ( key bigint ) \u2192 boolean", "pg_try_advisory_xact_lock ( key1 integer, key2 integer ) \u2192 boolean"], "Description": ["Obtains an exclusive transaction-level advisory lock if available. This will either obtain the lock immediately and return true, or return false without waiting if the lock cannot be acquired immediately."], "Examples": [], "Category": ["System Administration Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-admin.html"], "Title": ["pg_try_advisory_xact_lock_shared"], "Feature": ["pg_try_advisory_xact_lock_shared ( key bigint ) \u2192 boolean", "pg_try_advisory_xact_lock_shared ( key1 integer, key2 integer ) \u2192 boolean"], "Description": ["Obtains a shared transaction-level advisory lock if available. This will either obtain the lock immediately and return true, or return false without waiting if the lock cannot be acquired immediately."], "Examples": [], "Category": ["System Administration Functions"]}
