{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["any_value"], "Feature": ["any_value ( anyelement ) \u2192 same as input type"], "Description": ["Returns an arbitrary value from the non-null input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["array_agg"], "Feature": ["array_agg ( anyarray ) \u2192 anyarray"], "Description": ["Concatenates all the input arrays into an array of one higher dimension. (The inputs must all have the same dimensionality, and cannot be empty or null.)"], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["avg"], "Feature": ["avg ( smallint ) \u2192 numeric", "avg ( integer ) \u2192 numeric", "avg ( bigint ) \u2192 numeric", "avg ( numeric ) \u2192 numeric", "avg ( real ) \u2192 double precision", "avg ( double precision ) \u2192 double precision", "avg ( interval ) \u2192 interval"], "Description": ["Computes the average (arithmetic mean) of all the non-null input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["bit_and"], "Feature": ["bit_and ( smallint ) \u2192 smallint", "bit_and ( integer ) \u2192 integer", "bit_and ( bigint ) \u2192 bigint", "bit_and ( bit ) \u2192 bit"], "Description": ["Computes the bitwise AND of all non-null input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["bit_or"], "Feature": ["bit_or ( smallint ) \u2192 smallint", "bit_or ( integer ) \u2192 integer", "bit_or ( bigint ) \u2192 bigint", "bit_or ( bit ) \u2192 bit"], "Description": ["Computes the bitwise OR of all non-null input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["bit_xor"], "Feature": ["bit_xor ( smallint ) \u2192 smallint", "bit_xor ( integer ) \u2192 integer", "bit_xor ( bigint ) \u2192 bigint", "bit_xor ( bit ) \u2192 bit"], "Description": ["Computes the bitwise exclusive OR of all non-null input values. Can be useful as a checksum for an unordered set of values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["bool_and"], "Feature": ["bool_and ( boolean ) \u2192 boolean"], "Description": ["Returns true if all non-null input values are true, otherwise false."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["bool_or"], "Feature": ["bool_or ( boolean ) \u2192 boolean"], "Description": ["Returns true if any non-null input value is true, otherwise false."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["count"], "Feature": ["count ( \"any\" ) \u2192 bigint"], "Description": ["Computes the number of input rows in which the input value is not null."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["every"], "Feature": ["every ( boolean ) \u2192 boolean"], "Description": ["This is the SQL standard's equivalent to bool_and."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_agg"], "Feature": ["json_agg ( anyelement ) \u2192 json", "jsonb_agg ( anyelement ) \u2192 jsonb"], "Description": ["Collects all the input values, including nulls, into a JSON array. Values are converted to JSON as per to_json or to_jsonb."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_objectagg"], "Feature": ["json_objectagg ( [ { key_expression { VALUE | ':' } value_expression } ] [ { NULL | ABSENT } ON NULL ] [ { WITH | WITHOUT } UNIQUE [ KEYS ] ] [ RETURNING data_type [ FORMAT JSON [ ENCODING UTF8 ] ] ])"], "Description": ["Behaves like json_object, but as an aggregate function, so it only takes one key_expression and one value_expression parameter."], "Examples": ["SELECT json_objectagg(k:v) FROM (VALUES ('a'::text,current_date),('b',current_date + 1)) AS t(k,v) \u2192 { \"a\" : \"2022-05-10\", \"b\" : \"2022-05-11\" }"], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_object_agg"], "Feature": ["json_object_agg ( key \"any\", value \"any\" ) \u2192 json", "jsonb_object_agg ( key \"any\", value \"any\" ) \u2192 jsonb"], "Description": ["Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per to_json or to_jsonb. Values can be null, but keys cannot."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_object_agg_strict"], "Feature": ["json_object_agg_strict ( key \"any\", value \"any\" ) \u2192 json", "jsonb_object_agg_strict ( key \"any\", value \"any\" ) \u2192 jsonb"], "Description": ["Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per to_json or to_jsonb. The key can not be null. If the value is null then the entry is skipped,"], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_object_agg_unique"], "Feature": ["json_object_agg_unique ( key \"any\", value \"any\" ) \u2192 json", "jsonb_object_agg_unique ( key \"any\", value \"any\" ) \u2192 jsonb"], "Description": ["Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per to_json or to_jsonb. Values can be null, but keys cannot. If there is a duplicate key an error is thrown."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_arrayagg"], "Feature": ["json_arrayagg ( [ value_expression ] [ ORDER BY sort_expression ] [ { NULL | ABSENT } ON NULL ] [ RETURNING data_type [ FORMAT JSON [ ENCODING UTF8 ] ] ])"], "Description": ["Behaves in the same way as json_array but as an aggregate function so it only takes one value_expression parameter. If ABSENT ON NULL is specified, any NULL values are omitted. If ORDER BY is specified, the elements will appear in the array in that order rather than in the input order."], "Examples": ["SELECT json_arrayagg(v) FROM (VALUES(2),(1)) t(v) \u2192 [2, 1]"], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_object_agg_unique_strict"], "Feature": ["json_object_agg_unique_strict ( key \"any\", value \"any\" ) \u2192 json", "jsonb_object_agg_unique_strict ( key \"any\", value \"any\" ) \u2192 jsonb"], "Description": ["Collects all the key/value pairs into a JSON object. Key arguments are coerced to text; value arguments are converted as per to_json or to_jsonb. The key can not be null. If the value is null then the entry is skipped. If there is a duplicate key an error is thrown."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["max"], "Feature": ["max ( see text ) \u2192 same as input type"], "Description": ["Computes the maximum of the non-null input values. Available for any numeric, string, date/time, or enum type, as well as inet, interval, money, oid, pg_lsn, tid, xid8, and arrays of any of these types."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["min"], "Feature": ["min ( see text ) \u2192 same as input type"], "Description": ["Computes the minimum of the non-null input values. Available for any numeric, string, date/time, or enum type, as well as inet, interval, money, oid, pg_lsn, tid, xid8, and arrays of any of these types."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["range_agg"], "Feature": ["range_agg ( value anyrange ) \u2192 anymultirange", "range_agg ( value anymultirange ) \u2192 anymultirange"], "Description": ["Computes the union of the non-null input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["range_intersect_agg"], "Feature": ["range_intersect_agg ( value anyrange ) \u2192 anyrange", "range_intersect_agg ( value anymultirange ) \u2192 anymultirange"], "Description": ["Computes the intersection of the non-null input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["json_agg_strict"], "Feature": ["json_agg_strict ( anyelement ) \u2192 json", "jsonb_agg_strict ( anyelement ) \u2192 jsonb"], "Description": ["Collects all the input values, skipping nulls, into a JSON array. Values are converted to JSON as per to_json or to_jsonb."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["string_agg"], "Feature": ["string_agg ( value text, delimiter text ) \u2192 text", "string_agg ( value bytea, delimiter bytea ) \u2192 bytea"], "Description": ["Concatenates the non-null input values into a string. Each value after the first is preceded by the corresponding delimiter (if it's not null)."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["sum"], "Feature": ["sum ( smallint ) \u2192 bigint", "sum ( integer ) \u2192 bigint", "sum ( bigint ) \u2192 numeric", "sum ( numeric ) \u2192 numeric", "sum ( real ) \u2192 real", "sum ( double precision ) \u2192 double precision", "sum ( interval ) \u2192 interval", "sum ( money ) \u2192 money"], "Description": ["Computes the sum of the non-null input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["xmlagg"], "Feature": ["xmlagg ( xml ) \u2192 xml"], "Description": ["Concatenates the non-null XML input values (see Section\u00a09.15.1.7)."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["corr"], "Feature": ["corr ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the correlation coefficient."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["covar_pop"], "Feature": ["covar_pop ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the population covariance."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["covar_samp"], "Feature": ["covar_samp ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the sample covariance."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_avgx"], "Feature": ["regr_avgx ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the average of the independent variable, sum(X)/N."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_avgy"], "Feature": ["regr_avgy ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the average of the dependent variable, sum(Y)/N."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_count"], "Feature": ["regr_count ( Y double precision, X double precision ) \u2192 bigint"], "Description": ["Computes the number of rows in which both inputs are non-null."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_intercept"], "Feature": ["regr_intercept ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the y-intercept of the least-squares-fit linear equation determined by the (X, Y) pairs."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_r2"], "Feature": ["regr_r2 ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the square of the correlation coefficient."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_slope"], "Feature": ["regr_slope ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the slope of the least-squares-fit linear equation determined by the (X, Y) pairs."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_sxx"], "Feature": ["regr_sxx ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the \u201csum of squares\u201d of the independent variable, sum(X^2) - sum(X)^2/N."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_sxy"], "Feature": ["regr_sxy ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the \u201csum of products\u201d of independent times dependent variables, sum(X*Y) - sum(X) * sum(Y)/N."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["regr_syy"], "Feature": ["regr_syy ( Y double precision, X double precision ) \u2192 double precision"], "Description": ["Computes the \u201csum of squares\u201d of the dependent variable, sum(Y^2) - sum(Y)^2/N."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["stddev"], "Feature": ["stddev ( numeric_type ) \u2192 double precision for real or double precision, otherwise numeric"], "Description": ["This is a historical alias for stddev_samp."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["stddev_pop"], "Feature": ["stddev_pop ( numeric_type ) \u2192 double precision for real or double precision, otherwise numeric"], "Description": ["Computes the population standard deviation of the input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["stddev_samp"], "Feature": ["stddev_samp ( numeric_type ) \u2192 double precision for real or double precision, otherwise numeric"], "Description": ["Computes the sample standard deviation of the input values."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["variance"], "Feature": ["variance ( numeric_type ) \u2192 double precision for real or double precision, otherwise numeric"], "Description": ["This is a historical alias for var_samp."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["var_pop"], "Feature": ["var_pop ( numeric_type ) \u2192 double precision for real or double precision, otherwise numeric"], "Description": ["Computes the population variance of the input values (square of the population standard deviation)."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["var_samp"], "Feature": ["var_samp ( numeric_type ) \u2192 double precision for real or double precision, otherwise numeric"], "Description": ["Computes the sample variance of the input values (square of the sample standard deviation)."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["mode"], "Feature": ["mode () WITHIN GROUP ( ORDER BY anyelement ) \u2192 anyelement"], "Description": ["Computes the mode, the most frequent value of the aggregated argument (arbitrarily choosing the first one if there are multiple equally-frequent values). The aggregated argument must be of a sortable type."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["percentile_cont"], "Feature": ["percentile_cont ( fractions double precision[] ) WITHIN GROUP ( ORDER BY double precision ) \u2192 double precision[]", "percentile_cont ( fractions double precision[] ) WITHIN GROUP ( ORDER BY interval ) \u2192 interval[]"], "Description": ["Computes multiple continuous percentiles. The result is an array of the same dimensions as the fractions parameter, with each non-null element replaced by the (possibly interpolated) value corresponding to that percentile."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["percentile_disc"], "Feature": ["percentile_disc ( fractions double precision[] ) WITHIN GROUP ( ORDER BY anyelement ) \u2192 anyarray"], "Description": ["Computes multiple discrete percentiles. The result is an array of the same dimensions as the fractions parameter, with each non-null element replaced by the input value corresponding to that percentile. The aggregated argument must be of a sortable type."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["rank"], "Feature": ["rank ( args ) WITHIN GROUP ( ORDER BY sorted_args ) \u2192 bigint"], "Description": ["Computes the rank of the hypothetical row, with gaps; that is, the row number of the first row in its peer group."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["dense_rank"], "Feature": ["dense_rank ( args ) WITHIN GROUP ( ORDER BY sorted_args ) \u2192 bigint"], "Description": ["Computes the rank of the hypothetical row, without gaps; this function effectively counts peer groups."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["percent_rank"], "Feature": ["percent_rank ( args ) WITHIN GROUP ( ORDER BY sorted_args ) \u2192 double precision"], "Description": ["Computes the relative rank of the hypothetical row, that is (rank - 1) / (total rows - 1). The value thus ranges from 0 to 1 inclusive."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["cume_dist"], "Feature": ["cume_dist ( args ) WITHIN GROUP ( ORDER BY sorted_args ) \u2192 double precision"], "Description": ["Computes the cumulative distribution, that is (number of rows preceding or peers with hypothetical row) / (total rows). The value thus ranges from 1/N to 1."], "Examples": [], "Category": ["Aggregate Functions"]}
{"HTML": ["https://www.postgresql.org/docs/16/functions-aggregate.html"], "Title": ["GROUPING"], "Feature": ["GROUPING ( group_by_expression(s) ) \u2192 integer"], "Description": ["Returns a bit mask indicating which GROUP BY expressions are not included in the current grouping set. Bits are assigned with the rightmost argument corresponding to the least-significant bit; each bit is 0 if the corresponding expression is included in the grouping criteria of the grouping set generating the current result row, and 1 if it is not included."], "Examples": [], "Category": ["Aggregate Functions"]}
