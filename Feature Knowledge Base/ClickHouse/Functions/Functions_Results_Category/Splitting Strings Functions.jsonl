{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["splitByChar"], "Feature": ["splitByChar(separator, s[, max_substrings]))"], "Description": ["splitByChar", "Splits a string into substrings separated by a specified character. Uses a constant string separator which consists of exactly one character.\nReturns an array of selected substrings. Empty substrings may be selected if the separator occurs at the beginning or end of the string, or if there are multiple consecutive separators.", "Syntax", "splitByChar(separator, s[, max_substrings]))", "Arguments", "separator \u2014 The separator which should contain exactly one character. String.s \u2014 The string to split. String.max_substrings \u2014 An optional Int64 defaulting to 0. If max_substrings > 0, the returned array will contain at most max_substrings substrings, otherwise the function will return as many substrings as possible.", "Returned value(s)", "An array of selected substrings. Array(String).Empty substrings may be selected when:A separator occurs at the beginning or end of the string;There are multiple consecutive separators;The original string s is empty.", "NoteThe behavior of parameter max_substrings changed starting with ClickHouse v22.11. In versions older than that, max_substrings > 0 meant that max_substring-many splits were performed and that the remainder of the string was returned as the final element of the list.\nFor example,in v22.10: SELECT splitByChar('=', 'a=b=c=d', 2); returned ['a','b','c=d']in v22.11: SELECT splitByChar('=', 'a=b=c=d', 2); returned ['a','b']A behavior similar to ClickHouse pre-v22.11 can be achieved by setting\nsplitby_max_substrings_includes_remaining_string\nSELECT splitByChar('=', 'a=b=c=d', 2) SETTINGS splitby_max_substrings_includes_remaining_string = 1 -- ['a', 'b=c=d']"], "Examples": ["SELECT splitByChar(',', '1,2,3,abcde');"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["splitByString"], "Feature": ["splitByString(separator, s[, max_substrings]))"], "Description": ["splitByString", "Splits a string into substrings separated by a string. It uses a constant string separator of multiple characters as the separator. If the string separator is empty, it will split the string s into an array of single characters.", "Syntax", "splitByString(separator, s[, max_substrings]))", "Arguments", "separator \u2014 The separator. String.s \u2014 The string to split. String.max_substrings \u2014 An optional Int64 defaulting to 0. When max_substrings > 0, the returned substrings will be no more than max_substrings, otherwise the function will return as many substrings as possible.", "Returned value(s)", "An array of selected substrings. Array(String).", "Empty substrings may be selected when:", "A non-empty separator occurs at the beginning or end of the string;There are multiple consecutive non-empty separators;The original string s is empty while the separator is not empty.", "NoteSetting splitby_max_substrings_includes_remaining_string (default: 0) controls if the remaining string is included in the last element of the result array when argument max_substrings > 0."], "Examples": ["SELECT splitByString(', ', '1, 2 3, 4,5, abcde');", "SELECT splitByString('', 'abcde');"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["splitByRegexp"], "Feature": ["splitByRegexp(regexp, s[, max_substrings]))"], "Description": ["splitByRegexp", "Splits a string into substrings separated by a regular expression. It uses a regular expression string regexp as the separator. If the regexp is empty, it will split the string s into an array of single characters. If no match is found for this regular expression, the string s won't be split.", "Syntax", "splitByRegexp(regexp, s[, max_substrings]))", "Arguments", "regexp \u2014 Regular expression. Constant. String or FixedString.s \u2014 The string to split. String.max_substrings \u2014 An optional Int64 defaulting to 0. When max_substrings > 0, the returned substrings will be no more than max_substrings, otherwise the function will return as many substrings as possible.", "Returned value(s)", "An array of selected substrings. Array(String).", "Empty substrings may be selected when:", "A non-empty regular expression match occurs at the beginning or end of the string;There are multiple consecutive non-empty regular expression matches;The original string s is empty while the regular expression is not empty.", "NoteSetting splitby_max_substrings_includes_remaining_string (default: 0) controls if the remaining string is included in the last element of the result array when argument max_substrings > 0."], "Examples": ["SELECT splitByRegexp('\\\\d+', 'a12bc23de345f');", "SELECT splitByRegexp('', 'abcde');"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["splitByWhitespace"], "Feature": ["splitByWhitespace(s[, max_substrings]))"], "Description": ["splitByWhitespace", "Splits a string into substrings separated by whitespace characters.\nReturns an array of selected substrings.", "Syntax", "splitByWhitespace(s[, max_substrings]))", "Arguments", "s \u2014 The string to split. String.max_substrings \u2014 An optional Int64 defaulting to 0. When max_substrings > 0, the returned substrings will be no more than max_substrings, otherwise the function will return as many substrings as possible.", "Returned value(s)", "An array of selected substrings. Array(String).", "NoteSetting splitby_max_substrings_includes_remaining_string (default: 0) controls if the remaining string is included in the last element of the result array when argument max_substrings > 0."], "Examples": ["SELECT splitByWhitespace('  1!  a,  b.  ');"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["splitByNonAlpha"], "Feature": ["splitByNonAlpha(s[, max_substrings]))"], "Description": ["splitByNonAlpha", "Splits a string into substrings separated by whitespace and punctuation characters.\nReturns an array of selected substrings.", "Syntax", "splitByNonAlpha(s[, max_substrings]))", "Arguments", "s \u2014 The string to split. String.max_substrings \u2014 An optional Int64 defaulting to 0. When max_substrings > 0, the returned substrings will be no more than max_substrings, otherwise the function will return as many substrings as possible.", "Returned value(s)", "An array of selected substrings. Array(String).", "NoteSetting splitby_max_substrings_includes_remaining_string (default: 0) controls if the remaining string is included in the last element of the result array when argument max_substrings > 0."], "Examples": ["SELECT splitByNonAlpha('  1!  a,  b.  ');"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["arrayStringConcat"], "Feature": ["arrayStringConcat(arr\\[, separator\\])"], "Description": ["arrayStringConcat", "Concatenates string representations of values listed in the array with the separator. separator is an optional parameter: a constant string, set to an empty string by default.\nReturns the string.", "Syntax", "arrayStringConcat(arr\\[, separator\\])"], "Examples": ["SELECT arrayStringConcat(['12/05/2021', '12:50:00'], ' ') AS DateString;"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["alphaTokens"], "Feature": ["alphaTokens(s[, max_substrings]))"], "Description": ["alphaTokens", "Selects substrings of consecutive bytes from the ranges a-z and A-Z.Returns an array of substrings.", "Syntax", "alphaTokens(s[, max_substrings]))", "Alias: splitByAlpha", "Arguments", "s \u2014 The string to split. String.max_substrings \u2014 An optional Int64 defaulting to 0. When max_substrings > 0, the returned substrings will be no more than max_substrings, otherwise the function will return as many substrings as possible.", "Returned value(s)", "An array of selected substrings. Array(String).", "NoteSetting splitby_max_substrings_includes_remaining_string (default: 0) controls if the remaining string is included in the last element of the result array when argument max_substrings > 0."], "Examples": ["SELECT alphaTokens('abca1abc');"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["extractAllGroups"], "Feature": ["extractAllGroups(text, regexp)"], "Description": ["extractAllGroups", "Extracts all groups from non-overlapping substrings matched by a regular expression.", "Syntax", "extractAllGroups(text, regexp)", "Arguments", "text \u2014 String or FixedString.regexp \u2014 Regular expression. Constant. String or FixedString.", "Returned values", "If the function finds at least one matching group, it returns Array(Array(String)) column, clustered by group_id (1 to N, where N is number of capturing groups in regexp). If there is no matching group, it returns an empty array. Array."], "Examples": ["SELECT extractAllGroups('abc=123, 8=\"hkl\"', '(\"[^\"]+\"|\\\\w+)=(\"[^\"]+\"|\\\\w+)');"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["ngrams"], "Feature": ["ngrams(string, ngramsize)"], "Description": ["ngrams", "Splits a UTF-8 string into n-grams of ngramsize symbols.", "Syntax ", "ngrams(string, ngramsize)", "Arguments", "string \u2014 String. String or FixedString.ngramsize \u2014 The size of an n-gram. UInt.", "Returned values", "Array with n-grams. Array(String)."], "Examples": ["SELECT ngrams('ClickHouse', 3);"], "Category": ["Splitting Strings Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/splitting-merging-functions"], "Title": ["tokens"], "Feature": ["tokens"], "Description": ["tokens", "Splits a string into tokens using non-alphanumeric ASCII characters as separators.", "Arguments", "input_string \u2014 Any set of bytes represented as the String data type object.", "Returned value", "The resulting array of tokens from input string. Array."], "Examples": ["SELECT tokens('test1,;\\\\ test2,;\\\\ test3,;\\\\   test4') AS tokens;"], "Category": ["Splitting Strings Functions"]}
