{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv4NumToString(num)"], "Feature": ["IPv4NumToString(num)"], "Description": ["IPv4NumToString(num)", "Takes a UInt32 number. Interprets it as an IPv4 address in big endian. Returns a string containing the corresponding IPv4 address in the format A.B.C.d (dot-separated numbers in decimal form).", "Alias: INET_NTOA."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv4StringToNum(s)"], "Feature": ["IPv4StringToNum(s)"], "Description": ["IPv4StringToNum(s)", "The reverse function of IPv4NumToString. If the IPv4 address has an invalid format, it throws exception.", "Alias: INET_ATON."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv4StringToNumOrDefault(s)"], "Feature": ["IPv4StringToNumOrDefault(s)"], "Description": ["IPv4StringToNumOrDefault(s)", "Same as IPv4StringToNum, but if the IPv4 address has an invalid format, it returns 0."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv4StringToNumOrNull(s)"], "Feature": ["IPv4StringToNumOrNull(s)"], "Description": ["IPv4StringToNumOrNull(s)", "Same as IPv4StringToNum, but if the IPv4 address has an invalid format, it returns null."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv4NumToStringClassC(num)"], "Feature": ["IPv4NumToStringClassC(num)"], "Description": ["IPv4NumToStringClassC(num)", "Similar to IPv4NumToString, but using xxx instead of the last octet."], "Examples": ["SELECT    IPv4NumToStringClassC(ClientIP) AS k,    count() AS cFROM test.hitsGROUP BY kORDER BY c DESCLIMIT 10", "SELECT IPv6NumToString(toFixedString(unhex('2A0206B8000000000000000000000011'), 16)) AS addr;", "SELECT    IPv6NumToString(ClientIP6 AS k),    count() AS cFROM hits_allWHERE EventDate = today() AND substring(ClientIP6, 1, 12) != unhex('00000000000000000000FFFF')GROUP BY kORDER BY c DESCLIMIT 10", "SELECT    IPv6NumToString(ClientIP6 AS k),    count() AS cFROM hits_allWHERE EventDate = today()GROUP BY kORDER BY c DESCLIMIT 10"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv6StringToNum"], "Feature": ["IPv6StringToNum(string)"], "Description": ["IPv6StringToNum", "The reverse function of IPv6NumToString. If the IPv6 address has an invalid format, it throws exception.", "If the input string contains a valid IPv4 address, returns its IPv6 equivalent.\nHEX can be uppercase or lowercase.", "Alias: INET6_ATON.", "Syntax", "IPv6StringToNum(string)", "Argument", "string \u2014 IP address. String.", "Returned value", "IPv6 address in binary format. FixedString(16)."], "Examples": ["SELECT addr, cutIPv6(IPv6StringToNum(addr), 0, 0) FROM (SELECT ['notaddress', '127.0.0.1', '1111::ffff'] AS addr) ARRAY JOIN addr;"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv6StringToNumOrDefault(s)"], "Feature": ["IPv6StringToNumOrDefault(s)"], "Description": ["IPv6StringToNumOrDefault(s)", "Same as IPv6StringToNum, but if the IPv6 address has an invalid format, it returns 0."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv6StringToNumOrNull(s)"], "Feature": ["IPv6StringToNumOrNull(s)"], "Description": ["IPv6StringToNumOrNull(s)", "Same as IPv6StringToNum, but if the IPv6 address has an invalid format, it returns null."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv4ToIPv6(x)"], "Feature": ["IPv4ToIPv6(x)"], "Description": ["IPv4ToIPv6(x)", "Takes a UInt32 number. Interprets it as an IPv4 address in big endian. Returns a FixedString(16) value containing the IPv6 address in binary format. Examples:", "SELECT IPv6NumToString(IPv4ToIPv6(IPv4StringToNum('192.168.0.1'))) AS addr;", "\u250c\u2500addr\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 ::ffff:192.168.0.1 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"], "Examples": ["SELECT IPv6NumToString(IPv4ToIPv6(IPv4StringToNum('192.168.0.1'))) AS addr;"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["cutIPv6(x, bytesToCutForIPv6, bytesToCutForIPv4)"], "Feature": ["cutIPv6(x, bytesToCutForIPv6, bytesToCutForIPv4)"], "Description": ["cutIPv6(x, bytesToCutForIPv6, bytesToCutForIPv4)", "Accepts a FixedString(16) value containing the IPv6 address in binary format. Returns a string containing the address of the specified number of bytes removed in text format. For example:", "WITH    IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D') AS ipv6,    IPv4ToIPv6(IPv4StringToNum('192.168.0.1')) AS ipv4SELECT    cutIPv6(ipv6, 2, 0),    cutIPv6(ipv4, 0, 2)", "\u250c\u2500cutIPv6(ipv6, 2, 0)\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500cutIPv6(ipv4, 0, 2)\u2500\u2510\u2502 2001:db8:ac10:fe01:feed:babe:cafe:0 \u2502 ::ffff:192.168.0.0  \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"], "Examples": ["WITH    IPv6StringToNum('2001:0DB8:AC10:FE01:FEED:BABE:CAFE:F00D') AS ipv6,    IPv4ToIPv6(IPv4StringToNum('192.168.0.1')) AS ipv4SELECT    cutIPv6(ipv6, 2, 0),    cutIPv6(ipv4, 0, 2)"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv4CIDRToRange(ipv4, Cidr),"], "Feature": ["IPv4CIDRToRange(ipv4, Cidr),"], "Description": ["IPv4CIDRToRange(ipv4, Cidr),", "Accepts an IPv4 and an UInt8 value containing the CIDR. Return a tuple with two IPv4 containing the lower range and the higher range of the subnet.", "SELECT IPv4CIDRToRange(toIPv4('192.168.5.2'), 16);", "\u250c\u2500IPv4CIDRToRange(toIPv4('192.168.5.2'), 16)\u2500\u2510\u2502 ('192.168.0.0','192.168.255.255')          \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"], "Examples": ["SELECT IPv4CIDRToRange(toIPv4('192.168.5.2'), 16);"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv6CIDRToRange(ipv6, Cidr),"], "Feature": ["IPv6CIDRToRange(ipv6, Cidr),"], "Description": ["IPv6CIDRToRange(ipv6, Cidr),", "Accepts an IPv6 and an UInt8 value containing the CIDR. Return a tuple with two IPv6 containing the lower range and the higher range of the subnet.", "SELECT IPv6CIDRToRange(toIPv6('2001:0db8:0000:85a3:0000:0000:ac1f:8001'), 32);", "\u250c\u2500IPv6CIDRToRange(toIPv6('2001:0db8:0000:85a3:0000:0000:ac1f:8001'), 32)\u2500\u2510\u2502 ('2001:db8::','2001:db8:ffff:ffff:ffff:ffff:ffff:ffff')                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"], "Examples": ["SELECT IPv6CIDRToRange(toIPv6('2001:0db8:0000:85a3:0000:0000:ac1f:8001'), 32);"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["toIPv4(string)"], "Feature": ["toIPv4(string)"], "Description": ["toIPv4(string)", "An alias to IPv4StringToNum() that takes a string form of IPv4 address and returns value of IPv4 type, which is binary equal to value returned by IPv4StringToNum().", "WITH    '171.225.130.45' as IPv4_stringSELECT    toTypeName(IPv4StringToNum(IPv4_string)),    toTypeName(toIPv4(IPv4_string))", "\u250c\u2500toTypeName(IPv4StringToNum(IPv4_string))\u2500\u252c\u2500toTypeName(toIPv4(IPv4_string))\u2500\u2510\u2502 UInt32                                   \u2502 IPv4                            \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518", "WITH    '171.225.130.45' as IPv4_stringSELECT    hex(IPv4StringToNum(IPv4_string)),    hex(toIPv4(IPv4_string))", "\u250c\u2500hex(IPv4StringToNum(IPv4_string))\u2500\u252c\u2500hex(toIPv4(IPv4_string))\u2500\u2510\u2502 ABE1822D                          \u2502 ABE1822D                 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"], "Examples": ["WITH    '171.225.130.45' as IPv4_stringSELECT    toTypeName(IPv4StringToNum(IPv4_string)),    toTypeName(toIPv4(IPv4_string))", "WITH    '171.225.130.45' as IPv4_stringSELECT    hex(IPv4StringToNum(IPv4_string)),    hex(toIPv4(IPv4_string))"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["toIPv4OrDefault(string)"], "Feature": ["toIPv4OrDefault(value)"], "Description": ["toIPv4OrDefault(string)", "Same as toIPv4, but if the IPv4 address has an invalid format, it returns 0.0.0.0 (0 IPv4).", "Syntax", "toIPv4OrDefault(value)", "Arguments", "value \u2014 A string-encoded IPv4 address. String", "Returned value", "value converted to an IPv4 address. IPv4."], "Examples": ["SELECT  toIPv4OrDefault('192.168.0.1') AS s1,  toIPv4OrDefault('192.168.0') AS s2"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["toIPv4OrNull(string)"], "Feature": ["toIPv4OrNull(value)"], "Description": ["toIPv4OrNull(string)", "Same as toIPv4, but if the IPv4 address has an invalid format, it returns null.", "Syntax", "toIPv4OrNull(value)", "Arguments", "value \u2014 A string-encoded IPv4 address. String", "Returned value", "value converted to an IPv4 address. IPv4."], "Examples": ["SELECT  toIPv4OrNull('192.168.0.1') AS s1,  toIPv4OrNull('192.168.0') AS s2"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["toIPv6OrDefault(string)"], "Feature": ["toIPv6OrDefault(string)"], "Description": ["toIPv6OrDefault(string)", "Same as toIPv6, but if the IPv6 address has an invalid format, it returns :: (0 IPv6)."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["toIPv6OrNull(string)"], "Feature": ["toIPv6OrNull(string)"], "Description": ["toIPv6OrNull(string)", "Same as toIPv6, but if the IPv6 address has an invalid format, it returns null."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["toIPv6"], "Feature": ["toIPv6(string)"], "Description": ["toIPv6", "Converts a string form of IPv6 address to IPv6 type. If the IPv6 address has an invalid format, returns an empty value.\nSimilar to IPv6StringToNum function, which converts IPv6 address to binary format.", "If the input string contains a valid IPv4 address, then the IPv6 equivalent of the IPv4 address is returned.", "Syntax", "toIPv6(string)", "Argument", "string \u2014 IP address. String", "Returned value", "IP address. IPv6."], "Examples": ["WITH '2001:438:ffff::407d:1bc1' AS IPv6_stringSELECT    hex(IPv6StringToNum(IPv6_string)),    hex(toIPv6(IPv6_string));", "SELECT toIPv6('127.0.0.1');"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv6StringToNumOrDefault(s)"], "Feature": ["IPv6StringToNumOrDefault(s)"], "Description": ["IPv6StringToNumOrDefault(s)", "Same as toIPv6, but if the IPv6 address has an invalid format, it returns 0."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["IPv6StringToNumOrNull(s)"], "Feature": ["IPv6StringToNumOrNull(s)"], "Description": ["IPv6StringToNumOrNull(s)", "Same as toIPv6, but if the IPv6 address has an invalid format, it returns null."], "Examples": [], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["isIPv4String"], "Feature": ["isIPv4String(string)"], "Description": ["isIPv4String", "Determines whether the input string is an IPv4 address or not. If string is IPv6 address returns 0.", "Syntax", "isIPv4String(string)", "Arguments", "string \u2014 IP address. String.", "Returned value", "1 if string is IPv4 address, 0 otherwise. UInt8."], "Examples": ["SELECT addr, isIPv4String(addr) FROM ( SELECT ['0.0.0.0', '127.0.0.1', '::ffff:127.0.0.1'] AS addr ) ARRAY JOIN addr;"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["isIPv6String"], "Feature": ["isIPv6String(string)"], "Description": ["isIPv6String", "Determines whether the input string is an IPv6 address or not. If string is IPv4 address returns 0.", "Syntax", "isIPv6String(string)", "Arguments", "string \u2014 IP address. String.", "Returned value", "1 if string is IPv6 address, 0 otherwise. UInt8."], "Examples": ["SELECT addr, isIPv6String(addr) FROM ( SELECT ['::', '1111::ffff', '::ffff:127.0.0.1', '127.0.0.1'] AS addr ) ARRAY JOIN addr;"], "Category": ["IP Addresses Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/ip-address-functions"], "Title": ["isIPAddressInRange"], "Feature": ["isIPAddressInRange(address, prefix)"], "Description": ["isIPAddressInRange", "Determines if an IP address is contained in a network represented in the CIDR notation. Returns 1 if true, or 0 otherwise.", "Syntax", "isIPAddressInRange(address, prefix)", "This function accepts both IPv4 and IPv6 addresses (and networks) represented as strings. It returns 0 if the IP version of the address and the CIDR don't match.", "Arguments", "address \u2014 An IPv4 or IPv6 address. String.prefix \u2014 An IPv4 or IPv6 network prefix in CIDR. String.", "Returned value", "1 or 0. UInt8."], "Examples": ["SELECT isIPAddressInRange('127.0.0.1', '127.0.0.0/8');", "SELECT isIPAddressInRange('127.0.0.1', 'ffff::/16');", "SELECT isIPAddressInRange('::ffff:192.168.0.1', '::ffff:192.168.0.4/128');"], "Category": ["IP Addresses Functions"]}
