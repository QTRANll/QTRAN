{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["rand"], "Feature": ["rand()"], "Description": ["rand", "Returns a random UInt32 number with uniform distribution.", "Uses a linear congruential generator with an initial state obtained from the system, which means that while it appears random, it's not truly random and can be predictable if the initial state is known. For scenarios where true randomness is crucial, consider using alternative methods like system-level calls or integrating with external libraries.", "Syntax", "rand()", "Alias: rand32", "Arguments", "None.", "Returned value", "Returns a number of type UInt32."], "Examples": ["SELECT rand();"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["rand64"], "Feature": ["rand64()"], "Description": ["rand64", "Returns a random UInt64 integer (UInt64) number", "Syntax", "rand64()", "Arguments", "None.", "Arguments", "Returns a number UInt64 number with uniform distribution.", "Uses a linear congruential generator with an initial state obtained from the system, which means that while it appears random, it's not truly random and can be predictable if the initial state is known. For scenarios where true randomness is crucial, consider using alternative methods like system-level calls or integrating with external libraries."], "Examples": ["SELECT rand64();"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randCanonical"], "Feature": ["randCanonical()"], "Description": ["randCanonical", "Returns a random Float64 number.", "Syntax", "randCanonical()", "Arguments", "None.", "Arguments", "Returns a Float64 value between 0 (inclusive) and 1 (exclusive)."], "Examples": ["SELECT randCanonical();"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randConstant"], "Feature": ["randConstant([x]);"], "Description": ["randConstant", "Generates a single constant column filled with a random value. Unlike rand, this function ensures the same random value appears in every row of the generated column, making it useful for scenarios requiring a consistent random seed across rows in a single query.", "Syntax", "randConstant([x]);", "Arguments", "[x] (Optional): An optional expression that influences the generated random value. Even if provided, the resulting value will still be constant within the same query execution. Different queries using the same expression will likely generate different constant values.", "Arguments", "Returns a column of type UInt32 containing the same random value in each row.", "Implementation details", "The actual output will be different for each query execution, even with the same optional expression. The optional parameter may not significantly change the generated value compared to using randConstant alone."], "Examples": ["SELECT randConstant() AS random_value;", "SELECT randConstant(10) AS random_value;"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randUniform"], "Feature": ["randUniform(min, max)"], "Description": ["randUniform", "Returns a random Float64 drawn uniformly from interval [min, max].", "Syntax", "randUniform(min, max)", "Arguments", "min - Float64 - left boundary of the range,max - Float64 - right boundary of the range.", "Arguments", "A random number of type Float64."], "Examples": ["SELECT randUniform(5.5, 10) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randNormal"], "Feature": ["randNormal(mean, variance)"], "Description": ["randNormal", "Returns a random Float64 drawn from a normal distribution.", "Syntax", "randNormal(mean, variance)", "Arguments", "mean - Float64 - mean value of distribution,variance - Float64 - variance of the distribution.", "Returned value", "Random number. Float64."], "Examples": ["SELECT randNormal(10, 2) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randLogNormal"], "Feature": ["randLogNormal(mean, variance)"], "Description": ["randLogNormal", "Returns a random Float64 drawn from a log-normal distribution.", "Syntax", "randLogNormal(mean, variance)", "Arguments", "mean - Float64 - mean value of distribution,variance - Float64 - variance of the distribution.", "Returned value", "Random number. Float64."], "Examples": ["SELECT randLogNormal(100, 5) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randBinomial"], "Feature": ["randBinomial(experiments, probability)"], "Description": ["randBinomial", "Returns a random UInt64 drawn from a binomial distribution.", "Syntax", "randBinomial(experiments, probability)", "Arguments", "experiments - UInt64 - number of experiments,probability - Float64 - probability of success in each experiment, a value between 0 and 1.", "Returned value", "Random number. UInt64."], "Examples": ["SELECT randBinomial(100, .75) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randNegativeBinomial"], "Feature": ["randNegativeBinomial(experiments, probability)"], "Description": ["randNegativeBinomial", "Returns a random UInt64 drawn from a negative binomial distribution.", "Syntax", "randNegativeBinomial(experiments, probability)", "Arguments", "experiments - UInt64 - number of experiments,probability - Float64 - probability of failure in each experiment, a value between 0 and 1.", "Returned value", "Random number. UInt64."], "Examples": ["SELECT randNegativeBinomial(100, .75) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randPoisson"], "Feature": ["randPoisson(n)"], "Description": ["randPoisson", "Returns a random UInt64 drawn from a Poisson distribution.", "Syntax", "randPoisson(n)", "Arguments", "n - UInt64 - mean number of occurrences.", "Returned value", "Random number. UInt64."], "Examples": ["SELECT randPoisson(10) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randBernoulli"], "Feature": ["randBernoulli(probability)"], "Description": ["randBernoulli", "Returns a random UInt64 drawn from a Bernoulli distribution.", "Syntax", "randBernoulli(probability)", "Arguments", "probability - Float64 - probability of success, a value between 0 and 1.", "Returned value", "Random number. UInt64."], "Examples": ["SELECT randBernoulli(.75) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randExponential"], "Feature": ["randExponential(lambda)"], "Description": ["randExponential", "Returns a random Float64 drawn from a exponential distribution.", "Syntax", "randExponential(lambda)", "Arguments", "lambda - Float64 - lambda value.", "Returned value", "Random number. Float64."], "Examples": ["SELECT randExponential(1/10) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randChiSquared"], "Feature": ["randChiSquared(degree_of_freedom)"], "Description": ["randChiSquared", "Returns a random Float64 drawn from a Chi-square distribution - a distribution of a sum of the squares of k independent standard normal random variables.", "Syntax", "randChiSquared(degree_of_freedom)", "Arguments", "degree_of_freedom - Float64 - degree of freedom.", "Returned value", "Random number. Float64."], "Examples": ["SELECT randChiSquared(10) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randStudentT"], "Feature": ["randStudentT(degree_of_freedom)"], "Description": ["randStudentT", "Returns a random Float64 drawn from a Student's t-distribution.", "Syntax", "randStudentT(degree_of_freedom)", "Arguments", "degree_of_freedom - Float64 - degree of freedom.", "Returned value", "Random number. Float64."], "Examples": ["SELECT randStudentT(10) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randFisherF"], "Feature": ["randFisherF(d1, d2)"], "Description": ["randFisherF", "Returns a random Float64 drawn from a F-distribution.", "Syntax", "randFisherF(d1, d2)", "Arguments", "d1 - Float64 - d1 degree of freedom in X = (S1 / d1) / (S2 / d2),d2 - Float64 - d2 degree of freedom in X = (S1 / d1) / (S2 / d2),", "Returned value", "Random number. Float64."], "Examples": ["SELECT randFisherF(10, 3) FROM numbers(5)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randomString"], "Feature": ["randomString(length)"], "Description": ["randomString", "Generates a string of the specified length filled with random bytes (including zero bytes). Not all characters may be printable.", "Syntax", "randomString(length)", "Arguments", "length \u2014 String length in bytes. Positive integer.", "Returned value", "String filled with random bytes. String."], "Examples": ["SELECT randomString(30) AS str, length(str) AS len FROM numbers(2) FORMAT Vertical;"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randomFixedString"], "Feature": ["randomFixedString(length);"], "Description": ["randomFixedString", "Generates a binary string of the specified length filled with random bytes (including zero bytes). Not all characters may be printable.", "Syntax", "randomFixedString(length);", "Arguments", "length \u2014 String length in bytes. UInt64.", "Returned value(s)", "String filled with random bytes. FixedString."], "Examples": ["SELECT randomFixedString(13) as rnd, toTypeName(rnd)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randomPrintableASCII"], "Feature": ["randomPrintableASCII(length)"], "Description": ["randomPrintableASCII", "Generates a string with a random set of ASCII characters. All characters are printable.\nIf you pass length < 0, the behavior of the function is undefined.", "Syntax", "randomPrintableASCII(length)", "Arguments", "length \u2014 String length in bytes. Positive integer.", "Returned value", "String with a random set of ASCII printable characters. String"], "Examples": ["SELECT number, randomPrintableASCII(30) as str, length(str) FROM system.numbers LIMIT 3"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["randomStringUTF8"], "Feature": ["randomStringUTF8(length);"], "Description": ["randomStringUTF8", "Generates a random string of a specified length. Result string contains valid UTF-8 code points. The value of code points may be outside of the range of assigned Unicode.", "Syntax", "randomStringUTF8(length);", "Arguments", "length \u2014 Length of the string in code points. UInt64.", "Returned value(s)", "UTF-8 random string. String."], "Examples": ["SELECT randomStringUTF8(13)"], "Category": ["Random Numbers Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/random-functions"], "Title": ["fuzzBits"], "Feature": ["fuzzBits(s, prob)"], "Description": ["fuzzBits", "Syntax", "Flips the bits of String or FixedString s, each with probability prob.", "Syntax", "fuzzBits(s, prob)", "Arguments", "s - String or FixedString,prob - constant Float32/64 between 0.0 and 1.0.", "Returned value", "Fuzzed string with same type as s."], "Examples": ["SELECT fuzzBits(materialize('abacaba'), 0.1)FROM numbers(3)"], "Category": ["Random Numbers Functions"]}
