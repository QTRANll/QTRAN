{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/encoding-functions"
    ],
    "Title": [
        "unhex"
    ],
    "Feature": [
        "unhex(arg)"
    ],
    "Description": [
        "unhex",
        "Performs the opposite operation of hex. It interprets each pair of hexadecimal digits (in the argument) as a number and converts it to the byte represented by the number. The return value is a binary string (BLOB).",
        "If you want to convert the result to a number, you can use the reverse and reinterpretAs<Type> functions.",
        "NoteIf unhex is invoked from within the clickhouse-client, binary strings display using UTF-8.",
        "Alias: UNHEX.",
        "Syntax",
        "unhex(arg)",
        "Arguments",
        "arg \u2014 A string containing any number of hexadecimal digits. String, FixedString.",
        "Supports both uppercase and lowercase letters A-F. The number of hexadecimal digits does not have to be even. If it is odd, the last digit is interpreted as the least significant half of the 00-0F byte. If the argument string contains anything other than hexadecimal digits, some implementation-defined result is returned (an exception isn\u2019t thrown). For a numeric argument the inverse of hex(N) is not performed by unhex().",
        "Returned value",
        "A binary string (BLOB). String."
    ],
    "Examples": [
        "SELECT unhex('303132'), UNHEX('4D7953514C');",
        "SELECT reinterpretAsUInt64(reverse(unhex('FFF'))) AS num;"
    ],
    "Category": [
        "Encoding Functions"
    ]
}