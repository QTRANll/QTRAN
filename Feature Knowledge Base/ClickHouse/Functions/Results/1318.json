{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/window-functions/dense_rank"
    ],
    "Title": [
        "dense_rank"
    ],
    "Feature": [
        "dense_rank (column_name)  OVER ([[PARTITION BY grouping_column] [ORDER BY sorting_column]         [ROWS or RANGE expression_to_bound_rows_withing_the_group]] | [window_name])FROM table_nameWINDOW window_name as ([[PARTITION BY grouping_column] [ORDER BY sorting_column])"
    ],
    "Description": [
        "dense_rank",
        "Ranks the current row within its partition without gaps. In other words, if the value of any new row encountered is equal to the value of one of the previous rows then it will receive the next successive rank without any gaps in ranking.",
        "The rank function provides the same behaviour, but with gaps in ranking.",
        "Syntax",
        "Alias: denseRank (case-sensitive)",
        "dense_rank (column_name)  OVER ([[PARTITION BY grouping_column] [ORDER BY sorting_column]         [ROWS or RANGE expression_to_bound_rows_withing_the_group]] | [window_name])FROM table_nameWINDOW window_name as ([[PARTITION BY grouping_column] [ORDER BY sorting_column])",
        "For more detail on window function syntax see: Window Functions - Syntax.",
        "Returned value",
        "A number for the current row within its partition, without gaps in ranking. UInt64."
    ],
    "Examples": [
        "CREATE TABLE salaries(    `team` String,    `player` String,    `salary` UInt32,    `position` String)Engine = Memory;INSERT INTO salaries FORMAT Values    ('Port Elizabeth Barbarians', 'Gary Chen', 195000, 'F'),    ('New Coreystad Archdukes', 'Charles Juarez', 190000, 'F'),    ('Port Elizabeth Barbarians', 'Michael Stanley', 150000, 'D'),    ('New Coreystad Archdukes', 'Scott Harrison', 150000, 'D'),    ('Port Elizabeth Barbarians', 'Robert George', 195000, 'M'),    ('South Hampton Seagulls', 'Douglas Benson', 150000, 'M'),    ('South Hampton Seagulls', 'James Henderson', 140000, 'M');",
        "SELECT player, salary,        dense_rank() OVER (ORDER BY salary DESC) AS dense_rankFROM salaries;"
    ],
    "Category": [
        "Window Functions"
    ]
}