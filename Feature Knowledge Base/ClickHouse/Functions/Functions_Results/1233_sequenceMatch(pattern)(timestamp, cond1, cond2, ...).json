{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/aggregate-functions/parametric-functions"
    ],
    "Title": [
        "sequenceMatch"
    ],
    "Feature": [
        "sequenceMatch(pattern)(timestamp, cond1, cond2, ...)"
    ],
    "Description": [
        "sequenceMatch",
        "Checks whether the sequence contains an event chain that matches the pattern.",
        "Syntax",
        "sequenceMatch(pattern)(timestamp, cond1, cond2, ...)",
        "NoteEvents that occur at the same second may lay in the sequence in an undefined order affecting the result.",
        "Arguments",
        "timestamp \u2014 Column considered to contain time data. Typical data types are Date and DateTime. You can also use any of the supported UInt data types.cond1, cond2 \u2014 Conditions that describe the chain of events. Data type: UInt8. You can pass up to 32 condition arguments. The function takes only the events described in these conditions into account. If the sequence contains data that isn\u2019t described in a condition, the function skips them.",
        "Parameters",
        "pattern \u2014 Pattern string. See Pattern syntax.",
        "Returned values",
        "1, if the pattern is matched.0, if the pattern isn\u2019t matched.",
        "Type: UInt8.",
        "Pattern syntax",
        "(?N) \u2014 Matches the condition argument at position N. Conditions are numbered in the [1, 32] range. For example, (?1) matches the argument passed to the cond1 parameter..* \u2014 Matches any number of events. You do not need conditional arguments to match this element of the pattern.(?t operator value) \u2014 Sets the time in seconds that should separate two events. For example, pattern (?1)(?t>1800)(?2) matches events that occur more than 1800 seconds from each other. An arbitrary number of any events can lay between these events. You can use the >=, >, <, <=, == operators."
    ],
    "Examples": [
        "SELECT sequenceMatch('(?1)(?2)')(time, number = 1, number = 2) FROM t",
        "SELECT sequenceMatch('(?1)(?2)')(time, number = 1, number = 2, number = 3) FROM t",
        "SELECT sequenceMatch('(?1)(?2)')(time, number = 1, number = 2, number = 4) FROM t"
    ],
    "Category": [
        "Aggregate Functions"
    ]
}