{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823193"], "Title": ["REGEXP_REPLACE"], "Feature": ["REGEXP_REPLACE(source_char, pattern\n                 [, replace_string\n                    [, position\n                      [, occurrence\n                        [, match_param ]\n                      ]\n                    ]\n                 ]\n               )\n"], "Description": ["该函数将字符串 source_char 中与正则表达式相匹配的字符替换为 replace_string 中的字符。", "\n\n\n参数\n说明\n\n\n\n\nsource_char\n指定用作搜索值的字符表达式。它通常是一种字符列。数据类型可以是 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\npattern\n指定正则表达式，它通常是一个文本文字，数据类型可以是 CHAR、VARCHAR2、NCHAR 或 NVARCHAR2。\n\n\nreplace_string\n表示替换的字符，可以是 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB 类型。\n\n\nposition\n指定开始正则表达式匹配的起始位置，取值是一个正整数，为可选项。默认值是 1，表示从第一个字符开始搜索 source_char。\n\n\noccurrence\n指定替换操作的第几个匹配项，是一个非负整数。 \n      \n如果指定 0，则 OceanBase 数据库替换所有匹配项。\n如果指定一个正整数 n，则 OceanBase 数据库将替换第 n 次出现的匹配项。\n\n\n\nmatch_param\n数据类型 VARCHAR2 或 CHAR 的字符表达式，它允许您更改函数的默认匹配行为。 \n      \ni 表示大小写不敏感。\nc 表示大小写敏感。\nn 表示句点 . 可以匹配换行符。\nm 表示多行模式。\nx 表示忽略空格字符，默认情况下，空格字符会相互匹配。\n\n\n\n", "返回结果与 source_char 的数据类型相同。"], "Examples": ["obclient> SELECT REGEXP_REPLACE('OCEANBASE database', '(A|B){1}', '*',1,0) AS \"REGEXP_REPLACE\" FROM DUAL;\n+--------------------+\n| REGEXP_REPLACE     |\n+--------------------+\n| OCE*N**SE database |\n+--------------------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823188"], "Title": ["REGEXP_SUBSTR"], "Feature": ["REGEXP_SUBSTR(source_char, pattern\n               [, position [, occurrence [, match_param [, subexpr] ] ] ]\n              )\n"], "Description": ["该函数允许使用正则表达式搜索字符串并返回匹配字符串，扩展了 SUBSTR 函数的功能。 该函数类似于 REGEXP_INSTR，但它不返回子字符串的位置，而是返回子字符串。如果仅需要匹配字符串的内容，但不需要返回其在源字符串中的位置，则此函数很适用。", "\n\n\n参数\n说明\n\n\n\n\nsource_char\n指定用作搜索值的字符表达式，数据类型可以为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\npattern\n指定正则表达式截取规则。它通常是一个文本字面量，字符类型可以为 CHAR、VARCHAR2、NCHAR 或 NVARCHAR2。\n\n\nposition\n指定开始正则表达式匹配的起始位置，取值是一个正整数，为可选项。默认值是 1，表示从第一个字符开始搜索 source_char。\n\n\noccurrence\n指定 source_char 中第几个正则表达式匹配位置，为可选项。默认值为 1。如果 occurrence 大于 1，则从第一次匹配后的第一个字符开始搜索第二次正则表达式匹配，依此类推。\n\n\nmatch_param\n指定更改正则表达式默认匹配方式，为可选项。是数据类型 VARCHAR2 或 CHAR 的字符表达式。 \n      \ni 表示大小写不敏感。\nc 表示大小写敏感。\nn 表示句点 . 可以匹配换行符。\nm 表示多行模式。\nx 表示忽略空格字符，默认情况下，空格字符会相互匹配。\n\n\n\nsubexpr\n指示 pattern 要返回的子表达式，是一个从 0 到 9 的非负整数，为可选项。默认值为 0，表示返回第一个子表达式。\n\n\n", "返回与参数 source_char 相同的 VARCHAR2 或 CLOB 数据类型。"], "Examples": ["obclient> SELECT REGEXP_SUBSTR('abc,def,ghi', '[^,]+',1,1) AS \"第一个\",\n              REGEXP_SUBSTR('abc,def,ghi', '[^,]+',1,2) AS \"第二个\",\n              REGEXP_SUBSTR('abc,def,ghi', '[^,]+',1,3) AS \"第三个\"\n     FROM DUAL;\n+-----------+-----------+-----------+\n| 第一个    | 第二个    | 第三个    |\n+-----------+-----------+-----------+\n| abc       | def       | ghi       |\n+-----------+-----------+-----------+\n1 row in set\n", "obclient> SELECT REGEXP_SUBSTR('abcdefghi', 'abc(d(e(f)gh)i)',1,1,'i',2) FROM DUAL;\n+--------------------------------------------------------+\n| REGEXP_SUBSTR('ABCDEFGHI','ABC(D(E(F)GH)I)',1,1,'I',2) |\n+--------------------------------------------------------+\n| efgh                                                   |\n+--------------------------------------------------------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823198"], "Title": ["REPLACE"], "Feature": ["REPLACE(char1,char2[,char3])\n"], "Description": ["该函数将字符串 char1 中与 char2 匹配的子字符串替换为 char3。", "\n\n\n参数\n说明\n\n\n\n\nchar1\n指定等待替换的字符串。数据类型可以是 CHAR 、VARCHAR2、NCHAR、NVARCHAR2 和 CLOB。\n\n\nchar2\n指定需要替换的字符串。数据类型可以是 CHAR 、VARCHAR2、NCHAR、NVARCHAR2 和 CLOB。\n\n\nchar3\n指定替换字符串，默认为空，表示删除，不是空格。数据类型可以是 CHAR 、VARCHAR2、NCHAR、NVARCHAR2 和 CLOB。 说明 如果 char3 缺省或者为 NULL，那么所有 char1 中出现的 char2 都将被移除。如果 char2 为空值，那么结果就是 char1。\n\n\n", "返回的字符串与 char1 的字符集相同。", "如果 char1 是 LOB 数据类型，则函数返回 CLOB 数据类型。", "如果 char1 不是 LOB 数据类型，则函数返回 VARCHA2 数据类型。"], "Examples": ["obclient> SELECT REPLACE('Oceanbase','b','B') \"replace\" FROM DUAL;\n+-----------+\n| replace   |\n+-----------+\n| OceanBase |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823195"], "Title": ["RPAD"], "Feature": ["RPAD(char1,n[,char2])\n"], "Description": ["该函数将字符串 char1 的右边用字符串 char2 填充，直到长度为 n 时为止。", "\n说明\n\n如果 char1 长度大于 n，则返回 char1 左边 n 个字符。\n如果 char1 长度小于 n，char1 和 char2 连接后大于 n，则返回连接后的左边 n 个字符。\n如果 char1 长度小于 n，char1 和 char2 连接后小于 n，则返回 char1 与多个重复 char2 连接（总长度大于等于 n）后的左边 n 个字符。\n\n", "\n\n\n参数\n说明\n\n\n\n\nchar1\n表示字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nn\n追加后字符总长度，必须是 NUMBER 类型或可以隐式转换为 NUMBER 类型的值。 说明 对于非整数值，会舍去小数部分转化为整数。\n\n\nchar2\n表示追加的字符串，默认为空格。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\n", "如果 char1 是字符型数据，则返回 VARCHAR2 类型。", "如果 char1 是国家字符数据类型，则返回 NVARCHAR2 类型。", "如果 char1 是 LOB 数据类型，则返回 LOB 类型。"], "Examples": ["obclient> SELECT  RPAD('ABCDE',10,'*') \"RPAD\" FROM DUAL;\n+------------+\n| RPAD       |\n+------------+\n| ABCDE***** |\n+------------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823185"], "Title": ["RTRIM"], "Feature": ["RTRIM(char1 [,char2])\n"], "Description": ["该函数功能是从 char1 的右端删除 char2 中包含的所有字符，直到 char1 的右端出现 char2 中不存在的字符为止，然后返回结果。", "\n\n\n参数\n说明\n\n\n\n\nchar1\n表示字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 和 CLOB 数据类型。\n\n\nchar2\n表示要删除的字符集合，为可选项。默认为单个空格。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 和 CLOB 数据类型。\n\n\n", "如果 char1 是 CHAR、VARCHAR2 数据类型，则函数返回 VARCHAR2 数据类型。", "如果 char1 是 NCHAR、NVARCHAR2 数据类型，则函数返回 NVARCHAR2 数据类型。", "如果 char1 是 LOB 数据类型，则返回的字符串为 LOB 数据类型。"], "Examples": ["obclient> SELECT RTRIM('OceanBaseX**XX*X','*X') \"RTRIM\" FROM DUAL;\n+-----------+\n| RTRIM     |\n+-----------+\n| OceanBase |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823182"], "Title": ["SUBSTR"], "Feature": ["SUBSTR(char1,n1[,n2])\n"], "Description": ["该函数功能是从字符串中截取子字符串。其中多字节字符（汉字、全角符等）按 1 个字符计算。", "\n\n\n参数\n说明\n\n\n\n\nchar1\n需要截取的字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nn1\n截取字符串的开始位置，数据类型是 NUMBER。 说明\n\n如果 n1 为 0，则将其视为 1，即从 char1 第一个字符开始截取。\n如果 n1 为正，则从 char1 第 n1 个字符开始查找截取。\n如果 n1 为负，则从 char1 的末尾开始倒数 n1 个字符，再开始查找截取。\n\n\n\nn2\n要截取的字符串的长度，数据类型是 NUMBER，为可选项。 说明\n\n如果不指定 n2，则从第 n1 个字符开始截取到 char1 结束的字符串。\n如果 n2 小于 0，则返回 NULL。\n\n\n\n", "返回与 char1 类型相同的数据类型。"], "Examples": ["obclient> SELECT SUBSTR('OceanBase',1,5) \"SUBSTR1\",SUBSTR('OceanBase',-3,2.1) \"SUBSTR2\" FROM DUAL;\n+---------+---------+\n| SUBSTR1 | SUBSTR2 |\n+---------+---------+\n| Ocean   | as      |\n+---------+---------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823189"], "Title": ["CHR"], "Feature": ["CHR(n)\n"], "Description": ["该函数根据数字参数返回字符，且返回值与当前系统的字符集相关。", "参数 n 用于检索对应字符的 NUMBER 代码。是一个整数值，范围为 [0，4294967295]。", "返回值与当前系统的字符集相关。而 OceanBase 数据库支持的字符集是 binary、utf8mb4、gbk、utf16、gb18030。"], "Examples": ["obclient> SELECT CHR(25700) AS str FROM DUAL;\n+------+\n| STR  |\n+------+\n| dd   |\n+------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823199"], "Title": ["TRANSLATE ... USING"], "Feature": ["TRANSLATE(char USING{ CHAR_CS | NCHAR_CS })\n"], "Description": ["该函数作用是将字符转换为指定的数据库字符集或国家字符集。", "\n\n\n参数\n说明\n\n\n\n\nchar\n要转换的字符串。数据类型可以是 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nCHAR_CS\n指定转化为数据库字符集。\n\n\nNCHAR_CS\n指定转化为国家字符集。\n\n\n", "如果指定 CHAR_CS，则返回 VARCHAR2 类型。", "如果指定 NCHAR_CS，则返回 NVARCHAR2 类型。"], "Examples": ["obclient> SELECT LENGTHB(TRANSLATE('OceanBase' USING CHAR_CS)) \"VARCHAR2\",\n                 LENGTHB(TRANSLATE('OceanBase' USING NCHAR_CS)) \"NVARCHAR2\"\n          FROM DUAL;\n+----------+-----------+\n| VARCHAR2 | NVARCHAR2 |\n+----------+-----------+\n|        9 |        18 |\n+----------+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823187"], "Title": ["TRANSLATE"], "Feature": ["TRANSLATE(char1,char2,char3)\n"], "Description": ["该函数用于 char1 中与 char2 匹配的字符替换为 char2 与 char3 对应顺序的字符。", "\n\n\n参数\n说明\n\n\n\n\nchar1\n指定字符表达式或变量。\n\n\nchar2\n指定 char1 中需要被替换的字符集合。\n\n\nchar3\n指定用于替换 char2 的字符集合。\n\n\n", "\n说明\n\nchar1、char2 和 char3 的数据类型可以是 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n如果 char3 长度大于 char2，则 char3 后面多余的字符无效。\n如果 char3 长度小于 char2，则 char2 后面多余的字符均替换为空（删除）。\n如果 char3 长度为 0，则返回 NULL。\n如果 char2 里有重复的字符，则按重复字符首次出现的位置作为替换依据。例如，char2 为 aab，char3 为 123，则替换依据为 char1 中的所有 a 替换为 1，所有 b 替换为 3。\n\n", "返回与 char1 相同的数据类型。"], "Examples": ["obclient> SELECT TRANSLATE('OceanBase','ae','AE') \"TRANSLATE\" FROM DUAL;\n+-----------+\n| TRANSLATE |\n+-----------+\n| OcEAnBAsE |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823183"], "Title": ["TRIM"], "Feature": ["TRIM([{{ LEADING | TRAILING | BOTH }[ trim_character ]|trim_character }FROM] trim_source)\n"], "Description": ["该函数用来删除一个字符串的开头或结尾（或两者）的字符。", "\n\n\n参数\n说明\n\n\n\n\nLEADING | TRAILING | BOTH\n指定删除字符的位置。 \n      \nLEADING 为开头字符。如果指定 LEADING，则删除所有与前导字符相等的 trim_character。\nTRAILING 为结尾字符。如果指定 TRAILING，则删除所有与结尾字符相等的 trim_character。\nBOTH 为开头和结尾字符。如果您指定 BOTH 或三个都不指定，则删除与前导和结尾字符相等的 trim_character。\n\n\n\ntrim_character\n删除的字符，只能是单个字符。如果未指定 trim_character，则默认值为空格。\n\n\ntrim_source\n需要被删除字符的字符串。如果仅指定 trim_source，则删除前导和尾随空格。\n\n\n", "\n说明\ntrim_character 和 trim_source 都可以是 VARCHAR2 或任何可以隐式转换为 VARCHAR2 的数据类型。如果函数返回值的数据类型为 VARCHAR2，则该值的最大长度为 trim_source。\n", "如果 trim_source 为 CHAR、VARCHAR2 数据类型，则函数返回 VARCHAR2 数据类型。", "如果 trim_source 为 NCHAR、NVARCHAR2 数据类型，则函数返回 NVARCHAR2 数据类型。", "如果 trim_source 为 CLOB 数据类型，则函数返回 CLOB 数据类型。", "如果 trim_source 或 trim_character 为 NULL，则 TRIM 函数返回 NULL。"], "Examples": ["obclient> SELECT TRIM('X' FROM 'XXOceanBaseXX') \"TRIM\" FROM DUAL;\n+-----------+\n| TRIM      |\n+-----------+\n| OceanBase |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823191"], "Title": ["UPPER"], "Feature": ["UPPER(char)\n"], "Description": ["该函数将字符串中英文字母全部转为大写。", "char 是要转换的字符串，数据类型可以为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。", "返回与 char 相同的数据类型。"], "Examples": ["obclient> SELECT UPPER('OceanBase') \"UPPER\" FROM DUAL;\n+-----------+\n| UPPER     |\n+-----------+\n| OCEANBASE |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823181"], "Title": ["CONCAT"], "Feature": ["CONCAT(char1,char2)\n"], "Description": ["该函数可以连接两个字符串。", "\n\n\n参数\n说明\n\n\n\n\nchar1\n字符串，字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nchar2\n字符串，字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\n", "返回与 char1 相同的数据类型。"], "Examples": ["obclient> SELECT CONCAT('Hello',', world!') FROM DUAL;\n+---------------------------+\n| CONCAT('HELLO',',WORLD!') |\n+---------------------------+\n| Hello, world!             |\n+---------------------------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823186"], "Title": ["INITCAP"], "Feature": ["INITCAP(char)\n"], "Description": ["该函数返回字符串并将字符串中每个单词的首字母大写，其他字母小写。单词由空格或非字母数字字符分隔。", "char 表示字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR 或 NVARCHAR2。", "返回 CHAR 类型数据。"], "Examples": ["obclient> SELECT INITCAP('ABC def,gHI') STR FROM DUAL;\n+-------------+\n| STR         |\n+-------------+\n| Abc Def,Ghi |\n+-------------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823196"], "Title": ["LOWER"], "Feature": ["LOWER(char)\n"], "Description": ["该函数将字符串中英文字母全部转为小写。", "char 表示字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。", "返回与 char 相同的数据类型。"], "Examples": ["obclient> SELECT  LOWER('AaBbCcDd') Lowercase FROM DUAL;\n+-----------+\n| LOWERCASE |\n+-----------+\n| aabbccdd  |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823192"], "Title": ["LPAD"], "Feature": ["LPAD(char1,n[,char2])\n"], "Description": ["该函数的功能是将字符串 char1 的左边用字符串 char2 填充，直到长度为 n 时为止。", "\n说明\n\n如果 char1 长度大于 n，则返回 char1 左边 n 个字符。\n如果 char1 长度小于 n，char2 和 char1 连接后大于 n，则返回连接后的右边 n 个字符。\n\n", "\n\n\n参数\n说明\n\n\n\n\nchar1\n表示字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nn\n追加后字符总长度，必须是 NUMBER 类型或可以隐式转换为 NUMBER 类型的值。 说明 对于非整数值，会舍去小数部分转化为整数。\n\n\nchar2\n表示追加的字符串，默认为空格。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\n", "如果 char1 是字符型数据，则返回 VARCHAR2 类型。", "如果 char1 是国家字符数据类型，则返回 NVARCHAR2 类型。", "如果 char1 是 LOB 数据类型，则返回 LOB 类型。"], "Examples": ["obclient> SELECT  LPAD('ABCDE',10,'*') FROM DUAL;\n+----------------------+\n| LPAD('ABCDE',10,'*') |\n+----------------------+\n| *****ABCDE           |\n+----------------------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823184"], "Title": ["LTRIM"], "Feature": ["LTRIM(char1 [,char2])\n"], "Description": ["该函数功能是从 char1 的左端开始删除 char2 中包含的所有字符，直到 char1 左端出现 char2 中不存在的字符为止，然后返回结果。", "\n\n\n参数\n说明\n\n\n\n\nchar1\n表示字符串。 字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nchar2\n表示要删除的字符集合。如果未指定 char2，则默认为单个空格。 字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\n", "如果 char1 是 CHAR、VARCHAR2 数据类型，则函数返回 VARCHAR2 数据类型。", "如果 char1 是 NCHAR、NVARCHAR2 数据类型，则函数返回 NVARCHAR2 数据类型。", "如果 char1 是 LOB 数据类型，则返回的字符串为 LOB 数据类型。"], "Examples": ["obclient> SELECT LTRIM('#a￥!aa￥  Hello World!','#a￥! ') text FROM DUAL;\n+--------------+\n| TEXT         |\n+--------------+\n| Hello World! |\n+--------------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823197"], "Title": ["NLSSORT"], "Feature": ["NLSSORT(char [, 'nlsparam' ])\n"], "Description": ["该函数根据显式或隐式参数指定的排序规则，返回字符排序键值（Sortkey）。", "NLSSORT() 函数使用指定的排序规则生成排序键值，排序键是一个字节字符串，用于根据指定的排序规则对字符进行排序。", "排序规则键的长度受参数 MAX_STRING_SIZE 的影响。如果 MAX_STRING_SIZE=EXTENDED，则返回值的最大长度为 32767 字节。如果排序规则键超出此限制，则函数将执行失败，并出现无法创建排序规则键的报错\"unable to create the collation key\"。", "\n\n\n参数\n说明\n\n\n\n\nchar\n该参数支持字面量，也支持表达式（包括列名）。 数据类型可以为 CHAR、VARCHAR2、NCHAR 或者 NVARCHAR2。如果输入的数据类型为CLOB，会做隐式转换。\n\n\nnlsparam\n指定排序规则。 nlsparam 的固定格式为 NLS_SORT = collation。collation 是指语言排序规则名称。 OceanBase 数据库于 V4.2 版本及以后，简体中文排序新支持基于 GB18030_2022 字符集的排序方式。对于中文字符集，目前支持如下 3 种简体中文的排序方式： \n      \nSCHINESE_PINYIN2_M：按拼音排序。\nSCHINESE_STROKE2_M：按笔画排序。\nSCHINESE_RADICAL2_M：按部首排序。\n 对于 Unicode，目前支持如下 3 种简体中文的排序方式： \n      \nUCA0900_SCHINESE_PINYIN: 按拼音排序。\nUCA0900_SCHINESE_STROKE：按笔画排序\nUCA0900_SCHINESE_RADICAL：先按部首排序，再按笔画排序。\n 如果省略 nlsparam，则此函数使用字符集默认排序规则。\n\n\n"], "Examples": ["obclient> CREATE TABLE tbl1(PK INT, name VARCHAR(25));\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl1 VALUES(1,'福克斯'),(2,'警察'),(3,'的士'),(4,'林肯'),(5,'亚利桑那州'),(6,'华盛顿'),\n      (7,'戴尔'),(10,'朗讯');\nQuery OK, 8 rows affected\nRecords: 8  Duplicates: 0  Warnings: 0\n\nobclient> SELECT * FROM tbl1;\n+------+-----------------+\n| PK   | NAME            |\n+------+-----------------+\n|    1 | 福克斯          |\n|    2 | 警察            |\n|    3 | 的士            |\n|    4 | 林肯            |\n|    5 | 亚利桑那州      |\n|    6 | 华盛顿          |\n|    7 | 戴尔            |\n|   10 | 朗讯            |\n+------+-----------------+\n8 rows in set\n\nobclient> SELECT * FROM tbl1 ORDER BY NLSSORT(name,'NLS_SORT = SCHINESE_PINYIN_M');\n+------+-----------------+\n| PK   | NAME            |\n+------+-----------------+\n|    7 | 戴尔            |\n|    3 | 的士            |\n|    1 | 福克斯          |\n|    6 | 华盛顿          |\n|    2 | 警察            |\n|   10 | 朗讯            |\n|    4 | 林肯            |\n|    5 | 亚利桑那州      |\n+------+-----------------+\n8 rows in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823190"], "Title": ["NLS_LOWER"], "Feature": ["NLS_LOWER(char [, 'nlsparam' ])\n"], "Description": ["该函数将字符串中英文字母全部转为小写。", "\n\n\n参数\n说明\n\n\n\n\nchar\n指定要转换的字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nnlsparam\n指定返回字符串的排序方式，为可选项。 说明 OceanBase 数据库当前版本暂不支持此参数。\n\n\n", "返回与 char 相同的数据类型。"], "Examples": ["obclient> SELECT  NLS_LOWER('AaBbCcDd') Lowercase FROM DUAL;\n+-----------+\n| LOWERCASE |\n+-----------+\n| aabbccdd  |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823194"], "Title": ["NLS_UPPER"], "Feature": ["NLS_UPPER(char [, 'nlsparam' ])\n"], "Description": ["该函数将字符串中英文字母全部转为大写。", "\n\n\n参数\n说明\n\n\n\n\nchar\n指定要转换的字符串。字符串类型可为 CHAR、VARCHAR2、NCHAR、NVARCHAR2 或 CLOB。\n\n\nnlsparam\n指定返回字符串的排序方式，为可选项。 说明 OceanBase 数据库当前版本暂不支持此参数。\n\n\n", "返回与 char 相同的数据类型。"], "Examples": ["obclient> SELECT NLS_UPPER('OceanBase') \"UPPER\" FROM DUAL;\n+-----------+\n| UPPER     |\n+-----------+\n| OCEANBASE |\n+-----------+\n1 row in set\n"], "Category": ["Character Functions Returning CharacterValues"]}
