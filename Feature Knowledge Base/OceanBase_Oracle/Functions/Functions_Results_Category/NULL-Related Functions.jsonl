{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823252"], "Title": ["COALESCE"], "Feature": ["COALESCE (expr [, expr]...)\n"], "Description": ["该函数返回参数列表中第一个非空表达式，必须指定最少两个参数。", "expr 可以是数值数据类型（NUMBER、FLOAT、BINARY_FLOAT 或 BINARY_DOUBLE）或字符数据类型（ CHAR、VARCHAR2、NCHAR 或 NVARCHAR2）的值或表达式。", "\n说明\n参数列表中的值除了非空表达式外，数据类型必须一致。\n", "返回类型与参数列表中第一个非空表达式 expr 的数据类型相同。", "如果所有的参数都是 NULL，则返回 NULL。"], "Examples": ["obclient> CREATE TABLE tbl1(supplier_id INT, product_id INT,list_price NUMERIC,min_price NUMERIC);\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl1 VALUES ('102050', '1659', '45', NULL),('102050', '1770', NULL, '70'),\n    ('102050', '2370', '305', '247'),('102050', '2380', '750', '731'),('102050', '3255', NULL, NULL);\nQuery OK, 5 rows affected\nRecords: 5  Duplicates: 0  Warnings: 0\n\nobclient> SELECT product_id, list_price,min_price,COALESCE(0.8*list_price, min_price, 10) \"Sale\" FROM tbl1;\n+------------+------------+-----------+------+\n| PRODUCT_ID | LIST_PRICE | MIN_PRICE | Sale |\n+------------+------------+-----------+------+\n|       1659 |         45 |      NULL |   36 |\n|       1770 |       NULL |        70 |   70 |\n|       2370 |        305 |       247 |  244 |\n|       2380 |        750 |       731 |  600 |\n|       3255 |       NULL |      NULL |   10 |\n+------------+------------+-----------+------+\n5 rows in set\n"], "Category": ["NULL-Related Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823253"], "Title": ["LNNVL"], "Feature": ["LNNVL (condition)\n"], "Description": ["该函数功能是当条件中的一个或者两个操作数可能为空时，提供判断方法。将条件作为参数，如果条件为 FALSE 或 UNKNOWN，则返回 TRUE；如果条件为 TRUE，则返回 FALSE。", "该函数可以在 WHERE 子句中使用，也可以作为 CASE 表达式中的 WHEN 条件。", "condition 是指判断条件。假设 a = 2，b 值为 NULL，下表显示了 LNNVL 函数的返回值。", "\n\n\n条件\n条件判断结果\nLNNVL 返回值\n\n\n\n\na = 1\nFALSE\nTRUE\n\n\na = 2\nTRUE\nFALSE\n\n\na IS NULL\nFALSE\nTRUE\n\n\nb = 1\nUNKNOWN\nTRUE\n\n\nb IS NULL\nTRUE\nFALSE\n\n\na = b\nUNKNOWN\nTRUE\n\n\n", "返回布尔型 TRUE 或 FALSE。"], "Examples": ["obclient> CREATE TABLE tbl1 (col1 INT,col2 INT);\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl1 VALUES (1,30),(2,null),(3,50),(4,80),(5,10);\nQuery OK, 5 rows affected\nRecords: 5  Duplicates: 0  Warnings: 0\n\nobclient> SELECT * FROM tbl1 WHERE LNNVL(col2 >= 50);\n+------+------+\n| COL1 | COL2 |\n+------+------+\n|    1 |   30 |\n|    2 | NULL |\n|    5 |   10 |\n+------+------+\n3 rows in set\n"], "Category": ["NULL-Related Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823174"], "Title": ["NANVL"], "Feature": ["NANVL(n1,n2)\n"], "Description": ["该函数用于判断输入值参数 n1 是不是 NaN（表示非数字），并返回结果。", "如果 n1 是 NaN，则返回参数 n2。", "如果 n1 不是 NaN，则返回参数 n1。", "\n注意\n该函数仅适用于 BINARY_FLOAT 或 BINARY_DOUBLE 数据类型。\n", "\n\n\n参数\n说明\n\n\n\n\nn1\n属于数值数据类型（BINARY_FLOAT、BINARY_DOUBLE）或可以隐式转换为数值数据类型的表达式。\n\n\nn2\n属于数值数据类型（BINARY_FLOAT、BINARY_DOUBLE）或可以隐式转换为数值数据类型的表达式。\n\n\n", "如果有任意一个参数类型是 BINARY_DOUBLE，则返回 BINARY_DOUBLE 数据类型。", "如果有参数类型都是 BINARY_FLOAT，则返回 BINARY_FLOAT 数据类型。", "如果有任意一个参数为空，则返回 NULL。"], "Examples": ["obclient> CREATE TABLE tbl1 (col1 NUMBER(10,2), col2 BINARY_DOUBLE, col3 BINARY_FLOAT);\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl1 VALUES(1,1,1),(2,'NaN',2),(3,3,'NaN');\nQuery OK, 3 rows affected\nRecords: 3  Duplicates: 0  Warnings: 0\n\nobclient> SELECT * FROM tbl1;\n+------+----------+----------+\n| COL1 | COL2     | COL3     |\n+------+----------+----------+\n|    1 | 1.0E+000 | 1.0E+000 |\n|    2 |      Nan | 2.0E+000 |\n|    3 | 3.0E+000 |      Nan |\n+------+----------+----------+\n3 rows in set\n\nobclient> SELECT col2,NANVL(col2,0) FROM tbl1;\n+----------+---------------+\n| COL2     | NANVL(COL2,0) |\n+----------+---------------+\n| 1.0E+000 |      1.0E+000 |\n|      Nan |             0 |\n| 3.0E+000 |      3.0E+000 |\n+----------+---------------+\n3 rows in set\n", "obclient> SELECT NANVL('',1),NANVL(2,'') FROM DUAL;\n+-------------+-------------+\n| NANVL('',1) | NANVL(2,'') |\n+-------------+-------------+\n|        NULL |        NULL |\n+-------------+-------------+\n1 row in set\n"], "Category": ["Numeric Functions", "NULL-Related Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823255"], "Title": ["NULLIF"], "Feature": ["NULLIF(expr1, expr2)\n"], "Description": ["该函数用于比较两个参数表达式是否相等。如果 expr1 与 expr2 相等，则返回 NULL。如果 expr1 与 expr2 不相等，则返回 expr1。", "\n\n\n参数\n说明\n\n\n\n\nexpr1\n指定第一个参数，可以是任意数据类型的表达式。\n\n\nexpr2\n指定第二个参数，如果 expr1 不是数值数据类型，则 expr2 的数据类型必须与 expr1 相同，否则数据库将返回错误。\n\n\n", "如果参数 expr1 和 expr2 都是数值数据类型，则数据库确定具有较高优先级的参数，将另一个参数隐式转换为该数据类型，并返回该数据类型。", "如果 expr1 与 expr2 的相等或者 expr1 是空值，则返回 NULL。", "如果 expr1 与 expr2 的不相等，则返回与 expr1 相同的数据类型。"], "Examples": ["obclient> SELECT NULLIF(3+4,6+1) FROM DUAL;\n+-----------------+\n| NULLIF(3+4,6+1) |\n+-----------------+\n|            NULL |\n+-----------------+\n1 row in set\n"], "Category": ["NULL-Related Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823256"], "Title": ["NVL"], "Feature": ["NVL(expr1, expr2)\n"], "Description": ["该函数从两个表达式返回一个非空值。如果 expr1 与 expr2 的结果都为空值，则 NVL 函数返回 NULL。", "\n\n\n参数\n说明\n\n\n\n\nexpr1\n指定第一个参数，数据类型可以是数据库内建数据类型中的任何数据类型。\n\n\nexpr2\n指定第二个参数，数据类型可以是数据库内建数据类型中的任何数据类型。\n\n\n", "\n说明\nexpr1 和 expr2 必须是相同类型，或者可以隐式转换为相同类型。如果它们不能隐式转换，则数据库返回错误。隐式转换规则如下：\n\n如果 expr1 是 CHAR、NCHAR、NVARCHAR、VARCHAR2 或 VARCHAR 字符型数据，则数据库在比较 expr1 之前将 expr2 转换为 expr1 的数据类型，并返回 expr1 字符集的 VARCHAR2。\n如果 expr1 是 NUMBER、FLOAT、BINARY_FLOAT 或 BINARY_DOUBLE 数值型数据，则数据库确定哪个参数具有最高的数字优先级，隐式地将另一个参数转换为该数据类型，并返回该数据类型。\n\n", "如果 expr1、expr2 是 NULL，则返回 NULL。", "如果 expr1 属于字符数据类型 CHAR、NCHAR、NVARCHAR、VARCHAR2 或 VARCHAR，则返回 expr1 字符集的 VARCHAR2。", "如果 expr1 属于数值数据类型 NUMBER、FLOAT、BINARY_FLOAT 或 BINARY_DOUBLE，则返回 expr1 中具有最高优先级的数据类型。"], "Examples": ["obclient> CREATE TABLE tbl1 (col1 INT,col2 INT);\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl1 VALUES (1,30),(2,null),(3,50),(4,80),(5,10);\nQuery OK, 5 rows affected\nRecords: 5  Duplicates: 0  Warnings: 0\n\nobclient> SELECT col1,NVL(col2,100) FROM tbl1;\n+------+---------------+\n| COL1 | NVL(COL2,100) |\n+------+---------------+\n|    1 |            30 |\n|    2 |           100 |\n|    3 |            50 |\n|    4 |            80 |\n|    5 |            10 |\n+------+---------------+\n5 rows in set\n"], "Category": ["NULL-Related Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823254"], "Title": ["NVL2"], "Feature": ["NVL2(expr1, expr2, expr3)\n"], "Description": ["该函数根据输入表达式 expr1 是否为空，返回不同的值。", "如果 expr1 不为空，则返回 expr2 的值。", "如果 expr1 为空，则返回 expr3 的值。", "\n\n\n参数\n说明\n\n\n\n\nexpr1\n指定第一个参数，数据类型可以是数据库内建数据类型中的任何数据类型。\n\n\nexpr2\n指定第二个参数，数据类型可以是数据库内建数据类型中的任何数据类型。\n\n\nexpr3\n指定第三个参数，数据类型可以是数据库内建数据类型中的任何数据类型。\n\n\n", "当 expr1 是空值时，如果 expr3 是空值，则返回 NULL。如果 expr3 不是空值，则返回类型请参见下面的 说明。", "当 expr1 不为空值时，如果 expr2 是空值，则返回 NULL。如果 expr2 不是空值，则返回类型请参见下面的 说明。", "\n说明\n如果 expr2 和 expr3 的数据类型不同，则数据库将其中一个隐式转换为另一个。如果它们不能隐式转换，则数据库返回错误。如果 expr2 是字符类型或数值类型，则隐式转换规则如下：\n\n如果 expr2 是 CHAR、NCHAR、NVARCHAR、VARCHAR2 或 VARCHAR 字符型数据，则 OceanBase 数据库先将 expr3 转换为 expr2 的数据类型再返回值；如果 expr3 是 NULL，则不需要数据类型转换，结果返回 VARCHAR2 类型。\n如果 expr2 是 NUMBER、FLOAT、BINARY_FLOAT 或 BINARY_DOUBL 数值类型，则 OceanBase 数据库确定哪个参数具有最高的数值优先级，隐式地将另一个参数转换为该数据类型，并返回该数据类型。\n\n", "如果 ", "expr2", " 是 ", "CHAR", "、", "NCHAR", "、", "NVARCHAR", "、", "VARCHAR2", " 或 ", "VARCHAR", " 字符型数据，则 OceanBase 数据库先将 ", "expr3", " 转换为 ", "expr2", " 的数据类型再返回值；如果 ", "expr3", " 是 ", "NULL", "，则不需要数据类型转换，结果返回 ", "VARCHAR2", " 类型。", "如果 ", "expr2", " 是 ", "NUMBER", "、", "FLOAT", "、", "BINARY_FLOAT", " 或 ", "BINARY_DOUBL", " 数值类型，则 OceanBase 数据库确定哪个参数具有最高的数值优先级，隐式地将另一个参数转换为该数据类型，并返回该数据类型。"], "Examples": ["obclient> CREATE TABLE tbl1 (col1 INT,col2 INT);\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl1 VALUES (1,30),(2,NULL),(3,50),(4,80),(5,10);\nQuery OK, 5 rows affected\nRecords: 5  Duplicates: 0  Warnings: 0\n\nobclient> SELECT col1,NVL2(col2,50,100) FROM tbl1;\n+------+-------------------+\n| COL1 | NVL2(COL2,50,100) |\n+------+-------------------+\n|    1 |                50 |\n|    2 |               100 |\n|    3 |                50 |\n|    4 |                50 |\n|    5 |                50 |\n+------+-------------------+\n5 rows in set\n"], "Category": ["NULL-Related Functions"]}
