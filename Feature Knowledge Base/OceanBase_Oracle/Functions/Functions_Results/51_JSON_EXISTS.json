{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823500"
    ],
    "Title": [
        "JSON_EXISTS"
    ],
    "Feature": [
        "JSON_EXISTS(\n              expr [FORMAT JSON],\n              json_path_literal\n                 [PASSING expr AS identifier]\n                 [ERROR|TRUE|FALSE ON ERROR]\n              [ERROR|TRUE|FALSE ON EMPTY]);\n\n"
    ],
    "Description": [
        "JSON_EXISTS() 函数在 SQL 语句中作为 SQL 条件，来检验指定路径下的 JSON 数据是否存在，或者满足某些条件，可以理解为针对 JSON 数据起到过滤条件作用。如果 JSON 值存在，此条件返回 TRUE，如果 JSON 值不存在，则返回 FALSE。"
    ],
    "Examples": [
        "# 使用默认参数，用于选取符合条件的 JSON 值\nCREATE TABLE t (name VARCHAR2(100));\nINSERT INTO t VALUES ('[{first:\"John\"}, {middle:\"Mark\"}, {last:\"Smith\"}]');\nINSERT INTO t VALUES ('[{first:\"Mary\"}, {last:\"Jones\"}]');\nINSERT INTO t VALUES ('[{first:\"Jeff\"}, {last:\"Williams\"}]');\nINSERT INTO t VALUES ('[{first:\"Jean\"}, {middle:\"Anne\"}, {last:\"Brown\"}]');\nINSERT INTO t VALUES (NULL);\nINSERT INTO t VALUES ('This is not well-formed JSON data');\n\nobclient> SELECT name FROM t  WHERE JSON_EXISTS(name, '$[0].first');\n+---------------------------------------------------+\n| NAME                                              |\n+---------------------------------------------------+\n| [{first:\"John\"}, {middle:\"Mark\"}, {last:\"Smith\"}] |\n| [{first:\"Mary\"}, {last:\"Jones\"}]                  |\n| [{first:\"Jeff\"}, {last:\"Williams\"}]               |\n| [{first:\"Jean\"}, {middle:\"Anne\"}, {last:\"Brown\"}] |\n+---------------------------------------------------+\n4 rows in set\n\n# 当出现不匹配时，或者 expr 不是合法的JSON数据时，JSON_EXIST 返回 false\nobclient> SELECT name FROM t WHERE JSON_EXISTS(name, '$[1].middle');\n+---------------------------------------------------+\n| NAME                                              |\n+---------------------------------------------------+\n| [{first:\"John\"}, {middle:\"Mark\"}, {last:\"Smith\"}] |\n| [{first:\"Jean\"}, {middle:\"Anne\"}, {last:\"Brown\"}] |\n+---------------------------------------------------+\n2 rows in set\n\n# 将 PASSING 子句传递给 json-path 参数\nobclient> SELECT name FROM t WHERE JSON_EXISTS(name, '$[1]?(@.middle == $var1)' PASSING 'Anne' as \"var1\");\n+---------------------------------------------------+\n| NAME                                              |\n+---------------------------------------------------+\n| [{first:\"Jean\"}, {middle:\"Anne\"}, {last:\"Brown\"}] |\n+---------------------------------------------------+\n1 row in set\n"
    ],
    "Category": [
        "JSON Functions"
    ]
}