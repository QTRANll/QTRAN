{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822872"
    ],
    "Title": [
        "RANK"
    ],
    "Feature": [
        "/*聚合语法*/\nRANK(expr [, expr ]...) WITHIN GROUP\n  ( ORDER BY\n            expr_col [ DESC | ASC ][ NULLS { FIRST | LAST } ]\n            [, expr_col [ DESC | ASC ][ NULLS { FIRST | LAST } ]]...\n  )\n\n/*分析语法*/\nRANK() OVER ([ query_partition_clause ] order_by_clause)\n"
    ],
    "Description": [
        "该函数用于计算一个值在一组值的排名。当有相同排序值时，将会有相同的排名，并且值相同的行数会被记录到下个排名中。可以将此函数用作聚合或分析函数。",
        "\n说明\n\n作为聚合函数，RANK 计算由参数 expr 标识的假设行相对于指定排序规范的排名。参数表达式 expr 和 ORDER BY 聚合子句中的表达式按位置匹配。因此，参数的数量必须相同，并且它们的数据类型必须兼容。\n作为一个解析函数，RANK 计算从查询相对于由查询返回的其他行返回的每一行的秩，基于所述值 value_exprs 中 order_by_clause。\n\n",
        "\n\n\n参数\n说明\n\n\n\n\nexpr\n指定要查询的值。\n\n\nexpr_col\n指定要查询的值对应的列名。\n\n\nDESC | ASC\n指定列表的排序方式，为可选项。 \n      \nASC 为升序排序，默认值。\nDESC 为降序排序。\n\n\n\nNULLS { FIRST | LAST }\n排序后 expr_col 中 NULL 值的位置，为可选项。 \n      \nNULLS FIRST 表示 NULL 值排在非空值的前面。\nNULLS LAST 表示 NULL 值排在非空值的后面，为默认值。\n\n\n\nOVER\n使用 OVER 子句定义窗口进行计算。详细信息请参见 分析函数说明。\n\n\n",
        "返回 NUMBER 数据类型。"
    ],
    "Examples": [
        "obclient> SELECT * FROM emp_msg;\n+--------+--------+------+------+\n| DEPTNO | ENAME  | SAL  | MGR  |\n+--------+--------+------+------+\n|     10 | CLARK  | 2750 | 7839 |\n|     10 | KING   | 5300 | NULL |\n|     10 | MILLER | 1600 | 7782 |\n|     20 | ADAMS  | 1400 | 7788 |\n|     20 | FORD   | 3300 | 7566 |\n|     20 | JONES  | 3275 | 7839 |\n|     20 | SCOTT  | 3300 | 7566 |\n|     20 | SMITH  | 1100 | 7902 |\n|     30 | ALLEN  | 1900 | 7698 |\n|     30 | BLAKE  | 3150 | 7839 |\n|     30 | JAMES  | 1250 | 7698 |\n|     30 | MARTIN | 1550 | 7698 |\n|     30 | TURNER | 1800 | 7698 |\n|     30 | WARD   | 1550 | 7698 |\n|     30 | SCLARK | 1750 | 7839 |\n+--------+--------+------+------+\n15 rows in set\n",
        "obclient> SELECT RANK(3300) WITHIN GROUP (ORDER BY sal) FROM emp_msg;\n+-----------------------------------+\n| RANK(3300)WITHINGROUP(ORDERBYSAL) |\n+-----------------------------------+\n|                                13 |\n+-----------------------------------+\n1 row in set\n",
        "obclient> SELECT deptno,ename,sal,\n                   RANK() OVER (PARTITION BY deptno ORDER BY sal DESC) \"RANK\"\n          FROM emp_msg;\n+--------+--------+------+------+\n| DEPTNO | ENAME  | SAL  | RANK |\n+--------+--------+------+------+\n|     10 | KING   | 5300 |    1 |\n|     10 | CLARK  | 2750 |    2 |\n|     10 | MILLER | 1600 |    3 |\n|     20 | FORD   | 3300 |    1 |\n|     20 | SCOTT  | 3300 |    1 |\n|     20 | JONES  | 3275 |    3 |\n|     20 | ADAMS  | 1400 |    4 |\n|     20 | SMITH  | 1100 |    5 |\n|     30 | BLAKE  | 3150 |    1 |\n|     30 | ALLEN  | 1900 |    2 |\n|     30 | TURNER | 1800 |    3 |\n|     30 | SCLARK | 1750 |    4 |\n|     30 | MARTIN | 1550 |    5 |\n|     30 | WARD   | 1550 |    5 |\n|     30 | JAMES  | 1250 |    7 |\n+--------+--------+------+------+\n15 rows in set\n"
    ],
    "Category": [
        "Aggregate Functions",
        "Analytic Functions"
    ]
}