{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823172"
    ],
    "Title": [
        "GENERATOR"
    ],
    "Feature": [
        "TABLE(GENERATOR(N))\n"
    ],
    "Description": [
        "GENERATOR 函数是一种特殊的内置函数，设计用于在 Table Function 框架中使用。它的主要作用是生成一个指定数量行的虚拟表。这个表不包含任何实际数据，而是提供了一个结构，可以在其中插入数据。GENERATOR 函数通常用于生成一组连续的行，以便进行批量操作或模拟数据集。",
        "Table Function 是 SQL 中的一个高级功能，它允许函数返回一整张表，而不仅仅是单个值。这意味着 Table Function 可以产出多行和多列，类似于常规的数据表一样。",
        "TABLE(GENERATOR(N)) 可以生成一个有 N 行的虚拟表，其中 N 是一个大于或等于 0 的 64 位整数。如果你想要这个虚拟表包括具体的数据，那么你需要在 SELECT 语句后面添加数据生成的逻辑，比如常量、计算表达式、函数调用或用户自定义函数（UDF）等。",
        "TABLE(GENERATOR(N)) 支持并行执行。你可以在并行 SELECT 查询或并行数据操纵语言（DML）操作中使用它。然而，生成这些虚拟行的过程本身不是并行的；只有一个线程负责读取 TABLE(GENERATOR(N)) 生成的行。因此，在包含 TABLE(GENERATOR(N)) 的数据流操作(Data Flow Operation, DFO)中，Degree of Parallelism (DOP) 设置应为 1。",
        "N",
        "：一个大于或等于 0 的 64 位的正整数，用于指定生成的行数。"
    ],
    "Examples": [
        "obclient [SYS]> SELECT * FROM TABLE(GENERATOR(10));\n",
        "+--------------+\n| COLUMN_VALUE |\n+--------------+\n|            1 |\n|            2 |\n|            3 |\n|            4 |\n|            5 |\n|            6 |\n|            7 |\n|            8 |\n|            9 |\n|           10 |\n+--------------+\n10 rows in set\n",
        "obclient [SYS]> SELECT 'Hello, World!' AS greeting FROM TABLE(GENERATOR(10));\n",
        "+---------------+\n| GREETING      |\n+---------------+\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n| Hello, World! |\n+---------------+\n10 rows in set\n",
        "obclient> SELECT COUNT(*) FROM TABLE(GENERATOR(100000));\n+----------+\n| COUNT(*) |\n+----------+\n|   100000 |\n+----------+\n1 row in set\n\nobclient> SELECT NORMAL(0, 1, RANDOM()) FROM TABLE(GENERATOR(5));\n+------------------------+\n| NORMAL(0, 1, RANDOM()) |\n|------------------------|\n|           0.227384164  |\n|           0.9945290748 |\n|          -0.2045078571 |\n|          -1.594607893  |\n|          -0.8213296842 |\n+------------------------+\n5 rows in set\n\nobclient> SELECT RANDSTR(1, ZIPF(1, 5, RANDOM())) str FROM TABLE(GENERATOR(5));\n+------------------------+\n|                    str |\n|------------------------|\n|                     A  |\n|                     D  |\n|                     A  |\n|                     A  |\n|                     C  |\n+------------------------+\n5 rows in set\n",
        "obclient> CREATE TABLE t1 (c1 INT);\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO t1 VALUES (1), (2);\nQuery OK, 2 rows affected\nRecords: 2  Duplicates: 0  Warnings: 0\n\nobclient> SELECT c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+------+----------------------+\n| c1   | RANDOM(1)            |\n+------+----------------------+\n|    1 | -6753783847308464280 |\n|    2 | -6707106347154343346 |\n|    1 |  -899926183391115878 |\n|    2 | -8835543475904200562 |\n|    1 | -2750444335953844424 |\n|    2 |  7588216632478230601 |\n+------+----------------------+\n6 rows in set\n\nobclient> EXPLAIN SELECT c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+----------------------------------------------------------------------------------+\n| Query Plan                                                                       |\n+----------------------------------------------------------------------------------+\n| ==================================================================               |\n| |ID|OPERATOR                   |NAME       |EST.ROWS|EST.TIME(us)|               |\n| ------------------------------------------------------------------               |\n| |0 |NESTED-LOOP JOIN CARTESIAN |           |398     |14          |               |\n| |1 |├─FUNCTION_TABLE           |FUNC_TABLE1|199     |1           |               |\n| |2 |└─MATERIAL                 |           |2       |2           |               |\n| |3 |  └─TABLE FULL SCAN        |T1         |2       |2           |               |\n| ==================================================================               |\n| Outputs & filters:                                                               |\n| -------------------------------------                                            |\n|   0 - output([T1.C1], [RANDOM(cast(1, BIGINT(-1, 0)))]), filter(nil), rowset=256 |\n|       conds(nil), nl_params_(nil), use_batch=false                               |\n|   1 - output(nil), filter(nil)                                                   |\n|       value(GENERATOR(cast(3, BIGINT(-1, 0))))                                   |\n|   2 - output([T1.C1]), filter(nil), rowset=256                                   |\n|   3 - output([T1.C1]), filter(nil), rowset=256                                   |\n|       access([T1.C1]), partitions(p0)                                            |\n|       is_index_back=false, is_global_index=false,                                |\n|       range_key([T1.__pk_increment]), range(MIN ; MAX)always true                |\n+----------------------------------------------------------------------------------+\n19 rows in set\n\nobclient> SELECT /*+ PARALLEL(2) */ c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+------+----------------------+\n| c1   | random(1)            |\n+------+----------------------+\n|    1 | -6753783847308464280 |\n|    2 | -6707106347154343346 |\n|    1 |  -899926183391115878 |\n|    2 | -8835543475904200562 |\n|    1 | -2750444335953844424 |\n|    2 |  7588216632478230601 |\n+------+----------------------+\n6 rows in set\n\nobclient> EXPLAIN SELECT /*+ PARALLEL(2) */ c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+----------------------------------------------------------------------------------+\n| Query Plan                                                                       |\n+----------------------------------------------------------------------------------+\n| ==================================================================               |\n| |ID|OPERATOR                   |NAME       |EST.ROWS|EST.TIME(us)|               |\n| ------------------------------------------------------------------               |\n| |0 |NESTED-LOOP JOIN CARTESIAN |           |398     |13          |               |\n| |1 |├─FUNCTION_TABLE           |FUNC_TABLE1|199     |1           |               |\n| |2 |└─MATERIAL                 |           |2       |3           |               |\n| |3 |  └─PX COORDINATOR         |           |2       |3           |               |\n| |4 |    └─EXCHANGE OUT DISTR   |:EX10000   |2       |2           |               |\n| |5 |      └─PX BLOCK ITERATOR  |           |2       |1           |               |\n| |6 |        └─TABLE FULL SCAN  |T1         |2       |1           |               |\n| ==================================================================               |\n| Outputs & filters:                                                               |\n| -------------------------------------                                            |\n|   0 - output([T1.C1], [RANDOM(cast(1, BIGINT(-1, 0)))]), filter(nil), rowset=256 |\n|       conds(nil), nl_params_(nil), use_batch=false                               |\n|   1 - output(nil), filter(nil)                                                   |\n|       value(GENERATOR(cast(3, BIGINT(-1, 0))))                                   |\n|   2 - output([T1.C1]), filter(nil), rowset=256                                   |\n|   3 - output([T1.C1]), filter(nil), rowset=256                                   |\n|   4 - output([T1.C1]), filter(nil), rowset=256                                   |\n|       dop=2                                                                      |\n|   5 - output([T1.C1]), filter(nil), rowset=256                                   |\n|   6 - output([T1.C1]), filter(nil), rowset=256                                   |\n|       access([T1.C1]), partitions(p0)                                            |\n|       is_index_back=false, is_global_index=false,                                |\n|       range_key([T1.__pk_increment]), range(MIN ; MAX)always true                |\n+----------------------------------------------------------------------------------+\n26 rows in set\n"
    ],
    "Category": [
        "Numeric Functions"
    ]
}