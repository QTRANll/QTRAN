{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822868"
    ],
    "Title": [
        "LISTAGG"
    ],
    "Feature": [
        "LISTAGG (measure_expr [,'delimiter']) [ WITHIN GROUP ] (order_by_clause)\n[ OVER query_partition_clause ]\n"
    ],
    "Description": [
        "该函数用于列转行，LISTAGG 对 ORDER BY 子句中指定的每个组内的数据进行排序，然后合并度量列的值。可以将其用作聚合或分析函数。",
        "\n说明\n\n作为分析函数使用时，需要使用 OVER 子句定义窗口进行计算。该函数基于 query_partition_clause 中的一个或多个表达式将查询结果集分为几组。\n作为聚合函数使用时，不需要加 OVER 关键字。 \n     \n作为单个集合的聚合函数，LISTAGG 对所有行进行操作并返回单个输出行。\n作为组集聚合，LISTAGG 将对 GROUP BY 子句定义的每个组进行操作并返回输出行。\n\n\n",
        "\n\n\n参数\n说明\n\n\n\n\nmeasure_expr\n可以是任何表达式。度量列中的空值将被忽略。\n\n\ndelimiter\n指定用于分隔度量值的字符串。此子句是可选的，默认为 NULL。\n\n\nOVER\n使用 OVER 子句定义窗口进行计算。详细信息请参见 分析函数说明。\n\n\n",
        "如果度量列是 RAW 的，则返回数据类型为 RAW，否则返回值为 VARCHAR2。"
    ],
    "Examples": [
        "obclient> SELECT * FROM employees;\n+---------------+------------+-----------+------------+--------+\n| DEPARTMENT_ID | MANAGER_ID | LAST_NAME | HIREDATE   | SALARY |\n+---------------+------------+-----------+------------+--------+\n|            30 |        100 | Raphaely  | 2017-07-01 |   1700 |\n|            30 |        100 | De Haan   | 2018-05-01 |  11000 |\n|            40 |        100 | Errazuriz | 2017-07-21 |   1400 |\n|            50 |        100 | Hartstein | 2019-10-05 |  14000 |\n|            50 |        100 | Raphaely  | 2017-07-22 |   1700 |\n|            50 |        100 | Weiss     | 2019-10-05 |  13500 |\n|            90 |        100 | Russell   | 2019-07-11 |  13000 |\n|            90 |        100 | Partners  | 2018-12-01 |  14000 |\n+---------------+------------+-----------+------------+--------+\n8 rows in set\n",
        "obclient> SELECT LISTAGG(last_name, '; ') WITHIN GROUP (ORDER BY hiredate, last_name) as \"Emp_list\",\n              MIN(hiredate) as \"Earliest\"\n       FROM employees\n       WHERE department_id = 30;\n+-------------------+------------+\n| Emp_list          | Earliest   |\n+-------------------+------------+\n| Raphaely; De Haan | 2017-07-01 |\n+-------------------+------------+\n1 row in set\n",
        "obclient> SELECT department_id \"Dept\",hiredate \"Date\",last_name \"Name\",\n              LISTAGG(last_name, '; ') WITHIN GROUP (ORDER BY hiredate, last_name) OVER (PARTITION BY department_id) as \"Emp_list\"\n      FROM employees\n      WHERE hiredate < '2019-10-10'\n      ORDER BY \"Dept\", \"Date\", \"Name\";\n+------+------------+-----------+----------------------------+\n| Dept | Date       | Name      | Emp_list                   |\n+------+------------+-----------+----------------------------+\n|   30 | 2017-07-01 | Raphaely  | Raphaely; De Haan          |\n|   30 | 2018-05-01 | De Haan   | Raphaely; De Haan          |\n|   40 | 2017-07-21 | Errazuriz | Errazuriz                  |\n|   50 | 2017-07-22 | Raphaely  | Raphaely; Hartstein; Weiss |\n|   50 | 2019-10-05 | Hartstein | Raphaely; Hartstein; Weiss |\n|   50 | 2019-10-05 | Weiss     | Raphaely; Hartstein; Weiss |\n|   90 | 2018-12-01 | Partners  | Partners; Russell          |\n|   90 | 2019-07-11 | Russell   | Partners; Russell          |\n+------+------------+-----------+----------------------------+\n8 rows in set\n"
    ],
    "Category": [
        "Aggregate Functions",
        "Analytic Functions"
    ]
}