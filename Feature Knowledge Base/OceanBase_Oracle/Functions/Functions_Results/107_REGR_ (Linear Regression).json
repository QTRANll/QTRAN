{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822871"
    ],
    "Title": [
        "REGR_ (Linear Regression)"
    ],
    "Feature": [
        "{ REGR_SLOPE\n | REGR_INTERCEPT\n | REGR_COUNT\n | REGR_R2\n | REGR_AVGX\n | REGR_AVGY\n | REGR_SXX\n | REGR_SYY\n | REGR_SXY\n}(expr1 , expr2)\n  [ OVER (analytic_clause) ]\n"
    ],
    "Description": [
        "该函数是线性回归函数，将普通最小二乘法回归线拟合到一组数字对上。可以将其用作聚合或分析函数。",
        "\n说明\n\n作为分析函数使用时，需要使用 OVER 子句定义窗口进行计算。它对一组行的集合进行计算并返回多个值。\n作为聚合函数使用时，该函数对一组行的集合进行聚合计算，结果只能返回一个值，此时不需要加 OVER 子句。\n\n",
        "\n\n\n参数\n说明\n\n\n\n\nREGR_SLOPE\n返回直线的坡度（斜率）。返回值是数值数据类型，可以为 NULL。 忽略空数值对（expr1,expr2）后，它进行以下计算： sql COVAR_POP(expr1, expr2) / VAR_POP(expr2)\n\n\nREGR_INTERCEPT\n返回回归线的 y 截距。返回值是数值数据类型，可以为 NULL。忽略空数值对（expr1,expr2）后，它进行以下计算： sql AVG(expr1) - REGR_SLOPE(expr1, expr2) * AVG(expr2)\n\n\nREGR_COUNT\n返回用于填充回归线的非空数值对的数目，是一个整数。\n\n\nREGR_R2\n返回回归的确定系数（也称为 R 平方或拟合优度）。返回值是数值数据类型，可以为 NULL。忽略 VAR_POP(expr1) 和 VAR_POP(expr2) 的空值后进行评估。返回值为： sql NULL if VAR_POP(expr2) = 0 1 if VAR_POP(expr1) = 0 and VAR_POP(expr2) != 0 POWER(CORR(expr1,expr),2) if VAR_POP(expr1) > 0 and VAR_POP(expr2 != 0\n\n\nREGR_AVGX\n返回回归线的自变量（expr2）的平均值。忽略空数值对（expr1,expr2）后，进行以下计算： sql AVG(expr2)\n\n\nREGR_AVGY\n返回回归线的因变量（expr1）的平均值。忽略空数值对（expr1,expr2）后，进行以下计算： sql AVG(expr1)\n\n\nREGR_SXX\n返回值等于在忽略空数值对（expr1,expr2）后数值对的个数乘以自变量的值的总体方差，即下面公式的计算结果： sql REGR_COUNT(expr1, expr2) * VAR_POP(expr2)\n\n\nREGR_SYY\n返回值等于在忽略空数值对（expr1,expr2）后数值对的个数乘以因变量的值的总体方差，即下面公式的计算结果： sql REGR_COUNT(expr1, expr2) * VAR_POP(expr1)\n\n\nREGR_SXY\n返回值等于在忽略空数值对（expr1,expr2）后的数值对的个数乘以总体协方差，即下面公式的计算结果： sql REGR_COUNT(expr1, expr2) * COVAR_POP(expr1, expr2)\n\n\nexpr1\n指定因变量的值（y 值）。\n\n\nexpr2\n指定自变量的值（x 值）。\n\n\nOVER\n使用 OVER 子句定义窗口进行计算。详细信息请参见 分析函数说明。\n\n\n",
        "\n说明\nREGR_SXX 、REGR_SYY 和 REGR_SXY 是用于计算各种诊断统计数据的辅助函数。\n",
        "返回值是数值数据类型或 NULL。"
    ],
    "Examples": [
        "obclient> SELECT * FROM tbl1;\n+------+------+------+------+\n| COL1 | COL2 | COL3 | COL4 |\n+------+------+------+------+\n|    1 | A1   |    8 |   12 |\n|    1 | A2   |   10 |   15 |\n|    1 | A3   |   11 |   16 |\n|    2 | B1   |    9 |   14 |\n|    2 | B2   |   10 |   15 |\n|    2 | B3   |    8 |   13 |\n|    2 | B4   |   11 |   16 |\n|    3 | C1   |    8 |   18 |\n|    3 | C2   |    9 |   16 |\n|    3 | C3   |   10 |   15 |\n|    3 | C4   |   11 |   12 |\n|    3 | C5   |   12 |   10 |\n|    4 | d1   |    8 | NULL |\n|    4 | d1   |    9 |   10 |\n|    4 | d1   |   10 | NULL |\n+------+------+------+------+\n15 rows in set\n",
        "obclient> SELECT col1,REGR_SXX(col3,col4) \"REGR_SXX\",\n            REGR_SYY(col3,col4) \"REGR_SYY\",\n            REGR_SXY(col3,col4) \"REGR_SXY\"\n          FROM tbl1\n          GROUP BY col1;\n+------+----------------------------------------+------------------------------------------+----------------------------------------+\n| COL1 | REGR_SXX                               | REGR_SYY                                 | REGR_SXY                               |\n+------+----------------------------------------+------------------------------------------+----------------------------------------+\n|    1 | 8.666666666666666666666666666666666667 | 4.66666666666666666666666666666666666701 | 6.333333333333333333333333333333333333 |\n|    2 |                                      5 |                                        5 |                                      5 |\n|    3 |                                   40.8 |                                       10 |                                    -20 |\n|    4 |                                      0 |                                        0 |                                      0 |\n+------+----------------------------------------+------------------------------------------+----------------------------------------+\n4 rows in set\n",
        "obclient> SELECT col1,col2,col3,col4,\n            REGR_SLOPE(col3,col4) OVER(PARTITION BY col1 ORDER BY col2) \"REGR_SLOPE\"\n          FROM tbl1;\n+------+------+------+------+--------------------------------------------+\n| COL1 | COL2 | COL3 | COL4 | REGR_SLOPE                                 |\n+------+------+------+------+--------------------------------------------+\n|    1 | A1   |    8 |   12 |                                       NULL |\n|    1 | A2   |   10 |   15 |  .6666666666666666666666666666666666666667 |\n|    1 | A3   |   11 |   16 |  .7307692307692307692307692307692307691642 |\n|    2 | B1   |    9 |   14 |                                       NULL |\n|    2 | B2   |   10 |   15 |                                          1 |\n|    2 | B3   |    8 |   13 |                                          1 |\n|    2 | B4   |   11 |   16 |                                          1 |\n|    3 | C1   |    8 |   18 |                                       NULL |\n|    3 | C2   |    9 |   16 |                                        -.5 |\n|    3 | C3   |   10 |   15 | -.6428571428571428571428571428571428570956 |\n|    3 | C4   |   11 |   12 | -.5066666666666666666666666666666666666667 |\n|    3 | C5   |   12 |   10 | -.4901960784313725490196078431372549019608 |\n|    4 | d1   |    8 | NULL |                                       NULL |\n|    4 | d1   |    9 |   10 |                                       NULL |\n|    4 | d1   |   10 | NULL |                                       NULL |\n+------+------+------+------+--------------------------------------------+\n15 rows in set\n"
    ],
    "Category": [
        "Aggregate Functions",
        "Analytic Functions"
    ]
}