{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823502"
    ],
    "Title": [
        "JSON_MERGEPATCH"
    ],
    "Feature": [
        "JSON_MERGEPATCH (\n                 target_expr,\n                 patch_expr\n                 [RETURNING  CLOB|BLOB|JSON|VARCHAR2|VARCHAR2[size],]\n                 [PRETTY]\n                 [ASCII]\n                 [TRUNCATE]\n                 [ERROR|NULL ON ERROR]);\n"
    ],
    "Description": [
        "JSON_MERGEPATCH() 函数用于更新 target_json 数据的特定部分，根据 RFC 7396 的标准对两个或多个 JSON 文档执行合并返回合并结果，而不保留具有重复键的成员。 如果至少一个文档作为参数传递给此函数是无效的，则会引发错误。",
        "JSON_MERGEPATCH() 执行合并的原理如下：",
        "如果第一个参数不是对象，则合并的结果与空对象和第二个参数合并的结果相同。",
        "如果第二个参数不是对象，则合并的结果是第二个参数。",
        "如果两个参数都是对象，则合并的结果是具有以下成员的对象： \n    ",
        "\n第一个对象的所有成员在第二个对象中没有具有相同键的对应成员。\n第二个对象的所有成员在第一个对象中没有对应的键，并且其值不是 JSON Null 文字。\n",
        "第一个对象的所有成员在第二个对象中没有具有相同键的对应成员。",
        "第二个对象的所有成员在第一个对象中没有对应的键，并且其值不是 JSON Null 文字。",
        "所有成员的键都存在于第一个和第二个对象中，并且其在第二个对象中的值不是 JSON Null 文字。",
        "这些成员的值是递归合并第一个对象中的值与第二个对象中的值的结果。"
    ],
    "Examples": [
        "# 使用默认参数\nobclient> SELECT json_mergepatch('{\"a\":\"b\"}', '{\"b\":\"c\"}') FROM DUAL;\n+------------------------------------------+\n| JSON_MERGEPATCH('{\"A\":\"B\"}','{\"B\":\"C\"}') |\n+------------------------------------------+\n| {\"a\": \"b\", \"b\": \"c\"}                     |\n+------------------------------------------+\n1 row in set\n\n# 当 Patch 是 null, 相当于删除\nobclient> SELECT json_mergepatch('{\"a\":\"b\"}', '{\"a\":null}') FROM DUAL;\n+-------------------------------------------+\n| JSON_MERGEPATCH('{\"A\":\"B\"}','{\"A\":NULL}') |\n+-------------------------------------------+\n| {}                                        |\n+-------------------------------------------+\n1 row in set\n\n# 相同的 Key 时会更新\nobclient> SELECT json_mergepatch('{\"a\":[\"b\"]}', '{\"a\":\"c\"}') FROM DUAL;\n+--------------------------------------------+\n| JSON_MERGEPATCH('{\"A\":[\"B\"]}','{\"A\":\"C\"}') |\n+--------------------------------------------+\n| {\"a\": \"c\"}                                 |\n+--------------------------------------------+\n1 row in set\n\n# 使用 RETURNING 子句和 PRETTY 子句\nobclient> SELECT json_mergepatch('{\"a\":\"b\", \"b\":\"c\"}', '{\"a\":null}' RETURNING CLOB PRETTY ) FROM DUAL;\n+----------------------------------------------------------------------+\n| JSON_MERGEPATCH('{\"A\":\"B\",\"B\":\"C\"}','{\"A\":NULL}'RETURNINGCLOBPRETTY) |\n+----------------------------------------------------------------------+\n| {\n  \"b\": \"c\"\n}                                                       |\n+----------------------------------------------------------------------+\n1 row in set\n\n# 使用 TRUNCATE 子句生效\nobclient> SELECT json_mergepatch(\n      '{\"a\":\"b\"}',\n      '{\"a\":\"cccccccccccccccccccccccccccccbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbccccccccccccccccccccccccccccccccccccccccccccccccc\"}'\n          RETURNING varchar2(32) PRETTY TRUNCATE) FROM DUAL;\n+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| JSON_MERGEPATCH('{\"A\":\"B\"}','{\"A\":\"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"}'RETURNINGVARCHAR2(32)PRETTYTRUNCATE) |\n+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| {\n  \"a\": \"cccccccccccccccccccccc                                                                                                                                                                                                        |\n+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set\n\n# 使用 ERROR 子句\nobclient> SELECT json_mergepatch('{', '[1,2,3]' ERROR ON ERROR) FROM DUAL;\nORA-40441: JSON syntax error\n\n# 默认对错误处理返回 NULL\nobclient> SELECT json_mergepatch('{', '[1,2,3]') FROM DUAL;\n+--------------------------------+\n| JSON_MERGEPATCH('{','[1,2,3]') |\n+--------------------------------+\n| NULL                           |\n+--------------------------------+\n1 row in set\n\n# 指定 ERROR 子句的处理\nobclient> SELECT json_mergepatch('{', '[1,2,3]' NULL ON ERROR) FROM DUAL;\n+-------------------------------------------+\n| JSON_MERGEPATCH('{','[1,2,3]'NULLONERROR) |\n+-------------------------------------------+\n| NULL                                      |\n+-------------------------------------------+\n1 row in set \n\n"
    ],
    "Category": [
        "JSON Functions"
    ]
}