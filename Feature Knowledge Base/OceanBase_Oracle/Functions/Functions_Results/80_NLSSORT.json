{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823197"
    ],
    "Title": [
        "NLSSORT"
    ],
    "Feature": [
        "NLSSORT(char [, 'nlsparam' ])\n"
    ],
    "Description": [
        "该函数根据显式或隐式参数指定的排序规则，返回字符排序键值（Sortkey）。",
        "NLSSORT() 函数使用指定的排序规则生成排序键值，排序键是一个字节字符串，用于根据指定的排序规则对字符进行排序。",
        "排序规则键的长度受参数 MAX_STRING_SIZE 的影响。如果 MAX_STRING_SIZE=EXTENDED，则返回值的最大长度为 32767 字节。如果排序规则键超出此限制，则函数将执行失败，并出现无法创建排序规则键的报错\"unable to create the collation key\"。",
        "\n\n\n参数\n说明\n\n\n\n\nchar\n该参数支持字面量，也支持表达式（包括列名）。 数据类型可以为 CHAR、VARCHAR2、NCHAR 或者 NVARCHAR2。如果输入的数据类型为CLOB，会做隐式转换。\n\n\nnlsparam\n指定排序规则。 nlsparam 的固定格式为 NLS_SORT = collation。collation 是指语言排序规则名称。 OceanBase 数据库于 V4.2 版本及以后，简体中文排序新支持基于 GB18030_2022 字符集的排序方式。对于中文字符集，目前支持如下 3 种简体中文的排序方式： \n      \nSCHINESE_PINYIN2_M：按拼音排序。\nSCHINESE_STROKE2_M：按笔画排序。\nSCHINESE_RADICAL2_M：按部首排序。\n 对于 Unicode，目前支持如下 3 种简体中文的排序方式： \n      \nUCA0900_SCHINESE_PINYIN: 按拼音排序。\nUCA0900_SCHINESE_STROKE：按笔画排序\nUCA0900_SCHINESE_RADICAL：先按部首排序，再按笔画排序。\n 如果省略 nlsparam，则此函数使用字符集默认排序规则。\n\n\n"
    ],
    "Examples": [
        "obclient> CREATE TABLE tbl1(PK INT, name VARCHAR(25));\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl1 VALUES(1,'福克斯'),(2,'警察'),(3,'的士'),(4,'林肯'),(5,'亚利桑那州'),(6,'华盛顿'),\n      (7,'戴尔'),(10,'朗讯');\nQuery OK, 8 rows affected\nRecords: 8  Duplicates: 0  Warnings: 0\n\nobclient> SELECT * FROM tbl1;\n+------+-----------------+\n| PK   | NAME            |\n+------+-----------------+\n|    1 | 福克斯          |\n|    2 | 警察            |\n|    3 | 的士            |\n|    4 | 林肯            |\n|    5 | 亚利桑那州      |\n|    6 | 华盛顿          |\n|    7 | 戴尔            |\n|   10 | 朗讯            |\n+------+-----------------+\n8 rows in set\n\nobclient> SELECT * FROM tbl1 ORDER BY NLSSORT(name,'NLS_SORT = SCHINESE_PINYIN_M');\n+------+-----------------+\n| PK   | NAME            |\n+------+-----------------+\n|    7 | 戴尔            |\n|    3 | 的士            |\n|    1 | 福克斯          |\n|    6 | 华盛顿          |\n|    2 | 警察            |\n|   10 | 朗讯            |\n|    4 | 林肯            |\n|    5 | 亚利桑那州      |\n+------+-----------------+\n8 rows in set\n"
    ],
    "Category": [
        "Character Functions Returning CharacterValues"
    ]
}