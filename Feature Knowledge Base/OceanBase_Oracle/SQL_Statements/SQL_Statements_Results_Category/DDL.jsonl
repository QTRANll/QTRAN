{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054353"], "Title": ["ALTER EXTERNAL TABLE"], "Feature": ["ALTER EXTERNAL TABLE table_name REFRESH;\n"], "Description": ["该语句用来手动更新外表的文件。单个文件的表数据可以自动更新，如果外表数据来自于文件列表则不能自动更新，需要进行手动刷新。", "table_name 指定要刷新的外表名称。"], "Examples": ["obclient> ALTER EXTERNAL TABLE lineitem REFRESH;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054324"], "Title": ["ALTER SYSTEM PARAMETER"], "Feature": ["ALTER SYSTEM SET parameter_name = expression;\n"], "Description": ["该语句用来修改本租户的配置项信息。", "\n\n\n参数\n描述\n\n\n\n\nparameter_name\n指定要修改的配置项名称。\n\n\nexpression\n指定修改后的配置项的值。\n\n\n"], "Examples": ["obclient> SHOW PARAMETERS LIKE 'log_disk_utilization_threshold';\n+-------+----------+----------------+----------+--------------------------------+-----------+-------+--------------------------------------------------------------------------------------------------------------------------------------+------------+--------+---------+-------------------+\n| zone  | svr_type | svr_ip         | svr_port | name                           | data_type | value | info                                                                                                                                 | section    | scope  | source  | edit_level        |\n+-------+----------+----------------+----------+--------------------------------+-----------+-------+--------------------------------------------------------------------------------------------------------------------------------------+------------+--------+---------+-------------------+\n| zone1 | observer | xx.xx.xx.xx    |     2882 | log_disk_utilization_threshold | NULL      | 80    | log disk utilization threshold before reuse log files, should be smaller than log_disk_utilization_limit_threshold. Range: [10, 100) | LOGSERVICE | TENANT | DEFAULT | DYNAMIC_EFFECTIVE |\n+-------+----------+----------------+----------+--------------------------------+-----------+-------+--------------------------------------------------------------------------------------------------------------------------------------+------------+--------+---------+-------------------+\n1 row in set\n\nobclient> ALTER SYSTEM SET log_disk_utilization_threshold = 20;\nQuery OK, 0 rows affected\n\nobclient> SHOW PARAMETERS LIKE 'log_disk_utilization_threshold';\n+-------+----------+----------------+----------+--------------------------------+-----------+-------+--------------------------------------------------------------------------------------------------------------------------------------+------------+--------+---------+-------------------+\n| zone  | svr_type | svr_ip         | svr_port | name                           | data_type | value | info                                                                                                                                 | section    | scope  | source  | edit_level        |\n+-------+----------+----------------+----------+--------------------------------+-----------+-------+--------------------------------------------------------------------------------------------------------------------------------------+------------+--------+---------+-------------------+\n| zone1 | observer | xx.xx.xx.xx    |     2882 | log_disk_utilization_threshold | NULL      | 20    | log disk utilization threshold before reuse log files, should be smaller than log_disk_utilization_limit_threshold. Range: [10, 100) | LOGSERVICE | TENANT | DEFAULT | DYNAMIC_EFFECTIVE |\n+-------+----------+----------------+----------+--------------------------------+-----------+-------+--------------------------------------------------------------------------------------------------------------------------------------+------------+--------+---------+-------------------+\n1 row in set\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054361"], "Title": ["ALTER TABLE"], "Feature": ["alter_table_stmt:\n      ALTER TABLE table_name alter_table_action_list;     \n\nalter_table_action_list:\n    alter_table_action [, alter_table_action ...]\n\nalter_table_action:\n      ADD {column_definition | (column_definition_list)}\n    | ADD [CONSTRAINT [constraint_name]] UNIQUE (column_name [, column_name ]...)\n    | ADD [CONSTRAINT [constraint_name]] FOREIGN KEY (column_name_list) references_clause\n    | ADD [CONSTRAINT [constraint_name]] CHECK (expr)\n    | ADD CONSTRAINT constraint_name PRIMARY KEY (column_name)\n    | ADD CONSTRAINT constraint_name FOREIGN KEY(foreign_col_name) REFERENCES              \n        reference_tbl_name(column_name);\n    | ALTER INDEX index_name [VISIBLE | INVISIBLE]\n\n    | ADD range_partition_list\n    | ADD COLUMN GROUP([all columns, ]each column)\n    | DROP {PARTITION | SUBPARTITION} partition_name_list [UPDATE GLOBAL INDEXES]\n    | DROP TABLEGROUP\n    | DROP CONSTRAINT constraint_name\n    | DROP PRIMARY KEY\n    | DROP COLUMN column_name\n    | DROP COLUMN GROUP([all columns, ]each column)\n    | {ENABLE | DISABLE} CONSTRAINT constraint_name\n    | MODIFY [COLUMN] column_definition\n    | MODIFY CONSTRAINT constraint_name { ENABLE | DISABLE }\n    | MODIFY PRIMARY KEY (column_name_list)\n    | RENAME [TO] table_name\n    | RENAME COLUMN old_col_name TO new_col_name\n    | RENAME { PARTITION | SUBPARITION } partition_name TO new_name\n    | SET TABLEGROUP tablegroup_name\n    | [SET] table_option_list\n    | TRUNCATE {PARTITION | SUBPARTITION} partition_name_list [UPDATE GLOBAL INDEXES]\n    | EXCHANGE PARTITION partition_name WITH TABLE non_partition_table_name INCLUDING INDEXES WITHOUT VALIDATION\n\n\nrename_table_action_list:\n    rename_table_action [, rename_table_action ...]\n\nrename_table_action:\n    table_name TO table_name\n\ncolumn_definition_list:\n    column_definition [, column_definition ...]\n\ncolumn_definition:\n    column_name data_type\n    [DEFAULT const_value] [AUTO_INCREMENT]\n    [NULL | NOT NULL] [[PRIMARY] KEY] [UNIQUE [KEY]] [COMMENT string_value] [SKIP_INDEX(skip_index_option_list)]\n\nskip_index_option_list:\n    skip_index_option [,skip_index_option ...]\n\nskip_index_option:\n    MIN_MAX\n    | SUM\n\ncolumn_desc_list:\n    column_desc [, column_desc ...]\n\ncolumn_desc:\n     column_name [(length)] [ASC | DESC]\n\nreferences_clause:\n     REFERENCES table_name [ (column_name, column_name ...) ] [ON DELETE {SET NULL | CASCADE}]\n\n\nindex_option:\n      [GLOBAL | LOCAL]\n    | block_size\n    | compression\n    | STORING(column_name_list)\n    | COMMENT string_value\n\ntable_option_list:\n    table_option [ table_option ...]\n\ntable_option:\n      table_group\n    | block_size\n    | compression\n    | AUTO_INCREMENT [=] INT_VALUE\n    | COMMENT string_value\n    | parallel_clause\n    | TABLE_MODE [=] 'table_mode_value'\n\nparallel_clause:\n    {NOPARALLEL | PARALLEL integer}\n\ntable_mode_value:\n    NORMAL\n    | QUEUING\n    | MODERATE\n    | SUPER\n    | EXTREME\n\npartition_option:\n      PARTITION BY HASH(column_name_list)\n      [subpartition_option] hash_partition_define\n    | PARTITION BY RANGE (column_name_list)\n      [subpartition_option] (range_partition_list)\n    | PARTITION BY LIST (column_name_list)\n      [subpartition_option] (list_partition_list)\n\n/*模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list) hash_subpartition_define\n    | SUBPARTITION BY RANGE (column_name_list) SUBPARTITION TEMPLATE\n      (range_subpartition_list)\n    | SUBPARTITION BY LIST (column_name_list) SUBPARTITION TEMPLATE\n      (list_subpartition_list)\n\n/*非模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list)\n    | SUBPARTITION BY RANGE (column_name_list)\n    | SUBPARTITION BY LIST (column_name_list)\n\nsubpartition_list:\n      (hash_subpartition_list)\n    | (range_subpartition_list)\n    | (list_subpartition_list)\n\nhash_partition_define:\n      PARTITIONS partition_count [TABLESPACE tablespace] [compression]\n    | (hash_partition_list)\n\nhash_partition_list:\n    hash_partition [, hash_partition, ...]\n\nhash_partition:\n    partition [partition_name] [subpartition_list/*仅非模板化二级分区可定义*/]\n\nhash_subpartition_define:\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION TEMPLATE (hash_subpartition_list)\n\nhash_subpartition_list:\n    hash_subpartition [, hash_subpartition, ...]\n\nhash_subpartition:\n    subpartition [subpartition_name]\n\nrange_partition_list:\n    range_partition [, range_partition ...]\n\nrange_partition:\n    PARTITION [partition_name]\n    VALUES LESS THAN {(expression_list) | (MAXVALUE)}\n    [subpartition_list/*仅非模板化二级分区可定义*/]\n    [ID = num] [physical_attribute_list] [compression]\n\nrange_subpartition_list:\n    range_subpartition [, range_subpartition ...]\n\nrange_subpartition:\n    SUBPARTITION subpartition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE} [physical_attribute_list]\n\nlist_partition_list:\n    list_partition [, list_partition] ...\n\nlist_partition:\n    PARTITION [partition_name]\n    VALUES (DEFAULT|expression_list)\n    [subpartition_list/*仅非模板化二级分区可定义*/]\n    [ID num] [physical_attribute_list] [compression]\n\nlist_subpartition_list:\n    list_subpartition [, list_subpartition] ...\n\nlist_subpartition:\n    SUBPARTITION [partition_name] VALUES (DEFAULT|expression_list) [physical_attribute_list]\n\nexpression_list:\n    expression [, expression ...]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n\npartition_name_list:\n    partition_name [, partition_name ...]\n\npartition_count | subpartition_count:\n    INT_VALUE\n"], "Description": ["该语句用来修改已存在的表的结构，包括修改表及表属性、新增列、修改列及属性、删除列等。"], "Examples": ["obclient> CREATE TABLE tbl1(col1 VARCHAR(3));\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl1 MODIFY col1 CHAR(10);\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl1;\n+-------+----------+------+-----+---------+-------+\n| FIELD | TYPE     | NULL | KEY | DEFAULT | EXTRA |\n+-------+----------+------+-----+---------+-------+\n| COL1  | CHAR(10) | YES  | NULL | NULL    | NULL  |\n+-------+----------+------+-----+---------+-------+\n1 row in set\n", "obclient> ALTER TABLE tbl1 RENAME COLUMN col1 TO col2;\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl1;\n+-------+-------------+------+-----+---------+-------+\n| FIELD | TYPE        | NULL | KEY | DEFAULT | EXTRA |\n+-------+-------------+------+-----+---------+-------+\n| COL2  | VARCHAR2(10) | YES  | NULL | NULL    | NULL  |\n+-------+-------------+------+-----+---------+-------+\n1 row in set\n", "obclient> CREATE TABLE tbl2 (col1 NUMBER(30) PRIMARY KEY,col2 VARCHAR(50));\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLE tbl2 ADD col3 NUMBER(30);\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl2;\n+-------+--------------+------+-----+---------+-------+\n| FIELD | TYPE         | NULL | KEY | DEFAULT | EXTRA |\n+-------+--------------+------+-----+---------+-------+\n| COL1  | NUMBER(30)   | NO   | PRI | NULL    | NULL  |\n| COL2  | VARCHAR2(50) | YES  | NULL | NULL    | NULL  |\n| COL3  | NUMBER(30)   | YES  | NULL | NULL    | NULL  |\n+-------+--------------+------+-----+---------+-------+\n3 rows in set\n", "obclient> ALTER TABLE tbl2 DROP COLUMN col3;\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl2;\n+-------+--------------+------+-----+---------+-------+\n| FIELD | TYPE         | NULL | KEY | DEFAULT | EXTRA |\n+-------+--------------+------+-----+---------+-------+\n| COL1  | NUMBER(30)   | NO   | PRI | NULL    | NULL  |\n| COL2  | VARCHAR2(50) | YES  | NULL | NULL    | NULL  |\n+-------+--------------+------+-----+---------+-------+\n2 rows in set\n", "obclient> CREATE TABLE tbl2 (col1 NUMBER(30) PRIMARY KEY,col2 VARCHAR(50), col3 INT);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl2 ADD CONSTRAINT constraint_TBL2 UNIQUE (col2, col3);\nQuery OK, 0 rows affected\n\nobclient [SYS]> DESC tbl2;\n+-------+--------------+------+-----+---------+-------+\n| FIELD | TYPE         | NULL | KEY | DEFAULT | EXTRA |\n+-------+--------------+------+-----+---------+-------+\n| COL1  | NUMBER(30)   | NO   | PRI | NULL    | NULL  |\n| COL2  | VARCHAR2(50) | YES  | MUL | NULL    | NULL  |\n| COL3  | NUMBER(38)   | YES  | NULL | NULL    | NULL  |\n+-------+--------------+------+-----+---------+-------+\n3 rows in set\n\nobclient> INSERT INTO tbl2 VALUES('1','2','2');\nQuery OK, 1 row affected\n\nobclient> INSERT INTO tbl2 VALUES('2','2','2');\nORA-00001: unique constraint '2-2' for key 'CONSTRAINT_TBL2' violated\n\nobclient> INSERT INTO tbl2 VALUES('2','3','2');\nQuery OK, 1 row affected\n", "obclient> CREATE TABLE ref_t1(c1 INT PRIMARY KEY,C2 INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE ref_t2(c1 INT PRIMARY KEY,C2 INT);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE ref_t2 ADD CONSTRAINT fk1 FOREIGN KEY (c2) REFERENCES ref_t1(c1) ON DELETE SET NULL;\nQuery OK, 0 row affected\n", "obclient> ALTER TABLE tbl3 MODIFY PARTITION p1 ADD SUBPARTITION p1_r4 VALUES LESS THAN(2022);\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLE tbl3 DROP SUBPARTITION p2_r3;\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLE tbl3 ADD PARTITION p4 VALUES LESS THAN (400)\n(\n  SUBPARTITION p4_r1 VALUES LESS THAN (2019),\n  SUBPARTITION p4_r2 VALUES LESS THAN (2020),\n  SUBPARTITION p4_r3 VALUES LESS THAN (2021)\n);\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl4(col1 INT, col2 INT, PRIMARY KEY(col1,col2))\n     PARTITION BY RANGE(col1)\n     SUBPARTITION BY RANGE(col2)\n     SUBPARTITION TEMPLATE\n     (\n     SUBPARTITION p0 VALUES LESS THAN (50),\n     SUBPARTITION p1 VALUES LESS THAN (100)\n     )\n     (\n     PARTITION p0 VALUES LESS THAN (100),\n     PARTITION p1 VALUES LESS THAN (200),\n     PARTITION p2 VALUES LESS THAN (300)\n     );\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl4 ADD PARTITION p3 VALUES LESS THAN (400);\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl5(col1 int primary key, col2 int) PARALLEL 5;\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl5 PARALLEL 3;\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE MMS_GROUPUSER (\n  \"ID\" VARCHAR2(254 BYTE) NOT NULL,\n  \"GROUPID\" VARCHAR2(254 BYTE),\n  \"USERID\" VARCHAR2(254 BYTE),\n  CONSTRAINT \"PK_MMS_GROUPUSER\" PRIMARY KEY (\"ID\"),\n  CONSTRAINT \"FK_MMS_GROUPUSER_02\" FOREIGN KEY (\"GROUPID\") REFERENCES MMS_GROUPUSER (\"ID\") ON DELETE CASCADE DISABLE\n);\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE CONSTRAINT_NAME LIKE 'FK_MMS_GROUPUSE%';\n+---------------------+-----------------+---------------+----------+\n| CONSTRAINT_NAME     | CONSTRAINT_TYPE | TABLE_NAME    | STATUS   |\n+---------------------+-----------------+---------------+----------+\n| FK_MMS_GROUPUSER_02 | R               | MMS_GROUPUSER | DISABLED |\n+---------------------+-----------------+---------------+----------+\n1 row in set\n\nobclient> ALTER TABLE MMS_GROUPUSER ENABLE CONSTRAINT FK_MMS_GROUPUSER_02;\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE CONSTRAINT_NAME LIKE 'FK_MMS_GROUPUSE%';\n+---------------------+-----------------+---------------+---------+\n| CONSTRAINT_NAME     | CONSTRAINT_TYPE | TABLE_NAME    | STATUS  |\n+---------------------+-----------------+---------------+---------+\n| FK_MMS_GROUPUSER_02 | R               | MMS_GROUPUSER | ENABLED |\n+---------------------+-----------------+---------------+---------+\n1 row in set\n", "obclient> CREATE TABLE tbl6 (log_id number NOT NULL,log_value varchar2(50),log_date date NOT NULL DEFAULT sysdate)\nPARTITION BY RANGE(log_date)\n(\n    PARTITION M202001 VALUES LESS THAN(TO_DATE('2020/02/01','YYYY/MM/DD'))\n    , PARTITION M202002 VALUES LESS THAN(TO_DATE('2020/03/01','YYYY/MM/DD'))\n    , PARTITION M202003 VALUES LESS THAN(TO_DATE('2020/04/01','YYYY/MM/DD'))\n    , PARTITION M202004 VALUES LESS THAN(TO_DATE('2020/05/01','YYYY/MM/DD'))\n    , PARTITION M202005 VALUES LESS THAN(TO_DATE('2020/06/01','YYYY/MM/DD'))\n    , PARTITION MMAX VALUES LESS THAN (MAXVALUE)\n);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl6 TRUNCATE PARTITION M202001, M202002 UPDATE GLOBAL INDEXES;\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl7 (col1 INT, col2 INT, col3 INT,CONSTRAINT tbl7_equal_check1 CHECK(col2 = col3 * 2) ENABLE VALIDATE);\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE TABLE_NAME LIKE 'TBL%';\n+-------------------+-----------------+------------+---------+\n| CONSTRAINT_NAME   | CONSTRAINT_TYPE | TABLE_NAME | STATUS  |\n+-------------------+-----------------+------------+---------+\n| TBL8_EQUAL_CHECK1 | C               | TBL8       | ENABLED |\n| TBL7_EQUAL_CHECK1 | C               | TBL7       | ENABLED |\n+-------------------+-----------------+------------+---------+\n2 rows in set\n\nobclient> ALTER TABLE tbl7 DROP CONSTRAINT tbl7_equal_check1;\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE TABLE_NAME LIKE 'TBL%';\n+-------------------+-----------------+------------+---------+\n| CONSTRAINT_NAME   | CONSTRAINT_TYPE | TABLE_NAME | STATUS  |\n+-------------------+-----------------+------------+---------+\n| TBL8_EQUAL_CHECK1 | C               | TBL8       | ENABLED |\n+-------------------+-----------------+------------+---------+\n1 row in set\n", "obclient> SHOW TABLEGROUPS;\n+-----------------+------------+---------------+\n| TABLEGROUP_NAME | TABLE_NAME | DATABASE_NAME |\n+-----------------+------------+---------------+\n| TBLGROUP1             | TBL8         | SYS           |\n| TBLGROUP2             | NULL       | NULL          |\n| oceanbase       | NULL       | NULL          |\n+-----------------+------------+---------------+\n3 rows in set\n\nobclient> ALTER TABLE tbl8 SET TABLEGROUP tblgroup2;\nQuery OK, 0 rows affected\n\nobclient> SHOW TABLEGROUPS;\n+-----------------+------------+---------------+\n| TABLEGROUP_NAME | TABLE_NAME | DATABASE_NAME |\n+-----------------+------------+---------------+\n| TBLGROUP1             | NULL       | NULL          |\n| TBLGROUP2             | TBL8         | SYS           |\n| oceanbase       | NULL       | NULL          |\n+-----------------+------------+---------------+\n3 rows in set\n", "obclient> CREATE TABLE primary_table (id NUMBER PRIMARY KEY, names VARCHAR(100) NOT NULL, foreign_col NUMBER);\nQuery OK, 0 rows affected\nobclient> CREATE TABLE reference_table (id NUMBER PRIMARY key, comments VARCHAR2(100) NOT NULL);\nQuery OK, 0 rows affected\nobclient> ALTER TABLE primary_table ADD CONSTRAINT cons_fk1 FOREIGN KEY(foreign_col) REFERENCES reference_table(id);\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl9 (col1 NUMBER, col2 INT,col3 VARCHAR2(100));\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl9 ADD CONSTRAINT tbl1_pk PRIMARY KEY (col1);\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLE tbl9 MODIFY PRIMARY KEY(col2);\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLE tbl9 DROP PRIMARY KEY;\nQuery OK, 0 rows affected\n", "/* 创建二级分区表 range_range_table 并基于 col1 创建本地索引 */\nCREATE TABLE range_range_table(col1 INT, col2 INT, col3 INT)\n    PARTITION BY RANGE(col1)\n    SUBPARTITION BY RANGE(col2)\n       (PARTITION p0 VALUES LESS THAN(100)\n           (SUBPARTITION sp0 VALUES LESS THAN(100),\n            SUBPARTITION sp1 VALUES LESS THAN(200)\n           ),\n        PARTITION p1 VALUES LESS THAN(200)\n           (SUBPARTITION sp2 VALUES LESS THAN(100),\n            SUBPARTITION sp3 VALUES LESS THAN(200),\n            SUBPARTITION sp4 VALUES LESS THAN(300)\n           )\n        );\n\nCREATE INDEX local_idx_for_range_range_tb ON range_range_table (col1) LOCAL;\n\n/* 重命名一级分区，但修改不会影响到局部索引的分区名 */\n\nobclient> SELECT partition_name FROM SYS.USER_TAB_PARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+\n| PARTITION_NAME |\n+----------------+\n| P0             |\n| P1             |\n+----------------+\n2 rows in set\n\nobclient> ALTER TABLE range_range_table RENAME PARTITION p0 TO p10;\nQuery OK, 0 rows affected\n\nobclient> SELECT partition_name FROM SYS.USER_TAB_PARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+\n| PARTITION_NAME |\n+----------------+\n| P10            |\n| P1             |\n+----------------+\n2 rows in set\n\nobclient> SELECT partition_name FROM SYS.USER_IND_PARTITIONS WHERE index_name = 'LOCAL_IDX_FOR_RANGE_RANGE_TB';\n+----------------+\n| PARTITION_NAME |\n+----------------+\n| P0             |\n| P1             |\n+----------------+\n2 rows in set\n\n/* 重命名二级分区，但修改不会影响到局部索引的分区名 */\nobclient> SELECT partition_name, subpartition_name FROM SYS.USER_TAB_SUBPARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+-------------------+\n| PARTITION_NAME | SUBPARTITION_NAME |\n+----------------+-------------------+\n| P10            | SP0               |\n| P10            | SP1               |\n| P1             | SP2               |\n| P1             | SP3               |\n| P1             | SP4               |\n+----------------+-------------------+\n5 rows in set\n\nobclient> ALTER TABLE range_range_table RENAME SUBPARTITION sp0 TO sp10;\nQuery OK, 0 rows affected\n\nobclient> SELECT partition_name, subpartition_name FROM SYS.USER_TAB_SUBPARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+-------------------+\n| PARTITION_NAME | SUBPARTITION_NAME |\n+----------------+-------------------+\n| P10            | SP10              |\n| P10            | SP1               |\n| P1             | SP2               |\n| P1             | SP3               |\n| P1             | SP4               |\n+----------------+-------------------+\n5 rows in set\n\nobclient> SELECT partition_name, subpartition_name FROM SYS.USER_IND_SUBPARTITIONS WHERE index_name = 'LOCAL_IDX_FOR_RANGE_RANGE_TB';\n+----------------+-------------------+\n| PARTITION_NAME | SUBPARTITION_NAME |\n+----------------+-------------------+\n| P0             | SP0               |\n| P0             | SP1               |\n| P1             | SP2               |\n| P1             | SP3               |\n| P1             | SP4               |\n+----------------+-------------------+\n5 rows in set\n", "CREATE TABLE tbl1 (col1 INT PRIMARY KEY, col2 VARCHAR(50));\n", "ALTER TABLE tbl1 ADD COLUMN GROUP(all columns, each column);\n", "ALTER TABLE tbl1 DROP COLUMN GROUP(all columns, each column);\n", "ALTER TABLE tbl1 ADD COLUMN GROUP(each column);\n", "ALTER TABLE tbl1 DROP COLUMN GROUP(each column);\n", "CREATE TABLE test_skidx(\n    col1 NUMBER SKIP_INDEX(MIN_MAX, SUM),\n    col2 FLOAT SKIP_INDEX(MIN_MAX),\n    col3 VARCHAR2(1024) SKIP_INDEX(MIN_MAX),\n    col4 CHAR(10)\n  );\n", "ALTER TABLE test_skidx MODIFY col2 FLOAT SKIP_INDEX(SUM);\n", "ALTER TABLE test_skidx MODIFY col4 CHAR(10) SKIP_INDEX(MIN_MAX);\n", "ALTER TABLE test_skidx MODIFY col1 NUMBER SKIP_INDEX();\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054315"], "Title": ["ALTER TABLEGROUP"], "Feature": ["ALTER TABLEGROUP tablegroup_name ADD [TABLE] table_name [, table_name...];\nALTER TABLEGROUP tablegroup_name tablegroup_option;\n\ntablegroup_option:\n    SHARDING = 'NONE' | 'PARTITION' | 'ADAPTIVE'\n"], "Description": ["该语句用于对一个表组增加多张表和修改表组的属性。", "\n\n\n参数\n描述\n\n\n\n\ntablegroup_name\n表组名称。对一个表组增加多张表时，表与表之间以逗号（‘,’）分隔。当添加多个表时，允许表名重复。如果待添加的表已经属于待加入的表组，OceanBase 数据库不会报错。\n\n\nSHARDING\n表组的属性。如果不指定 SHARDING 属性，则默认创建 ADAPTIVE 的表组。SHARDING 取值如下： \n      \nNONE：对加入表组的表没有限制。\nPARTITION：加入表组的表对应的一级分区，需要与表组中所有表的一级分区的分区方式一致，包括分区类型、分区个数和分区 Value。\nADAPTIVE：加入表组的表对应的一级分区和二级分区，需要与表组中所有表的一级分区和二级分区的分区方式一致，包括分区类型、分区个数和分区 Value。\n相同的分区方式包括： \n      \n分区类型相同（例如都是 Hash+Range 分区）。\n如果是 Hash 分区，要求引用的列数相同，并且分区个数相同。\n如果是 Range 分区，要求引用的列数相同，并且分区数相同，Range 分割点相同。\n对于二级分区，根据其分区类型，要求和上述一致。\n\n\n"], "Examples": ["obclient> CREATE TABLEGROUP tblgroup1 SHARDING = 'NONE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1(col1 NUMBER,col2 VARCHAR2(50))\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST (col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES ('01'),\n       SUBPARTITION mp1 VALUES ('02'),\n       SUBPARTITION mp2 VALUES ('03')\n       )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup1\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST(col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES('01'),\n       SUBPARTITION mp1 VALUES('02'),\n       SUBPARTITION mp2 VALUES('03')\n      )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLEGROUP tblgroup1 ADD tbl1,tbl2;\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLEGROUP tblgroup1 SHARDING = 'PARTITION';\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLEGROUP tblgroup1 SHARDING = 'ADAPTIVE';\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLEGROUP tblgroup2 SHARDING = 'NONE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1 (col INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup2\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST(col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES('01'),\n       SUBPARTITION mp1 VALUES('02'),\n       SUBPARTITION mp2 VALUES('03')\n      )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLEGROUP tblgroup2 ADD tbl1,tbl2;\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLEGROUP tblgroup2 SHARDING = 'PARTITION';\nORA-00600: internal error code, arguments: -4179, not all tables are non-partitioned or partitioned, modify tablegroup sharding attribute not allowed\n\nobclient> ALTER TABLEGROUP tblgroup2 SHARDING = 'ADAPTIVE';\nORA-00600: internal error code, arguments: -4179, not all tables are non-partitioned or partitioned, modify tablegroup sharding attribute not allowed\n", "obclient> CREATE TABLEGROUP tblgroup3 SHARDING = 'NONE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1(col1 NUMBER,col2 VARCHAR2(50))\n   PARTITION BY LIST(col1) SUBPARTITION BY LIST (col2)\n     SUBPARTITION TEMPLATE\n     (SUBPARTITION mp0 VALUES ('01'),\n      SUBPARTITION mp1 VALUES ('02')\n      )\n     (PARTITION p0 VALUES('01'),\n      PARTITION p1 VALUES('02')\n     );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2(col1 NUMBER,col2 VARCHAR2(50))\n   PARTITION BY LIST(col1) SUBPARTITION BY LIST(col2)\n     SUBPARTITION TEMPLATE\n     (SUBPARTITION mp0 VALUES('01'),\n      SUBPARTITION mp1 VALUES('02'),\n      SUBPARTITION mp2 VALUES('03')\n     )\n     (PARTITION p0 VALUES('01'),\n      PARTITION p1 VALUES('02')\n     );\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLEGROUP tblgroup3 ADD tbl1,tbl2;\nQuery OK, 0 rows affected\n", "obclient> ALTER TABLEGROUP tblgroup3 SHARDING = 'PARTITION';\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLEGROUP tblgroup3 SHARDING = 'ADAPTIVE';\nORA-00600: internal error code, arguments: -4179, subpartition num not matched, modify tablegroup sharding attribute not allowed\n", "obclient> CREATE TABLEGROUP tblgroup4 SHARDING = 'ADAPTIVE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1(col1 int,col2 int)\n    PARTITION BY RANGE(col1) SUBPARTITION BY RANGE(col2)\n      SUBPARTITION TEMPLATE\n        (SUBPARTITION mp0 VALUES LESS THAN(2021),\n         SUBPARTITION mp1 VALUES LESS THAN(2022),\n         SUBPARTITION mp2 VALUES LESS THAN(2023)\n        )\n        (PARTITION p0 VALUES LESS THAN(100),\n         PARTITION p1 VALUES LESS THAN(200)\n        );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2(col1 int,col2 int)\n    PARTITION BY RANGE(col1) SUBPARTITION BY RANGE(col2)\n      SUBPARTITION TEMPLATE\n       (SUBPARTITION mp0 VALUES LESS THAN(2021),\n        SUBPARTITION mp1 VALUES LESS THAN(2022),\n        SUBPARTITION mp2 VALUES LESS THAN(2023)\n       )\n      (PARTITION p0 VALUES LESS THAN(100),\n       PARTITION p1 VALUES LESS THAN(200)\n      );\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLEGROUP tblgroup4 ADD tbl1,tbl2;\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl1 ADD PARTITION p3 VALUES LESS THAN(400), PARTITION p4 VALUES LESS THAN(500);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl2 DROP SUBPARTITION p0smp0,p0smp1;\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl3(col1 int,col2 int)\n    PARTITION BY RANGE(col1) SUBPARTITION BY RANGE(col2)\n      SUBPARTITION TEMPLATE\n     (SUBPARTITION mp0 VALUES LESS THAN(2021),\n      SUBPARTITION mp1 VALUES LESS THAN(2022),\n      SUBPARTITION mp2 VALUES LESS THAN(2023)\n     )\n     (PARTITION p0 VALUES LESS THAN(100),\n      PARTITION p1 VALUES LESS THAN(200)\n      );\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLEGROUP tblgroup4 ADD tbl3;\nORA-00600: internal error code, arguments: -4179, partition num not equal, add table to tablegroup not allowed\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054337"], "Title": ["ALTER USER"], "Feature": ["ALTER USER user_name\n    { IDENTIFIED BY password\n    | PROFILE {\"profile_name\" | DEFAULT}\n    | REQUIRE {NONE | SSL | x509 | tls_option_list}\n    | DEFAULT ROLE\n            { role_name[,role_name...]\n            | ALL [EXCEPT role_name[,role_name...]]\n            | NONE\n            }\n    | GRANT CONNECT THROUGH proxy_user_name [with_clause]\n    };\n\ntls_option_list:\n    tls_option\n    | tls_option_list tls_option\n\ntls_option:\n    CIPHER str_value\n    | ISSUER str_value\n    | SUBJECT str_value\n\nwith_clause:\n    WITH ROLE {role_name[, role_name,...]}\n    | WITH NO ROLE \n    | WITH ROLE ALL EXCEPT {role_name[, role_name,...]}\n"], "Description": ["该语句主要用于执行以下操作：", "修改数据库用户的密码。", "修改数据库用户使用的 Profile。", "修改数据库用户连接的加密方式，其它修改用户密码方式，请参见 SET PASSWORD。", "修改数据库用户拥有角色的默认角色。", "\n\n\n参数\n描述\n\n\n\n\nuser_name\n指定用户名或者被代理的目标用户名。\n\n\nIDENTIFIED BY\n指定用户新密码。\n\n\nPROFILE\n指定用户使用的的 Profile。 \n      \nprofile_name：Profile 文件名。\nDEFAULT：表示忽略此参数的限制。\n\n\n\nREQUIRE\n指定用户使用的加密协议为 NONE、SSL、X509 和 tls_option_list 中的一种。\n\n\nDEFAULT ROLE\n指定用户登录时的默认角色。 \n      \nALL：把用户拥有的所有角色都设置为默认角色。EXCEPT 子句表示列出的角色除外，为可选项。\nNONE：不指定默认角色，即禁用用户的所有角色。 \n        \n注意\n以下情况不能指定 DEFAULT ROLE：\n\n未授予用户的角色。\n通过其他角色授予的角色。\n\n\n\n\n\n\nGRANT CONNECT THROUGH\n指定使用代理用户。更多有关使用代理用户的示例信息，请参见 使用代理用户。\n\n\nproxy_user_name\n代理用户名。授权后，该用户能代表目标用户连接数据库，并使用目标用户的角色权限执行数据库操作。\n\n\nwith_clause\n指定代理用户代理目标用户连接数据库时生效的角色权限。如果不指定该子句，则默认代理用户代理目标用户连接数据库时，目标用户的所有角色权限均生效。详细介绍可参见下文 with_clause。\n\n\n", "with_clause", "\n注意\n指定代理用户生效的角色权限时，对于带密码的角色权限，需要在连接数据库后手动通过 SET ROLE role_name IDENTIFIED BY role_password; 命令激活该角色。\n", "WITH ROLE {role_name[, role_name,...]}", "：指定代理用户代理目标用户连接数据库时，自动获取并激活指定的角色权限，即仅生效目标用户中指定的角色权限。", "WITH NO ROLE", "：指定代理用户代理目标用户连接数据库时，不会自动获取目标用户的任何角色权限，即目标用户的所有角色权限均不生效。", "WITH ROLE ALL EXCEPT {role_name[ ,role_name,...]}", "：指定代理用户代理目标用户连接数据库时，自动获取并激活目标用户中除指定角色之外的其他所有角色权限。"], "Examples": ["obclient> ALTER USER user1 IDENTIFIED BY ******;\nQuery OK, 0 rows affected\n", "obclient> ALTER USER user1 REQUIRE SSL;\nQuery OK, 0 rows affected\n", "obclient> ALTER USER user1 PROFILE \"profile1\";\nQuery OK, 0 rows affected\n", "obclient> CREATE ROLE role1;\nQuery OK, 0 rows affected\n\nobclient> CREATE ROLE role2 IDENTIFIED BY ******;\nQuery OK, 0 rows affected\n\nobclient> CREATE ROLE role3 IDENTIFIED BY ******;\nQuery OK, 0 rows affected\n\nobclient> GRANT role1,role2,role3 TO user1;\nQuery OK, 0 rows affected\n\nobclient> ALTER USER user1 DEFAULT ROLE role1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054336"], "Title": ["COMMENT"], "Feature": ["COMMENT ON COLUMN\n    [schema.]{table_name. | view_name.}column_name IS 'string';\nCOMMENT ON TABLE\n    [schema.]{table_name | view_name} IS 'string';\n"], "Description": ["该语句将有关表或表列、视图或视图列的注释添加到数据字典中。", "\n\n\n参数\n描述\n\n\n\n\nschema\n指定 Schema。如果省略 schema.，则 OceanBase 数据库默认表等要添加注释的对象在当前的 Schema 中。\n\n\ntable_name\n指定表名。\n\n\nview_name\n指定视图名。\n\n\ncolumn_name\n指定列名。\n\n\nstring\n指定注释的文本。如果将 string 设置为空字符串（''），则表示从数据库中删除注释。\n\n\n"], "Examples": ["obclient> COMMENT ON TABLE tbl1 IS 'Comment of the tbl1';\n", "obclient> COMMENT ON COLUMN tbl1.name IS 'Name of person in table tbl1';\n", "obclient> COMMENT ON COLUMN tbl1.name IS '';\n", "obclient> COMMENT ON TABLE view1 IS 'Comment of the view1';\n", "obclient> COMMENT ON COLUMN view1.name IS 'Name of person in view view1';\n", "obclient> COMMENT ON COLUMN view1.name IS '';\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054340"], "Title": ["CREATE CONTEXT"], "Feature": ["CREATE [ OR REPLACE ] CONTEXT namespace\nUSING [ schema. ] package_name\n[ INITIALIZED { EXTERNALLY | GLOBALLY }\n| ACCESSED GLOBALLY\n] ;\n"], "Description": ["CREATE CONTEXT 语句可以为上下文（一组应用程序定义的属性，用于验证和保护应用程序）创建命名空间，还可以将命名空间与外部创建的用来设置该上下文的包相关联。", "用户使用指定包中的 DBMS_SESSION.SET_CONTEXT 过程来设置或重置上下文的属性。", "\n注意\n要创建上下文命名空间，您必须具有 CREATE ANY CONTEXT 系统权限。\n"], "Examples": ["obclient> CREATE OR REPLACE CONTEXT dev_context USING SYS.DBMS_SESSION ACCESSED GLOBALLY;\nQuery OK, 0 rows affected\n", "obclient> CREATE VIEW dev_emp_view AS\n     SELECT * FROM emp\n     WHERE deptno = SYS_CONTEXT('dev_context', 'deptno');\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054365"], "Title": ["CREATE DATABASE LINK"], "Feature": ["CREATE DATABASE LINK dblink_name CONNECT TO user_name@tenant_name\n    IDENTIFIED BY password_str [OB|OCI] HOST 'ip:port[/oracle_sid]' [CLUSTER cluster_name] [MY_NAME local_user_name@local_tenant_name\n            IDENTIFIED BY local_password_str HOST 'local_ip:local_port'];\n\n"], "Description": ["该语句用于创建一个访问指定远端数据库的 dblink。该语句中需要指定 dblink 名称并且提供远端数据库的用户名、租户名、密码、IP 地址、端口号以及访问类型，反向 LINK 需要提供本地数据库的用户名、租户名、密码、IP 地址、端口号，不提供访问类型时默认创建访问远端 OceanBase 数据库的 dblink。", "如果远端数据库是 OceanBase 数据库，IP 地址和端口号可以是指定远端 OceanBase 集群中某个 OBServer 节点的 IP 地址和端口号，或者是 OceanBase 集群的 Proxy 的 IP 地址和端口号。当创建 dblink 的端口号是集群的Proxy 的端口号，且 Proxy 是由 ConfigUrl 部署的时候，需要指定 Cluster 名字。当需要反向 LINK 功能时需要额外提供本地 OceanBase 集群中某个 OBServer 的 IP 地址和端口号以及用户名、租户名、密码。", "如果远端数据库是 Oracle 数据库，需要显示指定访问类型为 OCI类型，并指定 oracle_sid，且租户名为oracle。", "\n\n\n字段\n描述\n\n\n\n\ndblink_name\n指定要访问的数据库链接的名称。\n\n\nuser_name\n指定远端数据库的用户名。\n\n\ntenant_name\n指定远端数据库的租户名。如果远端数据库是 Oracle，则租户名始终为oracle。\n\n\npassword\n指定远端数据库的用户名的登录密码。密码里有如有除数字、字母以外的特殊字符（~!@#%^&*_-+=|(){}[]:;,.?/ ）时，需要使用双引号把密码括起来避免报语法错误。\n\n\nOB | OCI\nOB 表示指定远端数据库类型为 OceanBase 数据库，OCI 代表指定访问远端数据库类型为 Oracle。两个参数都不提供时，OceanBase 数据库为默认远端数据库类型。\n\n\nip\n指定远端数据库的 IP 地址。如果远端数据库的类型是 OceanBase 数据库，IP 地址可以指定为集群的 Proxy 的 IP 地址，或者集群中某个 OBServer 的 IP 地址。如果指定为 OBServer 的 IP 地址，则要求本地数据库和指定 OBServer 之间的网络是可以互通的。\n\n\nport\n指定远端数据库的端口号。如果远端数据库类型是 OceanBase 数据库，可以指定为集群的 Proxy 的端口号，或者集群中某个 OBServer 的端口号。如果指定为 OBServer 的端口号，则要求本地数据库和指定 OBServer 之间的网络是可以互通的。如果远端数据库类型是 Oracle 数据库，IP 地址为 Oracle 实例的 IP 地址。\n\n\noracle_sid\n远端 Oracle 数据库的 sid。只有远端数据库类型是 Oracle 数据库时才需要指定oracle_sid。\n\n\ncluster_name\n远端 OceanBase 集群名称。只有 IP 和端口号是 Proxy 的，且 Proxy 是在由 ConfigUrl 部署时才需要指定集群名字。集群名字需要使用双引号括起来。\n\n\nlocal_cluster_name\n本地 OceanBase 集群名称。只有 IP 和端口号是 Proxy 的，且 Proxy 是在由 ConfigUrl 部署时才需要指定集群名字。集群名字需要使用双引号括起来。\n\n\nlocal_user\n本地数据库的用户名称。\n\n\nlocal_tenant\n本地数据库的租户名称。\n\n\nlocal_password\n本地数据库的用户名的登录密码，密码里如有除数字、字母以外的特殊字符（~!@#%^&*_-+=|(){}[]:;,.?/ ）时，需要使用双引号把密码括起来避免报语法错误。\n\n\nlocal_ip\n本地数据库集群中某个 OBServer 的 IP 地址。\n\n\nlocal_port\n本地数据库集群中某个 OBServer 的端口号。\n\n\n"], "Examples": ["obclient> CREATE DATABASE LINK ob_dblink_proxy CONNECT TO ob_testuser@oracle IDENTIFIED BY **1** OB HOST  '10.XXX.XXX.XXX:30084' CLUSTER “ob***”;\nQuery OK, 1 row affected\n", "obclient> CREATE DATABASE LINK ob_dblink_reverse_link CONNECT TO ob_testuser2@oracle IDENTIFIED BY **1** OB HOST '10.XXX.XXX.XXX:35305' MY_NAME local_ob_testuser@oracle identified by **2** host '10.XXX.XXX.XXX:35307';\nQuery OK, 1 row affected\n", "obclient> CREATE DATABASE LINK orcl_dblink CONNECT TO orcl_testuser@oracle IDENTIFIED BY **1** OCI HOST '10.XXX.XXX.XXX:1521/ORCL';\nQuery OK, 1 row affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054342"], "Title": ["ALTER INDEX"], "Feature": ["ALTER INDEX [ schema.]index_name \n    {  RENAME TO new_name \n    | parallel_option \n    | TABLESPACE tablespace_name\n    }; \n\nparallel_option:  \n      PARALLEL [COMP_EQ] integer \n    | NOPARALLEL   \n"], "Description": ["AlTER INDEX 语句用于更改现有索引名称、并行度或索引存储的表空间。", "\n\n\n参数\n描述\n\n\n\n\nschema.\n指定索引所在的 Schema。如果省略 schema.，则默认索引在您自己的 Schema 中。\n\n\nindex_name\n指定待更改的索引名称。\n\n\nnew_name\n指定索引的新名称。\n\n\nparallel_option\n更改索引上查询的并行度。 \n      \nNOPARALLEL：指定串行执行，并行度为 1，为默认配置。\nPARALLEL [COMP_EQ] integer：指定并行度，即并行操作中使用的并行线程数。PARALLEL 关键字指示启用索引的并行处理；COMP_EQ 是一个可选的关键字，用于指定并行度的限制条件；integer 为取值大于等于 1 的整数，表示并行度级别。\n\n\n\ntablespace_name\n指定希望索引存储的表空间。\n\n\n"], "Examples": ["obclient> ALTER INDEX index1 RENAME TO index2;\n", "obclient> ALTER INDEX index3 NOPARALLEL;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054335"], "Title": ["CREATE DIRECTORY"], "Feature": ["CREATE [ OR REPLACE ] DIRECTORY directory AS 'path_name';\n"], "Description": ["该语句用来创建路径对象。", "\n\n\n参数\n描述\n\n\n\n\nOR REPLACE\n指定 OR REPLACE 表示如果对应的路径对象已经存在，则用新的文件系统路径替代原有的路径定义。\n\n\ndirectory\n指定要创建的路径对象的名称，最大长度为 30 字节。\n\n\npath_name\n指定文件系统路径，定义了共享文件系统所在的绝对路径名。路径名区分大小写。 \n      \n注意\nOceanBase 数据库不会在文件系统上为用户创建路径，用户在指定 path_name 时需要保证路径是真实存在的。\n\n\n\n"], "Examples": ["obclient -S /home/admin/test421/oceanbase/run/sql.sock -usys@oracle001 -p******\n", "obclient [SYS]> SET GLOBAL secure_file_priv = \"/usr/sqldump\";\n", "obclient [SYS]> \\q\n", "obclient -hxxx.xxx.xxx.xxx -P2881 -utest_user001@oracle001 -p******\n", "obclient [TEST_USER001]> CREATE OR REPLACE DIRECTORY sql_file_dir AS '/usr/sqldump';\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054328"], "Title": ["CREATE EXTERNAL TABLE"], "Feature": ["CREATE EXTERNAL TABLE <table_name>\n    ( [ <column_name> <column_type> [AS <expr>] ]\n      [ , <column_name> <column_type> [AS <expr>] ]\n      [ , ... ] )\n    LOCATION = '<string>'\n    formatTypeOptions\n    [ PARTITION BY ( <column_name> [, <column_name> ... ] ) ]\n    [ PARTITION_TYPE = USER_SPECIFIED ]\n    [ PATTERN = '<regex_pattern>' ]\n    [AUTO_REFRESH = 'xx']\nformatTypeOptions:\n    FORMAT = (\n      TYPE = 'CSV'\n      LINE_DELIMITER = '<string>' | <expr>\n      FIELD_DELIMITER = '<string>' | <expr>\n      ESCAPE = '<character>' | <expr>\n      FIELD_OPTIONALLY_ENCLOSED_BY = '<character>' | <expr>\n      ENCODING = 'charset'\n      NULL_IF = ('<string>' | <expr>, '<string>' | <expr> ...)\n      SKIP_HEADER = <int>\n      SKIP_BLANK_LINES = { TRUE | FALSE }\n      TRIM_SPACE = { TRUE | FALSE }\n      EMPTY_FIELD_AS_NULL = { TRUE | FALSE }\n    )\n    | FORMAT = (TYPE = 'PARQUET')\n"], "Description": ["该语句用来在数据库中创建一张新的外表。", "外表是数据库管理系统中的一项关键功能，通常数据库中的表存放于数据库的存储空间中，而外表的数据存储于外部存储服务中。", "创建外表时需要定义数据的文件路径和文件格式，之后用户可以通过外表从外部存储服务中读取文件的数据。外表是只读的，可以在查询语句使用，但是不能执行 DML 操作。外表不支持定义约束和创建索引。", "\n\n\n参数\n描述\n\n\n\n\ntable_name\n要创建的外表的名称。\n\n\ncolumn_name\n外表的列名称。默认情况下，文件中的数据列和外表定义的列是自动按顺序对应起来的。\n\n\ncolumn_type\n定义外表的列类型，但是不能定义约束（例如，DEFAULT、NOT NULL、UNIQUE、CHECK、PRIMARY KEY、FOREIGN KEY 等）。\n\n\nAS \n用于手动指定列映射。当文件中的列顺序与外表的列所定义顺序不一致时，可以通过 metadata$filecol{N} 所表示的伪列来指定外表的列与文件中的第 N 列的对应关系。例如，c2 INT AS (metadata$filecol4) 表示外表的 c2 列对应文件中的第 4 列。需要注意的是，如果指定了手动列映射，那么自动映射关系将会失效，而且所有的列都需要手动定义映射关系。\n\n\nLOCATION\n指定外表文件存放的路径。通常外表的数据文件存放于单独一个目录中，文件夹中可以包含子目录，在创建表时，外表会自动收集该目录中的所有文件。 \n      \n本地 LOCATION 格式为 LOCATION = '[file://] local_file_path'，其中local_file_path 可以为相对路径，也可以为绝对路径。如果填写的是相对路径，则当前目录必须为 OceanBase 数据库的安装目录；secure_file_priv 用于配置 OBServer 节点有权限访问的文件路径。local_file_path 只能是 secure_file_priv 路径的子路径。\n远程 LOCATION 格式为 LOCATION = '{oss\\|cos\\|s3}://$ACCESS_ID:$ACCESS_KEY@$HOST/remote_file_path'，其中 $ACCESS_ID、$ACCESS_KEY 和 $HOST 是访问 OSS、COS 和 S3 时需要配置的访问信息，这些敏感的访问信息会以加密的方式存放在数据库的系统表中。\n\n\n\nFORMAT = ( TYPE = ‘CSV’… )\n指定外部文件的格式为 CSV 类型。LINE_DELIMITER：指定 CSV 文件的行分隔符。默认值为 LINE_DELIMITER='\\n'FIELD_DELIMITER：指定 CSV 文件的列分隔符。默认值为 FIELD_DELIMITER='\\t'。ESCAPE：指定 CSV 文件的转义符号，只能为 1 个字节。默认值为 ESCAPE ='\\'。FIELD_OPTIONALLY_ENCLOSED_BY：指定 CSV 文件中包裹字段值的符号。默认值为空。ENCODING：指定文件的字符集编码格式，当前 Oracle 模式支持的所有字符集请参见 字符集。如果不指定，默认值为 UTF8MB4。NULL_IF：指定被当作 NULL 处理的字符串。默认值为空。SKIP_HEADER：跳过文件头，并指定跳过的行数。SKIP_BLANK_LINES：指定是否跳过空白行。默认值为 FALSE，表示不跳过空白的行。TRIM_SPACE：指定是否删除文件中字段的头部和尾部空格。默认值为 FALSE，表示不删除文件中字段头尾的空格。EMPTY_FIELD_AS_NULL：指定是否将空字符串当作 NULL 处理。默认值为 FALSE，表示不将空字符串当做 NULL 处理。\n\n\nFORMAT = ( TYPE = ‘PARQUET’… )\n指定外部文件的格式为 PARQUET 类型。\n\n\nPATTERN\n指定一个正则模式串，用于过滤 LOCATION 目录下的文件。对于每个 LOCATION 目录下的文件路径，如果能够匹配该模式串，外表会访问这个文件，否则外表会跳过这个文件。如果不指定该参数，则默认可以访问 LOCATION 目录下的所有文件。外表会将LOCATION 指定路径下满足 PATTERN 的文件列表保存在数据库系统表中，外表扫描时会根据这个列表来访问外部的文件。\n\n\nPARTITION_TYPE = USER_SPECIFIED\n当您需要自己手动添加和删除分区，而不是让外表自动管理分区时，需要指定 PARTITION_TYPE = USER_SPECIFIED 字段。\n\n\nAUTO_REFRESH = ‘xx’\n用于外表自动刷新，目前有三个取值。OFF：默认值，表示关闭自动刷新。INTERVAL：让该外表可以通过 dbms_external_table 来管理自动刷新规则。IMMEDIATE：代表每次 SQL 访问外表时，需要去刷新一次该 SQL 相关的外表 META。\n\n\n"], "Examples": ["obclient> SET GLOBAL secure_file_priv = \"\"\nQuery OK, 0 rows affected\nobclinet> \\q\nBye\n", "1,'Dave','Smith','dsmith@outlook.com','friend',32\n2,'Xena','Johnson','xjonson@outlook.com','contact',45\n3,'Fred','Jackon','fjackson@outlook.com','co-worker',19\n4,'Alma','Tyler','atyler@outlook.com','friend',53\n", "obclient> CREATE EXTERNAL TABLE contacts (\n    id    INT,\n    firstname  VARCHAR(100),\n    lastname   VARCHAR(100),\n    email      VARCHAR(255),\n    category   CHAR(30),\n    age        NUMBER )\n   LOCATION = '/home/admin/test/'\n   FORMAT = (\n     TYPE = 'CSV'\n     FIELD_DELIMITER = ','\n     FIELD_OPTIONALLY_ENCLOSED_BY =''''\n    )PATTERN ='extdata.csv';\n", "obclient> SELECT * FROM contacts;\n+------+-----------+----------+----------------------+--------------------------------+------+\n| ID   | FIRSTNAME | LASTNAME | EMAIL                | CATEGORY                       | AGE  |\n+------+-----------+----------+----------------------+--------------------------------+------+\n|    1 | Dave      | Smith    | dsmith@outlook.com   | friend                         |   32 |\n|    2 | Xena      | Johnson  | xjonson@outlook.com  | contact                        |   45 |\n|    3 | Fred      | Jackon   | fjackson@outlook.com | co-worker                      |   19 |\n|    4 | Alma      | Tyler    | atyler@outlook.com   | friend                         |   53 |\n+------+-----------+----------+----------------------+--------------------------------+------+\n4 rows in set  \n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054326"], "Title": ["CREATE INDEX"], "Feature": ["CREATE [hint_options]  [UNIQUE] INDEX index_name\n    [USING BTREE] ON table_name (sort_column_key [, sort_column_key...])\n    [INDEXTYPE IS MDSYS.SPATIAL_INDEX] [index_option...] [partition_option] [index_column_group_option]\n\nsort_column_key:  \n    index_expr [ASC] opt_null_pos [ID id]\n\nopt_null_pos:  \n      empty\n    | NULLS LAST\n    | NULLS FIRST\n\nindex_option:  \n      GLOBAL\n    | LOCAL\n    | BLOCK_SIZE [=] integer\n    | COMMENT STRING_VALUE\n    | STORING (column_name_list)\n    | WITH ROWID\n    | WITH PARSER STRING_VALUE\n    | index_using_algorithm\n    | visibility_option\n    | DATA_TABLE_ID [=] data_table_id\n    | INDEX_TABLE_ID [=] index_table_id\n    | MAX_USED_PART_ID [=] used_part_id\n    | physical_attributes_option\n    | parallel_option\n\nparallel_option:  \n      PARALLEL [=] integer\n    | NOPARALLEL\n\nindex_column_group_option：\n    WITH COLUMN GROUP([all columns, ]each column)\n"], "Description": ["该语句用来创建索引。索引是创建在表上的，对数据库表中一列或多列的值进行排序的一种结构。其作用主要在于提高查询的速度，降低数据库系统的性能开销。", "OceanBase 数据库当前版本支持的索引类型包含唯一索引和非唯一索引，创建索引时可以通过 STORING(column_name,...) 指定索引表上的冗余列。索引表的冗余列除了包含用户指定添加的列外，还会自动添加上主键表的主键列（如果无主键表则包含 Hidden PK），存储额外的列在索引中可以为数据库优化器提供更多的选择。", "\n说明\n在 OceanBase 数据库 Oracle 模式下，如果删除表中的任一索引列，则所创建的索引失效。\n", "\n\n\n参数项\n描述\n\n\n\n\nhint_options\n指定 Hint 选项，为可选项。目前仅支持使用 parallel，如 /*+ parallel(10) */。\n\n\n[UNIQUE]\n可选项，用于指定创建唯一索引。\n\n\nindex_name\n指定待创建的索引名称。\n\n\nUSING BTREE\n可选项，表示创建索引时使用 B-tree 索引结构。 \n      \n说明\n目前仅支持指定为 USING BTREE。\n\n\n\ntable_name\n指定要在其上创建索引的表，可以直接指定表的名字，也可使用 schema_name.table_name 格式指定表名和表所属的数据库名。\n\n\nsort_column_key\n指定一个排序列的键，创建索引时可以指定多个排序列，多个排序列使用英文逗号(,)分开，详细介绍可参见下文 sort_column_key。\n\n\nINDEXTYPE IS MDSYS.SPATIAL_INDEX\n指定创建空间索引。 \n      \n注意\n创建空间索引的列必须在建表时指定 SRID 信息，更多有关创建空间索引的信息，参见 创建空间索引。\n\n\n\nindex_option\n指定索引选项，创建索引时可以指定多个索引选项，多个索引选项使用英文空格分开，详细介绍可参见下文 index_option。\n\n\npartition_option\n指定创建索引分区的选项，支持指定哈希分区、范围分区、列表分区以及外部表分区。\n\n\nindex_column_group_option\n指定索引选项。详细介绍可参见下文 index_column_group_option。\n\n\n", "sort_column_key", "index_expr：指定排序所依据的列或表达式，但是不允许是布尔表达式，例如 c1=c1。OceanBase 数据库当前版本禁止创建生成列上的函数索引。函数索引所支持的表达式参见 函数索引支持的系统函数列表。", "ASC：可选项，表示按升序排序，目前暂不支持降序（DESC）排列。", "opt_null_pos：指定空值在排序中的位置，有如下三种取值。", "\nempty：表示未指定空值位置，在默认情况下将遵循数据库管理系统的默认行为。\nNULLS LAST：指定空值在排序结果中出现在非空值之后。\nNULLS FIRST：指定空值在排序结果中出现在非空值之前。\n", "empty：表示未指定空值位置，在默认情况下将遵循数据库管理系统的默认行为。", "NULLS LAST：指定空值在排序结果中出现在非空值之后。", "NULLS FIRST：指定空值在排序结果中出现在非空值之前。", "ID id：可选项，表示排序键的 ID 号。", "例如，在名为 t3 的表上创建一个名为 index3 的索引，指定该索引在 c1 列上按升序进行排序，并指定空值在排序结果中出现在非空值之后。", "CREATE INDEX index3 ON t3 (c1 ASC NULLS LAST);\n", "index_option", "GLOBAL：表示创建全局索引。", "LOCAL：表示创建局部索引。", "BLOCK_SIZE [=] integer：指定索引块的大小，即每个索引块中的字节数。", "COMMENT STRING_VALUE：为索引添加注释。", "STORING (column_name_list)：指定要存储在索引中的列。", "WITH ROWID：创建包含行标识符的索引。", "WITH PARSER STRING_VALUE：指定索引所需的解析器。", "index_using_algorithm：指定索引所使用的算法。", "visibility_option：指定索引的可见性。", "DATA_TABLE_ID [=] data_table_id：指定索引所属的数据表 ID。", "INDEX_TABLE_ID [=] index_table_id：指定索引表的 ID。", "MAX_USED_PART_ID [=] used_part_id：指定索引的最大已使用分区 ID。", "physical_attributes_option：定义索引的物理属性选项。", "parallel_option：指定索引的并行情况。", "\nPARALLEL [=] integer：指定并行执行的级别，integer 是一个整数，表示执行的并行度。\nNOPARALLEL：指定禁用并行执行。\n", "PARALLEL [=] integer：指定并行执行的级别，integer 是一个整数，表示执行的并行度。", "NOPARALLEL：指定禁用并行执行。", "index_column_group_option", "WITH COLUMN GROUP(all columns, each column)", "：指定创建行存列存冗余的索引。", "WITH COLUMN GROUP(all columns)", "：指定创建行存索引。", "WITH COLUMN GROUP(each column)", "：指定创建列存索引。"], "Examples": ["CREATE TABLE test_tbl1 (col1 NUMBER, col2 VARCHAR2(50));\n", "CREATE INDEX idx1_test_tbl1 ON test_tbl1 (col1) WITH COLUMN GROUP(each column);\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054358"], "Title": ["CREATE KEYSTORE"], "Feature": ["ADMINISTER KEY MANAGEMENT CREATE KEYSTORE [keystore_name] IDENTIFIED BY [password] ;\n"], "Description": ["该语句用来创建 Keystore 对象，此对象用于存储密钥。在透明加密场景中，需要创建 Keystore 对象，每个租户最多只能创建一个 Keystore 对象。", "\n\n\n参数\n描述\n\n\n\n\nkeystore_name\n指定 Keystore 名称。\n\n\npassword\n指定访问控制 Keystore 的密码。\n\n\n"], "Examples": ["obclient> ADMINISTER KEY MANAGEMENT CREATE KEYSTORE keystore1 IDENTIFIED BY **1***;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054325"], "Title": ["CREATE MATERIALIZED VIEW LOG"], "Feature": ["CREATE MATERIALIZED VIEW LOG ON [schema.] table [parallel_clause] [with_clause] [mv_log_purge_clause];\n\nparallel_clause:\n    NOPARALLEL \n    | PARALLEL integer\n\nwith_clause:\n    WITH [ {PRIMARY KEY | ROWID | SEQUENCE} \n            [ { , PRIMARY KEY | , ROWID | , SEQUENCE }]... ] \n        (column_name [, column_name]...) \n        [new_values_clause]\n\nnew_values_clause:\n    {INCLUDING | EXCLUDING} NEW VALUES\n\nmv_log_purge_clause:\n    PURGE {IMMEDIATE [ SYNCHRONOUS ]\n        | START WITH datetime_expr [NEXT datetime_expr]\n        | [START WITH datetime_expr] NEXT datetime_expr\n        }\n"], "Description": ["该语句用来创建物化视图日志。", "物化视图日志（Materialized View Log，mlog）用于记录用户表（基表）的增量更新数据，以支持物化视图的快速刷新功能。mlog 是一个记录表，追踪基表的变化，并将这些变化应用于相应的物化视图，实现快速刷新。", "\n说明\nOceanBase 数据库 mlog 暂时不支持指定 Partition，mlog 的 Partition 和基表的 Partition 是绑定关系。\n", "\n\n\n参数\n描述\n\n\n\n\nschema.\n可选项，指定物化视图日志基表所在的 Schema。如果省略 schema.，则默认基表在您自己的 Schema 中。\n\n\ntable\n指定物化视图日志对应的基表名称。\n\n\nparallel_clause\n可选项，指定创建物化视图表的 dop，即用于指定并行处理物化视图日志的级别。详细介绍可参见下文 parallel_clause。\n\n\nwith_clause\n可选项，指定物化视图日志中包含的辅助列。用于指示是否记录基表发生变化时的主键（PRIMARY KEY）和行标识符（ROWID），并且还可以使用该子句添加序列（SEQUENCE）来为物化视图日志提供额外的排序信息。详细介绍可参见下文 with_clause。\n\n\ncolumn_name\n可选项，指定要在所有已更改行的物化视图日志中记录其值的列名称。\n\n\nnew_values_clause\n可选项，是否在物化视图日志中同时记录更新操作中的旧值和新值。详细介绍可参见下文 new_values_clause。\n\n\nmv_log_purge_clause\n可选项，指定物化视图日志中数据的清除时间。详细介绍可参见下文 mv_log_purge_clause。\n\n\n", "parallel_clause", "NOPARALLEL：默认配置，并行度为 1。", "PARALLEL integer：指定并行度，integer 取值大于等于 1。", "with_clause", "PRIMARY KEY：表示物化视图日志记录的是基表的主键列。对有主键表才生效，如果不指定，系统会自动为物化视图日志添加这个属性，即物化视图日志默认会包含主键列。", "ROWID：表示物化视图日志记录的是基表的行标识符（ROWID）。如果不指定，系统会自动为物化视图日志添加这个属性，即物化视图日志默认会包含 M_ROW$$ 列。", "SEQUENCE：表示物化视图日志记录的是事务内的多行更新序号（seq_no）。系统会自动为物化视图日志添加这个属性，即物化视图日志会默认包含 SEQUENCE$$ 列。", "new_values_clause", "INCLUDING：默认设置，表示可以在物化视图日志中保存新旧值。如果希望物化视图支持快速刷新，则必须指定 INCLUDING NEW VALUES。", "EXCLUDING：表示禁用在物化视图日志中记录新值。请不要使用 EXCLUDING NEW VALUES，否则将会报错。", "mv_log_purge_clause", "\n注意\n只有在物化视图成功刷新后，物化视图日志中的相应数据才会被清除。\n", "IMMEDIATE：表示在每次刷新完物化视图后就立即清除相应的物化视图日志。默认值是 SYNCHRONOUS。", "\nSYNCHRONOUS：可选项，表示同步地执行清除。\n", "SYNCHRONOUS", "：可选项，表示同步地执行清除。", "START WITH datetime_expr [NEXT datetime_expr]：", "\nSTART WITH datetime_expr：表示物化视图日志的首次清除时间。\n[NEXT datetime_expr]：可选项，表示下一次清除物化视图日志的时间。用于设置下一次清除物化视图日志的时间。\n", "START WITH datetime_expr", "：表示物化视图日志的首次清除时间。", "[NEXT datetime_expr]", "：可选项，表示下一次清除物化视图日志的时间。用于设置下一次清除物化视图日志的时间。", "[START WITH datetime_expr] NEXT datetime_expr：如果未指定 START WITH datetime_expr 参数，仅指定 NEXT datetime_expr 参数，那么物化视图日志的第一次清除时间将设定为 NEXT datetime_expr 参数的值。", "\n注意\n请确保 START WITH datetime_expr 和 NEXT datetime_expr 这两个时间表达式设定在未来的时间点，否则会引发错误。\n", "建议使用 current_date 表示当前时区时间，时间表达式示例如下：", "从当前时间（current_date）开始，每隔 10 秒清理一次过期的物化视图日志记录。", "START WITH current_date NEXT current_date + INTERVAL '10' SECOND\n", "从当前时间（current_date）开始，每隔 10 小时清理一次过期的物化视图日志记录。", "START WITH current_date NEXT current_date + INTERVAL '10' HOUR\n", "表示从当前时间（current_date）开始，每隔 1 天清理一次过期的物化视图日志记录。", "START WITH current_date NEXT current_date + 1\n"], "Examples": ["CREATE TABLE test_tbl1 (id NUMBER PRIMARY KEY, name VARCHAR2(20), age NUMBER);\n", "CREATE MATERIALIZED VIEW LOG ON test_tbl1 \n  PARALLEL 5 \n  WITH SEQUENCE(name ,age) INCLUDING NEW VALUES\n  PURGE START WITH current_date NEXT current_date + 1;\n", "DESC mlog$_test_tbl1;\n", "+------------+--------------+------+------+---------+-------+\n| FIELD      | TYPE         | NULL | KEY  | DEFAULT | EXTRA |\n+------------+--------------+------+------+---------+-------+\n| ID         | NUMBER       | NO   | PRI  | NULL    | NULL  |\n| NAME       | VARCHAR2(20) | YES  | NULL | NULL    | NULL  |\n| AGE        | NUMBER       | YES  | NULL | NULL    | NULL  |\n| SEQUENCE$$ | BIGINT       | NO   | PRI  | NULL    | NULL  |\n| DMLTYPE$$  | VARCHAR2(1 ) | YES  | NULL | NULL    | NULL  |\n| OLD_NEW$$  | VARCHAR2(1 ) | YES  | NULL | NULL    | NULL  |\n+------------+--------------+------+------+---------+-------+\n6 rows in set\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054359"], "Title": ["CREATE MATERIALIZED VIEW"], "Feature": ["CREATE MATERIALIZED VIEW view_name [([column_list] [PRIMARY KEY(column_list)])] [table_option_list] [partition_option] [refresh_clause [query_rewrite_clause] [on_query_computation_clause]] AS view_select_stmt;\n\ncolumn_list:\n    column_name [, column_name ...]\n\nrefresh_clause:\n    REFRESH [COMPLETE | FAST | FORCE] [mv_refresh_on_clause]\n    | NEVER REFRESH\n\nmv_refresh_on_clause:\n    [ON DEMAND] [[START WITH expr] [NEXT expr]]\n\nquery_rewrite_clause:\n    DISABLE QUERY REWRITE\n    | ENABLE QUERY REWRITE\n\non_query_computation_clause:\n    DISABLE ON QUERY COMPUTATION\n    | ENABLE ON QUERY COMPUTATION\n"], "Description": ["该语句用来创建物化视图。", "物化视图是一种特殊类型的数据库对象，它存储查询结果的副本，并定期刷新（也可以手动刷新）以保持数据的最新状态。物化视图可以包含聚合，连接和子查询等操作，并且可以被索引和分区，以进一步提高性能。", "\n说明\n在创建物化视图的语句中，不能直接创建索引。要为物化视图创建索引，需要单独使用 CREATE INDEX 语句。\n", "\n\n\n参数\n描述\n\n\n\n\nview_name\n指定待创建的物化视图的名称。\n\n\ncolumn_list\n可选项，指定物化视图的列列表。如果想要为视图列指定明确的名称，可以使用 column_list 子句，并在其中使用逗号分隔的列名。 \n      \n说明\n\n\n视图必须具有唯一的列名，不得有重复，就像基表一样。缺省情况下，视图的列名将使用 SELECT 语句中检索的列名。 \n         \n在 column_list 中指定的列名数量必须与 SELECT 语句中检索的列数相同。\n\n\n\n\n\ncolumn_name\n指定物化视图的列名称。缺省情况下，由 SELECT 语句检索的列名将用作视图列名。\n\n\nPRIMARY KEY\n用于指定物化视图的主键。 \n      \n注意\n\n\n如果未指定物化视图的列名称，那么在物化视图的主键中所使用的列名应与 SELECT 语句所检索的列名相同。\n当为物化视图指定列名称时，列名称的列表末尾与 PRIMARY KEY 定义之间应以英文逗号进行分隔。\n\n\n\n\n\ntable_option_list\n可选项，指定物化视图的表选项。与普通表一样，物化视图可以单独设置 Table Option，更多参数信息，请参见 CREATE TABLE。\n\n\npartition_option\n可选项，指定物化视图的分区选项。与普通表一样，物化视图可以单独设置分区，更多参数信息，请参见 CREATE TABLE。\n\n\nrefresh_clause\n可选项，指定物化视图的刷新方式。详细介绍可参见下文 refresh_clause。\n\n\nmv_refresh_on_clause\n可选项，指定物化视图的模式，即刷新时机。详细介绍可参见下文 mv_refresh_on_clause。\n\n\nquery_rewrite_clause\n可选项，指定当前物化视图是否开启自动改写。详细介绍可参见下文 query_rewrite_clause。\n\n\non_query_computation_clause\n可选项，指定当前物化视图是否是实时物化视图。详细介绍可参见下文 on_query_computation_clause。\n\n\nview_select_stmt\n用于定义物化视图数据的查询（SELECT）语句。该语句用于从基表（普通表）中检索数据，并将结果存储到物化视图中。view_select_stmt 的语法与常规 SELECT 语句相同，语法信息请参见 SIMPLE SELECT。\n\n\n", "refresh_clause", "REFRESH [FAST | COMPLETE | FORCE] [mv_refresh_on_clause]：表示刷新物化视图的方式。", "\n[COMPLETE | FAST | FORCE]：指定物化视图的刷新方式。可选项，如果不指定任何刷新方式默认是 FORCE。\n\nCOMPLETE：表示进行全量刷新，即重新计算整个物化视图的数据，确保视图中的数据与源表完全一致。\nFAST：表示进行增量刷新，即只刷新与源表变化相关的数据，避免对整个视图进行完全计算。\n\n注意\n当使用 REFRESH FAST 子句刷新物化视图时，需要在创建物化视图之前提前创建基表的物化视图日志。有关创建物化视图日志的信息，请参见 创建物化视图日志。\n\nFORCE：默认值，表示进行混合刷新，首先尝试增量刷新，如果增量刷新失败，则执行全量刷新。\n\n", "[COMPLETE | FAST | FORCE]：指定物化视图的刷新方式。可选项，如果不指定任何刷新方式默认是 FORCE。", "\nCOMPLETE：表示进行全量刷新，即重新计算整个物化视图的数据，确保视图中的数据与源表完全一致。\nFAST：表示进行增量刷新，即只刷新与源表变化相关的数据，避免对整个视图进行完全计算。\n\n注意\n当使用 REFRESH FAST 子句刷新物化视图时，需要在创建物化视图之前提前创建基表的物化视图日志。有关创建物化视图日志的信息，请参见 创建物化视图日志。\n\nFORCE：默认值，表示进行混合刷新，首先尝试增量刷新，如果增量刷新失败，则执行全量刷新。\n", "COMPLETE：表示进行全量刷新，即重新计算整个物化视图的数据，确保视图中的数据与源表完全一致。", "FAST：表示进行增量刷新，即只刷新与源表变化相关的数据，避免对整个视图进行完全计算。", "\n注意\n当使用 REFRESH FAST 子句刷新物化视图时，需要在创建物化视图之前提前创建基表的物化视图日志。有关创建物化视图日志的信息，请参见 创建物化视图日志。\n", "FORCE：默认值，表示进行混合刷新，首先尝试增量刷新，如果增量刷新失败，则执行全量刷新。", "NEVER REFRESH：指定物化视图不需要刷新。即表示物化视图只在创建时进行刷新，并在创建后不允许再次刷新。", "mv_refresh_on_clause", "\n说明\n除了使用 mv_refresh_on_clause 子句来定义刷新计划，您还可以通过调用 dbms_mviews.refresh 存储过程来手动刷新物化视图。\n", "ON DEMAND：可选项，表示按需刷新物化视图。", "[[START WITH expr] [NEXT expr]]：可选项，表示定义刷新间隔。", "\n[START WITH expr]：可选项，表示刷新计划开始的时间表达式。\n[NEXT expr]：可选项，表示下一次刷新的时间表达式。\n\n注意\n如果使用了 NEXT 子句，刷新计划的时间表达式必须设定在未来的时间点，否则会引发错误。\n\n", "[START WITH expr]：可选项，表示刷新计划开始的时间表达式。", "[NEXT expr]：可选项，表示下一次刷新的时间表达式。", "\n注意\n如果使用了 NEXT 子句，刷新计划的时间表达式必须设定在未来的时间点，否则会引发错误。\n", "建议使用 current_date 表示当前时区时间，时间表达式示例如下：", "从当前时间（current_date）开始，每隔 10 秒刷新一次物化视图。", "START WITH current_date NEXT current_date + INTERVAL '10' SECOND\n", "从当前时间（current_date）开始，每隔 10 小时刷新一次物化视图。", "START WITH current_date NEXT current_date + INTERVAL '10' HOUR\n", "表示从当前时间（current_date）开始，每隔 1 天刷新一次物化视图。", "START WITH current_date NEXT current_date + 1\n", "query_rewrite_clause", "\n注意\n\n\n本功能需要物化视图仅包含 SELECT JOIN 与 WHERE 子句，即 SPJ 查询。对于不满足条件的物化视图，不会报错，但不会被用于改写。\nOceanBase 数据库 Oracle 模式下，创建支持改写的物化视图时必须指定刷新方式（refresh_clause）。\n\n\n", "DISABLE QUERY REWRITE", "：默认值，指定当前物化视图不开启自动改写。", "ENABLE QUERY REWRITE", "：指定当前物化视图开启自动改写。", "更多物化视图改写的信息，参见 物化视图查询改写。", "on_query_computation_clause", "\n注意\nOceanBase 数据库 Oracle 模式下，创建实时物化视图必须指定刷新方式（refresh_clause）。\n", "DISABLE ON QUERY COMPUTATION", "：默认值，指定创建普通物化视图。", "ENABLE ON QUERY COMPUTATION", "：指定创建实时物化视图。", "更多实时物化视图的信息，参见 创建物化视图 中 创建实时物化视图 章节。"], "Examples": ["CREATE TABLE test_tbl1 (col1 NUMBER PRIMARY KEY, col2 VARCHAR2(20), col3 NUMBER, col4 NUMBER);\n", "CREATE MATERIALIZED VIEW mv_test_tbl1\n  PARTITION BY HASH(col1) PARTITIONS 8\n  REFRESH COMPLETE START WITH current_date NEXT current_date + 1\n  AS SELECT col1, col2, col3\n    FROM test_tbl1\n    WHERE col3 >= 30;\n", "CREATE MATERIALIZED VIEW mv_test_tbl1(c1, c2, c3, PRIMARY KEY(c1))\n      AS SELECT col1, col2, col3\n        FROM test_tbl1;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054318"], "Title": ["CREATE OUTLINE"], "Feature": ["/* 使用 SQL_TEXT 创建 Outline */\nCREATE [OR REPLACE] OUTLINE outline_name ON stmt [ TO target_stmt ]\n\n/* 使用 SQL_ID 创建 Outline */\nCREATE OUTLINE outline_name ON sql_id USING HINT  hint;\n"], "Description": ["该语句用来创建 Outline。可以通过两种方式创建 Outline，一种是通过 SQL_TEXT（用户执行的带参数的原始语句），另一种是通过 SQL_ID 创建。", "\n注意\n创建 Outline 需要进入对应的用户下执行。\n", "\n\n\n参数\n描述\n\n\n\n\noutline_name\n指定要创建的 Outline 名称。\n\n\nOR REPLACE\n指定 OR REPLACE 后，如果要创建的 Outline 已存在，则会替换原有的 Outline。\n\n\nstmt\n一般为一个带有 hint 和原始参数的 DML 语句。\n\n\nTO target_stmt\n如果不指定 TO target_stmt，则表示如果数据库接受的 SQL 参数化后与 stmt 去掉 hint 参数化文本相同，则将该 SQL 绑定 stmt 中 hint 生成执行计划；如果期望对含有 hint 的语句进行固定计划，则需要 TO target_stmt 来指明原始的 SQL。 注意 在使用 target_stmt 时，严格要求 stmt 与 target_stmt 在去掉 hint 后完全匹配。\n\n\nsql_id\n如果 sql_id 对应的 SQL 语句已经有 hint，则创建Outline 指定的 hint 会覆盖原始语句中所有 hint。\n\n\nhint\n格式为 /*+ xxx */。有关 Hint 语法的详细信息，请参见 《OceanBase 数据库 SQL 调优指南》中 Optimizer Hint 章节。\n\n\n"], "Examples": ["obclient> CREATE OUTLINE outline1\nON SELECT/*+ index(tbl1 idx_col2)*/ * FROM tbl1 WHERE col2 = 1;\n", "obclient> CREATE OUTLINE outline2\nON 'ED570339F2C856BA96008A29EDF04C74'\nUSING HINT /*+ index(tbl1 idx_col2)*/ ;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054317"], "Title": ["CREATE PROFILE"], "Feature": ["CREATE PROFILE \"profile_name\" LIMIT\n  { FAILED_LOGIN_ATTEMPTS\n    | PASSWORD_LOCK_TIME\n    | PASSWORD_LIFE_TIME\n    | PASSWORD_VERIFY_FUNCTION\n    | PASSWORD_GRACE_TIME\n    }\n    { integer | UNLIMITED | DEFAULT };\n"], "Description": ["该语句用于创建配置文件。配置文件是对数据库资源的一组限制，如果将配置文件分配给用户，则该用户不能超过这些使用限制。", "\n\n\n参数\n描述\n\n\n\n\nprofile_name\n指定要创建的配置文件的名称。\n\n\nFAILED_LOGIN_ATTEMPTS\n指定连续登录用户账户失败的次数。\n\n\nPASSWORD_LOCK_TIME\n当账户在限定的次数内连续尝试登录失败后，指定账户被锁定的天数。\n\n\nPASSWORD_LIFE_TIME\n指定同一密码可用于身份验证的有效天数。\n\n\nPASSWORD_VERIFY_FUNCTION\n允许将 PL 密码复杂性验证脚本作为参数传递给 CREATE PROFILE 语句。对于函数，需要指定密码复杂性验证例程的名称。该函数必须存在于 SYS Schema 中，并且用户必须对该函数具有 EXECUTE 权限。如果指定该参数为 NULL，表示不执行密码验证。如果您为密码参数指定 expr，则表达式可以是除标量子查询表达式之外的任何形式。\n\n\nPASSWORD_GRACE_TIME\n指定解除警告并开始允许账户登录的宽限期天数。\n\n\ninteger\n表示为该参数设置的限制类型格式为整数。\n\n\nUNLIMITED\n表示没有为该参数设置限制。\n\n\nDEFAULT\n表示使用该参数的默认限制。\n\n\n"], "Examples": ["obclient> CREATE PROFILE \"profile1\" LIMIT\n   FAILED_LOGIN_ATTEMPTS 5\n   PASSWORD_LOCK_TIME 1\n   PASSWORD_LIFE_TIME 60\n   PASSWORD_VERIFY_FUNCTION verify_function\n   PASSWORD_GRACE_TIME DEFAULT;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054363"], "Title": ["CREATE ROLE"], "Feature": ["CREATE ROLE role_name\n[ NOT IDENTIFIED\n| IDENTIFIED BY password\n] ;\n"], "Description": ["该语句用于创建角色。您可以使用角色来管理数据库权限。", "您可以为角色添加权限，然后将该角色授予用户，用户可以启用该角色并行使该角色授予的权限。", "\n\n\n参数\n描述\n\n\n\n\nrole_name\n指定要创建的角色的名称。\n\n\nNOT IDENTIFIED\n指定启用创建的角色时不使用任何验证方法。 说明 如果省略 NOT IDENTIFIED 子句和 IDENTIFIED 子句，则角色默认为 NOT IDENTIFIED。\n\n\nIDENTIFIED BY password\n设定启用角色的密码。 说明 被授予该角色的用户必须指定密码才能使用 SET ROLE 语句启用该角色。\n\n\n"], "Examples": ["obclient> CREATE ROLE role1;\nQuery OK, 0 rows affected\n", "obclient> CREATE ROLE role2 IDENTIFIED BY **1***;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054360"], "Title": ["CREATE SEQUENCE"], "Feature": ["CREATE SEQUENCE [ schema. ] sequence_name\n{ START WITH int_value\n|[ INCREMENT BY int_value ]\n|[ MINVALUE int_value | NOMINVALUE ]\n|[ MAXVALUE int_value | NOMAXVALUE ]  \n|[ CACHE int_value | NOCACHE ]\n|[ ORDER | NOORDER ]\n|[ CYCLE | NOCYCLE ]  \n}\n;\n"], "Description": ["该语句用来创建序列。序列属于数据库对象，用户可以从序列中生成唯一整数。", "如果两个用户同时递增同一个序列，那么每个用户获取的序列号可能会有间隔，一个用户永远无法获得另一个用户所生成的序列号。序列号是独立于表生成的，因此可以对一个或多个表使用相同的序列。", "创建序列后，您可以在 SQL 语句中使用 CURRVAL 伪列返回序列当前值或使用 NEXTVAL 伪列返回递增的新值。详细信息，请参见 序列伪列。", "\n\n\n字段\n描述\n\n\n\n\nschema.\n指定包含序列的 Schema。如果省略 Schema，则数据库会在用户当前所在的 Schema 中创建序列。\n\n\nsequence_name\n要创建的序列名称。\n\n\nMINVALUE int_value\n指定序列的最小值，int_value 的取值范围是 [-9223372036854775808，9223372036854775807]。\n\n\nNOMINVALUE\nNOMINVALUE 为默认值。如果指定为 NOMINVALUE，则升序时最小值为 1，降序时最小值为 -9223372036854775808。\n\n\nMAXVALUE int_value\n指定序列的最大值，int_value 的取值范围是 [-9223372036854775808，9223372036854775807]。 注意\n\n同时指定 MINVALUE 和 MAXVALUE 时，MINVALUE 必须小于 MAXVALUE。\nMAXVALUE 和 MINVALUE 之差必须大于等于 INCREMENT BY 中 的 int_value。\n\n\n\nNOMAXVALUE\nNOMAXVALUE 为默认值。如果指定为 NOMAXVALUE，则升序时最大值为9223372036854775807，降序时最大值为 -1。\n\n\nSTART WITH int_value\n指定序列的起始值。int_value 必须小于等于 MAXVALUE，且大于等于 MINVALUE。如果不指定，则升序时默认取值为最小值，降序时默认取值为最大值。\n\n\nINCREMENT BY int_value\n指定序列的自增步数。int_value 不可以为 0。如果指定为正数，则序列为升序；如果指定为负数，则序列为降序。不指定时缺省值为 1。\n\n\nCACHE int_value\n指定在内存中预分配的自增值个数，int_value 默认为 20。CACHE int_value 的值必须大于 1，如果 CACHE INT_VALUE 的值为 1，则等价于 NOCACHE。\n\n\nNOCACHE\n指定序列的值为未预先分配。如果同时省略 CACHE 和 NOCACHE，则数据库默认缓存 20 个序列号。\n\n\nORDER\n指定序列的值按顺序生成。\n\n\nNOORDER\nNOORDER 为默认值，即不保证序列的值按顺序生成。\n\n\nCYCLE\n指定序列的值循环生成，即序列在达到其最大值或最小值后继续生成值。在升序达到最大值后，它会生成最小值。在降序序列达到其最小值后，它会生成其最大值。 注意\n\n如果指定了 CYCLE，而且 INCREMENT BY int_value 小于 0 时，必须指定 MINVALUE。\n如果指定了 CYCLE，CACHE 的数量不能超过一个 CYCLE。\n\n\n\nNOCYCLE\nNOCYCLE 为默认值，指定序列在达到其最大值或最小值后无法生成更多值。\n\n\n"], "Examples": ["obclient> CREATE SEQUENCE test.seq1 START WITH 1 MINVALUE 1 MAXVALUE 10 INCREMENT BY 2 NOCYCLE NOORDER CACHE 30;\nQuery OK, 0 rows affected\n\nobclient> SELECT seq1.nextval FROM DUAL;\n+--------+\n| nextval|\n+--------+\n| 1      |\n+--------+\n1 row in set\n\nobclient> SELECT seq1.nextval FROM DUAL;\n+--------+\n| nextval|\n+--------+\n| 3      |\n+--------+\n1 row in set\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054344"], "Title": ["ALTER KEYSTORE"], "Feature": ["/* 打开/关闭 Keystore */\nADMINISTER KEY MANAGEMENT SET KEYSTORE [OPEN | CLOSE] IDENTIFIED BY [password];\n\n/* 设置密钥 */\nADMINISTER KEY MANAGEMENT SET KEY IDENTIFIED BY [password]\n"], "Description": ["该语句用于修改 Keystore 属性，包括打开/关闭 Keystore、修改 Keystore 密码、生成 Keystore 密钥。", "\n\n\n参数\n描述\n\n\n\n\nOPEN\n打开 Keystore。\n\n\nCLOSE\n关闭 Keystore。\n\n\npassword\n指定访问控制 Keystore 的密码。\n\n\n"], "Examples": ["obclient> ADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY **1***;\n", "obclient> ADMINISTER KEY MANAGEMENT SET KEY IDENTIFIED BY **1***;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054334"], "Title": ["CREATE SYNONYM"], "Feature": ["CREATE [ OR REPLACE ] [ PUBLIC ] SYNONYM [ synonym_schema. ]synonym_name\nFOR [ object_schema. ]object_name;\n"], "Description": ["该语句用来创建一个同义词。", "\n\n\n参数\n描述\n\n\n\n\nOR REPLACE\n表示如果要创建的同义词名称已存在，则使用新的定义重新创建同义词。\n\n\nPUBLIC\n指定 PUBLIC 来创建公共同义词，所有用户都可以使用。用户必须对基础对象具有相应的权限才能使用该同义词。 在解析对象的引用时，仅当对象没有指定 Schema 时，才会使用公共同义词。 如果不指定 PUBLIC，则同义词是私有的，只能当前 Schema 访问，并且同义词名称在当前 Schema 中必须唯一。\n\n\nsynonym_schema\n指定同义词所在的 Schema。如果省略 schema.，则默认同义词在您自己的 Schema 中。如果指定了 PUBLIC，则对同义词不需要指定 schema。\n\n\nsynonym_name\n指定同义词的名称。\n\n\nobject_schema\n指定创建同义词的对象所在的 Schema。如果省略 schema.，则默认创建同义词的对象在您自己的 Schema 中。\n\n\nobject_name\n指定同义词对应对象的名称。\n\n\n"], "Examples": ["obclient> CREATE TABLE tbl1(col1 INT,col2 INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE SYNONYM syn1 FOR tbl1;\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO syn1 values(1,1);\nQuery OK, 1 row affected\n\nobclient> SELECT * FROM syn1;\n+------+------+\n| COL1 | COL2 |\n+------+------+\n|    1 |    1 |\n+------+------+\n1 row in set\n", "obclient> CREATE PUBLIC SYNONYM syn2 FOR tbl1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054349"], "Title": ["CREATE TABLE"], "Feature": ["CREATE [hint_options] [GLOBAL TEMPORARY] TABLE table_name\n      (table_definition_list) [table_option_list] [partition_option] [on_commit_option]\nCREATE [GLOBAL TEMPORARY] TABLE table_name\n      (table_definition_list) [table_option_list] [partition_option] [table_column_group_option] [AS] select;\n\ntable_definition_list:\n    table_definition [, table_definition ...]\n\ntable_definition:\n      column_definition\n     | [,\n        | [CONSTRAINT [constraint_name]] { PRIMARY KEY|UNIQUE } (column_name) //在创建所有列后添加约束\n        | [CONSTRAINT [constraint_name]] FOREIGN KEY (column_name, column_name ...) references_clause constraint_state\n        | [CONSTRAINT [constraint_name]] CHECK(expression) constraint_state\n       ]\n\ncolumn_definition_list:\n    column_definition [, column_definition ...]\n\ncolumn_definition:\n    column_name data_type\n    [VISIBLE|INVISIBLE]\n    {\n    [DEFAULT expression]\n    [NULL | NOT NULL]\n    [CONSTRAINT [constraint_name]] [ PRIMARY KEY|UNIQUE ]       //在创建列时添加约束\n    [CONSTRAINT [constraint_name] CHECK(expression) constraint_state]\n    [CONSTRAINT [constraint_name] references_clause]\n    |\n    [GENERATED ALWAYS] AS (expression) [VIRTUAL]\n    [NULL | NOT NULL] [UNIQUE KEY] [[PRIMARY] KEY] [UNIQUE LOWER_KEY] [COMMENT string] [SKIP_INDEX(skip_index_option_list)]\n    }\n\nskip_index_option_list:\n    skip_index_option [,skip_index_option ...]\n\nskip_index_option:\n    MIN_MAX\n    | SUM\n\nreferences_clause:\n     REFERENCES table_name [ (column_name, column_name ...) ] [ON DELETE {SET NULL | CASCADE}]\n\nconstraint_state:\n    [RELY | NORELY] [USING INDEX index_option_list] [ENABLE | DISABLE] [VALIDATE | NOVALIDATE]\n\nindex_option_list:\n    index_option [ index_option ...]\n\nindex_option:\n      [GLOBAL | LOCAL]\n    | block_size\n    | compression\n    | STORING(column_name_list)\n    | comment\n\ntable_option_list:\n    table_option [ table_option ...]\n\ntable_option:\n      TABLEGROUP = tablegroup_name\n    | block_size\n    | compression\n    | comment\n    | ENABLE ROW MOVEMENT\n    | DISABLE ROW MOVEMENT\n    | physical_attribute\n    | parallel_clause\n    | DUPLICATE_SCOPE [=] 'none|cluster'\n    | TABLE_MODE [=] 'table_mode_value'\n\nphysical_attribute_list:\n    physical_attribute [physical_attribute]\n\nphysical_attribute:\n    PCTFREE [=] num\n    | PCTUSED num\n    | INITRANS num\n    | MAXTRANS num\n    | STORAGE(storage_option [storage_option] ...)\n    | TABLESPACE tablespace\n\nparallel_clause:\n    {NOPARALLEL | PARALLEL integer}\n\ntable_mode_value:\n    NORMAL\n    | QUEUING\n    | MODERATE\n    | SUPER\n    | EXTREME\n\ncompression:\n    NOCOMPRESS\n    | COMPRESS { BASIC | FOR OLTP | FOR QUERY [LOW | HIGH]  | FOR ARCHIVE [LOW | HIGH]}\n\nstorage_option:\n    INITIAL num [K|M|G|T|P|E]\n    | NEXT num [K|M|G|T|P|E]\n    | MINEXTENTS num [K|M|G|T|P|E]\n    | MAXEXTENTS num [K|M|G|T|P|E]\n\npartition_option:\n      PARTITION BY HASH(column_name_list)\n      [subpartition_option] hash_partition_define\n    | PARTITION BY RANGE (column_name_list)\n      [subpartition_option] (range_partition_list)\n    | PARTITION BY LIST (column_name_list)\n      [subpartition_option] (list_partition_list)\n\n/*模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list) hash_subpartition_define\n    | SUBPARTITION BY RANGE (column_name_list) SUBPARTITION TEMPLATE\n      (range_subpartition_list)\n    | SUBPARTITION BY LIST (column_name_list) SUBPARTITION TEMPLATE\n      (list_subpartition_list)\n\n/*非模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list)\n    | SUBPARTITION BY RANGE (column_name_list)\n    | SUBPARTITION BY LIST (column_name_list)\n\nsubpartition_list:\n      (hash_subpartition_list)\n    | (range_subpartition_list)\n    | (list_subpartition_list)\n\nhash_partition_define:\n      PARTITIONS partition_count [TABLESPACE tablespace] [compression]\n    | (hash_partition_list)\n\nhash_partition_list:\n    hash_partition [, hash_partition ...]\n\nhash_partition:\n    partition [partition_name] [subpartition_list/*仅非模板化二级分区可定义*/]\n\nhash_subpartition_define:\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION TEMPLATE (hash_subpartition_list)\n\nhash_subpartition_list:\n    hash_subpartition [, hash_subpartition ...]\n\nhash_subpartition:\n    subpartition [subpartition_name]\n\nrange_partition_list:\n    range_partition [, range_partition ...]\n\nrange_partition:\n    PARTITION [partition_name]\n    VALUES LESS THAN {(expression_list) | (MAXVALUE)}\n    [subpartition_list/*仅非模板化二级分区可定义*/]\n    [ID = num] [physical_attribute_list] [compression]\n\nrange_subpartition_list:\n    range_subpartition [, range_subpartition ...]\n\nrange_subpartition:\n    SUBPARTITION subpartition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE} [physical_attribute_list]\n\nlist_partition_list:\n    list_partition [, list_partition] ...\n\nlist_partition:\n    PARTITION [partition_name]\n    VALUES (DEFAULT | expression_list)\n    [subpartition_list /*仅非模板化二级分区可定义*/]\n    [ID num] [physical_attribute_list] [compression]\n\nlist_subpartition_list:\n    list_subpartition [, list_subpartition] ...\n\nlist_subpartition:\n    SUBPARTITION [partition_name] VALUES (DEFAULT | expression_list) [physical_attribute_list]\n\nexpression_list:\n    expression [, expression ...]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n\npartition_name_list:\n    partition_name [, partition_name ...]\n\npartition_count | subpartition_count:\n    INT_VALUE\n\non_commit_option:\n    ON COMMIT DELETE ROWS\n  | ON COMMIT PRESERVE ROWS\n\ntable_column_group_option：\n    WITH COLUMN GROUP(all columns)\n  | WITH COLUMN GROUP(each column)\n  | WITH COLUMN GROUP(all columns, each column)\n"], "Description": ["该语句用来在数据库中创建一张新表。", "\n\n\n参数\n描述\n\n\n\n\nhint_options\n指定 Hint 选项，为可选项。 \n      \n注意\n在当前版本中，CREATE TABLE 语句的 Hint 选项仅限于支持 /*+ parallel(N) */ 类型，其中 N 是并行度。并且该 Hint 选项仅适用于 CREATE TABLE … AS SELECT … 的场景，可以控制在表创建时数据查询和写入操作的并行度。\n\n\n\nGLOBAL TEMPORARY\n将该表创建为临时表。\n\n\nDEFAULT expression\n指定列的默认值。expression 支持包含 Sequence 的函数表达式。\n\n\nBLOCK_SIZE\n指定表的微块大小。\n\n\nCOMPRESSION\n指定存储格式 Flat/Encoding 以及压缩方法，对应如下： \n      \nnocompress：使用 Flat 格式，不进行压缩。\ncompress [basic]：使用 Flat 格式和 lz4_1.0 压缩方法。\ncompress for oltp：使用 Flat 格式和 zstd_1.3.8 压缩方法。\nquery low 或者 query high：使用 Encoding 格式和 lz4_1.0 压缩方法。\narchive low 或者 archive high：使用 Encoding 格式和 zstd_1.3.8 压缩方法。\n\n\n\ntablegroup_name\n指定表所属的 Table Group。\n\n\nFOREIGN KEY\n为创建的表指定外键。如果不指定外键名，则会使用表名 + OBFK + 创建时间命名。（例如，在 2021 年 8 月 1 日 00:00:00 为 t1 表创建的外键名称为 t1_OBFK_1627747200000000）。外键允许跨表交叉引用相关数据，当 DELETE 操作影响与子表相匹配行的父表中键值时，其结果取决于 ON DELETE 子句的引用操作： \n      \nCASCADE：表示从父表中删除或更新行，并自动删除或更新子表中匹配的行。\nSET NULL：表示从父表中删除或更新行，并将子表中的外键列设置为 NULL。\n\n\n\nVISIBLE\n表示列可见，是默认的列状态。\n\n\nINVISIBLE\n表示列不可见，当将一个列设置为 INVISIBLE 后，在查询时该列将不会被默认显示。\n\n\ncomment\n注释。不区分大小写。\n\n\nphysical_attribute\nPCTFREE: 指定宏块保留空间百分比。其它属性 STORAGE、TABLESPACE 等仅为了语法兼容方便迁移，不生效。\n\n\nENABLE/DISABLE ROW MOVEMENT\n是否允许在不同分区间移动以进行分区键更新。\n\n\nON COMMIT DELETE ROWS\n事务级临时表，提交时删除数据。\n\n\nON COMMIT PRESERVE ROWS\n会话级临时表，会话结束时删除数据。\n\n\nparallel_clause\n指定表级别的并行度： \n      \nNOPARALLEL：并行度为 1，为默认配置。\nPARALLEL integer：指定并行度，integer 取值大于等于 1。\n\n\n注意\n当指定并行度时，优先级关系如下：通过 Hint 指定的并行度 > 通过 ALTER SESSION 指定的并行度 > 表级别的并行度。\n\n\n\nDUPLICATE_SCOPE\n指定复制表的属性，取值如下： \n      \nnone：表示该表是一个普通表，为默认值。\n cluster：表示该表是一个复制表，Leader 需要将事务复制到当前租户的所有 F（全能）副本及 R（只读）副本。\n      OceanBase 数据库目前仅支持 cluster 级别的复制表。\n\n\ntable_column_group_option\n指定表列存选项。具体解释如下： \n      \nWITH COLUMN GROUP(all columns, each column)：指定创建行存列存冗余的表。\nWITH COLUMN GROUP(all columns)：指定添加行存表。\nWITH COLUMN GROUP(each column)：指定创建列存表。\n\n\n\nSKIP_INDEX\n标识列的 Skip Index 属性。取值如下： \n      \nMIN_MAX：是 Skip Index 中最通用的聚合数据类型，它会在索引节点粒度下存储被索引列的最大值、最小值和 Null Count。这种类型的数据可以加速下推的 Filter 和 MIN/MAX 聚合的下推。\nSUM：用于加速数值类型的 SUM 聚合的下推。\n\n\n注意\n\n\nJSON 和空间数据类型的列禁止创建 Skip Index。\n生成列禁止创建 Skip Index。\n\n\n\n\n\nTABLE_MODE\n可选项，用于指定合并触发阈值与合并策略，即控制数据转储后的合并行为。取值的详细介绍可参见下文 table_mode_value。\n\n\n", "table_mode_value", "\n说明\n在以下列出的 TABLE_MODE 模式中，除了 NORMAL 模式之外，所有模式都代表 QUEUING 表。这种 QUEUING 表是最基本的表类型，并且随后列出的几种模式（除了 NORMAL 模式）代表了使用更加积极的合并策略。\n", "NORMAL", "：默认值，表示正常。在该模式下，数据转储后触发合并的概率极低。", "QUEUING", "：在该模式下，数据转储后触发合并的概率低。", "MODERATE", "：表示适度。在该模式下，数据转储后触发合并的概率为中等。", "SUPER", "：表示超级。在该模式下，数据转储后触发合并的概率高。", "EXTREME", "：表示极端。在该模式下，转储后触发合并的概率较高。", "更多有关合并的信息，请参见 自适应合并。"], "Examples": ["obclient> CREATE TABLE tbl1 (col1 INT PRIMARY KEY, col2 VARCHAR(50)) ;\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl4 (col1 INT PRIMARY KEY, col2 INT) PARTITION BY HASH(col1) PARTITIONS 8;\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl5 (col1 INT, col2 INT, col3 INT)\n                 PARTITION BY RANGE(col1)\n                 SUBPARTITION BY HASH(col2)  SUBPARTITIONS  5\n                 (PARTITION p0 VALUES LESS THAN(0),\n                  PARTITION p1 VALUES LESS THAN(100));\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl6 (col1 INT, col2 INT, col3 VARCHAR(64))\n                 COMPRESS FOR ARCHIVE\n                 PCTFREE 5;\nQuery OK, 0 rows affected\n", "obclient> CREATE GLOBAL TEMPORARY TABLE tbl7(col1 INT) ON COMMIT DELETE ROWS;\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl8 (col1 INT, col2 INT, col3 INT,CONSTRAINT equal_check1 CHECK(col2 = col3 * 2) ENABLE VALIDATE);\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE ref_t1(c1 INT PRIMARY KEY,C2 INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE ref_t2(c1 INT PRIMARY KEY，C2 INT,FOREIGN KEY(c2) REFERENCES ref_t1(c1) ON DELETE SET NULL);\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl9 (col1 INT, col2 INT, col3 INT)\n                 PARTITION BY RANGE(col1)\n                 SUBPARTITION BY RANGE(col2)\n(\n  PARTITION p0 VALUES LESS THAN(100)\n  (\n    SUBPARTITION p0_r1 VALUES LESS THAN(2019),\n    SUBPARTITION p0_r2 VALUES LESS THAN(2020),\n    SUBPARTITION p0_r3 VALUES LESS THAN(2021)\n  ),\n  PARTITION p1 VALUES LESS THAN(200)\n  (\n    SUBPARTITION p1_r1 VALUES LESS THAN(2019),\n    SUBPARTITION p1_r2 VALUES LESS THAN(2020),\n    SUBPARTITION p1_r3 VALUES LESS THAN(2021)\n  ),\n  PARTITION p2 VALUES LESS THAN(300)\n  (\n    SUBPARTITION p2_r1 VALUES LESS THAN(2019),\n    SUBPARTITION p2_r2 VALUES LESS THAN(2020),\n    SUBPARTITION p2_r3 VALUES LESS THAN(2021)\n  )\n);\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE tbl10(col1 INT PRIMARY KEY, col2 INT) PARALLEL 3;\nQuery OK, 0 rows affected\n", "obclient> CREATE SEQUENCE SEQ_PERSONIPTVSEQ START WITH 1 MINVALUE 1 MAXVALUE 10 INCREMENT BY 2 NOCYCLE NOORDER CACHE 30;\nQuery OK, 0 rows affected\n\nobclient> SELECT LPAD(SEQ_PERSONIPTVSEQ.NEXTVAL,18,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')) FROM DUAL;\n+----------------------------------------------------------------------------+\n| LPAD(SEQ_PERSONIPTVSEQ.NEXTVAL,18,TO_CHAR(SYSDATE,'YYYY-MM-DDHH24:MI:SS')) |\n+----------------------------------------------------------------------------+\n| 2022-07-05 11:34:1                                                         |\n+----------------------------------------------------------------------------+\n1 row in set\n\nobclient> CREATE TABLE FUNC_DEFAULT_TEST ( OID NUMBER(20,0) DEFAULT LPAD(SEQ_PERSONIPTVSEQ.NEXTVAL,18,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')) NOT NULL);\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLE dup_t1(c1 int) DUPLICATE_SCOPE = 'cluster';\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO dup_t1 VALUES(1);\nQuery OK, 1 row affected\n\nobclient> SELECT * FROM dup_t1;\n+------+\n| c1   |\n+------+\n|    1 |\n+------+\n1 row in set\n", "CREATE TABLE tbl1_cg (col1 NUMBER PRIMARY KEY, col2 VARCHAR2(50)) WITH COLUMN GROUP(each column);\n", "CREATE TABLE test_skidx(\n  col1 NUMBER SKIP_INDEX(MIN_MAX, SUM),\n  col2 FLOAT SKIP_INDEX(MIN_MAX),\n  col3 VARCHAR2(1024) SKIP_INDEX(MIN_MAX),\n  col4 CHAR(10)\n);\n", "CREATE /*+ parallel(5) */ TABLE tbl1 (col1 NUMBER) AS SELECT col1 FROM tbl2;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054345"], "Title": ["CREATE TABLEGROUP"], "Feature": ["CREATE TABLEGROUP tablegroup_name [tablegroup_option];\n\ntablegroup_option:\n   SHARDING = 'NONE' | 'PARTITION' | 'ADAPTIVE'\n"], "Description": ["该语句用来创建表组。", "表组主要用于创建一组具有相同分布特征的表，具有相同分布特征的表在进行连接操作时，可以在本地进行，避免跨节点的数据请求。", "\n\n\n参数\n描述\n\n\n\n\ntablegroup_name\n表组名称，最长 64 个字符，字符只能有大小写英文字母，数字和下划线，而且必须以字母或下划线开头，并且不能使用 OceanBase 数据库的关键字。如果要创建的表组名称已存在，并且没有指定 IF NOT EXISTS，则会出现错误。\n\n\nSHARDING\n表组的属性。如果不指定 SHARDING 属性，则默认创建 ADAPTIVE 的表组。SHARDING 取值如下： \n      \nNONE：对加入表组的表没有限制。\nPARTITION：加入表组的表对应的一级分区，需要与表组中所有表的一级分区的分区方式一致，包括分区类型、分区个数和分区值。\nADAPTIVE：加入表组的表对应的一级分区和二级分区，需要与表组中所有表的一级分区和二级分区的分区方式一致，包括分区类型、分区个数和分区值。加入表组中的表必须只能为同一类分区表（一级分区表或者二级分区表）。\n相同的分区方式包括： \n      \n分区类型相同（例如都是 Hash+Range 分区）。\n如果是 Hash 分区，要求引用的列数相同，并且分区个数相同。\n如果是 Range 分区，要求引用的列数相同，并且分区数相同，Range 分割点相同。\n对于二级分区，根据其分区类型，要求和上述一致。\n\n\n"], "Examples": ["obclient> CREATE TABLEGROUP myTableGroup1;\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE myt1 (c1 NUMBER, c2 NUMBER) TABLEGROUP = myTableGroup1;\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE myt2 (c1 NUMBER, c2 NUMBER) TABLEGROUP = myTableGroup1;\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLEGROUP tblgroup1 SHARDING = 'NONE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1 (col NUMBER) TABLEGROUP = tblgroup1;\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2 (col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup1\n    PARTITION BY LIST(col1)\n      (PARTITION p0 VALUES ('01'),\n       PARTITION p1 VALUES ('02')\n       );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl3(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup1\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST (col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES ('01'),\n       SUBPARTITION mp1 VALUES ('02'),\n       SUBPARTITION mp2 VALUES ('03')\n       )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLEGROUP tblgroup2 SHARDING = 'PARTITION';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1 (col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup2\n    PARTITION BY LIST(col1)\n      (PARTITION p0 VALUES ('01'),\n       PARTITION p1 VALUES ('02')\n      );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2 (col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup2\n  PARTITION BY LIST(col1)\n    (PARTITION p0 VALUES ('01'),\n     PARTITION p1 VALUES ('02')\n     );\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLEGROUP tblgroup3 SHARDING = 'PARTITION';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1 (col INT) TABLEGROUP = tblgroup3;\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2 (col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup3\n  PARTITION BY LIST(col1)\n    (PARTITION p0 VALUES ('01'),\n     PARTITION p1 VALUES ('02')\n     );\nORA-00600: internal error code, arguments: -4179, not all tables are non-partitioned or partitioned, add table to tablegroup not allowed\n", "obclient> CREATE TABLEGROUP tblgroup4 SHARDING = 'PARTITION';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1 (col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup4\n    PARTITION BY LIST(col1)\n      (PARTITION p0 VALUES ('01'),\n       PARTITION p1 VALUES ('02')\n      );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2 (col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup4\n    PARTITION BY LIST(col1)\n      (PARTITION p0 VALUES ('01'),\n       PARTITION p1 VALUES ('02'),\n       PARTITION p2 VALUES ('03')\n       );\nORA-00600: internal error code, arguments: -4179, partition num not equal, add table to tablegroup not allowed\n", "obclient> CREATE TABLEGROUP tblgroup5 SHARDING = 'ADAPTIVE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup5\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST (col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES ('01'),\n       SUBPARTITION mp1 VALUES ('02'),\n       SUBPARTITION mp2 VALUES ('03')\n       )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup5\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST(col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES('01'),\n       SUBPARTITION mp1 VALUES('02'),\n       SUBPARTITION mp2 VALUES('03')\n      )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nQuery OK, 0 rows affected\n", "obclient> CREATE TABLEGROUP tblgroup6 SHARDING = 'ADAPTIVE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1 (col INT) TABLEGROUP = tblgroup6;\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup6\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST(col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES('01'),\n       SUBPARTITION mp1 VALUES('02'),\n       SUBPARTITION mp2 VALUES('03')\n      )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nORA-00600: internal error code, arguments: -4179, not all tables are non-partitioned or partitioned, add table to tablegroup not allowed\n", "obclient> CREATE TABLEGROUP tblgroup7 SHARDING = 'ADAPTIVE';\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl1(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup7\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST(col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES ('01'),\n       SUBPARTITION mp1 VALUES ('02'),\n       SUBPARTITION mp2 VALUES ('03')\n       )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl2(col1 NUMBER,col2 VARCHAR2(50)) TABLEGROUP = tblgroup7\n    PARTITION BY LIST(col1) SUBPARTITION BY LIST(col2)\n      SUBPARTITION TEMPLATE\n      (SUBPARTITION mp0 VALUES('01'),\n       SUBPARTITION mp1 VALUES('02')\n      )\n      (PARTITION p0 VALUES('01'),\n       PARTITION p1 VALUES('02')\n      );\nORA-00600: internal error code, arguments: -4179, subpartition num not matched, add table to tablegroup not allowed\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054362"], "Title": ["CREATE TABLESPACE"], "Feature": ["CREATE TABLESPACE tablespace_name [ENCRYPTION USING 'AES-256|AES-128|AES-192|SM4-CBC']\n"], "Description": ["该语句用来创建 TableSpace 逻辑对象，TableSpace 属性支持加密。", "\n\n\n参数\n描述\n\n\n\n\ntablespace_name\n指定要创建的 TableSpace 对象名称。\n\n\nENCRYPTION USING\n加密所使用的关键字。\n\n\nAES-256|AES-128|AES-192|SM4-CBC\n选择所使用的加密算法。\n\n\n"], "Examples": ["obclient> CREATE TABLESPACE tblspace1;\nQuery OK, 0 rows affected\n", "/*创建 Keystore 对象并开启存储密钥*/\nALTER SYSTEM SET TDE_METHOD = 'INTERNAL';\nADMINISTER KEY MANAGEMENT CREATE KEYSTORE my_keystore IDENTIFIED BY abcCBAK123;\n/*创建主加密密钥*/\nADMINISTER KEY MANAGEMENT SET KEYSTORE OPEN IDENTIFIED BY abcCBAK123;\nADMINISTER KEY MANAGEMENT SET KEY IDENTIFIED BY abcCBAK123;\n\nobclient>CREATE TABLESPACE tblspace1 ENCRYPTION USING 'SM4-CBC';\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054321"], "Title": ["CREATE USER"], "Feature": ["CREATE USER user_name\n    IDENTIFIED BY [VALUES] password\n    [REQUIRE {NONE | SSL | X509 | tls_option}]\n    [PROFILE profile_name]\n    [DEFAULT TABLESPACE tablespace_name];\n\ntls_option:\n      CIPHER cipher_name\n    | ISSUER issuer_name\n    | SUBJECT subject_name\n"], "Description": ["CREATE USER 语句用于创建新的 OceanBase 数据库用户。创建新用户后，可以使用新用户连接 OceanBase 数据库。", "\n\n\n参数\n描述\n\n\n\n\nuser_name\n用户名，新建用户后，dba_users 表会新增一行该用户的表项。如果同名用户已经存在将会报错。\n\n\nIDENTIFIED BY\n为待创建的用户创建一个密码，此处密码为明文，存入 dba_users 表后，服务器端会变为密文存储下来。如果密码中包含特殊字符 ~!@#%^&*_-+=`|(){}[]:;’,.?/，需使用英文双引号（\"）包含。\n\n\nIDENTIFIED BY VALUES\n为待创建的用户创建一个密码，此处密码为密文，将直接存入 dba_users 表。\n\n\nREQUIRE\n指定用户的密码验证要求，有如下几种取值。 \n      \nNONE：表示用户没有密码验证要求，意味着用户可以使用任何密码或不设置密码。\nSSL：表示用户必须使用 SSL 连接进行身份验证。\nX509：表示用户必须使用 X509 证书进行身份验证。\ntls_option：表示用户必须满足指定的 TLS（Transport Layer Security）要求。\n\n\n\ntls_option\n指定 TLS 要求的具体选项。 \n      \nCIPHER：用于指定 TLS 连接使用的加密算法或密码套件。\nISSUER：用于指定 TLS 证书的发行者（Issuer）。\nSUBJECT：用于指定 TLS 证书的主题（Subject）。\n\n\n\nPROFILE\n指定用户配置文件，用户配置文件是一组预定义的权限和限制，可以应用于创建的用户。\n\n\nDEFAULT TABLESPACE\n指定用户的默认表空间。表空间是用于存储用户数据的逻辑结构。\n\n\n"], "Examples": ["obclient [SYS]> CREATE USER test1 IDENTIFIED BY \"********\";\n", "obclient [SYS]> CREATE USER test2 IDENTIFIED BY VALUES \"********\" REQUIRE SSL;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054356"], "Title": ["CREATE VIEW"], "Feature": ["CREATE [OR REPLACE] [[NO] FORCE] VIEW view_name [(column_name_list)] AS select_stmt [WITH CHECK OPTION];\n\nselect_stmt:\n    SELECT column_name, [--string] \n        [, column_name, [--string] ...]\n    FROM from_list\n    [WHERE condition]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n"], "Description": ["该语句用于创建视图语句，如果指定了 OR REPLACE 子句，该语句能够替换已有的视图。", "视图在数据库中实际上并不是以表的形式存在，视图是作为在 CREATE VIEW 语句中指定的 SELECT 语句的结果而派生出来的，每次使用时视图就会派生。", "如果 FROM 子句中引用了两个或多个表或视图，则称该视图为连接视图（Join View）。一个可更新的连接视图，也称为可修改的连接视图，涉及两个或多个基表或视图，并允许 DML 操作。可更新的视图不受限于 WITH READ ONLY 子句。", "要实现可更新，视图必须满足多个条件。例如，其中一条通用规则就是对于连接视图的 INSERT、UPDATE 或 DELETE 操作一次只能修改一个基表。", "\n\n\n参数\n描述\n\n\n\n\nOR REPLACE\n表示如果要创建的视图名称已存在，则使用新的定义重新创建视图。\n\n\n[NO] FORCE\n如果在创建视图时，不考虑该视图是否存在基表或存在引用的对象类型，以及视图所在 Schema 的所有者是否具有权限，请指定 FORCE。如果只在基表存在且视图所在 Schema 所有者具有权限时才创建视图，请指定 NOFORCE。NOFORCE 是默认设置。\n\n\nview_name\n视图名。\n\n\ncolumn_name_list\n视图必须具有唯一的列名，不得有重复，就像基表那样。默认情况下，由 SELECT 语句检索的列名将用作视图列名。要想为视图列定义明确的名称，可使用可选的 column_name_list 子句，ID 之间使用逗号分隔。column_name_list 中的名称数目必须等于 SELECT语句检索的列数。SELECT 语句检索的列可以是对表列的简单引用。也可以是使用函数、常量值、运算符等的表达式。\n\n\nselect_stmt\n是一种 SELECT 语句。它给出了视图的定义。该语句可以从基表或其他视图进行选择。更多 SELECT 语句信息，参见 SIMPLE SELECT。\n\n\n–string\n可选项，用于给视图添加注释。注释存储在视图定义中。 \n      \n说明\n–string 可以注释在 select_stmt 的任意位置。\n\n\n\nWITH CHECK OPTION\nWITH CHECK OPTION 是一种用于创建视图的语法，它用于确保插入或更新的数据满足视图的定义条件。 \n      \n注意\nOracle 模式下的 WITH CHECK OPTION 语法不支持指定为 LOCAL 或 CASCADED，默认为 CASCADED。\n\n\n\n"], "Examples": ["obclient [SYS]> CREATE OR REPLACE FORCE VIEW view1(vcol1, vcol2) AS SELECT col1, col2 FROM tbl1;\n", "obclient [SYS]> CREATE TABLE tbl2 (col1 INT, col2 INT);\n", "obclient [SYS]> CREATE VIEW view2 AS SELECT * FROM tbl2 WHERE tbl2.col2 > 1 WITH CHECK OPTION;\n", "obclient [SYS]> CREATE VIEW view3 \n  AS SELECT col1, --col1 comment1\n    col2 --col1 comment2\n    FROM tbl2;\n", "obclient [SYS]> SHOW CREATE VIEW view3;\n", "+-------+--------------------------------------------------------------------------------------------------------------+----------------------+----------------------+\n| VIEW  | CREATE VIEW                                                                                                  | CHARACTER_SET_CLIENT | COLLATION_CONNECTION |\n+-------+--------------------------------------------------------------------------------------------------------------+----------------------+----------------------+\n| VIEW3 | CREATE VIEW \"VIEW3\" (\"COL1\", \"COL2\")  AS SELECT col1, --col1 comment1\n    col2 --col1 comment2\n    FROM tbl2 | utf8mb4              | utf8mb4_bin          |\n+-------+--------------------------------------------------------------------------------------------------------------+----------------------+----------------------+\n1 row in set\n", "obclient [SYS]> SELECT DBMS_METADATA.GET_DDL('VIEW', 'VIEW3', 'SYS') FROM dual;\n", "+--------------------------------------------------------------------------------------------------------------+\n| DBMS_METADATA.GET_DDL('VIEW','VIEW3','SYS')                                                                  |\n+--------------------------------------------------------------------------------------------------------------+\n| CREATE VIEW \"VIEW3\" (\"COL1\", \"COL2\")  AS SELECT col1, --col1 comment1\n    col2 --col1 comment2\n    FROM tbl2 |\n+--------------------------------------------------------------------------------------------------------------+\n1 row in set\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054329"], "Title": ["DROP CONTEXT"], "Feature": ["DROP CONTEXT namespace;\n"], "Description": ["DROP CONTEXT 语句用于从数据库中删除上下文命名空间。", "删除上下文命名空间不会使该命名空间下为用户会话设置的上下文无效。但是，当用户下次尝试设置该上下文时，该上下文将无效。", "\n注意\n您必须具有 DROP ANY CONTEXT 系统权限。\n", "namespace 是指定要删除的上下文命名空间的名称。您不能删除内置的命名空间 USERENV。", "有关 USERENV 命名空间的信息，请参见函数 SYS_CONTEXT。"], "Examples": ["obclient> DROP CONTEXT dev_context;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054323"], "Title": ["DROP DATABASE LINK"], "Feature": ["DROP DATABASE LINK dblink_name;\n"], "Description": ["删除已创建的数据库链接（即 dblink）。", "\n说明\n要删除已创建的数据库链接，您必须具有 DROP DATABASE LINK 系统权限。\n", "dblink_name 为要删除的数据库链接的名称。"], "Examples": ["obclient> DROP DATABASE LINK ob_dblink;\nQuery OK, 1 row affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054346"], "Title": ["DROP DIRECTORY"], "Feature": ["DROP DIRECTORY directory_name;\n"], "Description": ["该语句用来删除路径对象。", "\n说明\n删除路径对象必须具有 DROP ANY DIRECTORY 系统权限。\n", "\n\n\n参数\n描述\n\n\n\n\ndirectory_name\n指定要删除的路径对象。删除路径对象时，不会删除系统中相关联的共享文件系统路径。\n\n\n"], "Examples": ["obclient> DROP DIRECTORY sql_file_dir;\nQuery OK, 1 row affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054331"], "Title": ["ALTER OUTLINE"], "Feature": ["ALTER OUTLINE outline_name ADD stmt [ TO target_stmt ]\n"], "Description": ["该语句仅支持使用 SQL_TEXT 创建的 Outline，可用于添加绑定 Outline 和限流规则。", "\n\n\n参数\n描述\n\n\n\n\noutline_name\n指定要创建的 Outline 名称。\n\n\nstmt\n一般为一个带有 Hint 和原始参数的 DML 语句。\n\n\nTO target_stmt\n如果不指定 TO target_stmt，则表示如果数据库接受的 SQL 参数化后与 stmt 去掉 Hint 参数化文本相同，则将该 SQL 绑定 stmt 中 Hint 生成执行计划；如果期望对含有 Hint 的语句进行固定计划，则需要 TO target_stmt 来指明原始的 SQL。  注意 在使用 target_stmt 时，严格要求 stmt 与target_stmt 在去掉 Hint 后完全匹配。\n\n\n"], "Examples": ["obclient> CREATE OUTLINE outline1 ON SELECT /*+max_concurrent(1)*/ * FROM tbl1 WHERE col1 =1\n           AND col2 = 1;\nobclient> ALTER OUTLINE outline1 ADD SELECT /*+max_concurrent(1)*/ * FROM tbl1 WHERE col1 =1\n           AND col2 = ?;\nobclient> ALTER OUTLINE outline1 ADD SELECT /*+max_concurrent(1)*/ * FROM tbl1 WHERE col1 =?\n           AND col2 = 1;\n", "obclient> CREATE OUTLINE outline2 ON SELECT /*+max_concurrent(1)*/ * FROM tbl1,tbl2\n          WHERE tbl1.col1 = 1;\nobclient> ALTER OUTLINE outline2 ADD SELECT /*+use_nl(tbl2)*/ * FROM tbl1,tbl2\n          WHERE tbl1.col1 = 1;\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054330"], "Title": ["DROP INDEX"], "Feature": ["DROP INDEX [schema.]index_name;\n"], "Description": ["该语句用来删除索引。当索引过多时，维护开销增大，因此需要删除不必要的索引。", "删除索引的时候需要等待一段时间才能完全删除。", "\n\n\n参数\n描述\n\n\n\n\nschema\n指定 Schema 名称。\n\n\nindex_name\n指定索引名称。\n\n\n"], "Examples": ["obclient> DROP INDEX tbl1_idx1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054357"], "Title": ["DROP MATERIALIZED VIEW LOG"], "Feature": ["DROP MATERIALIZED VIEW LOG ON [schema.] table;\n"], "Description": ["该语句用来删除物化视图日志。", "\n说明\n在删除物化视图日志时，如果基表正在进行某个运行中的事务操作，那么删除操作会被阻塞，直到该事务结束。\n", "\n\n\n参数\n描述\n\n\n\n\nschema.\n可选项，指定物化视图日志基表所在的 Schema。如果省略 schema.，则默认基表在您自己的 Schema 中。\n\n\ntable\n指定物化视图日志对应的基表名称。\n\n\n"], "Examples": ["obclient [SYS]> DROP MATERIALIZED VIEW LOG ON test_tbl1;\n", "Query OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054316"], "Title": ["DROP MATERIALIZED VIEW"], "Feature": ["DROP MATERIALIZED VIEW [ schema. ] materialized_view;\n"], "Description": ["该语句用来删除物化视图。", "\n\n\n参数\n描述\n\n\n\n\nschema.\n可选项，指定物化视图所在的 Schema。如果省略 schema.，则默认在您自己的 Schema 中。\n\n\nmaterialized_view\n指定物化视图的名称。\n\n\n"], "Examples": ["DROP MATERIALIZED VIEW mv_test_tbl1;\n", "Query OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054322"], "Title": ["DROP OUTLINE"], "Feature": ["DROP OUTLINE outline_name;  \n"], "Description": ["该语句用于删除 OceanBase 数据库中的 Outline。", "\n\n\n参数\n描述\n\n\n\n\noutline_name\n指定要删除的 Outline 名称。\n\n\n"], "Examples": ["obclient> DROP OUTLINE outline1;      \nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054343"], "Title": ["DROP PROFILE"], "Feature": ["DROP PROFILE \"profile_name\";\n"], "Description": ["该语句用于删除配置文件。", "\n\n\n参数\n描述\n\n\n\n\nprofile_name\n指定要删除的配置文件的名称。\n\n\n"], "Examples": ["obclient> DROP PROFILE \"profile1\";\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054350"], "Title": ["DROP ROLE"], "Feature": ["DROP ROLE role_name ;\n"], "Description": ["该语句用于删除角色。", "\n说明\n已删除的角色会从已授予该角色的所有用户和角色中撤消，并将其从数据库中删除。已启用该角色的用户会话不受影响。但是，在角色被删除后，新的用户会话不可以启用该角色。\n", "\n\n\n参数\n描述\n\n\n\n\nrole_name\n指定要删除的角色的名称。\n\n\n"], "Examples": ["obclient> DROP ROLE role1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054364"], "Title": ["DROP SEQUENCE"], "Feature": ["DROP SEQUENCE [schema. ] sequence_name;\n"], "Description": ["该语句用来删除序列。", "\n\n\n参数\n描述\n\n\n\n\nschema.\n指定包含序列的用户。如果不指定 Schema，则默认为当前登录用户的序列。\n\n\nsequence_name\n指定要删除的序列名称。\n\n\n"], "Examples": ["obclient> DROP SEQUENCE seq1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054327"], "Title": ["DROP SYNONYM"], "Feature": ["DROP [PUBLIC] SYNONYM [ schema. ]synonym_name [FORCE];\n"], "Description": ["该语句用来删除一个同义词。", "\n\n\n参数\n描述\n\n\n\n\nPUBLIC\n指定 PUBLIC 来删除公共同义词。如果不指定 PUBLIC，则删除私有同义词。\n\n\nschema\n指定同义词所在的 Schema。如果省略 schema.，则默认同义词在您自己的模式中。如果指定了 PUBLIC，则对同义词不需要指定 schema。\n\n\nsynonym_name\nsynonym_name 表示同义词的名称。\n\n\nFORCE\n指定 FORCE，可删除具有依赖表或用户定义类型的同义词。\n\n\n"], "Examples": ["obclient> DROP SYNONYM user1.syn1;\nQuery OK, 0 rows affected\n", "obclient> DROP PUBLIC SYNONYM syn2;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054348"], "Title": ["DROP TABLE"], "Feature": ["DROP TABLE table_name [CASCADE CONSTRAINTS] [PURGE];\n"], "Description": ["该语句用于删除 OceanBase 数据库中的表。", "\n\n\n参数\n描述\n\n\n\n\ntable_name\n指定要删除的表名。\n\n\nCASCADE CONSTRAINTS\n级联删除跟 table_name 关联的约束。\n\n\nPURGE\n彻底删除表 (不进回收站)。\n\n\n"], "Examples": ["obclient> DROP TABLE tbl1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054320"], "Title": ["DROP TABLEGROUP"], "Feature": ["DROP TABLEGROUP tablegroup_name;\n"], "Description": ["该语句用来删除表组。", "\n注意\n如果有任何表的 TABLEGROUP 属性引用了目标表组，则该表组不允许被删除。\n", "\n\n\n参数\n描述\n\n\n\n\ntablegroup_name\n指定要删除的表组名称。\n\n\n"], "Examples": ["obclient> DROP TABLEGROUP tblgroup1;\nORA-00600: internal error code, arguments: -4615, tablegroup is not empty\n", "obclient> SHOW TABLEGROUPS;\n+-----------------------+---------------+---------------------+\n| TABLEGROUP_NAME | TABLE_NAME | DATABASE_NAME |\n+-----------------------+---------------+---------------------+\n| TBLGROUP1               | TBL1               | SYS                         |\n\n+-----------------------+---------------+---------------------+\n1 rows in set\n\nobclient> ALTER TABLE tbl1 SET TABLEGROUP '';\nQuery OK, 0 rows affected\n", "obclient> DROP TABLEGROUP tblgroup1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054351"], "Title": ["ALTER PROFILE"], "Feature": ["ALTER PROFILE \"profile_name\"\n   LIMIT\n { FAILED_LOGIN_ATTEMPTS\n  | PASSWORD_LIFE_TIME\n  | PASSWORD_LOCK_TIME\n  | PASSWORD_GRACE_TIME\n  }\n  { integer | UNLIMITED | DEFAULT }；\n"], "Description": ["该语句用于配置文件中添加、修改或删除密码管理参数。", "\n说明\n对带有 ALTER PROFILE 语句的配置文件所做的更改仅影响其后续会话中的用户，而不影响其当前会话中的用户。\n", "\n\n\n参数\n描述\n\n\n\n\nprofile_name\n指定要修改的配置文件的名称。\n\n\nFAILED_LOGIN_ATTEMPTS\n指定连续登录用户账号失败的次数。\n\n\nPASSWORD_LOCK_TIME\n当账户在限定的次数内连续尝试登录失败后，指定账户被锁定的天数。\n\n\nPASSWORD_LIFE_TIME\n指定同一密码可用于身份验证的有效天数。\n\n\nPASSWORD_GRACE_TIME\n指定解除警告并开始允许账户登录的宽限期天数。\n\n\ninteger\n表示为该参数设置的限制类型格式为整数。\n\n\nUNLIMITED\n表示没有为该参数设置限制。\n\n\nDEFAULT\n表示使用该参数的默认限制。\n\n\n"], "Examples": ["obclient> ALTER PROFILE \"profile1\" LIMIT FAILED_LOGIN_ATTEMPTS 5 PASSWORD_LOCK_TIME 1;\nQuery OK, 0 rows affected\n", "obclient> ALTER PROFILE \"profile2\" LIMIT PASSWORD_LIFE_TIME 90 PASSWORD_GRACE_TIME 5;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054355"], "Title": ["DROP TABLESPACE"], "Feature": ["DROP TABLESPACE tablespace_name;\n"], "Description": ["该语句用来删除 TableSpace 逻辑对象，仅在 TableSpace下没有表时可以删除成功。", "\n\n\n参数\n描述\n\n\n\n\ntablespace_name\n指定要删除的 TableSpace 名称。\n\n\n"], "Examples": ["obclient>  DROP TABLESPACE tblspace1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054352"], "Title": ["DROP USER"], "Feature": ["DROP USER user_name CASCADE;\n"], "Description": ["该语句用于删除一个 OceanBase 数据库用户。", "\n说明\n\n必须拥有 CREATE USER 的系统权限，才可以使用 DROP USER 命令。\nCASCADE 会指定在删除用户前，删除该用户拥有的所有对象，包括权限、数据库、表等。\n\n", "\n\n\n参数\n描述\n\n\n\n\nuser_name\n用户名，只支持删除单个用户。\n\n\n"], "Examples": ["obclient> DROP USER user1 CASCADE;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054338"], "Title": ["DROP VIEW"], "Feature": ["DROP VIEW [schema.] view_name [CASCADE | RESTRICT];\n"], "Description": ["该语句用于删除视图。", "\n说明\n该视图必须在您自己的 Schema 中，或者您必须有 DROP ANY VIEW 权限。\n", "\n\n\n参数\n描述\n\n\n\n\nschema.\n指定视图所在的 Schema。如果省略 schema.，则 默认视图在您自己的模式中。\n\n\nview_name\n删除的视图名。\n\n\nCASCADE | RESTRICT\nCASCADE 为级联删除，自动删除依赖此视图的对象。RESTRICT 为约束删除，如果有依赖对象存在，则拒绝删除此视图。 说明 当前版本暂不支持此参数。如果给出，将被解析和忽略。\n\n\n"], "Examples": ["obclient> DROP VIEW v1;\nQuery OK, 0 rows affected\n", "obclient> DROP VIEW user1.v2;\nORA-01031: insufficient privileges\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054341"], "Title": ["ALTER ROLE"], "Feature": ["ALTER ROLE role_name\n{ NOT IDENTIFIED\n| IDENTIFIED BY password\n} ;\n"], "Description": ["该语句用于更改启用角色所需的验证方式。", "\n说明\n已启用该角色的用户会话不会受影响。\n", "\n\n\n参数\n描述\n\n\n\n\nrole_name\n指定要修改的角色的名称。\n\n\nNOT IDENTIFIED\n指定角色启用时不使用任何验证方法。\n\n\nIDENTIFIED BY password\n指定启用角色的验证密码。 说明 被授予该角色的用户必须指定密码才能使用 SET ROLE 语句启用该角色。\n\n\n"], "Examples": ["obclient> CREATE ROLE role1;\nQuery OK, 0 rows affected\n\nobclient> ALTER ROLE role1 IDENTIFIED BY **1***;\nQuery OK, 0 rows affected\n", "obclient> ALTER ROLE role1 IDENTIFIED BY **2***;\nQuery OK, 0 rows affected\n", "obclient> ALTER ROLE role1 NOT IDENTIFIED;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054339"], "Title": ["MAJOR 和 MINOR"], "Feature": ["ALTER SYSTEM merge_action;\n\nmerge_action:\n      MAJOR FREEZE [TABLET_ID = tablet_id]\n    | MINOR FREEZE [TABLET_ID = tablet_id]\n    | {SUSPEND | RESUME} MERGE\n    | CLEAR MERGE ERROR\n"], "Description": ["该语句用于普通租户发起自身的存储层合并或转储。手动合并与转储支持租户级别和分区级别。", "\n\n\n参数\n描述\n\n\n\n\nMAJOR FREEZE\n发起每日合并。说明 用户租户只能合并自己。\n\n\nMINOR FREEZE\n发起转储。 说明 用户租户只能转储自己。\n\n\n{SUSPEND | RESUME} MERGE\n暂停或恢复每日合并。说明 用户租户只能暂停或恢复自己的每日合并。\n\n\nCLEAR MERGE ERROR\n清理合并出错的标记。说明 用户租户只能清理合并自己的出错标记。\n\n\nTABLET_ID\n指定分区转储。\n\n\n"], "Examples": ["obclient> ALTER SYSTEM MAJOR FREEZE;\nQuery OK, 0 rows affected\n", "obclient> ALTER SYSTEM MAJOR FREEZE TABLET_ID = 5;\nQuery OK, 0 rows affected\n", "obclient> ALTER SYSTEM SUSPEND MERGE;\nQuery OK, 0 rows affected\n", "obclient> ALTER SYSTEM RESUME MERGE;\nQuery OK, 0 rows affected\n", "obclient> ALTER SYSTEM CLEAR MERGE ERROR;\nQuery OK, 0 rows affected\n", "obclient> ALTER SYSTEM MINOR FREEZE;\nQuery OK, 0 rows affected\n", "obclient> ALTER SYSTEM MINOR FREEZE TABLET_ID = 5;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054354"], "Title": ["RENAME"], "Feature": ["RENAME obj_name TO new_obj_name;\n"], "Description": ["该语句用来对表、视图、私有同义词或序列进行重命名。", "\n\n\n参数\n描述\n\n\n\n\nobj_name\n原对象名。\n\n\nnew_obj_name\n新对象名。新对象名不能是已被现有对象使用的名称。\n\n\n"], "Examples": ["obclient> CREATE TABLE tbl1(col1 INT,col2 INT);\nQuery OK, 0 rows affected\n\nobclient> RENAME tbl1 TO tbl2;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054347"], "Title": ["ALTER SEQUENCE"], "Feature": ["ALTER SEQUENCE [ schema. ] sequence_name\n{ RESTART [ START WITH int_value ]\n|[ MINVALUE int_value | NOMINVALUE ]\n|[ MAXVALUE int_value | NOMAXVALUE ]\n|[ INCREMENT BY int_value ]\n|[ CACHE int_value | NOCACHE ]\n|[ ORDER | NOORDER ]\n|[ CYCLE | NOCYCLE]\n}\n;\n"], "Description": ["该语句用于更改现有序列的增量、最小值和最大值、缓存数量和行为，对应操作仅影响后续的序列号。", "\n说明\n用户只能操作属于自己 Schema 中的序列，或者拥有该序列的有 ALTER 对象权限。\n"], "Examples": ["obclient> ALTER SEQUENCE seq1 MAXVALUE 1024 CYCLE;\nQuery OK, 0 rows affected\n", "obclient> ALTER SEQUENCE seq3 MAXVALUE 1500 INCREMENT BY 5 CYCLE NOCACHE ORDER;\nQuery OK, 0 rows affected\n", "obclient> ALTER SEQUENCE seq3 RESTART;\nQuery OK, 0 rows affected\n\nobclient> ALTER SEQUENCE seq3 RESTART START WITH 3;\nQuery OK, 0 rows affected\n", "obclient> ALTER SEQUENCE seq3 START WITH 3 RESTART MINVALUE  -100 CYCLE;\nQuery OK, 0 rows affected\n\nobclient> ALTER SEQUENCE seq3 RESTAR START WITH 3 T MINVALUE  -100 CYCLE;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054319"], "Title": ["TRUNCATE TABLE"], "Feature": ["TRUNCATE [TABLE] [schema.]table_name;\n"], "Description": ["该语句用于完全清空指定表，但是保留表结构，包括表中定义的分区信息。从逻辑上说，该语句与用于删除所有行的 DELETE FROM 语句相同。", "执行 TRUNCATE 语句，必须具有表的删除（DROP）权限，如果不是用户自己的表则需要具有 DROP ANY TABLE 权限。", "TRUNCATE TABLE 语句与 DELETE FROM 语句有以下不同：", "TRUNCATE 操作删除并重新创建表，这比逐行删除要快得多，特别是对于大表。", "TRUNCATE TABLE 语句执行结果显示影响行数始终显示为 0 行。", "使用 TRUNCATE TABLE 语句，表管理程序不记得最后被使用的 AUTO_INCREMENT 值，但是会从头开始计数。", "TRUNCATE 语句不能在进行事务处理和表锁定的过程中进行，如果使用将会报错。", "只要表定义文件是合法的，则可以使用 TRUNCATE TABLE 把表重新创建为一个空表，即使数据或索引文件已经被破坏。", "\n\n\n参数\n描述\n\n\n\n\nschema.\n指定 Schema。如果省略 schema，则默认该表在当前 Schema 中。\n\n\ntable_name\n指定表名。\n\n\n"], "Examples": ["obclient> TRUNCATE TABLE tbl1;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054332"], "Title": ["ALTER SESSION"], "Feature": ["ALTER SESSION {\n  alter_session_set_clause\n| { ENABLE | DISABLE | FORCE } PARALLEL { DML | QUERY } [ PARALLEL integer ]\n};\n\nalter_session_set_clause：\nSET {\n  CURRENT_SCHEMA = current_schema_name\n| ISOLATION_LEVEL = [ READ UNCOMMITTED\n                                   | READ COMMITTED\n                                   | REPEATABLE READ\n                                   | SERIALIZABLE];\n| variable_name = variable_value[,variable_name = variable_value...]\n}\n"], "Description": ["该语句用来设置或修改 Session 状态等信息。", "\n说明\nALTER SESSION 对应了多种功能的语句，OceanBase 数据库目前支持以下四种：\n\n切换当前 Session 连接的数据库。\n修改当前 Session 的隔离级别。\n设置 Session 变量，支持同一个语句设置多个变量。\n设置 QUERY 或 DML 的并行执行能力。\n\n", "\n\n\n参数\n描述\n\n\n\n\nCURRENT_SCHEMA\n指定 Session 连接要切换到的 Schema 名称。\n\n\nISOLATION_LEVEL\n指定 Session 的隔离级别。\n\n\nvariable_name = variable_value[,variable_name = variable_value…];\n指定要设置的 Session 变量名称和取值。设置多个变量时，变量之间没有逗号分隔。\n\n\n* { ENABLE | DISABLE | FORCE } PARALLEL\n设置 QUERY 或 DML 的并行执行能力： * ENABLE：默认情况下 Session 上并行度的值根据 表的 DOP 值进行决定 \n      \nDISABLE：默认情况下 Session 上的并行度的值为 1。\nFORCE：指定 QUERY 或 DML 的并行度的值，此时参数 PARALLEL integer 必须指定。\n 注意 当指定并行度时，优先级关系为： 通过 Hint 指定的并行度 > 通过 ALTER SESSION 指定的并行度 > 表级别的并行度。\n\n\n"], "Examples": ["obclient> ALTER SESSION SET CURRENT_SCHEMA = user1;\nQuery OK, 0 rows affected\n", "obclient> ALTER SESSION SET recyclebin = 'on'\n                           sql_warnings = 'on'\n                           tx_isolation = 'read-committed';\nQuery OK, 0 rows affected\n", "/*以并发度为 3 并行执行*/\nobclient> ALTER SESSION FORCE PARALLEL QUERY PARALLEL 3;\nQuery OK, 0 rows affected\n\nobclient> SELECT * FROM tbl1;\n+------+------+\n| COL1 | COL2 |\n+------+------+\n|    1 |    1 |\n+------+------+\n1 row in set\n\n/*串行执行*/\nobclient> ALTER SESSION FORCE PARALLEL QUERY PARALLEL 1;\nQuery OK, 0 rows affected\n\nobclient> SELECT * FROM tbl1;\n+------+------+\n| COL1 | COL2 |\n+------+------+\n|    1 |    1 |\n+------+------+\n1 row in set\n\n/*开启 PDML 路径，以并发度为 3 并行执行*/\nobclient> ALTER SESSION FORCE PARALLEL DML PARALLEL 3;\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl2 SELECT * FROM tbl1;\nQuery OK, 1 row affected\n\n/*串行执行*/\nobclient> ALTER SESSION FORCE PARALLEL DML PARALLEL 1;\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO tbl2 SELECT * FROM tbl1;\nQuery OK, 1 row affected\n"], "Category": ["DDL"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054333"], "Title": ["ALTER SYSTEM FLUSH PLAN CACHE"], "Feature": ["ALTER SYSTEM FLUSH PLAN CACHE [GLOBAL];\n"], "Description": ["删除计划缓存。", "\n说明\n对于 Oracle 租户，如果要清除租户下指定 SQL 或 Schema 的计划缓存，需要使用 DBMS_PLAN_CACHE 系统包。\n", "\n\n\n参数\n描述\n\n\n\n\nGLOBAL\n为可选字段。如果不指定该参数，表示清空本机的计划缓存。反之，则表示清空该租户所在的所有服务器上的计划缓存。\n\n\n"], "Examples": ["obclient> ALTER SYSTEM FLUSH PLAN CACHE GLOBAL;\nQuery OK, 0 rows affected\n"], "Category": ["DDL"]}
