{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054361"
    ],
    "Title": [
        "ALTER TABLE"
    ],
    "Feature": [
        "alter_table_stmt:\n      ALTER TABLE table_name alter_table_action_list;     \n\nalter_table_action_list:\n    alter_table_action [, alter_table_action ...]\n\nalter_table_action:\n      ADD {column_definition | (column_definition_list)}\n    | ADD [CONSTRAINT [constraint_name]] UNIQUE (column_name [, column_name ]...)\n    | ADD [CONSTRAINT [constraint_name]] FOREIGN KEY (column_name_list) references_clause\n    | ADD [CONSTRAINT [constraint_name]] CHECK (expr)\n    | ADD CONSTRAINT constraint_name PRIMARY KEY (column_name)\n    | ADD CONSTRAINT constraint_name FOREIGN KEY(foreign_col_name) REFERENCES              \n        reference_tbl_name(column_name);\n    | ALTER INDEX index_name [VISIBLE | INVISIBLE]\n\n    | ADD range_partition_list\n    | ADD COLUMN GROUP([all columns, ]each column)\n    | DROP {PARTITION | SUBPARTITION} partition_name_list [UPDATE GLOBAL INDEXES]\n    | DROP TABLEGROUP\n    | DROP CONSTRAINT constraint_name\n    | DROP PRIMARY KEY\n    | DROP COLUMN column_name\n    | DROP COLUMN GROUP([all columns, ]each column)\n    | {ENABLE | DISABLE} CONSTRAINT constraint_name\n    | MODIFY [COLUMN] column_definition\n    | MODIFY CONSTRAINT constraint_name { ENABLE | DISABLE }\n    | MODIFY PRIMARY KEY (column_name_list)\n    | RENAME [TO] table_name\n    | RENAME COLUMN old_col_name TO new_col_name\n    | RENAME { PARTITION | SUBPARITION } partition_name TO new_name\n    | SET TABLEGROUP tablegroup_name\n    | [SET] table_option_list\n    | TRUNCATE {PARTITION | SUBPARTITION} partition_name_list [UPDATE GLOBAL INDEXES]\n    | EXCHANGE PARTITION partition_name WITH TABLE non_partition_table_name INCLUDING INDEXES WITHOUT VALIDATION\n\n\nrename_table_action_list:\n    rename_table_action [, rename_table_action ...]\n\nrename_table_action:\n    table_name TO table_name\n\ncolumn_definition_list:\n    column_definition [, column_definition ...]\n\ncolumn_definition:\n    column_name data_type\n    [DEFAULT const_value] [AUTO_INCREMENT]\n    [NULL | NOT NULL] [[PRIMARY] KEY] [UNIQUE [KEY]] [COMMENT string_value] [SKIP_INDEX(skip_index_option_list)]\n\nskip_index_option_list:\n    skip_index_option [,skip_index_option ...]\n\nskip_index_option:\n    MIN_MAX\n    | SUM\n\ncolumn_desc_list:\n    column_desc [, column_desc ...]\n\ncolumn_desc:\n     column_name [(length)] [ASC | DESC]\n\nreferences_clause:\n     REFERENCES table_name [ (column_name, column_name ...) ] [ON DELETE {SET NULL | CASCADE}]\n\n\nindex_option:\n      [GLOBAL | LOCAL]\n    | block_size\n    | compression\n    | STORING(column_name_list)\n    | COMMENT string_value\n\ntable_option_list:\n    table_option [ table_option ...]\n\ntable_option:\n      table_group\n    | block_size\n    | compression\n    | AUTO_INCREMENT [=] INT_VALUE\n    | COMMENT string_value\n    | parallel_clause\n    | TABLE_MODE [=] 'table_mode_value'\n\nparallel_clause:\n    {NOPARALLEL | PARALLEL integer}\n\ntable_mode_value:\n    NORMAL\n    | QUEUING\n    | MODERATE\n    | SUPER\n    | EXTREME\n\npartition_option:\n      PARTITION BY HASH(column_name_list)\n      [subpartition_option] hash_partition_define\n    | PARTITION BY RANGE (column_name_list)\n      [subpartition_option] (range_partition_list)\n    | PARTITION BY LIST (column_name_list)\n      [subpartition_option] (list_partition_list)\n\n/*模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list) hash_subpartition_define\n    | SUBPARTITION BY RANGE (column_name_list) SUBPARTITION TEMPLATE\n      (range_subpartition_list)\n    | SUBPARTITION BY LIST (column_name_list) SUBPARTITION TEMPLATE\n      (list_subpartition_list)\n\n/*非模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list)\n    | SUBPARTITION BY RANGE (column_name_list)\n    | SUBPARTITION BY LIST (column_name_list)\n\nsubpartition_list:\n      (hash_subpartition_list)\n    | (range_subpartition_list)\n    | (list_subpartition_list)\n\nhash_partition_define:\n      PARTITIONS partition_count [TABLESPACE tablespace] [compression]\n    | (hash_partition_list)\n\nhash_partition_list:\n    hash_partition [, hash_partition, ...]\n\nhash_partition:\n    partition [partition_name] [subpartition_list/*仅非模板化二级分区可定义*/]\n\nhash_subpartition_define:\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION TEMPLATE (hash_subpartition_list)\n\nhash_subpartition_list:\n    hash_subpartition [, hash_subpartition, ...]\n\nhash_subpartition:\n    subpartition [subpartition_name]\n\nrange_partition_list:\n    range_partition [, range_partition ...]\n\nrange_partition:\n    PARTITION [partition_name]\n    VALUES LESS THAN {(expression_list) | (MAXVALUE)}\n    [subpartition_list/*仅非模板化二级分区可定义*/]\n    [ID = num] [physical_attribute_list] [compression]\n\nrange_subpartition_list:\n    range_subpartition [, range_subpartition ...]\n\nrange_subpartition:\n    SUBPARTITION subpartition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE} [physical_attribute_list]\n\nlist_partition_list:\n    list_partition [, list_partition] ...\n\nlist_partition:\n    PARTITION [partition_name]\n    VALUES (DEFAULT|expression_list)\n    [subpartition_list/*仅非模板化二级分区可定义*/]\n    [ID num] [physical_attribute_list] [compression]\n\nlist_subpartition_list:\n    list_subpartition [, list_subpartition] ...\n\nlist_subpartition:\n    SUBPARTITION [partition_name] VALUES (DEFAULT|expression_list) [physical_attribute_list]\n\nexpression_list:\n    expression [, expression ...]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n\npartition_name_list:\n    partition_name [, partition_name ...]\n\npartition_count | subpartition_count:\n    INT_VALUE\n"
    ],
    "Description": [
        "该语句用来修改已存在的表的结构，包括修改表及表属性、新增列、修改列及属性、删除列等。"
    ],
    "Examples": [
        "obclient> CREATE TABLE tbl1(col1 VARCHAR(3));\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl1 MODIFY col1 CHAR(10);\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl1;\n+-------+----------+------+-----+---------+-------+\n| FIELD | TYPE     | NULL | KEY | DEFAULT | EXTRA |\n+-------+----------+------+-----+---------+-------+\n| COL1  | CHAR(10) | YES  | NULL | NULL    | NULL  |\n+-------+----------+------+-----+---------+-------+\n1 row in set\n",
        "obclient> ALTER TABLE tbl1 RENAME COLUMN col1 TO col2;\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl1;\n+-------+-------------+------+-----+---------+-------+\n| FIELD | TYPE        | NULL | KEY | DEFAULT | EXTRA |\n+-------+-------------+------+-----+---------+-------+\n| COL2  | VARCHAR2(10) | YES  | NULL | NULL    | NULL  |\n+-------+-------------+------+-----+---------+-------+\n1 row in set\n",
        "obclient> CREATE TABLE tbl2 (col1 NUMBER(30) PRIMARY KEY,col2 VARCHAR(50));\nQuery OK, 0 rows affected\n",
        "obclient> ALTER TABLE tbl2 ADD col3 NUMBER(30);\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl2;\n+-------+--------------+------+-----+---------+-------+\n| FIELD | TYPE         | NULL | KEY | DEFAULT | EXTRA |\n+-------+--------------+------+-----+---------+-------+\n| COL1  | NUMBER(30)   | NO   | PRI | NULL    | NULL  |\n| COL2  | VARCHAR2(50) | YES  | NULL | NULL    | NULL  |\n| COL3  | NUMBER(30)   | YES  | NULL | NULL    | NULL  |\n+-------+--------------+------+-----+---------+-------+\n3 rows in set\n",
        "obclient> ALTER TABLE tbl2 DROP COLUMN col3;\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl2;\n+-------+--------------+------+-----+---------+-------+\n| FIELD | TYPE         | NULL | KEY | DEFAULT | EXTRA |\n+-------+--------------+------+-----+---------+-------+\n| COL1  | NUMBER(30)   | NO   | PRI | NULL    | NULL  |\n| COL2  | VARCHAR2(50) | YES  | NULL | NULL    | NULL  |\n+-------+--------------+------+-----+---------+-------+\n2 rows in set\n",
        "obclient> CREATE TABLE tbl2 (col1 NUMBER(30) PRIMARY KEY,col2 VARCHAR(50), col3 INT);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl2 ADD CONSTRAINT constraint_TBL2 UNIQUE (col2, col3);\nQuery OK, 0 rows affected\n\nobclient [SYS]> DESC tbl2;\n+-------+--------------+------+-----+---------+-------+\n| FIELD | TYPE         | NULL | KEY | DEFAULT | EXTRA |\n+-------+--------------+------+-----+---------+-------+\n| COL1  | NUMBER(30)   | NO   | PRI | NULL    | NULL  |\n| COL2  | VARCHAR2(50) | YES  | MUL | NULL    | NULL  |\n| COL3  | NUMBER(38)   | YES  | NULL | NULL    | NULL  |\n+-------+--------------+------+-----+---------+-------+\n3 rows in set\n\nobclient> INSERT INTO tbl2 VALUES('1','2','2');\nQuery OK, 1 row affected\n\nobclient> INSERT INTO tbl2 VALUES('2','2','2');\nORA-00001: unique constraint '2-2' for key 'CONSTRAINT_TBL2' violated\n\nobclient> INSERT INTO tbl2 VALUES('2','3','2');\nQuery OK, 1 row affected\n",
        "obclient> CREATE TABLE ref_t1(c1 INT PRIMARY KEY,C2 INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE ref_t2(c1 INT PRIMARY KEY,C2 INT);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE ref_t2 ADD CONSTRAINT fk1 FOREIGN KEY (c2) REFERENCES ref_t1(c1) ON DELETE SET NULL;\nQuery OK, 0 row affected\n",
        "obclient> ALTER TABLE tbl3 MODIFY PARTITION p1 ADD SUBPARTITION p1_r4 VALUES LESS THAN(2022);\nQuery OK, 0 rows affected\n",
        "obclient> ALTER TABLE tbl3 DROP SUBPARTITION p2_r3;\nQuery OK, 0 rows affected\n",
        "obclient> ALTER TABLE tbl3 ADD PARTITION p4 VALUES LESS THAN (400)\n(\n  SUBPARTITION p4_r1 VALUES LESS THAN (2019),\n  SUBPARTITION p4_r2 VALUES LESS THAN (2020),\n  SUBPARTITION p4_r3 VALUES LESS THAN (2021)\n);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl4(col1 INT, col2 INT, PRIMARY KEY(col1,col2))\n     PARTITION BY RANGE(col1)\n     SUBPARTITION BY RANGE(col2)\n     SUBPARTITION TEMPLATE\n     (\n     SUBPARTITION p0 VALUES LESS THAN (50),\n     SUBPARTITION p1 VALUES LESS THAN (100)\n     )\n     (\n     PARTITION p0 VALUES LESS THAN (100),\n     PARTITION p1 VALUES LESS THAN (200),\n     PARTITION p2 VALUES LESS THAN (300)\n     );\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl4 ADD PARTITION p3 VALUES LESS THAN (400);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl5(col1 int primary key, col2 int) PARALLEL 5;\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl5 PARALLEL 3;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE MMS_GROUPUSER (\n  \"ID\" VARCHAR2(254 BYTE) NOT NULL,\n  \"GROUPID\" VARCHAR2(254 BYTE),\n  \"USERID\" VARCHAR2(254 BYTE),\n  CONSTRAINT \"PK_MMS_GROUPUSER\" PRIMARY KEY (\"ID\"),\n  CONSTRAINT \"FK_MMS_GROUPUSER_02\" FOREIGN KEY (\"GROUPID\") REFERENCES MMS_GROUPUSER (\"ID\") ON DELETE CASCADE DISABLE\n);\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE CONSTRAINT_NAME LIKE 'FK_MMS_GROUPUSE%';\n+---------------------+-----------------+---------------+----------+\n| CONSTRAINT_NAME     | CONSTRAINT_TYPE | TABLE_NAME    | STATUS   |\n+---------------------+-----------------+---------------+----------+\n| FK_MMS_GROUPUSER_02 | R               | MMS_GROUPUSER | DISABLED |\n+---------------------+-----------------+---------------+----------+\n1 row in set\n\nobclient> ALTER TABLE MMS_GROUPUSER ENABLE CONSTRAINT FK_MMS_GROUPUSER_02;\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE CONSTRAINT_NAME LIKE 'FK_MMS_GROUPUSE%';\n+---------------------+-----------------+---------------+---------+\n| CONSTRAINT_NAME     | CONSTRAINT_TYPE | TABLE_NAME    | STATUS  |\n+---------------------+-----------------+---------------+---------+\n| FK_MMS_GROUPUSER_02 | R               | MMS_GROUPUSER | ENABLED |\n+---------------------+-----------------+---------------+---------+\n1 row in set\n",
        "obclient> CREATE TABLE tbl6 (log_id number NOT NULL,log_value varchar2(50),log_date date NOT NULL DEFAULT sysdate)\nPARTITION BY RANGE(log_date)\n(\n    PARTITION M202001 VALUES LESS THAN(TO_DATE('2020/02/01','YYYY/MM/DD'))\n    , PARTITION M202002 VALUES LESS THAN(TO_DATE('2020/03/01','YYYY/MM/DD'))\n    , PARTITION M202003 VALUES LESS THAN(TO_DATE('2020/04/01','YYYY/MM/DD'))\n    , PARTITION M202004 VALUES LESS THAN(TO_DATE('2020/05/01','YYYY/MM/DD'))\n    , PARTITION M202005 VALUES LESS THAN(TO_DATE('2020/06/01','YYYY/MM/DD'))\n    , PARTITION MMAX VALUES LESS THAN (MAXVALUE)\n);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl6 TRUNCATE PARTITION M202001, M202002 UPDATE GLOBAL INDEXES;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl7 (col1 INT, col2 INT, col3 INT,CONSTRAINT tbl7_equal_check1 CHECK(col2 = col3 * 2) ENABLE VALIDATE);\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE TABLE_NAME LIKE 'TBL%';\n+-------------------+-----------------+------------+---------+\n| CONSTRAINT_NAME   | CONSTRAINT_TYPE | TABLE_NAME | STATUS  |\n+-------------------+-----------------+------------+---------+\n| TBL8_EQUAL_CHECK1 | C               | TBL8       | ENABLED |\n| TBL7_EQUAL_CHECK1 | C               | TBL7       | ENABLED |\n+-------------------+-----------------+------------+---------+\n2 rows in set\n\nobclient> ALTER TABLE tbl7 DROP CONSTRAINT tbl7_equal_check1;\nQuery OK, 0 rows affected\n\nobclient> SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,STATUS FROM user_constraints WHERE TABLE_NAME LIKE 'TBL%';\n+-------------------+-----------------+------------+---------+\n| CONSTRAINT_NAME   | CONSTRAINT_TYPE | TABLE_NAME | STATUS  |\n+-------------------+-----------------+------------+---------+\n| TBL8_EQUAL_CHECK1 | C               | TBL8       | ENABLED |\n+-------------------+-----------------+------------+---------+\n1 row in set\n",
        "obclient> SHOW TABLEGROUPS;\n+-----------------+------------+---------------+\n| TABLEGROUP_NAME | TABLE_NAME | DATABASE_NAME |\n+-----------------+------------+---------------+\n| TBLGROUP1             | TBL8         | SYS           |\n| TBLGROUP2             | NULL       | NULL          |\n| oceanbase       | NULL       | NULL          |\n+-----------------+------------+---------------+\n3 rows in set\n\nobclient> ALTER TABLE tbl8 SET TABLEGROUP tblgroup2;\nQuery OK, 0 rows affected\n\nobclient> SHOW TABLEGROUPS;\n+-----------------+------------+---------------+\n| TABLEGROUP_NAME | TABLE_NAME | DATABASE_NAME |\n+-----------------+------------+---------------+\n| TBLGROUP1             | NULL       | NULL          |\n| TBLGROUP2             | TBL8         | SYS           |\n| oceanbase       | NULL       | NULL          |\n+-----------------+------------+---------------+\n3 rows in set\n",
        "obclient> CREATE TABLE primary_table (id NUMBER PRIMARY KEY, names VARCHAR(100) NOT NULL, foreign_col NUMBER);\nQuery OK, 0 rows affected\nobclient> CREATE TABLE reference_table (id NUMBER PRIMARY key, comments VARCHAR2(100) NOT NULL);\nQuery OK, 0 rows affected\nobclient> ALTER TABLE primary_table ADD CONSTRAINT cons_fk1 FOREIGN KEY(foreign_col) REFERENCES reference_table(id);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl9 (col1 NUMBER, col2 INT,col3 VARCHAR2(100));\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl9 ADD CONSTRAINT tbl1_pk PRIMARY KEY (col1);\nQuery OK, 0 rows affected\n",
        "obclient> ALTER TABLE tbl9 MODIFY PRIMARY KEY(col2);\nQuery OK, 0 rows affected\n",
        "obclient> ALTER TABLE tbl9 DROP PRIMARY KEY;\nQuery OK, 0 rows affected\n",
        "/* 创建二级分区表 range_range_table 并基于 col1 创建本地索引 */\nCREATE TABLE range_range_table(col1 INT, col2 INT, col3 INT)\n    PARTITION BY RANGE(col1)\n    SUBPARTITION BY RANGE(col2)\n       (PARTITION p0 VALUES LESS THAN(100)\n           (SUBPARTITION sp0 VALUES LESS THAN(100),\n            SUBPARTITION sp1 VALUES LESS THAN(200)\n           ),\n        PARTITION p1 VALUES LESS THAN(200)\n           (SUBPARTITION sp2 VALUES LESS THAN(100),\n            SUBPARTITION sp3 VALUES LESS THAN(200),\n            SUBPARTITION sp4 VALUES LESS THAN(300)\n           )\n        );\n\nCREATE INDEX local_idx_for_range_range_tb ON range_range_table (col1) LOCAL;\n\n/* 重命名一级分区，但修改不会影响到局部索引的分区名 */\n\nobclient> SELECT partition_name FROM SYS.USER_TAB_PARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+\n| PARTITION_NAME |\n+----------------+\n| P0             |\n| P1             |\n+----------------+\n2 rows in set\n\nobclient> ALTER TABLE range_range_table RENAME PARTITION p0 TO p10;\nQuery OK, 0 rows affected\n\nobclient> SELECT partition_name FROM SYS.USER_TAB_PARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+\n| PARTITION_NAME |\n+----------------+\n| P10            |\n| P1             |\n+----------------+\n2 rows in set\n\nobclient> SELECT partition_name FROM SYS.USER_IND_PARTITIONS WHERE index_name = 'LOCAL_IDX_FOR_RANGE_RANGE_TB';\n+----------------+\n| PARTITION_NAME |\n+----------------+\n| P0             |\n| P1             |\n+----------------+\n2 rows in set\n\n/* 重命名二级分区，但修改不会影响到局部索引的分区名 */\nobclient> SELECT partition_name, subpartition_name FROM SYS.USER_TAB_SUBPARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+-------------------+\n| PARTITION_NAME | SUBPARTITION_NAME |\n+----------------+-------------------+\n| P10            | SP0               |\n| P10            | SP1               |\n| P1             | SP2               |\n| P1             | SP3               |\n| P1             | SP4               |\n+----------------+-------------------+\n5 rows in set\n\nobclient> ALTER TABLE range_range_table RENAME SUBPARTITION sp0 TO sp10;\nQuery OK, 0 rows affected\n\nobclient> SELECT partition_name, subpartition_name FROM SYS.USER_TAB_SUBPARTITIONS WHERE table_name = 'RANGE_RANGE_TABLE';\n+----------------+-------------------+\n| PARTITION_NAME | SUBPARTITION_NAME |\n+----------------+-------------------+\n| P10            | SP10              |\n| P10            | SP1               |\n| P1             | SP2               |\n| P1             | SP3               |\n| P1             | SP4               |\n+----------------+-------------------+\n5 rows in set\n\nobclient> SELECT partition_name, subpartition_name FROM SYS.USER_IND_SUBPARTITIONS WHERE index_name = 'LOCAL_IDX_FOR_RANGE_RANGE_TB';\n+----------------+-------------------+\n| PARTITION_NAME | SUBPARTITION_NAME |\n+----------------+-------------------+\n| P0             | SP0               |\n| P0             | SP1               |\n| P1             | SP2               |\n| P1             | SP3               |\n| P1             | SP4               |\n+----------------+-------------------+\n5 rows in set\n",
        "CREATE TABLE tbl1 (col1 INT PRIMARY KEY, col2 VARCHAR(50));\n",
        "ALTER TABLE tbl1 ADD COLUMN GROUP(all columns, each column);\n",
        "ALTER TABLE tbl1 DROP COLUMN GROUP(all columns, each column);\n",
        "ALTER TABLE tbl1 ADD COLUMN GROUP(each column);\n",
        "ALTER TABLE tbl1 DROP COLUMN GROUP(each column);\n",
        "CREATE TABLE test_skidx(\n    col1 NUMBER SKIP_INDEX(MIN_MAX, SUM),\n    col2 FLOAT SKIP_INDEX(MIN_MAX),\n    col3 VARCHAR2(1024) SKIP_INDEX(MIN_MAX),\n    col4 CHAR(10)\n  );\n",
        "ALTER TABLE test_skidx MODIFY col2 FLOAT SKIP_INDEX(SUM);\n",
        "ALTER TABLE test_skidx MODIFY col4 CHAR(10) SKIP_INDEX(MIN_MAX);\n",
        "ALTER TABLE test_skidx MODIFY col1 NUMBER SKIP_INDEX();\n"
    ],
    "Category": [
        "DDL"
    ]
}