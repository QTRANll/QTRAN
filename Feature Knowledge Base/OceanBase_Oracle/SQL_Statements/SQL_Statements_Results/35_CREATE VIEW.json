{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054356"
    ],
    "Title": [
        "CREATE VIEW"
    ],
    "Feature": [
        "CREATE [OR REPLACE] [[NO] FORCE] VIEW view_name [(column_name_list)] AS select_stmt [WITH CHECK OPTION];\n\nselect_stmt:\n    SELECT column_name, [--string] \n        [, column_name, [--string] ...]\n    FROM from_list\n    [WHERE condition]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n"
    ],
    "Description": [
        "该语句用于创建视图语句，如果指定了 OR REPLACE 子句，该语句能够替换已有的视图。",
        "视图在数据库中实际上并不是以表的形式存在，视图是作为在 CREATE VIEW 语句中指定的 SELECT 语句的结果而派生出来的，每次使用时视图就会派生。",
        "如果 FROM 子句中引用了两个或多个表或视图，则称该视图为连接视图（Join View）。一个可更新的连接视图，也称为可修改的连接视图，涉及两个或多个基表或视图，并允许 DML 操作。可更新的视图不受限于 WITH READ ONLY 子句。",
        "要实现可更新，视图必须满足多个条件。例如，其中一条通用规则就是对于连接视图的 INSERT、UPDATE 或 DELETE 操作一次只能修改一个基表。",
        "\n\n\n参数\n描述\n\n\n\n\nOR REPLACE\n表示如果要创建的视图名称已存在，则使用新的定义重新创建视图。\n\n\n[NO] FORCE\n如果在创建视图时，不考虑该视图是否存在基表或存在引用的对象类型，以及视图所在 Schema 的所有者是否具有权限，请指定 FORCE。如果只在基表存在且视图所在 Schema 所有者具有权限时才创建视图，请指定 NOFORCE。NOFORCE 是默认设置。\n\n\nview_name\n视图名。\n\n\ncolumn_name_list\n视图必须具有唯一的列名，不得有重复，就像基表那样。默认情况下，由 SELECT 语句检索的列名将用作视图列名。要想为视图列定义明确的名称，可使用可选的 column_name_list 子句，ID 之间使用逗号分隔。column_name_list 中的名称数目必须等于 SELECT语句检索的列数。SELECT 语句检索的列可以是对表列的简单引用。也可以是使用函数、常量值、运算符等的表达式。\n\n\nselect_stmt\n是一种 SELECT 语句。它给出了视图的定义。该语句可以从基表或其他视图进行选择。更多 SELECT 语句信息，参见 SIMPLE SELECT。\n\n\n–string\n可选项，用于给视图添加注释。注释存储在视图定义中。 \n      \n说明\n–string 可以注释在 select_stmt 的任意位置。\n\n\n\nWITH CHECK OPTION\nWITH CHECK OPTION 是一种用于创建视图的语法，它用于确保插入或更新的数据满足视图的定义条件。 \n      \n注意\nOracle 模式下的 WITH CHECK OPTION 语法不支持指定为 LOCAL 或 CASCADED，默认为 CASCADED。\n\n\n\n"
    ],
    "Examples": [
        "obclient [SYS]> CREATE OR REPLACE FORCE VIEW view1(vcol1, vcol2) AS SELECT col1, col2 FROM tbl1;\n",
        "obclient [SYS]> CREATE TABLE tbl2 (col1 INT, col2 INT);\n",
        "obclient [SYS]> CREATE VIEW view2 AS SELECT * FROM tbl2 WHERE tbl2.col2 > 1 WITH CHECK OPTION;\n",
        "obclient [SYS]> CREATE VIEW view3 \n  AS SELECT col1, --col1 comment1\n    col2 --col1 comment2\n    FROM tbl2;\n",
        "obclient [SYS]> SHOW CREATE VIEW view3;\n",
        "+-------+--------------------------------------------------------------------------------------------------------------+----------------------+----------------------+\n| VIEW  | CREATE VIEW                                                                                                  | CHARACTER_SET_CLIENT | COLLATION_CONNECTION |\n+-------+--------------------------------------------------------------------------------------------------------------+----------------------+----------------------+\n| VIEW3 | CREATE VIEW \"VIEW3\" (\"COL1\", \"COL2\")  AS SELECT col1, --col1 comment1\n    col2 --col1 comment2\n    FROM tbl2 | utf8mb4              | utf8mb4_bin          |\n+-------+--------------------------------------------------------------------------------------------------------------+----------------------+----------------------+\n1 row in set\n",
        "obclient [SYS]> SELECT DBMS_METADATA.GET_DDL('VIEW', 'VIEW3', 'SYS') FROM dual;\n",
        "+--------------------------------------------------------------------------------------------------------------+\n| DBMS_METADATA.GET_DDL('VIEW','VIEW3','SYS')                                                                  |\n+--------------------------------------------------------------------------------------------------------------+\n| CREATE VIEW \"VIEW3\" (\"COL1\", \"COL2\")  AS SELECT col1, --col1 comment1\n    col2 --col1 comment2\n    FROM tbl2 |\n+--------------------------------------------------------------------------------------------------------------+\n1 row in set\n"
    ],
    "Category": [
        "DDL"
    ]
}