{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054349"
    ],
    "Title": [
        "CREATE TABLE"
    ],
    "Feature": [
        "CREATE [hint_options] [GLOBAL TEMPORARY] TABLE table_name\n      (table_definition_list) [table_option_list] [partition_option] [on_commit_option]\nCREATE [GLOBAL TEMPORARY] TABLE table_name\n      (table_definition_list) [table_option_list] [partition_option] [table_column_group_option] [AS] select;\n\ntable_definition_list:\n    table_definition [, table_definition ...]\n\ntable_definition:\n      column_definition\n     | [,\n        | [CONSTRAINT [constraint_name]] { PRIMARY KEY|UNIQUE } (column_name) //在创建所有列后添加约束\n        | [CONSTRAINT [constraint_name]] FOREIGN KEY (column_name, column_name ...) references_clause constraint_state\n        | [CONSTRAINT [constraint_name]] CHECK(expression) constraint_state\n       ]\n\ncolumn_definition_list:\n    column_definition [, column_definition ...]\n\ncolumn_definition:\n    column_name data_type\n    [VISIBLE|INVISIBLE]\n    {\n    [DEFAULT expression]\n    [NULL | NOT NULL]\n    [CONSTRAINT [constraint_name]] [ PRIMARY KEY|UNIQUE ]       //在创建列时添加约束\n    [CONSTRAINT [constraint_name] CHECK(expression) constraint_state]\n    [CONSTRAINT [constraint_name] references_clause]\n    |\n    [GENERATED ALWAYS] AS (expression) [VIRTUAL]\n    [NULL | NOT NULL] [UNIQUE KEY] [[PRIMARY] KEY] [UNIQUE LOWER_KEY] [COMMENT string] [SKIP_INDEX(skip_index_option_list)]\n    }\n\nskip_index_option_list:\n    skip_index_option [,skip_index_option ...]\n\nskip_index_option:\n    MIN_MAX\n    | SUM\n\nreferences_clause:\n     REFERENCES table_name [ (column_name, column_name ...) ] [ON DELETE {SET NULL | CASCADE}]\n\nconstraint_state:\n    [RELY | NORELY] [USING INDEX index_option_list] [ENABLE | DISABLE] [VALIDATE | NOVALIDATE]\n\nindex_option_list:\n    index_option [ index_option ...]\n\nindex_option:\n      [GLOBAL | LOCAL]\n    | block_size\n    | compression\n    | STORING(column_name_list)\n    | comment\n\ntable_option_list:\n    table_option [ table_option ...]\n\ntable_option:\n      TABLEGROUP = tablegroup_name\n    | block_size\n    | compression\n    | comment\n    | ENABLE ROW MOVEMENT\n    | DISABLE ROW MOVEMENT\n    | physical_attribute\n    | parallel_clause\n    | DUPLICATE_SCOPE [=] 'none|cluster'\n    | TABLE_MODE [=] 'table_mode_value'\n\nphysical_attribute_list:\n    physical_attribute [physical_attribute]\n\nphysical_attribute:\n    PCTFREE [=] num\n    | PCTUSED num\n    | INITRANS num\n    | MAXTRANS num\n    | STORAGE(storage_option [storage_option] ...)\n    | TABLESPACE tablespace\n\nparallel_clause:\n    {NOPARALLEL | PARALLEL integer}\n\ntable_mode_value:\n    NORMAL\n    | QUEUING\n    | MODERATE\n    | SUPER\n    | EXTREME\n\ncompression:\n    NOCOMPRESS\n    | COMPRESS { BASIC | FOR OLTP | FOR QUERY [LOW | HIGH]  | FOR ARCHIVE [LOW | HIGH]}\n\nstorage_option:\n    INITIAL num [K|M|G|T|P|E]\n    | NEXT num [K|M|G|T|P|E]\n    | MINEXTENTS num [K|M|G|T|P|E]\n    | MAXEXTENTS num [K|M|G|T|P|E]\n\npartition_option:\n      PARTITION BY HASH(column_name_list)\n      [subpartition_option] hash_partition_define\n    | PARTITION BY RANGE (column_name_list)\n      [subpartition_option] (range_partition_list)\n    | PARTITION BY LIST (column_name_list)\n      [subpartition_option] (list_partition_list)\n\n/*模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list) hash_subpartition_define\n    | SUBPARTITION BY RANGE (column_name_list) SUBPARTITION TEMPLATE\n      (range_subpartition_list)\n    | SUBPARTITION BY LIST (column_name_list) SUBPARTITION TEMPLATE\n      (list_subpartition_list)\n\n/*非模板化二级分区*/\nsubpartition_option:\n      SUBPARTITION BY HASH (column_name_list)\n    | SUBPARTITION BY RANGE (column_name_list)\n    | SUBPARTITION BY LIST (column_name_list)\n\nsubpartition_list:\n      (hash_subpartition_list)\n    | (range_subpartition_list)\n    | (list_subpartition_list)\n\nhash_partition_define:\n      PARTITIONS partition_count [TABLESPACE tablespace] [compression]\n    | (hash_partition_list)\n\nhash_partition_list:\n    hash_partition [, hash_partition ...]\n\nhash_partition:\n    partition [partition_name] [subpartition_list/*仅非模板化二级分区可定义*/]\n\nhash_subpartition_define:\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION TEMPLATE (hash_subpartition_list)\n\nhash_subpartition_list:\n    hash_subpartition [, hash_subpartition ...]\n\nhash_subpartition:\n    subpartition [subpartition_name]\n\nrange_partition_list:\n    range_partition [, range_partition ...]\n\nrange_partition:\n    PARTITION [partition_name]\n    VALUES LESS THAN {(expression_list) | (MAXVALUE)}\n    [subpartition_list/*仅非模板化二级分区可定义*/]\n    [ID = num] [physical_attribute_list] [compression]\n\nrange_subpartition_list:\n    range_subpartition [, range_subpartition ...]\n\nrange_subpartition:\n    SUBPARTITION subpartition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE} [physical_attribute_list]\n\nlist_partition_list:\n    list_partition [, list_partition] ...\n\nlist_partition:\n    PARTITION [partition_name]\n    VALUES (DEFAULT | expression_list)\n    [subpartition_list /*仅非模板化二级分区可定义*/]\n    [ID num] [physical_attribute_list] [compression]\n\nlist_subpartition_list:\n    list_subpartition [, list_subpartition] ...\n\nlist_subpartition:\n    SUBPARTITION [partition_name] VALUES (DEFAULT | expression_list) [physical_attribute_list]\n\nexpression_list:\n    expression [, expression ...]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n\npartition_name_list:\n    partition_name [, partition_name ...]\n\npartition_count | subpartition_count:\n    INT_VALUE\n\non_commit_option:\n    ON COMMIT DELETE ROWS\n  | ON COMMIT PRESERVE ROWS\n\ntable_column_group_option：\n    WITH COLUMN GROUP(all columns)\n  | WITH COLUMN GROUP(each column)\n  | WITH COLUMN GROUP(all columns, each column)\n"
    ],
    "Description": [
        "该语句用来在数据库中创建一张新表。",
        "\n\n\n参数\n描述\n\n\n\n\nhint_options\n指定 Hint 选项，为可选项。 \n      \n注意\n在当前版本中，CREATE TABLE 语句的 Hint 选项仅限于支持 /*+ parallel(N) */ 类型，其中 N 是并行度。并且该 Hint 选项仅适用于 CREATE TABLE … AS SELECT … 的场景，可以控制在表创建时数据查询和写入操作的并行度。\n\n\n\nGLOBAL TEMPORARY\n将该表创建为临时表。\n\n\nDEFAULT expression\n指定列的默认值。expression 支持包含 Sequence 的函数表达式。\n\n\nBLOCK_SIZE\n指定表的微块大小。\n\n\nCOMPRESSION\n指定存储格式 Flat/Encoding 以及压缩方法，对应如下： \n      \nnocompress：使用 Flat 格式，不进行压缩。\ncompress [basic]：使用 Flat 格式和 lz4_1.0 压缩方法。\ncompress for oltp：使用 Flat 格式和 zstd_1.3.8 压缩方法。\nquery low 或者 query high：使用 Encoding 格式和 lz4_1.0 压缩方法。\narchive low 或者 archive high：使用 Encoding 格式和 zstd_1.3.8 压缩方法。\n\n\n\ntablegroup_name\n指定表所属的 Table Group。\n\n\nFOREIGN KEY\n为创建的表指定外键。如果不指定外键名，则会使用表名 + OBFK + 创建时间命名。（例如，在 2021 年 8 月 1 日 00:00:00 为 t1 表创建的外键名称为 t1_OBFK_1627747200000000）。外键允许跨表交叉引用相关数据，当 DELETE 操作影响与子表相匹配行的父表中键值时，其结果取决于 ON DELETE 子句的引用操作： \n      \nCASCADE：表示从父表中删除或更新行，并自动删除或更新子表中匹配的行。\nSET NULL：表示从父表中删除或更新行，并将子表中的外键列设置为 NULL。\n\n\n\nVISIBLE\n表示列可见，是默认的列状态。\n\n\nINVISIBLE\n表示列不可见，当将一个列设置为 INVISIBLE 后，在查询时该列将不会被默认显示。\n\n\ncomment\n注释。不区分大小写。\n\n\nphysical_attribute\nPCTFREE: 指定宏块保留空间百分比。其它属性 STORAGE、TABLESPACE 等仅为了语法兼容方便迁移，不生效。\n\n\nENABLE/DISABLE ROW MOVEMENT\n是否允许在不同分区间移动以进行分区键更新。\n\n\nON COMMIT DELETE ROWS\n事务级临时表，提交时删除数据。\n\n\nON COMMIT PRESERVE ROWS\n会话级临时表，会话结束时删除数据。\n\n\nparallel_clause\n指定表级别的并行度： \n      \nNOPARALLEL：并行度为 1，为默认配置。\nPARALLEL integer：指定并行度，integer 取值大于等于 1。\n\n\n注意\n当指定并行度时，优先级关系如下：通过 Hint 指定的并行度 > 通过 ALTER SESSION 指定的并行度 > 表级别的并行度。\n\n\n\nDUPLICATE_SCOPE\n指定复制表的属性，取值如下： \n      \nnone：表示该表是一个普通表，为默认值。\n cluster：表示该表是一个复制表，Leader 需要将事务复制到当前租户的所有 F（全能）副本及 R（只读）副本。\n      OceanBase 数据库目前仅支持 cluster 级别的复制表。\n\n\ntable_column_group_option\n指定表列存选项。具体解释如下： \n      \nWITH COLUMN GROUP(all columns, each column)：指定创建行存列存冗余的表。\nWITH COLUMN GROUP(all columns)：指定添加行存表。\nWITH COLUMN GROUP(each column)：指定创建列存表。\n\n\n\nSKIP_INDEX\n标识列的 Skip Index 属性。取值如下： \n      \nMIN_MAX：是 Skip Index 中最通用的聚合数据类型，它会在索引节点粒度下存储被索引列的最大值、最小值和 Null Count。这种类型的数据可以加速下推的 Filter 和 MIN/MAX 聚合的下推。\nSUM：用于加速数值类型的 SUM 聚合的下推。\n\n\n注意\n\n\nJSON 和空间数据类型的列禁止创建 Skip Index。\n生成列禁止创建 Skip Index。\n\n\n\n\n\nTABLE_MODE\n可选项，用于指定合并触发阈值与合并策略，即控制数据转储后的合并行为。取值的详细介绍可参见下文 table_mode_value。\n\n\n",
        "table_mode_value",
        "\n说明\n在以下列出的 TABLE_MODE 模式中，除了 NORMAL 模式之外，所有模式都代表 QUEUING 表。这种 QUEUING 表是最基本的表类型，并且随后列出的几种模式（除了 NORMAL 模式）代表了使用更加积极的合并策略。\n",
        "NORMAL",
        "：默认值，表示正常。在该模式下，数据转储后触发合并的概率极低。",
        "QUEUING",
        "：在该模式下，数据转储后触发合并的概率低。",
        "MODERATE",
        "：表示适度。在该模式下，数据转储后触发合并的概率为中等。",
        "SUPER",
        "：表示超级。在该模式下，数据转储后触发合并的概率高。",
        "EXTREME",
        "：表示极端。在该模式下，转储后触发合并的概率较高。",
        "更多有关合并的信息，请参见 自适应合并。"
    ],
    "Examples": [
        "obclient> CREATE TABLE tbl1 (col1 INT PRIMARY KEY, col2 VARCHAR(50)) ;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl4 (col1 INT PRIMARY KEY, col2 INT) PARTITION BY HASH(col1) PARTITIONS 8;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl5 (col1 INT, col2 INT, col3 INT)\n                 PARTITION BY RANGE(col1)\n                 SUBPARTITION BY HASH(col2)  SUBPARTITIONS  5\n                 (PARTITION p0 VALUES LESS THAN(0),\n                  PARTITION p1 VALUES LESS THAN(100));\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl6 (col1 INT, col2 INT, col3 VARCHAR(64))\n                 COMPRESS FOR ARCHIVE\n                 PCTFREE 5;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE GLOBAL TEMPORARY TABLE tbl7(col1 INT) ON COMMIT DELETE ROWS;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl8 (col1 INT, col2 INT, col3 INT,CONSTRAINT equal_check1 CHECK(col2 = col3 * 2) ENABLE VALIDATE);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE ref_t1(c1 INT PRIMARY KEY,C2 INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE ref_t2(c1 INT PRIMARY KEY，C2 INT,FOREIGN KEY(c2) REFERENCES ref_t1(c1) ON DELETE SET NULL);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl9 (col1 INT, col2 INT, col3 INT)\n                 PARTITION BY RANGE(col1)\n                 SUBPARTITION BY RANGE(col2)\n(\n  PARTITION p0 VALUES LESS THAN(100)\n  (\n    SUBPARTITION p0_r1 VALUES LESS THAN(2019),\n    SUBPARTITION p0_r2 VALUES LESS THAN(2020),\n    SUBPARTITION p0_r3 VALUES LESS THAN(2021)\n  ),\n  PARTITION p1 VALUES LESS THAN(200)\n  (\n    SUBPARTITION p1_r1 VALUES LESS THAN(2019),\n    SUBPARTITION p1_r2 VALUES LESS THAN(2020),\n    SUBPARTITION p1_r3 VALUES LESS THAN(2021)\n  ),\n  PARTITION p2 VALUES LESS THAN(300)\n  (\n    SUBPARTITION p2_r1 VALUES LESS THAN(2019),\n    SUBPARTITION p2_r2 VALUES LESS THAN(2020),\n    SUBPARTITION p2_r3 VALUES LESS THAN(2021)\n  )\n);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl10(col1 INT PRIMARY KEY, col2 INT) PARALLEL 3;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE SEQUENCE SEQ_PERSONIPTVSEQ START WITH 1 MINVALUE 1 MAXVALUE 10 INCREMENT BY 2 NOCYCLE NOORDER CACHE 30;\nQuery OK, 0 rows affected\n\nobclient> SELECT LPAD(SEQ_PERSONIPTVSEQ.NEXTVAL,18,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')) FROM DUAL;\n+----------------------------------------------------------------------------+\n| LPAD(SEQ_PERSONIPTVSEQ.NEXTVAL,18,TO_CHAR(SYSDATE,'YYYY-MM-DDHH24:MI:SS')) |\n+----------------------------------------------------------------------------+\n| 2022-07-05 11:34:1                                                         |\n+----------------------------------------------------------------------------+\n1 row in set\n\nobclient> CREATE TABLE FUNC_DEFAULT_TEST ( OID NUMBER(20,0) DEFAULT LPAD(SEQ_PERSONIPTVSEQ.NEXTVAL,18,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')) NOT NULL);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE dup_t1(c1 int) DUPLICATE_SCOPE = 'cluster';\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO dup_t1 VALUES(1);\nQuery OK, 1 row affected\n\nobclient> SELECT * FROM dup_t1;\n+------+\n| c1   |\n+------+\n|    1 |\n+------+\n1 row in set\n",
        "CREATE TABLE tbl1_cg (col1 NUMBER PRIMARY KEY, col2 VARCHAR2(50)) WITH COLUMN GROUP(each column);\n",
        "CREATE TABLE test_skidx(\n  col1 NUMBER SKIP_INDEX(MIN_MAX, SUM),\n  col2 FLOAT SKIP_INDEX(MIN_MAX),\n  col3 VARCHAR2(1024) SKIP_INDEX(MIN_MAX),\n  col4 CHAR(10)\n);\n",
        "CREATE /*+ parallel(5) */ TABLE tbl1 (col1 NUMBER) AS SELECT col1 FROM tbl2;\n"
    ],
    "Category": [
        "DDL"
    ]
}