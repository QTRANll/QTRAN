{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/logical-functions"], "Title": ["\"and\"(a boolean, b boolean)"], "Feature": ["\"and\"(a boolean, b boolean)"], "Description": ["Return type: ", "boolean", "a AND b"], "Examples": ["\"and\"(true, false)"], "Category": ["Logical Functions"], "index": 0, "vector_txt": "0:Feature: \"and\"(a boolean, b boolean)\nDescription: Return type: booleana AND b\nExamples: \"and\"(true, false)\nCategory: Logical Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["position(s1 IN s2)"], "Feature": ["position(s1 IN s2)"], "Description": ["Return type: ", "int", "search for string s1 in string s2, when found return the position in s2 of the first match, when not found return 0"], "Examples": ["position('DB' IN 'MonetDB')"], "Category": ["Character String Functions"], "index": 1, "vector_txt": "1:Feature: position(s1 IN s2)\nDescription: Return type: intsearch for string s1 in string s2, when found return the position in s2 of the first match, when not found return 0\nExamples: position('DB' IN 'MonetDB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["repeat(s, nr)"], "Feature": ["repeat(s, nr)"], "Description": ["Return type: ", "same as input arg 1", "repeat string s the specified nr of times"], "Examples": ["repeat('kiss,', 3)"], "Category": ["Character String Functions"], "index": 2, "vector_txt": "2:Feature: repeat(s, nr)\nDescription: Return type: same as input arg 1repeat string s the specified nr of times\nExamples: repeat('kiss,', 3)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["replace(s, srch, repl)"], "Feature": ["replace(s, srch, repl)"], "Description": ["Return type: ", "same as input arg 1", "replace occurrences of string srch in string s by string repl"], "Examples": ["replace('abc', 'b', 'X')"], "Category": ["Character String Functions"], "index": 3, "vector_txt": "3:Feature: replace(s, srch, repl)\nDescription: Return type: same as input arg 1replace occurrences of string srch in string s by string repl\nExamples: replace('abc', 'b', 'X')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["right(s, int n)"], "Feature": ["right(s, int n)"], "Description": ["Return type: ", "same as input arg 1", "return last n characters in the string"], "Examples": ["right('MonetDB', 4)"], "Category": ["Character String Functions"], "index": 4, "vector_txt": "4:Feature: right(s, int n)\nDescription: Return type: same as input arg 1return last n characters in the string\nExamples: right('MonetDB', 4)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["rpad(s, int)"], "Feature": ["rpad(s, int)"], "Description": ["Return type: ", "same as input arg 1", "fill up the string to length len by appending spaces. If the string is already longer than length then it is truncated (on the right)."], "Examples": ["rpad('abc', 6) || 'End'"], "Category": ["Character String Functions"], "index": 5, "vector_txt": "5:Feature: rpad(s, int)\nDescription: Return type: same as input arg 1fill up the string to length len by appending spaces. If the string is already longer than length then it is truncated (on the right).\nExamples: rpad('abc', 6) || 'End'\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["rpad(s1, int len, s2)"], "Feature": ["rpad(s1, int len, s2)"], "Description": ["Return type: ", "same as input arg 1", "fill up the string s1 to length len by appending the characters s2. If the string s1 is already longer than length then it is truncated (on the right)."], "Examples": ["rpad('abc', 6, 'DB')"], "Category": ["Character String Functions"], "index": 6, "vector_txt": "6:Feature: rpad(s1, int len, s2)\nDescription: Return type: same as input arg 1fill up the string s1 to length len by appending the characters s2. If the string s1 is already longer than length then it is truncated (on the right).\nExamples: rpad('abc', 6, 'DB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["rtrim(s)"], "Feature": ["rtrim(s)"], "Description": ["Return type: ", "varchar", "remove trailing whitespace characters from string s"], "Examples": ["rtrim(E'ab df \\t\\n')"], "Category": ["Character String Functions"], "index": 7, "vector_txt": "7:Feature: rtrim(s)\nDescription: Return type: varcharremove trailing whitespace characters from string s\nExamples: rtrim(E'ab df \\t\\n')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["rtrim(s1, s2)"], "Feature": ["rtrim(s1, s2)"], "Description": ["Return type: ", "varchar", "remove trailing s2 strings from string s1"], "Examples": ["rtrim('aabcdaa', 'a')"], "Category": ["Character String Functions"], "index": 8, "vector_txt": "8:Feature: rtrim(s1, s2)\nDescription: Return type: varcharremove trailing s2 strings from string s1\nExamples: rtrim('aabcdaa', 'a')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["space(nr)"], "Feature": ["space(nr)"], "Description": ["Return type: ", "clob(nr)", "generates a string with nr spaces"], "Examples": ["select 's' || space(4) || 'e'"], "Category": ["Character String Functions"], "index": 9, "vector_txt": "9:Feature: space(nr)\nDescription: Return type: clob(nr)generates a string with nr spaces\nExamples: select 's' || space(4) || 'e'\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["splitpart(s, sep, n)"], "Feature": ["splitpart(s, sep, n)"], "Description": ["Return type: ", "same as input arg 1", "extract substring from string s by spliting on separator string sep the field before nth occurrence. n must be greater than zero"], "Examples": ["splitpart('a|a|bc|cd', '|', 3)"], "Category": ["Character String Functions"], "index": 10, "vector_txt": "10:Feature: splitpart(s, sep, n)\nDescription: Return type: same as input arg 1extract substring from string s by spliting on separator string sep the field before nth occurrence. n must be greater than zero\nExamples: splitpart('a|a|bc|cd', '|', 3)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\"between\"(arg_1 any, arg_2 any, arg_3 any, boolean, boolean, boolean, boolean, boolean)"], "Feature": ["\"between\"(arg_1 any, arg_2 any, arg_3 any, boolean, boolean, boolean, boolean, boolean)"], "Description": ["Return type: ", "boolean", "is arg1 between arg2 and arg3"], "Examples": ["\"between\"('ab', 'aa', 'ac', false, false, false, false, false)"], "Category": ["Comparison Functions"], "index": 11, "vector_txt": "11:Feature: \"between\"(arg_1 any, arg_2 any, arg_3 any, boolean, boolean, boolean, boolean, boolean)\nDescription: Return type: booleanis arg1 between arg2 and arg3\nExamples: \"between\"('ab', 'aa', 'ac', false, false, false, false, false)\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["sql_max(s1, s2)"], "Feature": ["sql_max(s1, s2)"], "Description": ["Return type: ", "same as input", "alphabetically ordered last string value of strings s1 and s2"], "Examples": ["sql_max('ab', 'ac')"], "Category": ["Character String Functions"], "index": 12, "vector_txt": "12:Feature: sql_max(s1, s2)\nDescription: Return type: same as inputalphabetically ordered last string value of strings s1 and s2\nExamples: sql_max('ab', 'ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["sql_min(s1, s2)"], "Feature": ["sql_min(s1, s2)"], "Description": ["Return type: ", "same as input", "alphabetically ordered first string value of strings s1 and s2"], "Examples": ["sql_min('ab', 'ac')"], "Category": ["Character String Functions"], "index": 13, "vector_txt": "13:Feature: sql_min(s1, s2)\nDescription: Return type: same as inputalphabetically ordered first string value of strings s1 and s2\nExamples: sql_min('ab', 'ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["startswith(s1, s2)"], "Feature": ["startswith(s1, s2)"], "Description": ["Return type: ", "boolean", "whether string s1 starts with string s2. returns null when either s1 or s2 is null"], "Examples": ["startswith('bcd', 'bc')"], "Category": ["Character String Functions"], "index": 14, "vector_txt": "14:Feature: startswith(s1, s2)\nDescription: Return type: booleanwhether string s1 starts with string s2. returns null when either s1 or s2 is null\nExamples: startswith('bcd', 'bc')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["startswith(s1, s2, icase)"], "Feature": ["startswith(s1, s2, icase)"], "Description": ["Return type: ", "boolean", "whether string s1 starts with string s2 matching case insenstive when icase is true, case sensitive when icase is false. returns null when either s1 or s2 is null"], "Examples": ["startswith('bcd', 'BC', true)"], "Category": ["Character String Functions"], "index": 15, "vector_txt": "15:Feature: startswith(s1, s2, icase)\nDescription: Return type: booleanwhether string s1 starts with string s2 matching case insenstive when icase is true, case sensitive when icase is false. returns null when either s1 or s2 is null\nExamples: startswith('bcd', 'BC', true)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["substr(s, startpos)"], "Feature": ["substr(s, startpos)"], "Description": ["Return type: ", "same as input arg 1", "extract substring starting from position startpos"], "Examples": ["substr('abCde', 3)"], "Category": ["Character String Functions"], "index": 16, "vector_txt": "16:Feature: substr(s, startpos)\nDescription: Return type: same as input arg 1extract substring starting from position startpos\nExamples: substr('abCde', 3)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["substr(s, startpos, count)"], "Feature": ["substr(s, startpos, count)"], "Description": ["Return type: ", "clob(count)", "extract substring starting from position startpos for count characters"], "Examples": ["substr('abCde', 2, 3)"], "Category": ["Character String Functions"], "index": 17, "vector_txt": "17:Feature: substr(s, startpos, count)\nDescription: Return type: clob(count)extract substring starting from position startpos for count characters\nExamples: substr('abCde', 2, 3)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["substring(s, startpos)"], "Feature": ["substring(s, startpos)"], "Description": ["Return type: ", "same as input arg 1", "extract substring starting from position startpos"], "Examples": ["substring('abcde', 3)"], "Category": ["Character String Functions"], "index": 18, "vector_txt": "18:Feature: substring(s, startpos)\nDescription: Return type: same as input arg 1extract substring starting from position startpos\nExamples: substring('abcde', 3)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["substring(s, startpos, count)"], "Feature": ["substring(s, startpos, count)"], "Description": ["Return type: ", "clob(count)", "extract substring starting from position startpos for count characters"], "Examples": ["substring('abcde', 2, 2)"], "Category": ["Character String Functions"], "index": 19, "vector_txt": "19:Feature: substring(s, startpos, count)\nDescription: Return type: clob(count)extract substring starting from position startpos for count characters\nExamples: substring('abcde', 2, 2)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["trim(s)"], "Feature": ["trim(s)"], "Description": ["Return type: ", "varchar", "remove leading and trailing whitespace characters from string s"], "Examples": ["trim(E' \\t\\fab df \\t\\n')"], "Category": ["Character String Functions"], "index": 20, "vector_txt": "20:Feature: trim(s)\nDescription: Return type: varcharremove leading and trailing whitespace characters from string s\nExamples: trim(E' \\t\\fab df \\t\\n')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["trim(s1, s2)"], "Feature": ["trim(s1, s2)"], "Description": ["Return type: ", "varchar", "remove leading and trailing s2 strings from string s1"], "Examples": ["trim('aabcdaa', 'a')"], "Category": ["Character String Functions"], "index": 21, "vector_txt": "21:Feature: trim(s1, s2)\nDescription: Return type: varcharremove leading and trailing s2 strings from string s1\nExamples: trim('aabcdaa', 'a')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["coalesce(arg1, arg2, ...)"], "Feature": ["coalesce(arg1, arg2, ...)"], "Description": ["Return type: ", "same as arg1 or arg2", "returns the first non-NULL value in the list, or NULL if all args are NULL. At least two parameters must be passed."], "Examples": ["coalesce(null, 'ac', 'dc')"], "Category": ["Comparison Functions"], "index": 22, "vector_txt": "22:Feature: coalesce(arg1, arg2, ...)\nDescription: Return type: same as arg1 or arg2returns the first non-NULL value in the list, or NULL if all args are NULL. At least two parameters must be passed.\nExamples: coalesce(null, 'ac', 'dc')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["\"truncate\"(s, n_chars)"], "Feature": ["\"truncate\"(s, n_chars)"], "Description": ["Return type: ", "same as input arg 1", "truncate the string s to a maximum of n_chars characters. Note: the function name truncate need to be surrounded by double quotes."], "Examples": ["\"truncate\"('Truncate', 4)"], "Category": ["Character String Functions"], "index": 23, "vector_txt": "23:Feature: \"truncate\"(s, n_chars)\nDescription: Return type: same as input arg 1truncate the string s to a maximum of n_chars characters. Note: the function name truncate need to be surrounded by double quotes.\nExamples: \"truncate\"('Truncate', 4)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["ucase(s)"], "Feature": ["ucase(s)"], "Description": ["Return type: ", "same as input", "convert string s to upper case"], "Examples": ["ucase('MonetDB')"], "Category": ["Character String Functions"], "index": 24, "vector_txt": "24:Feature: ucase(s)\nDescription: Return type: same as inputconvert string s to upper case\nExamples: ucase('MonetDB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["upper(s)"], "Feature": ["upper(s)"], "Description": ["Return type: ", "same as input", "convert string s to upper case"], "Examples": ["upper('MonetDB')"], "Category": ["Character String Functions"], "index": 25, "vector_txt": "25:Feature: upper(s)\nDescription: Return type: same as inputconvert string s to upper case\nExamples: upper('MonetDB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["levenshtein(s1, s2)"], "Feature": ["levenshtein(s1, s2)"], "Description": ["Return type: ", "int", "Compute the 'Levenshtein distance' where insertion/deletion and replacement costs are all 1"], "Examples": ["levenshtein('MonetDB', 'DB3')"], "Category": ["Character String Functions"], "index": 26, "vector_txt": "26:Feature: levenshtein(s1, s2)\nDescription: Return type: intCompute the 'Levenshtein distance' where insertion/deletion and replacement costs are all 1\nExamples: levenshtein('MonetDB', 'DB3')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["levenshtein(s1, s2, id, r)"], "Feature": ["levenshtein(s1, s2, id, r)"], "Description": ["Return type: ", "int", "compute the 'Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions or substitutions) required to change one word into the other."], "Examples": ["levenshtein('MonetDB', 'DB3', 1, 1)"], "Category": ["Character String Functions"], "index": 27, "vector_txt": "27:Feature: levenshtein(s1, s2, id, r)\nDescription: Return type: intcompute the 'Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions or substitutions) required to change one word into the other.\nExamples: levenshtein('MonetDB', 'DB3', 1, 1)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["levenshtein(s1, s2, int id, int r, int t)"], "Feature": ["levenshtein(s1, s2, int id, int r, int t)"], "Description": ["Return type: ", "int", "compute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions, substitutions and transpositions) required to change one word into the other."], "Examples": ["levenshtein('MonetDB', 'DB3', 4, 2, 1)"], "Category": ["Character String Functions"], "index": 28, "vector_txt": "28:Feature: levenshtein(s1, s2, int id, int r, int t)\nDescription: Return type: intcompute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions, substitutions and transpositions) required to change one word into the other.\nExamples: levenshtein('MonetDB', 'DB3', 4, 2, 1)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["jarowinkler(s1, s2)"], "Feature": ["jarowinkler(s1, s2)"], "Description": ["Return type: ", "double", "compute the 'Jaro-Winkler similarity' between two strings returning a double between 0 (exact match) and 1 (no similarity)"], "Examples": ["jarowinkler('MonetDB', 'DB free')"], "Category": ["Character String Functions"], "index": 29, "vector_txt": "29:Feature: jarowinkler(s1, s2)\nDescription: Return type: doublecompute the 'Jaro-Winkler similarity' between two strings returning a double between 0 (exact match) and 1 (no similarity)\nExamples: jarowinkler('MonetDB', 'DB free')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["dameraulevenshtein(s1, s2)"], "Feature": ["dameraulevenshtein(s1, s2)"], "Description": ["Return type: ", "int", "Compute the 'Damerau-Levenshtein distance' where insertion/deletion, replacement and transposition costs are all 1"], "Examples": ["dameraulevenshtein('MonetDB', 'DB3')"], "Category": ["Character String Functions"], "index": 30, "vector_txt": "30:Feature: dameraulevenshtein(s1, s2)\nDescription: Return type: intCompute the 'Damerau-Levenshtein distance' where insertion/deletion, replacement and transposition costs are all 1\nExamples: dameraulevenshtein('MonetDB', 'DB3')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["dameraulevenshtein(s1, s2, int id, int r, int t)"], "Feature": ["dameraulevenshtein(s1, s2, int id, int r, int t)"], "Description": ["Return type: ", "int", "compute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions or substitutions) required to change one word into the other."], "Examples": ["dameraulevenshtein('MonetDB', 'DB3', 1, 1, 1)"], "Category": ["Character String Functions"], "index": 31, "vector_txt": "31:Feature: dameraulevenshtein(s1, s2, int id, int r, int t)\nDescription: Return type: intcompute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions or substitutions) required to change one word into the other.\nExamples: dameraulevenshtein('MonetDB', 'DB3', 1, 1, 1)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["editdistance(s1, s2)"], "Feature": ["editdistance(s1, s2)"], "Description": ["Return type: ", "int", "compute the 'distance' between two strings returning an integer between 0 (equal) and n (largest distance) where n is the length of largest string"], "Examples": ["editdistance('MonetDB', 'DB3')"], "Category": ["Character String Functions"], "index": 32, "vector_txt": "32:Feature: editdistance(s1, s2)\nDescription: Return type: intcompute the 'distance' between two strings returning an integer between 0 (equal) and n (largest distance) where n is the length of largest string\nExamples: editdistance('MonetDB', 'DB3')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["{fn IFNULL(arg1, arg2)}"], "Feature": ["{fn IFNULL(arg1, arg2)}"], "Description": ["Return type: ", "same as arg1 or arg2", "returns arg1 when when arg1 IS NOT NULL else returns arg2"], "Examples": ["{fn ifnull(null, 'ams')}"], "Category": ["Comparison Functions"], "index": 33, "vector_txt": "33:Feature: {fn IFNULL(arg1, arg2)}\nDescription: Return type: same as arg1 or arg2returns arg1 when when arg1 IS NOT NULL else returns arg2\nExamples: {fn ifnull(null, 'ams')}\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["editdistance2(s1, s2)"], "Feature": ["editdistance2(s1, s2)"], "Description": ["Return type: ", "int", "compute the 'distance2' between two strings returning an integer between 0 (equal) and n (largest distance) where n is the length of largest string"], "Examples": ["editdistance2('MonetDB', 'DB3')"], "Category": ["Character String Functions"], "index": 34, "vector_txt": "34:Feature: editdistance2(s1, s2)\nDescription: Return type: intcompute the 'distance2' between two strings returning an integer between 0 (equal) and n (largest distance) where n is the length of largest string\nExamples: editdistance2('MonetDB', 'DB3')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["soundex(s)"], "Feature": ["soundex(s)"], "Description": ["Return type: ", "varchar(4)", "computes the Soundex code from string s using a phonetic algorithm"], "Examples": ["soundex('MonetDB')"], "Category": ["Character String Functions"], "index": 35, "vector_txt": "35:Feature: soundex(s)\nDescription: Return type: varchar(4)computes the Soundex code from string s using a phonetic algorithm\nExamples: soundex('MonetDB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["difference(s1, s2)"], "Feature": ["difference(s1, s2)"], "Description": ["Return type: ", "int", "converts two strings s1 and s2 to their soundex codes and reports the number of different code positions. Since soundex codes have four characters, the result ranges from zero to four, with zero being an exact match and four being no match."], "Examples": ["difference('MonetDB', 'DB3')"], "Category": ["Character String Functions"], "index": 36, "vector_txt": "36:Feature: difference(s1, s2)\nDescription: Return type: intconverts two strings s1 and s2 to their soundex codes and reports the number of different code positions. Since soundex codes have four characters, the result ranges from zero to four, with zero being an exact match and four being no match.\nExamples: difference('MonetDB', 'DB3')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["qgramnormalize(s)"], "Feature": ["qgramnormalize(s)"], "Description": ["Return type: ", "same as input", "normalisation of a string s. Converts letters to uppercase and removes all characters not in a..zA..Z0..9 or space"], "Examples": ["qgramnormalize(R'Prize \u20ac50!')"], "Category": ["Character String Functions"], "index": 37, "vector_txt": "37:Feature: qgramnormalize(s)\nDescription: Return type: same as inputnormalisation of a string s. Converts letters to uppercase and removes all characters not in a..zA..Z0..9 or space\nExamples: qgramnormalize(R'Prize \u20ac50!')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["contains(s1, s2)"], "Feature": ["contains(s1, s2)"], "Description": ["Return type: ", "boolean", "whether string s1 constains string s2. returns null when either s1 or s2 is null"], "Examples": ["contains('abcd', 'bc')"], "Category": ["Character String Functions"], "index": 38, "vector_txt": "38:Feature: contains(s1, s2)\nDescription: Return type: booleanwhether string s1 constains string s2. returns null when either s1 or s2 is null\nExamples: contains('abcd', 'bc')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["contains(s1, s2, icase)"], "Feature": ["contains(s1, s2, icase)"], "Description": ["Return type: ", "boolean", "whether string s1 constains string s2 matching case insenstive when icase is true, case sensitive when icase is false. returns null when either s1 or s2 is null"], "Examples": ["contains('abcd', 'BC', true)"], "Category": ["Character String Functions"], "index": 39, "vector_txt": "39:Feature: contains(s1, s2, icase)\nDescription: Return type: booleanwhether string s1 constains string s2 matching case insenstive when icase is true, case sensitive when icase is false. returns null when either s1 or s2 is null\nExamples: contains('abcd', 'BC', true)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["dameraulevenshtein(s1, s2, int insdel, int rep, int trans)"], "Feature": ["dameraulevenshtein(s1, s2, int insdel, int rep, int trans)"], "Description": ["Return type: ", "int", "Compute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions/deletions, substitutions and transpositions) required to change one word into the other. Variable costs of insertions/deletions, substitutions and transpositions, with insdel, rep and trans respectively"], "Examples": ["dameraulevenshtein('MonetDB', 'DB3', 4, 2, 1)"], "Category": ["Character String Functions"], "index": 40, "vector_txt": "40:Feature: dameraulevenshtein(s1, s2, int insdel, int rep, int trans)\nDescription: Return type: intCompute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions/deletions, substitutions and transpositions) required to change one word into the other. Variable costs of insertions/deletions, substitutions and transpositions, with insdel, rep and trans respectively\nExamples: dameraulevenshtein('MonetDB', 'DB3', 4, 2, 1)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["endswith(s1, s2)"], "Feature": ["endswith(s1, s2)"], "Description": ["Return type: ", "boolean", "whether string s1 ends with string s2. returns null when either s1 or s2 is null"], "Examples": ["endswith('abc', 'bc')"], "Category": ["Character String Functions"], "index": 41, "vector_txt": "41:Feature: endswith(s1, s2)\nDescription: Return type: booleanwhether string s1 ends with string s2. returns null when either s1 or s2 is null\nExamples: endswith('abc', 'bc')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["endswith(s1, s2, icase)"], "Feature": ["endswith(s1, s2, icase)"], "Description": ["Return type: ", "boolean", "whether string s1 ends with string s2 matching case insenstive when icase is true, case sensitive when icase is false. returns null when either s1 or s2 is null"], "Examples": ["endswith('abc', 'BC', true)"], "Category": ["Character String Functions"], "index": 42, "vector_txt": "42:Feature: endswith(s1, s2, icase)\nDescription: Return type: booleanwhether string s1 ends with string s2 matching case insenstive when icase is true, case sensitive when icase is false. returns null when either s1 or s2 is null\nExamples: endswith('abc', 'BC', true)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["levenshtein(s1, s2, int insdel, int rep)"], "Feature": ["levenshtein(s1, s2, int insdel, int rep)"], "Description": ["Return type: ", "int", "Compute the 'Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions/deletions or substitutions) required to change one word into the other. Variable costs of insertions/deletions or substitutions, with insdel and rep respectively."], "Examples": ["levenshtein('MonetDB', 'DB3', 4, 2)"], "Category": ["Character String Functions"], "index": 43, "vector_txt": "43:Feature: levenshtein(s1, s2, int insdel, int rep)\nDescription: Return type: intCompute the 'Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions/deletions or substitutions) required to change one word into the other. Variable costs of insertions/deletions or substitutions, with insdel and rep respectively.\nExamples: levenshtein('MonetDB', 'DB3', 4, 2)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["ifthenelse(boolean arg1, arg2, arg3)"], "Feature": ["ifthenelse(boolean arg1, arg2, arg3)"], "Description": ["Return type: ", "same as arg2 or arg3", "when arg1 expression evaluates to true then return arg2 else arg3"], "Examples": ["ifthenelse(('a' = 'b'), 1, 2)"], "Category": ["Comparison Functions"], "index": 44, "vector_txt": "44:Feature: ifthenelse(boolean arg1, arg2, arg3)\nDescription: Return type: same as arg2 or arg3when arg1 expression evaluates to true then return arg2 else arg3\nExamples: ifthenelse(('a' = 'b'), 1, 2)\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["levenshtein(s1, s2, int insdel, int rep, int trans)"], "Feature": ["levenshtein(s1, s2, int insdel, int rep, int trans)"], "Description": ["Return type: ", "int", "compute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions, substitutions and transpositions) required to change one word into the other."], "Examples": ["levenshtein('MonetDB', 'DB3', 4, 2, 1)"], "Category": ["Character String Functions"], "index": 45, "vector_txt": "45:Feature: levenshtein(s1, s2, int insdel, int rep, int trans)\nDescription: Return type: intcompute the 'Damerau-Levenshtein distance' between two strings returning the minimum number of single-character edits (insertions, deletions, substitutions and transpositions) required to change one word into the other.\nExamples: levenshtein('MonetDB', 'DB3', 4, 2, 1)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/binary-string-functions"], "Title": ["length(blob)"], "Feature": ["length(blob)"], "Description": ["Return type: ", "int", "number of bytes in binary string blob"], "Examples": ["length(x'0012FF')"], "Category": ["Binary String Functions"], "index": 46, "vector_txt": "46:Feature: length(blob)\nDescription: Return type: intnumber of bytes in binary string blob\nExamples: length(x'0012FF')\nCategory: Binary String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/binary-string-functions"], "Title": ["octet_length(blob)"], "Feature": ["octet_length(blob)"], "Description": ["Return type: ", "int", "number of bytes in binary string blob"], "Examples": ["octet_length(x'0012FF')"], "Category": ["Binary String Functions"], "index": 47, "vector_txt": "47:Feature: octet_length(blob)\nDescription: Return type: intnumber of bytes in binary string blob\nExamples: octet_length(x'0012FF')\nCategory: Binary String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["century(date)"], "Feature": ["century(date)"], "Description": ["Return type: ", "int", "extract century from a date or timestamp or timestamptz"], "Examples": ["century(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 48, "vector_txt": "48:Feature: century(date)\nDescription: Return type: intextract century from a date or timestamp or timestamptz\nExamples: century(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["curdate()"], "Feature": ["curdate()"], "Description": ["Return type: ", "date", "get current date"], "Examples": ["curdate()"], "Category": ["Date Time Functions"], "index": 49, "vector_txt": "49:Feature: curdate()\nDescription: Return type: dateget current date\nExamples: curdate()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["current_date()"], "Feature": ["current_date()"], "Description": ["Return type: ", "date", "get current date"], "Examples": ["current_date()"], "Category": ["Date Time Functions"], "index": 50, "vector_txt": "50:Feature: current_date()\nDescription: Return type: dateget current date\nExamples: current_date()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["current_time()"], "Feature": ["current_time()"], "Description": ["Return type: ", "timetz", "get current time with time zone"], "Examples": ["current_time()"], "Category": ["Date Time Functions"], "index": 51, "vector_txt": "51:Feature: current_time()\nDescription: Return type: timetzget current time with time zone\nExamples: current_time()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["current_timestamp()"], "Feature": ["current_timestamp()"], "Description": ["Return type: ", "timestamptz", "get current timestamp (date and time and fractions) with time zone"], "Examples": ["current_timestamp()"], "Category": ["Date Time Functions"], "index": 52, "vector_txt": "52:Feature: current_timestamp()\nDescription: Return type: timestamptzget current timestamp (date and time and fractions) with time zone\nExamples: current_timestamp()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["curtime()"], "Feature": ["curtime()"], "Description": ["Return type: ", "timetz", "get current time with time zone"], "Examples": ["curtime()"], "Category": ["Date Time Functions"], "index": 53, "vector_txt": "53:Feature: curtime()\nDescription: Return type: timetzget current time with time zone\nExamples: curtime()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.date_to_str(date, format_str)"], "Feature": ["sys.date_to_str(date, format_str)"], "Description": ["Return type: ", "clob", "convert date value to a string using format_str. See format specifiers"], "Examples": ["sys.date_to_str(date '2020-03-22', '%D %d.%m.%Y');"], "Category": ["Date Time Functions"], "index": 54, "vector_txt": "54:Feature: sys.date_to_str(date, format_str)\nDescription: Return type: clobconvert date value to a string using format_str. See format specifiers\nExamples: sys.date_to_str(date '2020-03-22', '%D %d.%m.%Y');\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["isnull(arg1)"], "Feature": ["isnull(arg1)"], "Description": ["Return type: ", "boolean", "is arg1 null"], "Examples": ["isnull('aa')"], "Category": ["Comparison Functions"], "index": 55, "vector_txt": "55:Feature: isnull(arg1)\nDescription: Return type: booleanis arg1 null\nExamples: isnull('aa')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.date_trunc(field_str, timestamp)"], "Feature": ["sys.date_trunc(field_str, timestamp)"], "Description": ["Return type: ", "timestamp", "Truncate a timestamp to granularity specified bij field_str. Allowed values for field_str are 'millennium', 'century', 'decade', 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'milliseconds', 'microseconds'."], "Examples": ["sys.date_trunc('month', timestamp '2020-03-22 13:16:57.734639');"], "Category": ["Date Time Functions"], "index": 56, "vector_txt": "56:Feature: sys.date_trunc(field_str, timestamp)\nDescription: Return type: timestampTruncate a timestamp to granularity specified bij field_str. Allowed values for field_str are 'millennium', 'century', 'decade', 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'milliseconds', 'microseconds'.\nExamples: sys.date_trunc('month', timestamp '2020-03-22 13:16:57.734639');\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"day\"(dt_or_ts)"], "Feature": ["\"day\"(dt_or_ts)"], "Description": ["Return type: ", "int", "extract month day nr (1..31) of a date or timestamp or timestamptz. same as: dayofmonth(date)"], "Examples": ["\"day\"(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 57, "vector_txt": "57:Feature: \"day\"(dt_or_ts)\nDescription: Return type: intextract month day nr (1..31) of a date or timestamp or timestamptz. same as: dayofmonth(date)\nExamples: \"day\"(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"day\"(sec_interval)"], "Feature": ["\"day\"(sec_interval)"], "Description": ["Return type: ", "bigint", "compute nr of days and truncate it to an integer"], "Examples": ["\"day\"(interval '3.23' second * (24 * 60 * 60))"], "Category": ["Date Time Functions"], "index": 58, "vector_txt": "58:Feature: \"day\"(sec_interval)\nDescription: Return type: bigintcompute nr of days and truncate it to an integer\nExamples: \"day\"(interval '3.23' second * (24 * 60 * 60))\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["{fn DAYNAME(dt_or_ts)}"], "Feature": ["{fn DAYNAME(dt_or_ts)}"], "Description": ["Return type: ", "varchar", "extract day name in current locale of a date or timestamp or timestamptz. This function requires the ODBC escape sequence notation."], "Examples": ["select {fn DAYNAME({d '2020-03-22'})}"], "Category": ["Date Time Functions"], "index": 59, "vector_txt": "59:Feature: {fn DAYNAME(dt_or_ts)}\nDescription: Return type: varcharextract day name in current locale of a date or timestamp or timestamptz. This function requires the ODBC escape sequence notation.\nExamples: select {fn DAYNAME({d '2020-03-22'})}\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["dayofmonth(dt_or_ts)"], "Feature": ["dayofmonth(dt_or_ts)"], "Description": ["Return type: ", "int", "extract month day nr (1..31) of a date or timestamp or timestamptz. same as: \"day\"(date)"], "Examples": ["dayofmonth(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 60, "vector_txt": "60:Feature: dayofmonth(dt_or_ts)\nDescription: Return type: intextract month day nr (1..31) of a date or timestamp or timestamptz. same as: \"day\"(date)\nExamples: dayofmonth(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["dayofweek(dt_or_ts)"], "Feature": ["dayofweek(dt_or_ts)"], "Description": ["Return type: ", "int", "extract week day nr (1..7) of a date or timestamp or timestamptz"], "Examples": ["dayofweek(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 61, "vector_txt": "61:Feature: dayofweek(dt_or_ts)\nDescription: Return type: intextract week day nr (1..7) of a date or timestamp or timestamptz\nExamples: dayofweek(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["dayofyear(dt_or_ts)"], "Feature": ["dayofyear(dt_or_ts)"], "Description": ["Return type: ", "int", "extract year day nr (1..366) of a date or timestamp or timestamptz"], "Examples": ["dayofyear(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 62, "vector_txt": "62:Feature: dayofyear(dt_or_ts)\nDescription: Return type: intextract year day nr (1..366) of a date or timestamp or timestamptz\nExamples: dayofyear(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["decade(dt_or_ts)"], "Feature": ["decade(dt_or_ts)"], "Description": ["Return type: ", "int", "extract decade nr of a date or timestamp or timestamptz"], "Examples": ["decade(date '2027-03-22')"], "Category": ["Date Time Functions"], "index": 63, "vector_txt": "63:Feature: decade(dt_or_ts)\nDescription: Return type: intextract decade nr of a date or timestamp or timestamptz\nExamples: decade(date '2027-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.epoch(int seconds)"], "Feature": ["sys.epoch(int seconds)"], "Description": ["Return type: ", "timestamptz", "add number of seconds to timestamp '1970-01-01 00:00:00.0'"], "Examples": ["sys.epoch(1234567890)"], "Category": ["Date Time Functions"], "index": 64, "vector_txt": "64:Feature: sys.epoch(int seconds)\nDescription: Return type: timestamptzadd number of seconds to timestamp '1970-01-01 00:00:00.0'\nExamples: sys.epoch(1234567890)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.epoch(decimal(18,3) seconds)"], "Feature": ["sys.epoch(decimal(18,3) seconds)"], "Description": ["Return type: ", "timestamptz", "add number of seconds to timestamp '1970-01-01 00:00:00.0'"], "Examples": ["sys.epoch(1234567890.456)"], "Category": ["Date Time Functions"], "index": 65, "vector_txt": "65:Feature: sys.epoch(decimal(18,3) seconds)\nDescription: Return type: timestamptzadd number of seconds to timestamp '1970-01-01 00:00:00.0'\nExamples: sys.epoch(1234567890.456)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["nullif(arg1, arg2)"], "Feature": ["nullif(arg1, arg2)"], "Description": ["Return type: ", "same as arg1", "returns NULL if arg1 = arg2 is true, otherwise returns arg1. Equivalent to: CASE WHEN arg1 = arg2 THEN NULL ELSE arg1 END"], "Examples": ["nullif('ams', 'ams')"], "Category": ["Comparison Functions"], "index": 66, "vector_txt": "66:Feature: nullif(arg1, arg2)\nDescription: Return type: same as arg1returns NULL if arg1 = arg2 is true, otherwise returns arg1. Equivalent to: CASE WHEN arg1 = arg2 THEN NULL ELSE arg1 END\nExamples: nullif('ams', 'ams')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.epoch(timestamp)"], "Feature": ["sys.epoch(timestamp)"], "Description": ["Return type: ", "int", "convert timestamp (or timestamptz) to nr of seconds since '1970-01-01 00:00:00.0'"], "Examples": ["sys.epoch(timestamp '2009-02-13 23:31:30.0')"], "Category": ["Date Time Functions"], "index": 67, "vector_txt": "67:Feature: sys.epoch(timestamp)\nDescription: Return type: intconvert timestamp (or timestamptz) to nr of seconds since '1970-01-01 00:00:00.0'\nExamples: sys.epoch(timestamp '2009-02-13 23:31:30.0')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["epoch_ms(dt_or_tm_or_ts_or_interval)"], "Feature": ["epoch_ms(dt_or_tm_or_ts_or_interval)"], "Description": ["Return type: ", "decimal(18,3)", "convert date or time or timestamp or interval to number of milliseconds since '1970-01-01 00:00:00.0'"], "Examples": ["epoch_ms(timestamp '2009-02-13 23:31:30.0')"], "Category": ["Date Time Functions"], "index": 68, "vector_txt": "68:Feature: epoch_ms(dt_or_tm_or_ts_or_interval)\nDescription: Return type: decimal(18,3)convert date or time or timestamp or interval to number of milliseconds since '1970-01-01 00:00:00.0'\nExamples: epoch_ms(timestamp '2009-02-13 23:31:30.0')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["extract(field from dt_value)"], "Feature": ["extract(field from dt_value)"], "Description": ["Return type: ", "int", "extract a specific field from a date or time or timestamp. Supported keywords for field are: CENTURY, DECADE, YEAR, QUARTER, MONTH, WEEK, DAY, DOW, DOY, HOUR, MINUTE and SECOND."], "Examples": ["extract(doy from date '2027-03-22')"], "Category": ["Date Time Functions"], "index": 69, "vector_txt": "69:Feature: extract(field from dt_value)\nDescription: Return type: intextract a specific field from a date or time or timestamp. Supported keywords for field are: CENTURY, DECADE, YEAR, QUARTER, MONTH, WEEK, DAY, DOW, DOY, HOUR, MINUTE and SECOND.\nExamples: extract(doy from date '2027-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["greatest(x, y)"], "Feature": ["greatest(x, y)"], "Description": ["Return type: ", "same as input", "greatest (highest) value of x and y (same as sql_max(x,y))"], "Examples": ["greatest(date '2020-03-22', date '2020-03-25')"], "Category": ["Date Time Functions"], "index": 70, "vector_txt": "70:Feature: greatest(x, y)\nDescription: Return type: same as inputgreatest (highest) value of x and y (same as sql_max(x,y))\nExamples: greatest(date '2020-03-22', date '2020-03-25')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"hour\"(tm_or_ts)"], "Feature": ["\"hour\"(tm_or_ts)"], "Description": ["Return type: ", "int", "extract hour nr (0..23) of a time or timetz or timestamp or timestamptz or sec_interval"], "Examples": ["\"hour\"(timetz '15:35:02.002345+01:00')"], "Category": ["Date Time Functions"], "index": 71, "vector_txt": "71:Feature: \"hour\"(tm_or_ts)\nDescription: Return type: intextract hour nr (0..23) of a time or timetz or timestamp or timestamptz or sec_interval\nExamples: \"hour\"(timetz '15:35:02.002345+01:00')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["least(x, y)"], "Feature": ["least(x, y)"], "Description": ["Return type: ", "same as input", "least (lowest) value of x and y (same as sql_min(x,y))"], "Examples": ["least(time '15:15:15', time '16:16:16')"], "Category": ["Date Time Functions"], "index": 72, "vector_txt": "72:Feature: least(x, y)\nDescription: Return type: same as inputleast (lowest) value of x and y (same as sql_min(x,y))\nExamples: least(time '15:15:15', time '16:16:16')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["local_timezone()"], "Feature": ["local_timezone()"], "Description": ["Return type: ", "sec_interval", "get local time zone as represented in seconds"], "Examples": ["local_timezone()"], "Category": ["Date Time Functions"], "index": 73, "vector_txt": "73:Feature: local_timezone()\nDescription: Return type: sec_intervalget local time zone as represented in seconds\nExamples: local_timezone()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["localtime()"], "Feature": ["localtime()"], "Description": ["Return type: ", "time", "get current local time without time zone"], "Examples": ["localtime()"], "Category": ["Date Time Functions"], "index": 74, "vector_txt": "74:Feature: localtime()\nDescription: Return type: timeget current local time without time zone\nExamples: localtime()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["localtimestamp()"], "Feature": ["localtimestamp()"], "Description": ["Return type: ", "timestamp", "get current local timestamp (date and time and fractions) without time zone"], "Examples": ["localtimestamp()"], "Category": ["Date Time Functions"], "index": 75, "vector_txt": "75:Feature: localtimestamp()\nDescription: Return type: timestampget current local timestamp (date and time and fractions) without time zone\nExamples: localtimestamp()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"minute\"(tm_or_ts)"], "Feature": ["\"minute\"(tm_or_ts)"], "Description": ["Return type: ", "int", "extract minutes (0..59) of a time or timetz or timestamp or timestamptz or sec_interval"], "Examples": ["\"minute\"(timetz '15:35:02.002345+01:00')"], "Category": ["Date Time Functions"], "index": 76, "vector_txt": "76:Feature: \"minute\"(tm_or_ts)\nDescription: Return type: intextract minutes (0..59) of a time or timetz or timestamp or timestamptz or sec_interval\nExamples: \"minute\"(timetz '15:35:02.002345+01:00')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\"like\"(s, pat, escp, isen)"], "Feature": ["\"like\"(s, pat, escp, isen)"], "Description": ["Return type: ", "boolean", "match pcre pattern 'pat' on string 's' using escape character 'escp' to escape wildcards, and flag 'isen' for case insensitive matches. when matched return true else false."], "Examples": ["\"like\"('ab', 'a%', '#', false)"], "Category": ["Comparison Functions"], "index": 77, "vector_txt": "77:Feature: \"like\"(s, pat, escp, isen)\nDescription: Return type: booleanmatch pcre pattern 'pat' on string 's' using escape character 'escp' to escape wildcards, and flag 'isen' for case insensitive matches. when matched return true else false.\nExamples: \"like\"('ab', 'a%', '#', false)\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"month\"(dt_or_ts)"], "Feature": ["\"month\"(dt_or_ts)"], "Description": ["Return type: ", "int", "extract month nr (1..12) of a date or timestamp or timestamptz or month_interval"], "Examples": ["\"month\"(date '2020-07-22')"], "Category": ["Date Time Functions"], "index": 78, "vector_txt": "78:Feature: \"month\"(dt_or_ts)\nDescription: Return type: intextract month nr (1..12) of a date or timestamp or timestamptz or month_interval\nExamples: \"month\"(date '2020-07-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["{fn MONTHNAME(dt_or_ts)}"], "Feature": ["{fn MONTHNAME(dt_or_ts)}"], "Description": ["Return type: ", "varchar", "extract month name in current locale of a date or timestamp or timestamptz. This function requires the ODBC escape sequence notation."], "Examples": ["select {fn MONTHNAME({d '2020-03-22'})}"], "Category": ["Date Time Functions"], "index": 79, "vector_txt": "79:Feature: {fn MONTHNAME(dt_or_ts)}\nDescription: Return type: varcharextract month name in current locale of a date or timestamp or timestamptz. This function requires the ODBC escape sequence notation.\nExamples: select {fn MONTHNAME({d '2020-03-22'})}\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["now()"], "Feature": ["now()"], "Description": ["Return type: ", "timestamptz", "get current timestamp (date and time and fractions) with time zone"], "Examples": ["now()"], "Category": ["Date Time Functions"], "index": 80, "vector_txt": "80:Feature: now()\nDescription: Return type: timestamptzget current timestamp (date and time and fractions) with time zone\nExamples: now()\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["quarter(dt_or_ts)"], "Feature": ["quarter(dt_or_ts)"], "Description": ["Return type: ", "int", "extract quarter nr (1..4) of a date or timestamp or timestamptz"], "Examples": ["quarter(date '2020-07-22')"], "Category": ["Date Time Functions"], "index": 81, "vector_txt": "81:Feature: quarter(dt_or_ts)\nDescription: Return type: intextract quarter nr (1..4) of a date or timestamp or timestamptz\nExamples: quarter(date '2020-07-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"second\"(sec_interval)"], "Feature": ["\"second\"(sec_interval)"], "Description": ["Return type: ", "int", "extract seconds (0 .. 59) of a sec_interval"], "Examples": ["\"second\"(interval '24' second)"], "Category": ["Date Time Functions"], "index": 82, "vector_txt": "82:Feature: \"second\"(sec_interval)\nDescription: Return type: intextract seconds (0 .. 59) of a sec_interval\nExamples: \"second\"(interval '24' second)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"second\"(tm_or_ts)"], "Feature": ["\"second\"(tm_or_ts)"], "Description": ["Return type: ", "decimal(9,6)", "extract seconds (0.000 .. 59.999999) of a time or timetz or timestamp or timestamptz"], "Examples": ["\"second\"(timetz '15:35:02.002345+01:00')"], "Category": ["Date Time Functions"], "index": 83, "vector_txt": "83:Feature: \"second\"(tm_or_ts)\nDescription: Return type: decimal(9,6)extract seconds (0.000 .. 59.999999) of a time or timetz or timestamp or timestamptz\nExamples: \"second\"(timetz '15:35:02.002345+01:00')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_add(dt_or_ts, month_interval)"], "Feature": ["sql_add(dt_or_ts, month_interval)"], "Description": ["Return type: ", "same as arg 1", "add an integer month interval value to a date or timestamp or timestamptz"], "Examples": ["sql_add(date '2021-12-31', interval '2' month)"], "Category": ["Date Time Functions"], "index": 84, "vector_txt": "84:Feature: sql_add(dt_or_ts, month_interval)\nDescription: Return type: same as arg 1add an integer month interval value to a date or timestamp or timestamptz\nExamples: sql_add(date '2021-12-31', interval '2' month)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_add(dt_or_tm, sec_interval)"], "Feature": ["sql_add(dt_or_tm, sec_interval)"], "Description": ["Return type: ", "same as arg 1", "add a decimal seconds interval value to a date or time or timetz or timestamp or timestamptz"], "Examples": ["sql_add(time '15:35:50', interval '50' second)"], "Category": ["Date Time Functions"], "index": 85, "vector_txt": "85:Feature: sql_add(dt_or_tm, sec_interval)\nDescription: Return type: same as arg 1add a decimal seconds interval value to a date or time or timetz or timestamp or timestamptz\nExamples: sql_add(time '15:35:50', interval '50' second)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_max(x, y)"], "Feature": ["sql_max(x, y)"], "Description": ["Return type: ", "same as input", "greatest (highest) value of x and y (same as greatest(x,y))"], "Examples": ["sql_max(date '2020-03-22', date '2020-03-25')"], "Category": ["Date Time Functions"], "index": 86, "vector_txt": "86:Feature: sql_max(x, y)\nDescription: Return type: same as inputgreatest (highest) value of x and y (same as greatest(x,y))\nExamples: sql_max(date '2020-03-22', date '2020-03-25')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_min(x, y)"], "Feature": ["sql_min(x, y)"], "Description": ["Return type: ", "same as input", "least (lowest) value of x and y(same as least(x,y))"], "Examples": ["sql_min(time '15:15:15', time '16:16:16')"], "Category": ["Date Time Functions"], "index": 87, "vector_txt": "87:Feature: sql_min(x, y)\nDescription: Return type: same as inputleast (lowest) value of x and y(same as least(x,y))\nExamples: sql_min(time '15:15:15', time '16:16:16')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["not_like(s, pat, escp, isen)"], "Feature": ["not_like(s, pat, escp, isen)"], "Description": ["Return type: ", "boolean", "match pcre pattern 'pat' on string 's' using escape character 'escp' to escape wildcards, and flag 'isen' for case insensitive matches. when matched return false else true."], "Examples": ["not_like('a_bc', '_%b%', '#', false)"], "Category": ["Comparison Functions"], "index": 88, "vector_txt": "88:Feature: not_like(s, pat, escp, isen)\nDescription: Return type: booleanmatch pcre pattern 'pat' on string 's' using escape character 'escp' to escape wildcards, and flag 'isen' for case insensitive matches. when matched return false else true.\nExamples: not_like('a_bc', '_%b%', '#', false)\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_sub(date, date)"], "Feature": ["sql_sub(date, date)"], "Description": ["Return type: ", "int", "subtract a date from a date returning nr of seconds between the two dates"], "Examples": ["sql_sub(date '2021-12-31', date '2021-12-11')"], "Category": ["Date Time Functions"], "index": 89, "vector_txt": "89:Feature: sql_sub(date, date)\nDescription: Return type: intsubtract a date from a date returning nr of seconds between the two dates\nExamples: sql_sub(date '2021-12-31', date '2021-12-11')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_sub(dt_or_ts, month_interval)"], "Feature": ["sql_sub(dt_or_ts, month_interval)"], "Description": ["Return type: ", "same as arg 1", "subtract an integer month interval value from a date or timestamp or timestamptz"], "Examples": ["select sql_sub(date '2021-12-31', interval '-2' month)"], "Category": ["Date Time Functions"], "index": 90, "vector_txt": "90:Feature: sql_sub(dt_or_ts, month_interval)\nDescription: Return type: same as arg 1subtract an integer month interval value from a date or timestamp or timestamptz\nExamples: select sql_sub(date '2021-12-31', interval '-2' month)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_sub(dt_or_tm, sec_interval)"], "Feature": ["sql_sub(dt_or_tm, sec_interval)"], "Description": ["Return type: ", "same as arg 1", "subtract a decimal seconds interval value from a date or time or timetz or timestamp or timestamptz"], "Examples": ["select sql_sub(time '15:35:50', interval '3:25' minute to second)"], "Category": ["Date Time Functions"], "index": 91, "vector_txt": "91:Feature: sql_sub(dt_or_tm, sec_interval)\nDescription: Return type: same as arg 1subtract a decimal seconds interval value from a date or time or timetz or timestamp or timestamptz\nExamples: select sql_sub(time '15:35:50', interval '3:25' minute to second)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_sub(time, time)"], "Feature": ["sql_sub(time, time)"], "Description": ["Return type: ", "sec_interval", "subtract a time from a time returning nr of seconds interval between the two times"], "Examples": ["sql_sub(time '9:00:00', time '17:00:00')"], "Category": ["Date Time Functions"], "index": 92, "vector_txt": "92:Feature: sql_sub(time, time)\nDescription: Return type: sec_intervalsubtract a time from a time returning nr of seconds interval between the two times\nExamples: sql_sub(time '9:00:00', time '17:00:00')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_sub(timestamp, timestamp)"], "Feature": ["sql_sub(timestamp, timestamp)"], "Description": ["Return type: ", "sec_interval", "subtract a timestamp from a timestamp returning nr of seconds interval between the two timestamps"], "Examples": ["sql_sub(timestamp '2021-12-31 18:00:00', timestamp '2021-12-31 17:00:00')"], "Category": ["Date Time Functions"], "index": 93, "vector_txt": "93:Feature: sql_sub(timestamp, timestamp)\nDescription: Return type: sec_intervalsubtract a timestamp from a timestamp returning nr of seconds interval between the two timestamps\nExamples: sql_sub(timestamp '2021-12-31 18:00:00', timestamp '2021-12-31 17:00:00')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_sub(timestamptz, timestamptz)"], "Feature": ["sql_sub(timestamptz, timestamptz)"], "Description": ["Return type: ", "sec_interval", "subtract a timestamptz from a timestamptz returning nr of seconds interval between the two timestamps with time zones"], "Examples": ["sql_sub(timestamptz '2021-12-31 18:00:00+02:00', timestamptz '2021-12-31 18:00:00-02:00')"], "Category": ["Date Time Functions"], "index": 94, "vector_txt": "94:Feature: sql_sub(timestamptz, timestamptz)\nDescription: Return type: sec_intervalsubtract a timestamptz from a timestamptz returning nr of seconds interval between the two timestamps with time zones\nExamples: sql_sub(timestamptz '2021-12-31 18:00:00+02:00', timestamptz '2021-12-31 18:00:00-02:00')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sql_sub(timetz, timetz)"], "Feature": ["sql_sub(timetz, timetz)"], "Description": ["Return type: ", "sec_interval", "subtract a timetz from a timetz returning nr of seconds interval between the two timetzs"], "Examples": ["sql_sub(timetz '18:00:00+02:00', timetz '18:00:00-02:00')"], "Category": ["Date Time Functions"], "index": 95, "vector_txt": "95:Feature: sql_sub(timetz, timetz)\nDescription: Return type: sec_intervalsubtract a timetz from a timetz returning nr of seconds interval between the two timetzs\nExamples: sql_sub(timetz '18:00:00+02:00', timetz '18:00:00-02:00')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.str_to_date(s, format_str)"], "Feature": ["sys.str_to_date(s, format_str)"], "Description": ["Return type: ", "date", "parse string s using format_str and construct a date value. See format specifiers"], "Examples": ["sys.str_to_date('4/30/2021', '%m/%d/%Y')"], "Category": ["Date Time Functions"], "index": 96, "vector_txt": "96:Feature: sys.str_to_date(s, format_str)\nDescription: Return type: dateparse string s using format_str and construct a date value. See format specifiers\nExamples: sys.str_to_date('4/30/2021', '%m/%d/%Y')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.str_to_time(s, format_str)"], "Feature": ["sys.str_to_time(s, format_str)"], "Description": ["Return type: ", "timetz", "parse string s using format_str and construct a time(0) with time zone value. See format specifiers"], "Examples": ["sys.str_to_time('09:30:49','%H:%M:%S')"], "Category": ["Date Time Functions"], "index": 97, "vector_txt": "97:Feature: sys.str_to_time(s, format_str)\nDescription: Return type: timetzparse string s using format_str and construct a time(0) with time zone value. See format specifiers\nExamples: sys.str_to_time('09:30:49','%H:%M:%S')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.str_to_timestamp(s, format_str)"], "Feature": ["sys.str_to_timestamp(s, format_str)"], "Description": ["Return type: ", "timestamptz", "parse string s using format_str and construct a timestamp with time zone value. See format specifiers"], "Examples": ["sys.str_to_timestamp('4/30/2021 09:30:49','%m/%d/%Y %H:%M:%S')"], "Category": ["Date Time Functions"], "index": 98, "vector_txt": "98:Feature: sys.str_to_timestamp(s, format_str)\nDescription: Return type: timestamptzparse string s using format_str and construct a timestamp with time zone value. See format specifiers\nExamples: sys.str_to_timestamp('4/30/2021 09:30:49','%m/%d/%Y %H:%M:%S')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/cast-conversion-functions"], "Title": ["CAST(col_expr AS data type)"], "Feature": ["CAST(col_expr AS data type)"], "Description": ["Return type: ", "same as requested data type", "converts the value of the col_expr into the specified data type"], "Examples": ["cast(123 as varchar(10))"], "Category": ["Cast Conversion Functions"], "index": 99, "vector_txt": "99:Feature: CAST(col_expr AS data type)\nDescription: Return type: same as requested data typeconverts the value of the col_expr into the specified data type\nExamples: cast(123 as varchar(10))\nCategory: Cast Conversion Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.time_to_str(timetz, format_str)"], "Feature": ["sys.time_to_str(timetz, format_str)"], "Description": ["Return type: ", "clob", "convert time with time zone value to a string using format_str. See format specifiers"], "Examples": ["sys.time_to_str(timetz '19:30:49', '%l hour %M:%S %p')"], "Category": ["Date Time Functions"], "index": 100, "vector_txt": "100:Feature: sys.time_to_str(timetz, format_str)\nDescription: Return type: clobconvert time with time zone value to a string using format_str. See format specifiers\nExamples: sys.time_to_str(timetz '19:30:49', '%l hour %M:%S %p')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["sys.timestamp_to_str(timestamptz, format_str)"], "Feature": ["sys.timestamp_to_str(timestamptz, format_str)"], "Description": ["Return type: ", "clob", "convert timestamp with time zone value to a string using format_str. See format specifiers"], "Examples": ["sys.timestamp_to_str(timestamptz '2021-12-31 18:00:00', '%m/%d/%Y %l:%M:%S %p')"], "Category": ["Date Time Functions"], "index": 101, "vector_txt": "101:Feature: sys.timestamp_to_str(timestamptz, format_str)\nDescription: Return type: clobconvert timestamp with time zone value to a string using format_str. See format specifiers\nExamples: sys.timestamp_to_str(timestamptz '2021-12-31 18:00:00', '%m/%d/%Y %l:%M:%S %p')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampadd(dt_ts_tm, interval)"], "Feature": ["timestampadd(dt_ts_tm, interval)"], "Description": ["Return type: ", "timestamp or timestamptz", "add interval (month or day or second) to a timestamp (with time zone) or date or time"], "Examples": ["select timestampadd(timestamp '2021-12-31 18:00:00', interval '2' month)"], "Category": ["Date Time Functions"], "index": 102, "vector_txt": "102:Feature: timestampadd(dt_ts_tm, interval)\nDescription: Return type: timestamp or timestamptzadd interval (month or day or second) to a timestamp (with time zone) or date or time\nExamples: select timestampadd(timestamp '2021-12-31 18:00:00', interval '2' month)\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff(ts_tstz, ts_tstz)"], "Feature": ["timestampdiff(ts_tstz, ts_tstz)"], "Description": ["Return type: ", "interval second", "returns difference of two timestamps or two timestamps with time zone"], "Examples": ["select timestampdiff(timestamp '2021-12-31 18:40:40', timestamp '2021-12-30 16:30:20')"], "Category": ["Date Time Functions"], "index": 103, "vector_txt": "103:Feature: timestampdiff(ts_tstz, ts_tstz)\nDescription: Return type: interval secondreturns difference of two timestamps or two timestamps with time zone\nExamples: select timestampdiff(timestamp '2021-12-31 18:40:40', timestamp '2021-12-30 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_day(ts_dt_tz, ts_dt_tz)"], "Feature": ["timestampdiff_day(ts_dt_tz, ts_dt_tz)"], "Description": ["Return type: ", "integer", "returns difference of two timestamps or timestamps with time zone or dates"], "Examples": ["select timestampdiff_day(timestamp '2021-12-31 18:40:40', timestamp '2021-12-20 16:30:20')"], "Category": ["Date Time Functions"], "index": 104, "vector_txt": "104:Feature: timestampdiff_day(ts_dt_tz, ts_dt_tz)\nDescription: Return type: integerreturns difference of two timestamps or timestamps with time zone or dates\nExamples: select timestampdiff_day(timestamp '2021-12-31 18:40:40', timestamp '2021-12-20 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_hour(ts_dt_tz, ts_dt_tz)"], "Feature": ["timestampdiff_hour(ts_dt_tz, ts_dt_tz)"], "Description": ["Return type: ", "bigint", "returns difference of two timestamps or timestamps with time zone or dates"], "Examples": ["select timestampdiff_hour(timestamp '2021-12-31 18:40:40', timestamp '2021-12-20 16:30:20')"], "Category": ["Date Time Functions"], "index": 105, "vector_txt": "105:Feature: timestampdiff_hour(ts_dt_tz, ts_dt_tz)\nDescription: Return type: bigintreturns difference of two timestamps or timestamps with time zone or dates\nExamples: select timestampdiff_hour(timestamp '2021-12-31 18:40:40', timestamp '2021-12-20 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_min(ts_dt_tz, ts_dt_tz)"], "Feature": ["timestampdiff_min(ts_dt_tz, ts_dt_tz)"], "Description": ["Return type: ", "bigint", "returns difference of two timestamps or timestamps with time zone or dates"], "Examples": ["select timestampdiff_min(timestamp '2021-12-31 18:40:40', timestamp '2021-12-31 16:30:20')"], "Category": ["Date Time Functions"], "index": 106, "vector_txt": "106:Feature: timestampdiff_min(ts_dt_tz, ts_dt_tz)\nDescription: Return type: bigintreturns difference of two timestamps or timestamps with time zone or dates\nExamples: select timestampdiff_min(timestamp '2021-12-31 18:40:40', timestamp '2021-12-31 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_month(ts_tm_tz, ts_tm_tz)"], "Feature": ["timestampdiff_month(ts_tm_tz, ts_tm_tz)"], "Description": ["Return type: ", "integer", "returns difference of two timestamps or two timestamps with time zone"], "Examples": ["select timestampdiff_month(timestamp '2021-12-31 18:40:40', timestamp '2021-02-20 16:30:20')"], "Category": ["Date Time Functions"], "index": 107, "vector_txt": "107:Feature: timestampdiff_month(ts_tm_tz, ts_tm_tz)\nDescription: Return type: integerreturns difference of two timestamps or two timestamps with time zone\nExamples: select timestampdiff_month(timestamp '2021-12-31 18:40:40', timestamp '2021-02-20 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_quarter(ts_tm_tz, ts_tm_tz)"], "Feature": ["timestampdiff_quarter(ts_tm_tz, ts_tm_tz)"], "Description": ["Return type: ", "integer", "returns difference of two timestamps or two timestamps with time zone"], "Examples": ["select timestampdiff_quarter(timestamp '2021-12-31 18:40:40', timestamp '2021-02-20 16:30:20')"], "Category": ["Date Time Functions"], "index": 108, "vector_txt": "108:Feature: timestampdiff_quarter(ts_tm_tz, ts_tm_tz)\nDescription: Return type: integerreturns difference of two timestamps or two timestamps with time zone\nExamples: select timestampdiff_quarter(timestamp '2021-12-31 18:40:40', timestamp '2021-02-20 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_sec(ts_dt_tz, ts_dt_tz)"], "Feature": ["timestampdiff_sec(ts_dt_tz, ts_dt_tz)"], "Description": ["Return type: ", "bigint", "returns difference of two timestamps or timestamps with time zone or dates"], "Examples": ["select timestampdiff_sec(timestamp '2021-12-31 18:40:40', timestamp '2021-12-31 16:30:20')"], "Category": ["Date Time Functions"], "index": 109, "vector_txt": "109:Feature: timestampdiff_sec(ts_dt_tz, ts_dt_tz)\nDescription: Return type: bigintreturns difference of two timestamps or timestamps with time zone or dates\nExamples: select timestampdiff_sec(timestamp '2021-12-31 18:40:40', timestamp '2021-12-31 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/cast-conversion-functions"], "Title": ["CONVERT(col_expr , data type)"], "Feature": ["CONVERT(col_expr , data type)"], "Description": ["Return type: ", "same as requested data type", "converts the value of the col_expr into the specified data type"], "Examples": ["convert(123, decimal(10,3))"], "Category": ["Cast Conversion Functions"], "index": 110, "vector_txt": "110:Feature: CONVERT(col_expr , data type)\nDescription: Return type: same as requested data typeconverts the value of the col_expr into the specified data type\nExamples: convert(123, decimal(10,3))\nCategory: Cast Conversion Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/logical-functions"], "Title": ["\"not\"(a boolean)"], "Feature": ["\"not\"(a boolean)"], "Description": ["Return type: ", "boolean", "NOT a"], "Examples": ["\"not\"(true)"], "Category": ["Logical Functions"], "index": 111, "vector_txt": "111:Feature: \"not\"(a boolean)\nDescription: Return type: booleanNOT a\nExamples: \"not\"(true)\nCategory: Logical Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_week(ts_tm_tz, ts_tm_tz)"], "Feature": ["timestampdiff_week(ts_tm_tz, ts_tm_tz)"], "Description": ["Return type: ", "integer", "returns difference of two timestamps or two timestamps with time zone"], "Examples": ["select timestampdiff_week(timestamp '2021-12-31 18:40:40', timestamp '2021-02-20 16:30:20')"], "Category": ["Date Time Functions"], "index": 112, "vector_txt": "112:Feature: timestampdiff_week(ts_tm_tz, ts_tm_tz)\nDescription: Return type: integerreturns difference of two timestamps or two timestamps with time zone\nExamples: select timestampdiff_week(timestamp '2021-12-31 18:40:40', timestamp '2021-02-20 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["timestampdiff_year(ts_tm_tz, ts_tm_tz)"], "Feature": ["timestampdiff_year(ts_tm_tz, ts_tm_tz)"], "Description": ["Return type: ", "integer", "returns difference of two timestamps or two timestamps with time zone"], "Examples": ["select timestampdiff_year(timestamp '2021-12-31 18:40:40', timestamp '2024-02-20 16:30:20')"], "Category": ["Date Time Functions"], "index": 113, "vector_txt": "113:Feature: timestampdiff_year(ts_tm_tz, ts_tm_tz)\nDescription: Return type: integerreturns difference of two timestamps or two timestamps with time zone\nExamples: select timestampdiff_year(timestamp '2021-12-31 18:40:40', timestamp '2024-02-20 16:30:20')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["usweekofyear(date)"], "Feature": ["usweekofyear(date)"], "Description": ["Return type: ", "int", "extract us week number (1 .. 53) of a date. The US system has weeks from Sunday through Saturday, and partial weeks at the beginning and the end of the year."], "Examples": ["usweekofyear(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 114, "vector_txt": "114:Feature: usweekofyear(date)\nDescription: Return type: intextract us week number (1 .. 53) of a date. The US system has weeks from Sunday through Saturday, and partial weeks at the beginning and the end of the year.\nExamples: usweekofyear(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["week(dt_or_ts)"], "Feature": ["week(dt_or_ts)"], "Description": ["Return type: ", "int", "extract ISO 8601 week number (1 .. 53) of a date or timestamp or timestamptz. same as: weekofyear(date)"], "Examples": ["week(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 115, "vector_txt": "115:Feature: week(dt_or_ts)\nDescription: Return type: intextract ISO 8601 week number (1 .. 53) of a date or timestamp or timestamptz. same as: weekofyear(date)\nExamples: week(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["weekofyear(dt_or_ts)"], "Feature": ["weekofyear(dt_or_ts)"], "Description": ["Return type: ", "int", "extract ISO 8601 week number (1 .. 53) of a date or timestamp or timestamptz. same as: week(date)"], "Examples": ["weekofyear(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 116, "vector_txt": "116:Feature: weekofyear(dt_or_ts)\nDescription: Return type: intextract ISO 8601 week number (1 .. 53) of a date or timestamp or timestamptz. same as: week(date)\nExamples: weekofyear(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/date-time-functions"], "Title": ["\"year\"(dt_or_ts)"], "Feature": ["\"year\"(dt_or_ts)"], "Description": ["Return type: ", "int", "extract year number of a date or timestamp or timestamptz or month_interval"], "Examples": ["\"year\"(date '2020-03-22')"], "Category": ["Date Time Functions"], "index": 117, "vector_txt": "117:Feature: \"year\"(dt_or_ts)\nDescription: Return type: intextract year number of a date or timestamp or timestamptz or month_interval\nExamples: \"year\"(date '2020-03-22')\nCategory: Date Time Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.abbrev(inet)"], "Feature": ["sys.abbrev(inet)"], "Description": ["Return type: ", "clob", "abbreviated display format as text"], "Examples": ["sys.abbrev(inet '10.1.0.0/16')"], "Category": ["INET Functions"], "index": 118, "vector_txt": "118:Feature: sys.abbrev(inet)\nDescription: Return type: clobabbreviated display format as text\nExamples: sys.abbrev(inet '10.1.0.0/16')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.broadcast(inet)"], "Feature": ["sys.broadcast(inet)"], "Description": ["Return type: ", "inet", "broadcast address for network"], "Examples": ["sys.broadcast(inet '192.168.1.5/24')"], "Category": ["INET Functions"], "index": 119, "vector_txt": "119:Feature: sys.broadcast(inet)\nDescription: Return type: inetbroadcast address for network\nExamples: sys.broadcast(inet '192.168.1.5/24')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.host(inet)"], "Feature": ["sys.host(inet)"], "Description": ["Return type: ", "clob", "extract IP address as text"], "Examples": ["sys.host(inet '192.168.1.5/24')"], "Category": ["INET Functions"], "index": 120, "vector_txt": "120:Feature: sys.host(inet)\nDescription: Return type: clobextract IP address as text\nExamples: sys.host(inet '192.168.1.5/24')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.hostmask(inet)"], "Feature": ["sys.hostmask(inet)"], "Description": ["Return type: ", "inet", "construct host mask for network"], "Examples": ["sys.hostmask(inet '192.168.23.20/30')"], "Category": ["INET Functions"], "index": 121, "vector_txt": "121:Feature: sys.hostmask(inet)\nDescription: Return type: inetconstruct host mask for network\nExamples: sys.hostmask(inet '192.168.23.20/30')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["abs(x)"], "Feature": ["abs(x)"], "Description": ["Return type: ", "same as input", "absolute value of a number"], "Examples": ["abs(-17.4)"], "Category": ["Mathematics Functions"], "index": 122, "vector_txt": "122:Feature: abs(x)\nDescription: Return type: same as inputabsolute value of a number\nExamples: abs(-17.4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.left_shift(inet, inet)"], "Feature": ["sys.left_shift(inet, inet)"], "Description": ["Return type: ", "boolean", "is contained by"], "Examples": ["sys.left_shift(inet '192.168.1/24', inet '192.168.1.5')"], "Category": ["INET Functions"], "index": 123, "vector_txt": "123:Feature: sys.left_shift(inet, inet)\nDescription: Return type: booleanis contained by\nExamples: sys.left_shift(inet '192.168.1/24', inet '192.168.1.5')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.left_shift_assign(inet, inet)"], "Feature": ["sys.left_shift_assign(inet, inet)"], "Description": ["Return type: ", "boolean", "is contained by or equals"], "Examples": ["sys.left_shift_assign(inet '192.168.1/24', inet '192.168.1/24')"], "Category": ["INET Functions"], "index": 124, "vector_txt": "124:Feature: sys.left_shift_assign(inet, inet)\nDescription: Return type: booleanis contained by or equals\nExamples: sys.left_shift_assign(inet '192.168.1/24', inet '192.168.1/24')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.masklen(inet)"], "Feature": ["sys.masklen(inet)"], "Description": ["Return type: ", "int", "extract netmask length"], "Examples": ["sys.masklen(inet '192.168.1.5/24')"], "Category": ["INET Functions"], "index": 125, "vector_txt": "125:Feature: sys.masklen(inet)\nDescription: Return type: intextract netmask length\nExamples: sys.masklen(inet '192.168.1.5/24')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.netmask(inet)"], "Feature": ["sys.netmask(inet)"], "Description": ["Return type: ", "inet", "construct netmask for network"], "Examples": ["sys.netmask(inet '192.168.1.5/24')"], "Category": ["INET Functions"], "index": 126, "vector_txt": "126:Feature: sys.netmask(inet)\nDescription: Return type: inetconstruct netmask for network\nExamples: sys.netmask(inet '192.168.1.5/24')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.network(inet)"], "Feature": ["sys.network(inet)"], "Description": ["Return type: ", "inet", "extract network part of address"], "Examples": ["sys.network(inet '192.168.1.5/24')"], "Category": ["INET Functions"], "index": 127, "vector_txt": "127:Feature: sys.network(inet)\nDescription: Return type: inetextract network part of address\nExamples: sys.network(inet '192.168.1.5/24')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.right_shift(inet, inet)"], "Feature": ["sys.right_shift(inet, inet)"], "Description": ["Return type: ", "boolean", "contains"], "Examples": ["sys.right_shift(inet '192.168.1/24', inet '192.168.1.5')"], "Category": ["INET Functions"], "index": 128, "vector_txt": "128:Feature: sys.right_shift(inet, inet)\nDescription: Return type: booleancontains\nExamples: sys.right_shift(inet '192.168.1/24', inet '192.168.1.5')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.right_shift_assign(inet, inet)"], "Feature": ["sys.right_shift_assign(inet, inet)"], "Description": ["Return type: ", "boolean", "contains or equals"], "Examples": ["sys.right_shift_assign(inet '192.168.1/24', inet '192.168.1/24')"], "Category": ["INET Functions"], "index": 129, "vector_txt": "129:Feature: sys.right_shift_assign(inet, inet)\nDescription: Return type: booleancontains or equals\nExamples: sys.right_shift_assign(inet '192.168.1/24', inet '192.168.1/24')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.setmasklen(inet, int)"], "Feature": ["sys.setmasklen(inet, int)"], "Description": ["Return type: ", "inet", "set netmask length for inet value"], "Examples": ["sys.setmasklen(inet '192.168.1.5/24', 16)"], "Category": ["INET Functions"], "index": 130, "vector_txt": "130:Feature: sys.setmasklen(inet, int)\nDescription: Return type: inetset netmask length for inet value\nExamples: sys.setmasklen(inet '192.168.1.5/24', 16)\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/inet-functions"], "Title": ["sys.text(inet)"], "Feature": ["sys.text(inet)"], "Description": ["Return type: ", "clob", "extract IP address and netmask length as text"], "Examples": ["sys.text(inet '192.168.1.5')"], "Category": ["INET Functions"], "index": 131, "vector_txt": "131:Feature: sys.text(inet)\nDescription: Return type: clobextract IP address and netmask length as text\nExamples: sys.text(inet '192.168.1.5')\nCategory: INET Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.filter(js, indx)"], "Feature": ["json.filter(js, indx)"], "Description": ["Return type: ", "json", "extracts a indexed component from js. The index starts at 0 for the first element."], "Examples": ["json.filter(json '[\"a\", 4]', 1)"], "Category": ["JSON Functions"], "index": 132, "vector_txt": "132:Feature: json.filter(js, indx)\nDescription: Return type: jsonextracts a indexed component from js. The index starts at 0 for the first element.\nExamples: json.filter(json '[\"a\", 4]', 1)\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["bit_and(x, y)"], "Feature": ["bit_and(x, y)"], "Description": ["Return type: ", "int", "bitwise AND"], "Examples": ["bit_and(91, 15)"], "Category": ["Mathematics Functions"], "index": 133, "vector_txt": "133:Feature: bit_and(x, y)\nDescription: Return type: intbitwise AND\nExamples: bit_and(91, 15)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.filter(js, pathexpr)"], "Feature": ["json.filter(js, pathexpr)"], "Description": ["Return type: ", "json", "extracts the compgonent from js that satisfied the pathexpr string. The supported JSON path expression syntax is documented at JSONPath"], "Examples": ["json.filter(json '{\"price\":9}', '$..price')"], "Category": ["JSON Functions"], "index": 134, "vector_txt": "134:Feature: json.filter(js, pathexpr)\nDescription: Return type: jsonextracts the compgonent from js that satisfied the pathexpr string. The supported JSON path expression syntax is documented at JSONPath\nExamples: json.filter(json '{\"price\":9}', '$..price')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.\"integer\"(js)"], "Feature": ["json.\"integer\"(js)"], "Description": ["Return type: ", "bigint or int or smallint or tinyint", "turn a number or singleton array value or singleton object element of js into an integer. Returns null if it fails."], "Examples": ["json.\"integer\"(json '{\"n\":4}')"], "Category": ["JSON Functions"], "index": 135, "vector_txt": "135:Feature: json.\"integer\"(js)\nDescription: Return type: bigint or int or smallint or tinyintturn a number or singleton array value or singleton object element of js into an integer. Returns null if it fails.\nExamples: json.\"integer\"(json '{\"n\":4}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.isarray(str)"], "Feature": ["json.isarray(str)"], "Description": ["Return type: ", "boolean", "checks the string str for JSON array compliance"], "Examples": ["json.isarray('[1,7]')"], "Category": ["JSON Functions"], "index": 136, "vector_txt": "136:Feature: json.isarray(str)\nDescription: Return type: booleanchecks the string str for JSON array compliance\nExamples: json.isarray('[1,7]')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.isarray(js)"], "Feature": ["json.isarray(js)"], "Description": ["Return type: ", "boolean", "checks the JSON value js for JSON array compliance"], "Examples": ["json.isarray(json '[1,7]')"], "Category": ["JSON Functions"], "index": 137, "vector_txt": "137:Feature: json.isarray(js)\nDescription: Return type: booleanchecks the JSON value js for JSON array compliance\nExamples: json.isarray(json '[1,7]')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.isobject(str)"], "Feature": ["json.isobject(str)"], "Description": ["Return type: ", "boolean", "checks the string str for JSON object compliance"], "Examples": ["json.isobject('{\"n\":4}')"], "Category": ["JSON Functions"], "index": 138, "vector_txt": "138:Feature: json.isobject(str)\nDescription: Return type: booleanchecks the string str for JSON object compliance\nExamples: json.isobject('{\"n\":4}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.isobject(js)"], "Feature": ["json.isobject(js)"], "Description": ["Return type: ", "boolean", "checks the JSON value js for JSON object compliance"], "Examples": ["json.isobject(json '{\"n\":4}')"], "Category": ["JSON Functions"], "index": 139, "vector_txt": "139:Feature: json.isobject(js)\nDescription: Return type: booleanchecks the JSON value js for JSON object compliance\nExamples: json.isobject(json '{\"n\":4}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.isvalid(str)"], "Feature": ["json.isvalid(str)"], "Description": ["Return type: ", "boolean", "checks the string str for JSON syntax compliance"], "Examples": ["json.isvalid('{\"a\":[1]}')"], "Category": ["JSON Functions"], "index": 140, "vector_txt": "140:Feature: json.isvalid(str)\nDescription: Return type: booleanchecks the string str for JSON syntax compliance\nExamples: json.isvalid('{\"a\":[1]}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.isvalid(js)"], "Feature": ["json.isvalid(js)"], "Description": ["Return type: ", "boolean", "checks the JSON value js for JSON validity"], "Examples": ["json.isvalid(json '{\"a\":[1,2]}')"], "Category": ["JSON Functions"], "index": 141, "vector_txt": "141:Feature: json.isvalid(js)\nDescription: Return type: booleanchecks the JSON value js for JSON validity\nExamples: json.isvalid(json '{\"a\":[1,2]}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.keyarray(js)"], "Feature": ["json.keyarray(js)"], "Description": ["Return type: ", "json", "returns an arraylist of key tags for the top-level components of js. Note js must represent a JSON object else an error (Object expected) is reported"], "Examples": ["json.keyarray(json '{\"id\":2, \"nm\":\"X\"}')"], "Category": ["JSON Functions"], "index": 142, "vector_txt": "142:Feature: json.keyarray(js)\nDescription: Return type: jsonreturns an arraylist of key tags for the top-level components of js. Note js must represent a JSON object else an error (Object expected) is reported\nExamples: json.keyarray(json '{\"id\":2, \"nm\":\"X\"}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.length(js)"], "Feature": ["json.length(js)"], "Description": ["Return type: ", "int", "returns the number of top-level components of js"], "Examples": ["json.length(json '{\"a\":[1]}')"], "Category": ["JSON Functions"], "index": 143, "vector_txt": "143:Feature: json.length(js)\nDescription: Return type: intreturns the number of top-level components of js\nExamples: json.length(json '{\"a\":[1]}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["bit_not(x)"], "Feature": ["bit_not(x)"], "Description": ["Return type: ", "int", "bitwise NOT"], "Examples": ["bit_not(1)"], "Category": ["Mathematics Functions"], "index": 144, "vector_txt": "144:Feature: bit_not(x)\nDescription: Return type: intbitwise NOT\nExamples: bit_not(1)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.number(js)"], "Feature": ["json.number(js)"], "Description": ["Return type: ", "double", "turn a number or singleton array value or singleton object tag of js into a double. Returns null if it fails."], "Examples": ["json.number(json '{\"n\":4}')"], "Category": ["JSON Functions"], "index": 145, "vector_txt": "145:Feature: json.number(js)\nDescription: Return type: doubleturn a number or singleton array value or singleton object tag of js into a double. Returns null if it fails.\nExamples: json.number(json '{\"n\":4}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.text(js)"], "Feature": ["json.text(js)"], "Description": ["Return type: ", "clob", "glue together the values in js separated by space character"], "Examples": ["json.text(json '[1,2,3,4]')"], "Category": ["JSON Functions"], "index": 146, "vector_txt": "146:Feature: json.text(js)\nDescription: Return type: clobglue together the values in js separated by space character\nExamples: json.text(json '[1,2,3,4]')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.text(js, Separator str)"], "Feature": ["json.text(js, Separator str)"], "Description": ["Return type: ", "clob", "glue together the values in js separated by Separator string"], "Examples": ["json.text(json '[1,2,3,4]', 'x')"], "Category": ["JSON Functions"], "index": 147, "vector_txt": "147:Feature: json.text(js, Separator str)\nDescription: Return type: clobglue together the values in js separated by Separator string\nExamples: json.text(json '[1,2,3,4]', 'x')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.valuearray(js)"], "Feature": ["json.valuearray(js)"], "Description": ["Return type: ", "json", "returns an arraylist of value tags for the top-level components of js. Note js must represent a JSON object else an error (Object expected) is reported"], "Examples": ["json.valuearray(json '{\"a\":1, \"b\":2}')"], "Category": ["JSON Functions"], "index": 148, "vector_txt": "148:Feature: json.valuearray(js)\nDescription: Return type: jsonreturns an arraylist of value tags for the top-level components of js. Note js must represent a JSON object else an error (Object expected) is reported\nExamples: json.valuearray(json '{\"a\":1, \"b\":2}')\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.tojsonarray(double)"], "Feature": ["json.tojsonarray(double)"], "Description": ["Return type: ", "clob", "convert numeric values in the column/group into a json array string"], "Examples": ["json.tojsonarray(i)"], "Category": ["JSON Functions"], "index": 149, "vector_txt": "149:Feature: json.tojsonarray(double)\nDescription: Return type: clobconvert numeric values in the column/group into a json array string\nExamples: json.tojsonarray(i)\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/json-functions"], "Title": ["json.tojsonarray(clob)"], "Feature": ["json.tojsonarray(clob)"], "Description": ["Return type: ", "clob", "convert string values in the column/group into a json array string"], "Examples": ["json.tojsonarray(c)"], "Category": ["JSON Functions"], "index": 150, "vector_txt": "150:Feature: json.tojsonarray(clob)\nDescription: Return type: clobconvert string values in the column/group into a json array string\nExamples: json.tojsonarray(c)\nCategory: JSON Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getanchor(url)"], "Feature": ["sys.getanchor(url)"], "Description": ["Return type: ", "clob", "extract the anchor part (after the #) from the url, may return null if no achor exists"], "Examples": ["sys.getanchor( url_example)"], "Category": ["URL Functions"], "index": 151, "vector_txt": "151:Feature: sys.getanchor(url)\nDescription: Return type: clobextract the anchor part (after the #) from the url, may return null if no achor exists\nExamples: sys.getanchor( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getbasename(url)"], "Feature": ["sys.getbasename(url)"], "Description": ["Return type: ", "clob", "extract the base name part (after the / excluding the extension) from the path of the url, may return null"], "Examples": ["sys.getbasename( url_example)"], "Category": ["URL Functions"], "index": 152, "vector_txt": "152:Feature: sys.getbasename(url)\nDescription: Return type: clobextract the base name part (after the / excluding the extension) from the path of the url, may return null\nExamples: sys.getbasename( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getcontext(url)"], "Feature": ["sys.getcontext(url)"], "Description": ["Return type: ", "clob", "extract the path context part of the url"], "Examples": ["sys.getcontext( url_example)"], "Category": ["URL Functions"], "index": 153, "vector_txt": "153:Feature: sys.getcontext(url)\nDescription: Return type: clobextract the path context part of the url\nExamples: sys.getcontext( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getdomain(url)"], "Feature": ["sys.getdomain(url)"], "Description": ["Return type: ", "clob", "extract the top-level domain part of the host part of the url, may return null"], "Examples": ["sys.getdomain( url_example)"], "Category": ["URL Functions"], "index": 154, "vector_txt": "154:Feature: sys.getdomain(url)\nDescription: Return type: clobextract the top-level domain part of the host part of the url, may return null\nExamples: sys.getdomain( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["bit_or(x, y)"], "Feature": ["bit_or(x, y)"], "Description": ["Return type: ", "int", "bitwise OR"], "Examples": ["bit_or(32, 3)"], "Category": ["Mathematics Functions"], "index": 155, "vector_txt": "155:Feature: bit_or(x, y)\nDescription: Return type: intbitwise OR\nExamples: bit_or(32, 3)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getextension(url)"], "Feature": ["sys.getextension(url)"], "Description": ["Return type: ", "clob", "extract the file extension part of the url, may return null"], "Examples": ["sys.getextension( url_example)"], "Category": ["URL Functions"], "index": 156, "vector_txt": "156:Feature: sys.getextension(url)\nDescription: Return type: clobextract the file extension part of the url, may return null\nExamples: sys.getextension( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getfile(url)"], "Feature": ["sys.getfile(url)"], "Description": ["Return type: ", "clob", "extract the last file part of the path of the url, may return null"], "Examples": ["sys.getfile( url_example)"], "Category": ["URL Functions"], "index": 157, "vector_txt": "157:Feature: sys.getfile(url)\nDescription: Return type: clobextract the last file part of the path of the url, may return null\nExamples: sys.getfile( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.gethost(url)"], "Feature": ["sys.gethost(url)"], "Description": ["Return type: ", "clob", "extract the host part of the url, may return null"], "Examples": ["sys.gethost( url_example)"], "Category": ["URL Functions"], "index": 158, "vector_txt": "158:Feature: sys.gethost(url)\nDescription: Return type: clobextract the host part of the url, may return null\nExamples: sys.gethost( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getport(url)"], "Feature": ["sys.getport(url)"], "Description": ["Return type: ", "clob", "extract the port number part of the url, may return null"], "Examples": ["sys.getport( url_example)"], "Category": ["URL Functions"], "index": 159, "vector_txt": "159:Feature: sys.getport(url)\nDescription: Return type: clobextract the port number part of the url, may return null\nExamples: sys.getport( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getprotocol(url)"], "Feature": ["sys.getprotocol(url)"], "Description": ["Return type: ", "clob", "extract the protocol or scheme part of the url"], "Examples": ["sys.getprotocol( url_example)"], "Category": ["URL Functions"], "index": 160, "vector_txt": "160:Feature: sys.getprotocol(url)\nDescription: Return type: clobextract the protocol or scheme part of the url\nExamples: sys.getprotocol( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getquery(url)"], "Feature": ["sys.getquery(url)"], "Description": ["Return type: ", "clob", "extract the query part (after the ?) of the url, may return null"], "Examples": ["sys.getquery( url_example)"], "Category": ["URL Functions"], "index": 161, "vector_txt": "161:Feature: sys.getquery(url)\nDescription: Return type: clobextract the query part (after the ?) of the url, may return null\nExamples: sys.getquery( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getroboturl(url)"], "Feature": ["sys.getroboturl(url)"], "Description": ["Return type: ", "clob", "extract the location of the robot control file of the url"], "Examples": ["sys.getroboturl( url_example)"], "Category": ["URL Functions"], "index": 162, "vector_txt": "162:Feature: sys.getroboturl(url)\nDescription: Return type: clobextract the location of the robot control file of the url\nExamples: sys.getroboturl( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.getuser(url)"], "Feature": ["sys.getuser(url)"], "Description": ["Return type: ", "clob", "extract the user part of the url, may return null"], "Examples": ["sys.getuser( url_example)"], "Category": ["URL Functions"], "index": 163, "vector_txt": "163:Feature: sys.getuser(url)\nDescription: Return type: clobextract the user part of the url, may return null\nExamples: sys.getuser( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.isaurl(string)"], "Feature": ["sys.isaurl(string)"], "Description": ["Return type: ", "boolean", "checks whether a character string complies to the url syntax format"], "Examples": ["sys.isaurl( url_example)"], "Category": ["URL Functions"], "index": 164, "vector_txt": "164:Feature: sys.isaurl(string)\nDescription: Return type: booleanchecks whether a character string complies to the url syntax format\nExamples: sys.isaurl( url_example)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.newurl(scheme, authority, path)"], "Feature": ["sys.newurl(scheme, authority, path)"], "Description": ["Return type: ", "url", "create a new url from three strings: scheme, authority or host and path"], "Examples": ["sys.newurl( 'https', 'usr@www.a.com:123', 'docs/index.html')"], "Category": ["URL Functions"], "index": 165, "vector_txt": "165:Feature: sys.newurl(scheme, authority, path)\nDescription: Return type: urlcreate a new url from three strings: scheme, authority or host and path\nExamples: sys.newurl( 'https', 'usr@www.a.com:123', 'docs/index.html')\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["bit_xor(x, y)"], "Feature": ["bit_xor(x, y)"], "Description": ["Return type: ", "int", "bitwise XOR"], "Examples": ["bit_xor(17, 5)"], "Category": ["Mathematics Functions"], "index": 166, "vector_txt": "166:Feature: bit_xor(x, y)\nDescription: Return type: intbitwise XOR\nExamples: bit_xor(17, 5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.newurl(scheme, host, int port, path)"], "Feature": ["sys.newurl(scheme, host, int port, path)"], "Description": ["Return type: ", "url", "create a new url from three strings and a port number as third argument"], "Examples": ["sys.newurl( 'https', 'www.a.com', 5567, 'docs/index.html')"], "Category": ["URL Functions"], "index": 167, "vector_txt": "167:Feature: sys.newurl(scheme, host, int port, path)\nDescription: Return type: urlcreate a new url from three strings and a port number as third argument\nExamples: sys.newurl( 'https', 'www.a.com', 5567, 'docs/index.html')\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/url-functions"], "Title": ["sys.url_extract_host(url string, no_www bool)"], "Feature": ["sys.url_extract_host(url string, no_www bool)"], "Description": ["Return type: ", "clob", "extract the host part of the url, may return null"], "Examples": ["sys.url_extract_host( url_example, true)"], "Category": ["URL Functions"], "index": 168, "vector_txt": "168:Feature: sys.url_extract_host(url string, no_www bool)\nDescription: Return type: clobextract the host part of the url, may return null\nExamples: sys.url_extract_host( url_example, true)\nCategory: URL Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/uuid-functions"], "Title": ["sys.isauuid(string)"], "Feature": ["sys.isauuid(string)"], "Description": ["Return type: ", "boolean", "tests if the given string represents a valid uuid value and returns a boolean value true or false, or null when the input is null"], "Examples": ["sys.isauuid('e31960fb-dc8b-452d-ab30-b342723e7565')"], "Category": ["UUID Functions"], "index": 169, "vector_txt": "169:Feature: sys.isauuid(string)\nDescription: Return type: booleantests if the given string represents a valid uuid value and returns a boolean value true or false, or null when the input is null\nExamples: sys.isauuid('e31960fb-dc8b-452d-ab30-b342723e7565')\nCategory: UUID Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/uuid-functions"], "Title": ["sys.uuid()"], "Feature": ["sys.uuid()"], "Description": ["Return type: ", "uuid", "generates and returns a new random uuid"], "Examples": ["sys.uuid()"], "Category": ["UUID Functions"], "index": 170, "vector_txt": "170:Feature: sys.uuid()\nDescription: Return type: uuidgenerates and returns a new random uuid\nExamples: sys.uuid()\nCategory: UUID Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["avg(numeric_expr)"], "Feature": ["avg(numeric_expr)"], "Description": ["Return type: ", "double", "compute the average of the non-NULL integer/float/decimal/month_interval values in the column or group"], "Examples": ["avg(i)"], "Category": ["Aggregate Functions"], "index": 171, "vector_txt": "171:Feature: avg(numeric_expr)\nDescription: Return type: doublecompute the average of the non-NULL integer/float/decimal/month_interval values in the column or group\nExamples: avg(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["count(*)"], "Feature": ["count(*)"], "Description": ["Return type: ", "bigint", "count the number of rows in the column or group including those who may have NULL values"], "Examples": ["count(*)"], "Category": ["Aggregate Functions"], "index": 172, "vector_txt": "172:Feature: count(*)\nDescription: Return type: bigintcount the number of rows in the column or group including those who may have NULL values\nExamples: count(*)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["count(col_expr)"], "Feature": ["count(col_expr)"], "Description": ["Return type: ", "bigint", "count the number of non-NULL values in the column or group"], "Examples": ["count(i)"], "Category": ["Aggregate Functions"], "index": 173, "vector_txt": "173:Feature: count(col_expr)\nDescription: Return type: bigintcount the number of non-NULL values in the column or group\nExamples: count(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["count(distinct col_expr)"], "Feature": ["count(distinct col_expr)"], "Description": ["Return type: ", "bigint", "count the number of distinct non-NULL values in the column or group"], "Examples": ["count(distinct i%2)"], "Category": ["Aggregate Functions"], "index": 174, "vector_txt": "174:Feature: count(distinct col_expr)\nDescription: Return type: bigintcount the number of distinct non-NULL values in the column or group\nExamples: count(distinct i%2)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["max(col_expr)"], "Feature": ["max(col_expr)"], "Description": ["Return type: ", "type of col_expr", "return the maximum non-NULL value in the column or group"], "Examples": ["max(c)"], "Category": ["Aggregate Functions"], "index": 175, "vector_txt": "175:Feature: max(col_expr)\nDescription: Return type: type of col_exprreturn the maximum non-NULL value in the column or group\nExamples: max(c)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["min(col_expr)"], "Feature": ["min(col_expr)"], "Description": ["Return type: ", "type of col_expr", "return the minimum non-NULL value in the column or group"], "Examples": ["min(c)"], "Category": ["Aggregate Functions"], "index": 176, "vector_txt": "176:Feature: min(col_expr)\nDescription: Return type: type of col_exprreturn the minimum non-NULL value in the column or group\nExamples: min(c)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["cbrt(x)"], "Feature": ["cbrt(x)"], "Description": ["Return type: ", "double", "cube root"], "Examples": ["cbrt(2.0)"], "Category": ["Mathematics Functions"], "index": 177, "vector_txt": "177:Feature: cbrt(x)\nDescription: Return type: doublecube root\nExamples: cbrt(2.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["prod(numeric_expr)"], "Feature": ["prod(numeric_expr)"], "Description": ["Return type: ", "bigint or hugeint or double", "compute the product of the non-NULL numeric values in the column or group"], "Examples": ["prod(i)"], "Category": ["Aggregate Functions"], "index": 178, "vector_txt": "178:Feature: prod(numeric_expr)\nDescription: Return type: bigint or hugeint or doublecompute the product of the non-NULL numeric values in the column or group\nExamples: prod(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["prod(distinct numeric_expr)"], "Feature": ["prod(distinct numeric_expr)"], "Description": ["Return type: ", "bigint or hugeint or double", "compute the product of the distinct non-NULL numeric values in the column or group"], "Examples": ["prod(distinct 1 + i%2)"], "Category": ["Aggregate Functions"], "index": 179, "vector_txt": "179:Feature: prod(distinct numeric_expr)\nDescription: Return type: bigint or hugeint or doublecompute the product of the distinct non-NULL numeric values in the column or group\nExamples: prod(distinct 1 + i%2)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sum(integer_expr)"], "Feature": ["sum(integer_expr)"], "Description": ["Return type: ", "bigint or hugeint", "compute the sum of all non-NULL integer values in the column or group"], "Examples": ["sum(i)"], "Category": ["Aggregate Functions"], "index": 180, "vector_txt": "180:Feature: sum(integer_expr)\nDescription: Return type: bigint or hugeintcompute the sum of all non-NULL integer values in the column or group\nExamples: sum(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sum(distinct integer_expr)"], "Feature": ["sum(distinct integer_expr)"], "Description": ["Return type: ", "bigint or hugeint", "compute the sum of all distinct non-NULL integer values in the column or group"], "Examples": ["sum(distinct i/2)"], "Category": ["Aggregate Functions"], "index": 181, "vector_txt": "181:Feature: sum(distinct integer_expr)\nDescription: Return type: bigint or hugeintcompute the sum of all distinct non-NULL integer values in the column or group\nExamples: sum(distinct i/2)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sum(decimal_expr)"], "Feature": ["sum(decimal_expr)"], "Description": ["Return type: ", "decimal", "compute the sum of all non-NULL decimal values in the column or group"], "Examples": ["sum(cast(i as decimal))"], "Category": ["Aggregate Functions"], "index": 182, "vector_txt": "182:Feature: sum(decimal_expr)\nDescription: Return type: decimalcompute the sum of all non-NULL decimal values in the column or group\nExamples: sum(cast(i as decimal))\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sum(float_expr)"], "Feature": ["sum(float_expr)"], "Description": ["Return type: ", "real or double", "compute the sum of all non-NULL floating point values in the column or group"], "Examples": ["sum(cast(i as real))"], "Category": ["Aggregate Functions"], "index": 183, "vector_txt": "183:Feature: sum(float_expr)\nDescription: Return type: real or doublecompute the sum of all non-NULL floating point values in the column or group\nExamples: sum(cast(i as real))\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sum(month_interval_expr)"], "Feature": ["sum(month_interval_expr)"], "Description": ["Return type: ", "month_interval", "compute the sum of all non-NULL interval month values in the column or group"], "Examples": ["sum(cast(i as interval month))"], "Category": ["Aggregate Functions"], "index": 184, "vector_txt": "184:Feature: sum(month_interval_expr)\nDescription: Return type: month_intervalcompute the sum of all non-NULL interval month values in the column or group\nExamples: sum(cast(i as interval month))\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sum(sec_interval_expr)"], "Feature": ["sum(sec_interval_expr)"], "Description": ["Return type: ", "sec_interval", "compute the sum of all non-NULL interval second values in the column or group"], "Examples": ["sum(cast(i as interval second))"], "Category": ["Aggregate Functions"], "index": 185, "vector_txt": "185:Feature: sum(sec_interval_expr)\nDescription: Return type: sec_intervalcompute the sum of all non-NULL interval second values in the column or group\nExamples: sum(cast(i as interval second))\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["listagg(col_expr)"], "Feature": ["listagg(col_expr)"], "Description": ["Return type: ", "varchar", "concatenate non-NULL values in a column or group into one large varchar string with values separated by a comma (the default separator). Supported from release Jun2020 (11.37.7)"], "Examples": ["listagg(c)"], "Category": ["Aggregate Functions"], "index": 186, "vector_txt": "186:Feature: listagg(col_expr)\nDescription: Return type: varcharconcatenate non-NULL values in a column or group into one large varchar string with values separated by a comma (the default separator). Supported from release Jun2020 (11.37.7)\nExamples: listagg(c)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["listagg(col_expr, separator_str)"], "Feature": ["listagg(col_expr, separator_str)"], "Description": ["Return type: ", "varchar", "concatenate non-NULL values in a column or group into one large varchar string with values separated by separator_str. Supported from release Jun2020 (11.37.7)"], "Examples": ["listagg(i, ' | ')"], "Category": ["Aggregate Functions"], "index": 187, "vector_txt": "187:Feature: listagg(col_expr, separator_str)\nDescription: Return type: varcharconcatenate non-NULL values in a column or group into one large varchar string with values separated by separator_str. Supported from release Jun2020 (11.37.7)\nExamples: listagg(i, ' | ')\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["ceil(x)"], "Feature": ["ceil(x)"], "Description": ["Return type: ", "double", "nearest integer greater than or equal to argument (same as ceiling(x))"], "Examples": ["ceil(-42.8)"], "Category": ["Mathematics Functions"], "index": 188, "vector_txt": "188:Feature: ceil(x)\nDescription: Return type: doublenearest integer greater than or equal to argument (same as ceiling(x))\nExamples: ceil(-42.8)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.group_concat(col_expr)"], "Feature": ["sys.group_concat(col_expr)"], "Description": ["Return type: ", "clob", "concatenate non-NULL values in a column or group into one large string with values separated by a comma (the default separator)"], "Examples": ["sys.group_concat(c)"], "Category": ["Aggregate Functions"], "index": 189, "vector_txt": "189:Feature: sys.group_concat(col_expr)\nDescription: Return type: clobconcatenate non-NULL values in a column or group into one large string with values separated by a comma (the default separator)\nExamples: sys.group_concat(c)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.group_concat(col_expr, separator_str)"], "Feature": ["sys.group_concat(col_expr, separator_str)"], "Description": ["Return type: ", "clob", "concatenate non-NULL values in a column or group into one large string with values separated by separator_str"], "Examples": ["sys.group_concat(i, ' | ')"], "Category": ["Aggregate Functions"], "index": 190, "vector_txt": "190:Feature: sys.group_concat(col_expr, separator_str)\nDescription: Return type: clobconcatenate non-NULL values in a column or group into one large string with values separated by separator_str\nExamples: sys.group_concat(i, ' | ')\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["json.tojsonarray(clob)"], "Feature": ["json.tojsonarray(clob)"], "Description": ["Return type: ", "clob", "convert string values in the column or group into a json array string"], "Examples": ["json.tojsonarray(c)"], "Category": ["Aggregate Functions"], "index": 191, "vector_txt": "191:Feature: json.tojsonarray(clob)\nDescription: Return type: clobconvert string values in the column or group into a json array string\nExamples: json.tojsonarray(c)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["json.tojsonarray(double)"], "Feature": ["json.tojsonarray(double)"], "Description": ["Return type: ", "clob", "convert numeric values in the column or group into a json array string"], "Examples": ["json.tojsonarray(i)"], "Category": ["Aggregate Functions"], "index": 192, "vector_txt": "192:Feature: json.tojsonarray(double)\nDescription: Return type: clobconvert numeric values in the column or group into a json array string\nExamples: json.tojsonarray(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.corr(numeric_a, numeric_b)"], "Feature": ["sys.corr(numeric_a, numeric_b)"], "Description": ["Return type: ", "double", "return the correlation coefficient of the non-NULL values in the numeric (integer/decimal/real/double) column or group numeric_a versus numeric_b"], "Examples": ["sys.corr(i, i+2)"], "Category": ["Aggregate Functions"], "index": 193, "vector_txt": "193:Feature: sys.corr(numeric_a, numeric_b)\nDescription: Return type: doublereturn the correlation coefficient of the non-NULL values in the numeric (integer/decimal/real/double) column or group numeric_a versus numeric_b\nExamples: sys.corr(i, i+2)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.covar_pop(numeric_a, numeric_b)"], "Feature": ["sys.covar_pop(numeric_a, numeric_b)"], "Description": ["Return type: ", "double", "return the population covariance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group numeric_a versus numeric_b. Supported from release Jun2020 (11.37.7)"], "Examples": ["sys.covar_pop(i, i*2)"], "Category": ["Aggregate Functions"], "index": 194, "vector_txt": "194:Feature: sys.covar_pop(numeric_a, numeric_b)\nDescription: Return type: doublereturn the population covariance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group numeric_a versus numeric_b. Supported from release Jun2020 (11.37.7)\nExamples: sys.covar_pop(i, i*2)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.covar_samp(numeric_a, numeric_b)"], "Feature": ["sys.covar_samp(numeric_a, numeric_b)"], "Description": ["Return type: ", "double", "return the sample covariance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group numeric_a versus numeric_b. Supported from release Jun2020 (11.37.7)"], "Examples": ["sys.covar_samp(i, i*2)"], "Category": ["Aggregate Functions"], "index": 195, "vector_txt": "195:Feature: sys.covar_samp(numeric_a, numeric_b)\nDescription: Return type: doublereturn the sample covariance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group numeric_a versus numeric_b. Supported from release Jun2020 (11.37.7)\nExamples: sys.covar_samp(i, i*2)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.median(col_expr)"], "Feature": ["sys.median(col_expr)"], "Description": ["Return type: ", "type of col_expr", "return the statistic median of the non-NULL values in the numeric (integer/decimal/real/double) or temporal (date/time/timestamp/interval) column or group"], "Examples": ["sys.median(i)"], "Category": ["Aggregate Functions"], "index": 196, "vector_txt": "196:Feature: sys.median(col_expr)\nDescription: Return type: type of col_exprreturn the statistic median of the non-NULL values in the numeric (integer/decimal/real/double) or temporal (date/time/timestamp/interval) column or group\nExamples: sys.median(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.median_avg(numeric_expr)"], "Feature": ["sys.median_avg(numeric_expr)"], "Description": ["Return type: ", "double", "return the statistic median average of the non-NULL values in the numeric (integer/decimal/real/double) column or group"], "Examples": ["sys.median_avg(i)"], "Category": ["Aggregate Functions"], "index": 197, "vector_txt": "197:Feature: sys.median_avg(numeric_expr)\nDescription: Return type: doublereturn the statistic median average of the non-NULL values in the numeric (integer/decimal/real/double) column or group\nExamples: sys.median_avg(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.quantile(col_expr, percentile)"], "Feature": ["sys.quantile(col_expr, percentile)"], "Description": ["Return type: ", "type of col_expr", "return the statistic quantile of the non-NULL values in the numeric (integer/decimal/real/double) or temporal (date/time/timestamp/interval) column or group. The percentile argument must be between 0.0 and 1.0"], "Examples": ["sys.quantile(i, 0.7)"], "Category": ["Aggregate Functions"], "index": 198, "vector_txt": "198:Feature: sys.quantile(col_expr, percentile)\nDescription: Return type: type of col_exprreturn the statistic quantile of the non-NULL values in the numeric (integer/decimal/real/double) or temporal (date/time/timestamp/interval) column or group. The percentile argument must be between 0.0 and 1.0\nExamples: sys.quantile(i, 0.7)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["ceiling(x)"], "Feature": ["ceiling(x)"], "Description": ["Return type: ", "double", "nearest integer greater than or equal to argument (same as ceil(x))"], "Examples": ["ceiling(-95.3)"], "Category": ["Mathematics Functions"], "index": 199, "vector_txt": "199:Feature: ceiling(x)\nDescription: Return type: doublenearest integer greater than or equal to argument (same as ceil(x))\nExamples: ceiling(-95.3)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.quantile_avg(numeric_expr, percentile)"], "Feature": ["sys.quantile_avg(numeric_expr, percentile)"], "Description": ["Return type: ", "double", "return the statistic quantile average of the non-NULL values in the numeric (integer/decimal/real/double) column or group. The percentile argument must be between 0.0 and 1.0"], "Examples": ["sys.quantile_avg(i, 0.6)"], "Category": ["Aggregate Functions"], "index": 200, "vector_txt": "200:Feature: sys.quantile_avg(numeric_expr, percentile)\nDescription: Return type: doublereturn the statistic quantile average of the non-NULL values in the numeric (integer/decimal/real/double) column or group. The percentile argument must be between 0.0 and 1.0\nExamples: sys.quantile_avg(i, 0.6)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.stddev_pop(numeric_expr)"], "Feature": ["sys.stddev_pop(numeric_expr)"], "Description": ["Return type: ", "double", "return the population standard deviation of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square root of var_pop()."], "Examples": ["sys.stddev_pop(i)"], "Category": ["Aggregate Functions"], "index": 201, "vector_txt": "201:Feature: sys.stddev_pop(numeric_expr)\nDescription: Return type: doublereturn the population standard deviation of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square root of var_pop().\nExamples: sys.stddev_pop(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.stddev_samp(numeric_expr)"], "Feature": ["sys.stddev_samp(numeric_expr)"], "Description": ["Return type: ", "double", "return the sample standard deviation of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square root of var_samp()."], "Examples": ["sys.stddev_samp(i)"], "Category": ["Aggregate Functions"], "index": 202, "vector_txt": "202:Feature: sys.stddev_samp(numeric_expr)\nDescription: Return type: doublereturn the sample standard deviation of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square root of var_samp().\nExamples: sys.stddev_samp(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.var_pop(numeric_expr)"], "Feature": ["sys.var_pop(numeric_expr)"], "Description": ["Return type: ", "double", "return the population standard variance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square of stddev_pop()."], "Examples": ["sys.var_pop(i)"], "Category": ["Aggregate Functions"], "index": 203, "vector_txt": "203:Feature: sys.var_pop(numeric_expr)\nDescription: Return type: doublereturn the population standard variance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square of stddev_pop().\nExamples: sys.var_pop(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/aggregate-functions"], "Title": ["sys.var_samp(numeric_expr)"], "Feature": ["sys.var_samp(numeric_expr)"], "Description": ["Return type: ", "double", "return the sample standard variance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square of stddev_samp()."], "Examples": ["sys.var_samp(i)"], "Category": ["Aggregate Functions"], "index": 204, "vector_txt": "204:Feature: sys.var_samp(numeric_expr)\nDescription: Return type: doublereturn the sample standard variance of numeric_expr of the non-NULL values in the numeric (integer/decimal/real/double/interval) column or group. Same as the square of stddev_samp().\nExamples: sys.var_samp(i)\nCategory: Aggregate Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["cume_dist(value any)"], "Feature": ["cume_dist(value any)"], "Description": ["Return type: ", "double", "cumulative distribution: (number of partition rows preceding or peer with current row) / total partition rows"], "Examples": [], "Category": ["Window Functions"], "index": 205, "vector_txt": "205:Feature: cume_dist(value any)\nDescription: Return type: doublecumulative distribution: (number of partition rows preceding or peer with current row) / total partition rows\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["dense_rank(value any)"], "Feature": ["dense_rank(value any)"], "Description": ["Return type: ", "int", "rank of the current row without gaps"], "Examples": [], "Category": ["Window Functions"], "index": 206, "vector_txt": "206:Feature: dense_rank(value any)\nDescription: Return type: intrank of the current row without gaps\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["diff(value any)"], "Feature": ["diff(value any)"], "Description": ["Return type: ", "boolean", "is the current row value different from other partition rows"], "Examples": [], "Category": ["Window Functions"], "index": 207, "vector_txt": "207:Feature: diff(value any)\nDescription: Return type: booleanis the current row value different from other partition rows\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["diff(boolean, value any)"], "Feature": ["diff(boolean, value any)"], "Description": ["Return type: ", "boolean", "is the current row value different from other partition rows"], "Examples": [], "Category": ["Window Functions"], "index": 208, "vector_txt": "208:Feature: diff(boolean, value any)\nDescription: Return type: booleanis the current row value different from other partition rows\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["first_value(value any)"], "Feature": ["first_value(value any)"], "Description": ["Return type: ", "any", "returns value evaluated at the row that is the first row of the window frame"], "Examples": [], "Category": ["Window Functions"], "index": 209, "vector_txt": "209:Feature: first_value(value any)\nDescription: Return type: anyreturns value evaluated at the row that is the first row of the window frame\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["exp(x)"], "Feature": ["exp(x)"], "Description": ["Return type: ", "double", "exponential"], "Examples": ["exp(1)"], "Category": ["Mathematics Functions"], "index": 210, "vector_txt": "210:Feature: exp(x)\nDescription: Return type: doubleexponential\nExamples: exp(1)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["lag(value any [, offset integer [, default any]])"], "Feature": ["lag(value any [, offset integer [, default any]])"], "Description": ["Return type: ", "same type as value", "returns value evaluated at the row that is offset rows before the current row within the partition; if there is no such row, instead return default (which must be of the same type as value). Both offset and default are evaluated with respect to the current row. If omitted, offset defaults to 1 and default to null."], "Examples": [], "Category": ["Window Functions"], "index": 211, "vector_txt": "211:Feature: lag(value any [, offset integer [, default any]])\nDescription: Return type: same type as valuereturns value evaluated at the row that is offset rows before the current row within the partition; if there is no such row, instead return default (which must be of the same type as value). Both offset and default are evaluated with respect to the current row. If omitted, offset defaults to 1 and default to null.\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["last_value(value any)"], "Feature": ["last_value(value any)"], "Description": ["Return type: ", "same type as value", "returns value evaluated at the row that is the last row of the window frame"], "Examples": [], "Category": ["Window Functions"], "index": 212, "vector_txt": "212:Feature: last_value(value any)\nDescription: Return type: same type as valuereturns value evaluated at the row that is the last row of the window frame\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["lead(value any [, offset integer [, default any]])"], "Feature": ["lead(value any [, offset integer [, default any]])"], "Description": ["Return type: ", "same type as value", "returns value evaluated at the row that is offset rows after the current row within the partition; if there is no such row, instead return default (which must be of the same type as value). Both offset and default are evaluated with respect to the current row. If omitted, offset defaults to 1 and default to null."], "Examples": [], "Category": ["Window Functions"], "index": 213, "vector_txt": "213:Feature: lead(value any [, offset integer [, default any]])\nDescription: Return type: same type as valuereturns value evaluated at the row that is offset rows after the current row within the partition; if there is no such row, instead return default (which must be of the same type as value). Both offset and default are evaluated with respect to the current row. If omitted, offset defaults to 1 and default to null.\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["nth_value(value any, nth bigint)"], "Feature": ["nth_value(value any, nth bigint)"], "Description": ["Return type: ", "same type as value", "returns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row."], "Examples": [], "Category": ["Window Functions"], "index": 214, "vector_txt": "214:Feature: nth_value(value any, nth bigint)\nDescription: Return type: same type as valuereturns value evaluated at the row that is the nth row of the window frame (counting from 1); null if no such row.\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["ntile(value any, num_buckects integer)"], "Feature": ["ntile(value any, num_buckects integer)"], "Description": ["Return type: ", "same type as num_buckects", "integer ranging from 1 to the argument value, dividing the partition as equally as possible"], "Examples": [], "Category": ["Window Functions"], "index": 215, "vector_txt": "215:Feature: ntile(value any, num_buckects integer)\nDescription: Return type: same type as num_buckectsinteger ranging from 1 to the argument value, dividing the partition as equally as possible\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["percent_rank(value any)"], "Feature": ["percent_rank(value any)"], "Description": ["Return type: ", "double", "relative rank of the current row: (rank - 1) / (total partition rows - 1)"], "Examples": [], "Category": ["Window Functions"], "index": 216, "vector_txt": "216:Feature: percent_rank(value any)\nDescription: Return type: doublerelative rank of the current row: (rank - 1) / (total partition rows - 1)\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["rank(value any)"], "Feature": ["rank(value any)"], "Description": ["Return type: ", "int", "rank of the current row with gaps"], "Examples": [], "Category": ["Window Functions"], "index": 217, "vector_txt": "217:Feature: rank(value any)\nDescription: Return type: intrank of the current row with gaps\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["row_number(value any)"], "Feature": ["row_number(value any)"], "Description": ["Return type: ", "int", "number of the current row within its partition, counting from 1"], "Examples": [], "Category": ["Window Functions"], "index": 218, "vector_txt": "218:Feature: row_number(value any)\nDescription: Return type: intnumber of the current row within its partition, counting from 1\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["avg(numeric_expr)"], "Feature": ["avg(numeric_expr)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 219, "vector_txt": "219:Feature: avg(numeric_expr)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["count(col_expr any, distinct boolean)"], "Feature": ["count(col_expr any, distinct boolean)"], "Description": ["Return type: ", "bigint or hugeint"], "Examples": [], "Category": ["Window Functions"], "index": 220, "vector_txt": "220:Feature: count(col_expr any, distinct boolean)\nDescription: Return type: bigint or hugeint\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["floor(x)"], "Feature": ["floor(x)"], "Description": ["Return type: ", "real or double", "nearest integer less than or equal to argument"], "Examples": ["floor(-42.8)"], "Category": ["Mathematics Functions"], "index": 221, "vector_txt": "221:Feature: floor(x)\nDescription: Return type: real or doublenearest integer less than or equal to argument\nExamples: floor(-42.8)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/logical-functions"], "Title": ["\"or\"(a boolean, b boolean)"], "Feature": ["\"or\"(a boolean, b boolean)"], "Description": ["Return type: ", "boolean", "a OR b"], "Examples": ["\"or\"(true, false)"], "Category": ["Logical Functions"], "index": 222, "vector_txt": "222:Feature: \"or\"(a boolean, b boolean)\nDescription: Return type: booleana OR b\nExamples: \"or\"(true, false)\nCategory: Logical Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["max(col_expr any)"], "Feature": ["max(col_expr any)"], "Description": ["Return type: ", "same as type of col_expr"], "Examples": [], "Category": ["Window Functions"], "index": 223, "vector_txt": "223:Feature: max(col_expr any)\nDescription: Return type: same as type of col_expr\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["min(col_expr any)"], "Feature": ["min(col_expr any)"], "Description": ["Return type: ", "same as type of col_expr"], "Examples": [], "Category": ["Window Functions"], "index": 224, "vector_txt": "224:Feature: min(col_expr any)\nDescription: Return type: same as type of col_expr\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["prod(numeric_expr)"], "Feature": ["prod(numeric_expr)"], "Description": ["Return type: ", "bigint or hugeint or double"], "Examples": [], "Category": ["Window Functions"], "index": 225, "vector_txt": "225:Feature: prod(numeric_expr)\nDescription: Return type: bigint or hugeint or double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sum(numeric_expr)"], "Feature": ["sum(numeric_expr)"], "Description": ["Return type: ", "depends on type of numeric_expr"], "Examples": [], "Category": ["Window Functions"], "index": 226, "vector_txt": "226:Feature: sum(numeric_expr)\nDescription: Return type: depends on type of numeric_expr\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": [""], "Feature": [""], "Description": ["Return type: ", ""], "Examples": [], "Category": ["Window Functions"], "index": 227, "vector_txt": "227:Feature: \nDescription: Return type: \nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.corr(numeric_a, numeric_b)"], "Feature": ["sys.corr(numeric_a, numeric_b)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 228, "vector_txt": "228:Feature: sys.corr(numeric_a, numeric_b)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.covar_pop(numeric_a, numeric_b)"], "Feature": ["sys.covar_pop(numeric_a, numeric_b)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 229, "vector_txt": "229:Feature: sys.covar_pop(numeric_a, numeric_b)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.covar_samp(numeric_a, numeric_b)"], "Feature": ["sys.covar_samp(numeric_a, numeric_b)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 230, "vector_txt": "230:Feature: sys.covar_samp(numeric_a, numeric_b)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.stddev_pop(numeric_expr)"], "Feature": ["sys.stddev_pop(numeric_expr)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 231, "vector_txt": "231:Feature: sys.stddev_pop(numeric_expr)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.stddev_samp(numeric_expr)"], "Feature": ["sys.stddev_samp(numeric_expr)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 232, "vector_txt": "232:Feature: sys.stddev_samp(numeric_expr)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["get_value_for(schema_nm, seq_nm)"], "Feature": ["get_value_for(schema_nm, seq_nm)"], "Description": ["Return type: ", "bigint", "get current value of a sequence"], "Examples": ["get_value_for('dwh2', 'seq_9201')"], "Category": ["Mathematics Functions"], "index": 233, "vector_txt": "233:Feature: get_value_for(schema_nm, seq_nm)\nDescription: Return type: bigintget current value of a sequence\nExamples: get_value_for('dwh2', 'seq_9201')\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.var_pop(numeric_expr)"], "Feature": ["sys.var_pop(numeric_expr)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 234, "vector_txt": "234:Feature: sys.var_pop(numeric_expr)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.var_samp(numeric_expr)"], "Feature": ["sys.var_samp(numeric_expr)"], "Description": ["Return type: ", "double"], "Examples": [], "Category": ["Window Functions"], "index": 235, "vector_txt": "235:Feature: sys.var_samp(numeric_expr)\nDescription: Return type: double\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.group_concat(col_expr clob)"], "Feature": ["sys.group_concat(col_expr clob)"], "Description": ["Return type: ", "clob"], "Examples": [], "Category": ["Window Functions"], "index": 236, "vector_txt": "236:Feature: sys.group_concat(col_expr clob)\nDescription: Return type: clob\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["sys.group_concat(col_expr clob, separator clob)"], "Feature": ["sys.group_concat(col_expr clob, separator clob)"], "Description": ["Return type: ", "clob"], "Examples": [], "Category": ["Window Functions"], "index": 237, "vector_txt": "237:Feature: sys.group_concat(col_expr clob, separator clob)\nDescription: Return type: clob\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["listagg(col_expr varchar)"], "Feature": ["listagg(col_expr varchar)"], "Description": ["Return type: ", "varchar"], "Examples": [], "Category": ["Window Functions"], "index": 238, "vector_txt": "238:Feature: listagg(col_expr varchar)\nDescription: Return type: varchar\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/window-functions"], "Title": ["listagg(col_expr varchar, separator varchar)"], "Feature": ["listagg(col_expr varchar, separator varchar)"], "Description": ["Return type: ", "varchar"], "Examples": [], "Category": ["Window Functions"], "index": 239, "vector_txt": "239:Feature: listagg(col_expr varchar, separator varchar)\nDescription: Return type: varchar\nExamples: \nCategory: Window Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/generator-functions"], "Title": ["generate_series(first, limit)"], "Feature": ["generate_series(first, limit)"], "Description": ["RArgument types: ", "tinyint or smallint or int or bigint or hugeint", "Generate a series of integer numbers, from first till limit with a increment of 1"], "Examples": [], "Category": ["Generate Series Functions"], "index": 240, "vector_txt": "240:Feature: generate_series(first, limit)\nDescription: RArgument types: tinyint or smallint or int or bigint or hugeintGenerate a series of integer numbers, from first till limit with a increment of 1\nExamples: \nCategory: Generate Series Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/generator-functions"], "Title": ["generate_series(first, limit, stepsize)"], "Feature": ["generate_series(first, limit, stepsize)"], "Description": ["RArgument types: ", "tinyint or smallint or int or bigint or hugeint or real or double or decimal", "Generate a series of numbers, from first till limit with increments of stepsize"], "Examples": [], "Category": ["Generate Series Functions"], "index": 241, "vector_txt": "241:Feature: generate_series(first, limit, stepsize)\nDescription: RArgument types: tinyint or smallint or int or bigint or hugeint or real or double or decimalGenerate a series of numbers, from first till limit with increments of stepsize\nExamples: \nCategory: Generate Series Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/generator-functions"], "Title": ["generate_series(first, limit, interval stepsize)"], "Feature": ["generate_series(first, limit, interval stepsize)"], "Description": ["RArgument types: ", "timestamp, interval second or day", "Generate a series of timestamps with increments of interval stepsize"], "Examples": [], "Category": ["Generate Series Functions"], "index": 242, "vector_txt": "242:Feature: generate_series(first, limit, interval stepsize)\nDescription: RArgument types: timestamp, interval second or dayGenerate a series of timestamps with increments of interval stepsize\nExamples: \nCategory: Generate Series Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["greatest(x, y)"], "Feature": ["greatest(x, y)"], "Description": ["Return type: ", "same as input", "greatest (highest) value of x and y (same as sql_max(x,y))"], "Examples": ["greatest(1.2, 5)"], "Category": ["Mathematics Functions"], "index": 243, "vector_txt": "243:Feature: greatest(x, y)\nDescription: Return type: same as inputgreatest (highest) value of x and y (same as sql_max(x,y))\nExamples: greatest(1.2, 5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["least(x, y)"], "Feature": ["least(x, y)"], "Description": ["Return type: ", "same as input", "least (lowest) value of x and y (same as sql_min(x,y))"], "Examples": ["least(1.2, 5)"], "Category": ["Mathematics Functions"], "index": 244, "vector_txt": "244:Feature: least(x, y)\nDescription: Return type: same as inputleast (lowest) value of x and y (same as sql_min(x,y))\nExamples: least(1.2, 5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["left_shift(x, i)"], "Feature": ["left_shift(x, i)"], "Description": ["Return type: ", "same as first arg", "bitwise shift left i bits"], "Examples": ["left_shift(1, 4)"], "Category": ["Mathematics Functions"], "index": 245, "vector_txt": "245:Feature: left_shift(x, i)\nDescription: Return type: same as first argbitwise shift left i bits\nExamples: left_shift(1, 4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["ln(x)"], "Feature": ["ln(x)"], "Description": ["Return type: ", "double", "natural logarithm"], "Examples": ["ln(2.0)"], "Category": ["Mathematics Functions"], "index": 246, "vector_txt": "246:Feature: ln(x)\nDescription: Return type: doublenatural logarithm\nExamples: ln(2.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["log(x)"], "Feature": ["log(x)"], "Description": ["Return type: ", "double", "natural logarithm, same as ln(x)"], "Examples": ["log(2.0)"], "Category": ["Mathematics Functions"], "index": 247, "vector_txt": "247:Feature: log(x)\nDescription: Return type: doublenatural logarithm, same as ln(x)\nExamples: log(2.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["log(b, x)"], "Feature": ["log(b, x)"], "Description": ["Return type: ", "double", "logarithm to base b. Note: before Oct2020 release (11.39.5) the arguments were switched, so log(x, b)."], "Examples": ["log(2, 64.0)"], "Category": ["Mathematics Functions"], "index": 248, "vector_txt": "248:Feature: log(b, x)\nDescription: Return type: doublelogarithm to base b. Note: before Oct2020 release (11.39.5) the arguments were switched, so log(x, b).\nExamples: log(2, 64.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["log10(x)"], "Feature": ["log10(x)"], "Description": ["Return type: ", "double", "base 10 logarithm"], "Examples": ["log10(100.0)"], "Category": ["Mathematics Functions"], "index": 249, "vector_txt": "249:Feature: log10(x)\nDescription: Return type: doublebase 10 logarithm\nExamples: log10(100.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["log2(x)"], "Feature": ["log2(x)"], "Description": ["Return type: ", "double", "base 2 logarithm"], "Examples": ["log2(64.0)"], "Category": ["Mathematics Functions"], "index": 250, "vector_txt": "250:Feature: log2(x)\nDescription: Return type: doublebase 2 logarithm\nExamples: log2(64.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["mod(x, y)"], "Feature": ["mod(x, y)"], "Description": ["Return type: ", "same as input", "modulo (remainder)"], "Examples": ["mod(5.0, 2.1)"], "Category": ["Mathematics Functions"], "index": 251, "vector_txt": "251:Feature: mod(x, y)\nDescription: Return type: same as inputmodulo (remainder)\nExamples: mod(5.0, 2.1)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/logical-functions"], "Title": ["\"xor\"(a boolean, b boolean)"], "Feature": ["\"xor\"(a boolean, b boolean)"], "Description": ["Return type: ", "boolean", "a OR b, but NOT, a AND b"], "Examples": ["\"xor\"(true, true)"], "Category": ["Logical Functions"], "index": 252, "vector_txt": "252:Feature: \"xor\"(a boolean, b boolean)\nDescription: Return type: booleana OR b, but NOT, a AND b\nExamples: \"xor\"(true, true)\nCategory: Logical Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["next_value_for(schema_nm, seq_nm)"], "Feature": ["next_value_for(schema_nm, seq_nm)"], "Description": ["Return type: ", "bigint", "get current value of a sequence and increment it"], "Examples": ["next_value_for('dwh2', 'seq_9201')"], "Category": ["Mathematics Functions"], "index": 253, "vector_txt": "253:Feature: next_value_for(schema_nm, seq_nm)\nDescription: Return type: bigintget current value of a sequence and increment it\nExamples: next_value_for('dwh2', 'seq_9201')\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["power(x, y)"], "Feature": ["power(x, y)"], "Description": ["Return type: ", "double", "x raised to the power of y"], "Examples": ["power(2, 5)"], "Category": ["Mathematics Functions"], "index": 254, "vector_txt": "254:Feature: power(x, y)\nDescription: Return type: doublex raised to the power of y\nExamples: power(2, 5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["rand()"], "Feature": ["rand()"], "Description": ["Return type: ", "int", "random integer value between 0 and 2147483648"], "Examples": ["rand()"], "Category": ["Mathematics Functions"], "index": 255, "vector_txt": "255:Feature: rand()\nDescription: Return type: intrandom integer value between 0 and 2147483648\nExamples: rand()\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["rand(seed)"], "Feature": ["rand(seed)"], "Description": ["Return type: ", "int", "random integer value with seed set"], "Examples": ["rand(-5)"], "Category": ["Mathematics Functions"], "index": 256, "vector_txt": "256:Feature: rand(seed)\nDescription: Return type: intrandom integer value with seed set\nExamples: rand(-5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["right_shift(x, i)"], "Feature": ["right_shift(x, i)"], "Description": ["Return type: ", "same as first arg", "bitwise shift right i bits"], "Examples": ["right_shift(16, 2)"], "Category": ["Mathematics Functions"], "index": 257, "vector_txt": "257:Feature: right_shift(x, i)\nDescription: Return type: same as first argbitwise shift right i bits\nExamples: right_shift(16, 2)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["round(x, d)"], "Feature": ["round(x, d)"], "Description": ["Return type: ", "same as first arg", "round x to d decimal places"], "Examples": ["round(42.4382, 2)"], "Category": ["Mathematics Functions"], "index": 258, "vector_txt": "258:Feature: round(x, d)\nDescription: Return type: same as first arground x to d decimal places\nExamples: round(42.4382, 2)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["scale_down(x, y)"], "Feature": ["scale_down(x, y)"], "Description": ["Return type: ", "same as first arg", "??? divide x by y and round to integer"], "Examples": ["scale_down(100, 3)"], "Category": ["Mathematics Functions"], "index": 259, "vector_txt": "259:Feature: scale_down(x, y)\nDescription: Return type: same as first arg??? divide x by y and round to integer\nExamples: scale_down(100, 3)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["scale_up(x, y)"], "Feature": ["scale_up(x, y)"], "Description": ["Return type: ", "same as first arg", "??? multiply x by y"], "Examples": ["scale_up(13, 3)"], "Category": ["Mathematics Functions"], "index": 260, "vector_txt": "260:Feature: scale_up(x, y)\nDescription: Return type: same as first arg??? multiply x by y\nExamples: scale_up(13, 3)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sign(x)"], "Feature": ["sign(x)"], "Description": ["Return type: ", "tinyint", "sign of the argument: -1 when x is negative, 0 when x is zero, 1 when x is positive"], "Examples": ["sign(-8.4)"], "Category": ["Mathematics Functions"], "index": 261, "vector_txt": "261:Feature: sign(x)\nDescription: Return type: tinyintsign of the argument: -1 when x is negative, 0 when x is zero, 1 when x is positive\nExamples: sign(-8.4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sql_add(x, y)"], "Feature": ["sql_add(x, y)"], "Description": ["Return type: ", "same as input", "x plus y"], "Examples": ["sql_add(2, 3.4)"], "Category": ["Mathematics Functions"], "index": 262, "vector_txt": "262:Feature: sql_add(x, y)\nDescription: Return type: same as inputx plus y\nExamples: sql_add(2, 3.4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\"<\"(arg1, arg2)"], "Feature": ["\"<\"(arg1, arg2)"], "Description": ["Return type: ", "boolean", "is arg1 less than arg2"], "Examples": ["\"<\"('aa', 'ab')"], "Category": ["Comparison Functions"], "index": 263, "vector_txt": "263:Feature: \"<\"(arg1, arg2)\nDescription: Return type: booleanis arg1 less than arg2\nExamples: \"<\"('aa', 'ab')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sql_div(x, y)"], "Feature": ["sql_div(x, y)"], "Description": ["Return type: ", "same as input", "x divided by y"], "Examples": ["sql_div(3.4, 2)"], "Category": ["Mathematics Functions"], "index": 264, "vector_txt": "264:Feature: sql_div(x, y)\nDescription: Return type: same as inputx divided by y\nExamples: sql_div(3.4, 2)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sql_max(x, y)"], "Feature": ["sql_max(x, y)"], "Description": ["Return type: ", "same as input", "greatest (highest) value of x and y (same as greatest(x,y))"], "Examples": ["sql_max(1.2, sql_max(3.3, 5))"], "Category": ["Mathematics Functions"], "index": 265, "vector_txt": "265:Feature: sql_max(x, y)\nDescription: Return type: same as inputgreatest (highest) value of x and y (same as greatest(x,y))\nExamples: sql_max(1.2, sql_max(3.3, 5))\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sql_min(x, y)"], "Feature": ["sql_min(x, y)"], "Description": ["Return type: ", "same as input", "least (lowest) value of x and y(same as least(x,y))"], "Examples": ["sql_min(1.2, sql_min(3.3, 5))"], "Category": ["Mathematics Functions"], "index": 266, "vector_txt": "266:Feature: sql_min(x, y)\nDescription: Return type: same as inputleast (lowest) value of x and y(same as least(x,y))\nExamples: sql_min(1.2, sql_min(3.3, 5))\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sql_mul(x, y)"], "Feature": ["sql_mul(x, y)"], "Description": ["Return type: ", "same as input", "x multplied by y"], "Examples": ["sql_mul(1.2, 5)"], "Category": ["Mathematics Functions"], "index": 267, "vector_txt": "267:Feature: sql_mul(x, y)\nDescription: Return type: same as inputx multplied by y\nExamples: sql_mul(1.2, 5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sql_neg(x)"], "Feature": ["sql_neg(x)"], "Description": ["Return type: ", "same as input", "x times -1"], "Examples": ["sql_neg(-2.5)"], "Category": ["Mathematics Functions"], "index": 268, "vector_txt": "268:Feature: sql_neg(x)\nDescription: Return type: same as inputx times -1\nExamples: sql_neg(-2.5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sql_sub(x, y)"], "Feature": ["sql_sub(x, y)"], "Description": ["Return type: ", "same as input", "subtract y from x"], "Examples": ["sql_sub(5, 7)"], "Category": ["Mathematics Functions"], "index": 269, "vector_txt": "269:Feature: sql_sub(x, y)\nDescription: Return type: same as inputsubtract y from x\nExamples: sql_sub(5, 7)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sqrt(x)"], "Feature": ["sqrt(x)"], "Description": ["Return type: ", "double", "square root"], "Examples": ["sqrt(2.0)"], "Category": ["Mathematics Functions"], "index": 270, "vector_txt": "270:Feature: sqrt(x)\nDescription: Return type: doublesquare root\nExamples: sqrt(2.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sys.alpha(pdec double, pradius double)"], "Feature": ["sys.alpha(pdec double, pradius double)"], "Description": ["Return type: ", "double", "compute alpha 'expansion' of theta for a given declination (used by SkyServer)"], "Examples": ["sys.alpha(5.0, 1.2)"], "Category": ["Mathematics Functions"], "index": 271, "vector_txt": "271:Feature: sys.alpha(pdec double, pradius double)\nDescription: Return type: doublecompute alpha 'expansion' of theta for a given declination (used by SkyServer)\nExamples: sys.alpha(5.0, 1.2)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sys.ms_round(x double, prc int, trunc int)"], "Feature": ["sys.ms_round(x double, prc int, trunc int)"], "Description": ["Return type: ", "double", "round to prc decimal places and ?? truncate to trunc decimal places"], "Examples": ["sys.ms_round(1.2359, 2, 0)"], "Category": ["Mathematics Functions"], "index": 272, "vector_txt": "272:Feature: sys.ms_round(x double, prc int, trunc int)\nDescription: Return type: doubleround to prc decimal places and ?? truncate to trunc decimal places\nExamples: sys.ms_round(1.2359, 2, 0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sys.ms_trunc(num double, prc int)"], "Feature": ["sys.ms_trunc(num double, prc int)"], "Description": ["Return type: ", "double", "truncate to prc decimal places"], "Examples": ["sys.ms_trunc(1.2359, 2)"], "Category": ["Mathematics Functions"], "index": 273, "vector_txt": "273:Feature: sys.ms_trunc(num double, prc int)\nDescription: Return type: doubletruncate to prc decimal places\nExamples: sys.ms_trunc(1.2359, 2)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\">\"(arg1, arg2)"], "Feature": ["\">\"(arg1, arg2)"], "Description": ["Return type: ", "boolean", "is arg1 greater than arg2"], "Examples": ["\">\"('aa', 'ab')"], "Category": ["Comparison Functions"], "index": 274, "vector_txt": "274:Feature: \">\"(arg1, arg2)\nDescription: Return type: booleanis arg1 greater than arg2\nExamples: \">\"('aa', 'ab')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["acos(x)"], "Feature": ["acos(x)"], "Description": ["Return type: ", "double", "arc cosine of angle x in radians"], "Examples": ["acos(0.54)"], "Category": ["Mathematics Functions"], "index": 275, "vector_txt": "275:Feature: acos(x)\nDescription: Return type: doublearc cosine of angle x in radians\nExamples: acos(0.54)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["asin(x)"], "Feature": ["asin(x)"], "Description": ["Return type: ", "double", "arc sine of angle x in radians"], "Examples": ["asin(1.0)"], "Category": ["Mathematics Functions"], "index": 276, "vector_txt": "276:Feature: asin(x)\nDescription: Return type: doublearc sine of angle x in radians\nExamples: asin(1.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["atan(x)"], "Feature": ["atan(x)"], "Description": ["Return type: ", "double", "arc tangent of angle x in radians"], "Examples": ["atan(1.0)"], "Category": ["Mathematics Functions"], "index": 277, "vector_txt": "277:Feature: atan(x)\nDescription: Return type: doublearc tangent of angle x in radians\nExamples: atan(1.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["atan(x, y)"], "Feature": ["atan(x, y)"], "Description": ["Return type: ", "double", "arc tangent of angle x/y in radians"], "Examples": ["atan(1.0, 2.0)"], "Category": ["Mathematics Functions"], "index": 278, "vector_txt": "278:Feature: atan(x, y)\nDescription: Return type: doublearc tangent of angle x/y in radians\nExamples: atan(1.0, 2.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["cos(x)"], "Feature": ["cos(x)"], "Description": ["Return type: ", "double", "cosine of angle x in radians"], "Examples": ["cos(12.2)"], "Category": ["Mathematics Functions"], "index": 279, "vector_txt": "279:Feature: cos(x)\nDescription: Return type: doublecosine of angle x in radians\nExamples: cos(12.2)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["cosh(x)"], "Feature": ["cosh(x)"], "Description": ["Return type: ", "double", "hyperbolic cosine of angle x in radians"], "Examples": ["cosh(3.0)"], "Category": ["Mathematics Functions"], "index": 280, "vector_txt": "280:Feature: cosh(x)\nDescription: Return type: doublehyperbolic cosine of angle x in radians\nExamples: cosh(3.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["cot(x)"], "Feature": ["cot(x)"], "Description": ["Return type: ", "double", "cotangent of angle x in radians"], "Examples": ["cot(16.0)"], "Category": ["Mathematics Functions"], "index": 281, "vector_txt": "281:Feature: cot(x)\nDescription: Return type: doublecotangent of angle x in radians\nExamples: cot(16.0)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["degrees(rad)"], "Feature": ["degrees(rad)"], "Description": ["Return type: ", "double", "convert radians angle value to degrees: r*180/pi() Note: before Oct2020 release (11.39.5) you need to include the sys schema prefix, so sys.degrees(rad)."], "Examples": ["degrees(0.5)"], "Category": ["Mathematics Functions"], "index": 282, "vector_txt": "282:Feature: degrees(rad)\nDescription: Return type: doubleconvert radians angle value to degrees: r*180/pi() Note: before Oct2020 release (11.39.5) you need to include the sys schema prefix, so sys.degrees(rad).\nExamples: degrees(0.5)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["pi()"], "Feature": ["pi()"], "Description": ["Return type: ", "double", "\u03c0 constant"], "Examples": ["pi()"], "Category": ["Mathematics Functions"], "index": 283, "vector_txt": "283:Feature: pi()\nDescription: Return type: double\u03c0 constant\nExamples: pi()\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["radians(degr)"], "Feature": ["radians(degr)"], "Description": ["Return type: ", "double", "convert degrees angle value to radians: d*pi()/180 Note: before Oct2020 release (11.39.5) you need to include the sys schema prefix, so sys.radians(degr)."], "Examples": ["radians(45)"], "Category": ["Mathematics Functions"], "index": 284, "vector_txt": "284:Feature: radians(degr)\nDescription: Return type: doubleconvert degrees angle value to radians: d*pi()/180 Note: before Oct2020 release (11.39.5) you need to include the sys schema prefix, so sys.radians(degr).\nExamples: radians(45)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\"<=\"(arg1, arg2)"], "Feature": ["\"<=\"(arg1, arg2)"], "Description": ["Return type: ", "boolean", "is arg1 less than or equal to arg2"], "Examples": ["\"<=\"('aa', 'ab')"], "Category": ["Comparison Functions"], "index": 285, "vector_txt": "285:Feature: \"<=\"(arg1, arg2)\nDescription: Return type: booleanis arg1 less than or equal to arg2\nExamples: \"<=\"('aa', 'ab')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sin(x)"], "Feature": ["sin(x)"], "Description": ["Return type: ", "double", "sine of angle x in radians"], "Examples": ["sin(1.4)"], "Category": ["Mathematics Functions"], "index": 286, "vector_txt": "286:Feature: sin(x)\nDescription: Return type: doublesine of angle x in radians\nExamples: sin(1.4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["sinh(x)"], "Feature": ["sinh(x)"], "Description": ["Return type: ", "double", "hyperbolic sine of angle x in radians"], "Examples": ["sinh(1.4)"], "Category": ["Mathematics Functions"], "index": 287, "vector_txt": "287:Feature: sinh(x)\nDescription: Return type: doublehyperbolic sine of angle x in radians\nExamples: sinh(1.4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["tan(x)"], "Feature": ["tan(x)"], "Description": ["Return type: ", "double", "tangent of angle x in radians"], "Examples": ["tan(1.4)"], "Category": ["Mathematics Functions"], "index": 288, "vector_txt": "288:Feature: tan(x)\nDescription: Return type: doubletangent of angle x in radians\nExamples: tan(1.4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/mathematics-functions"], "Title": ["tanh(x)"], "Feature": ["tanh(x)"], "Description": ["Return type: ", "double", "hyperbolic tangent of angle x in radians"], "Examples": ["tanh(1.4)"], "Category": ["Mathematics Functions"], "index": 289, "vector_txt": "289:Feature: tanh(x)\nDescription: Return type: doublehyperbolic tangent of angle x in radians\nExamples: tanh(1.4)\nCategory: Mathematics Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["ascii(s)"], "Feature": ["ascii(s)"], "Description": ["Return type: ", "int", "Unicode code point of the first character of the string s"], "Examples": ["ascii(R'\u20ac')"], "Category": ["Character String Functions"], "index": 290, "vector_txt": "290:Feature: ascii(s)\nDescription: Return type: intUnicode code point of the first character of the string s\nExamples: ascii(R'\u20ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["asciify(s)"], "Feature": ["asciify(s)"], "Description": ["Return type: ", "same as input", "Replace all non-ASCII characters in string s with ASCII equivalents"], "Examples": ["asciify(R'a \u20ac sign')"], "Category": ["Character String Functions"], "index": 291, "vector_txt": "291:Feature: asciify(s)\nDescription: Return type: same as inputReplace all non-ASCII characters in string s with ASCII equivalents\nExamples: asciify(R'a \u20ac sign')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["char_length(s)"], "Feature": ["char_length(s)"], "Description": ["Return type: ", "int", "number of UTF-8 characters in UTF-8 string s"], "Examples": ["char_length(R'2\u20ac')"], "Category": ["Character String Functions"], "index": 292, "vector_txt": "292:Feature: char_length(s)\nDescription: Return type: intnumber of UTF-8 characters in UTF-8 string s\nExamples: char_length(R'2\u20ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["character_length(s)"], "Feature": ["character_length(s)"], "Description": ["Return type: ", "int", "number of UTF-8 characters in UTF-8 string s"], "Examples": ["character_length(R'2\u20ac')"], "Category": ["Character String Functions"], "index": 293, "vector_txt": "293:Feature: character_length(s)\nDescription: Return type: intnumber of UTF-8 characters in UTF-8 string s\nExamples: character_length(R'2\u20ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["charindex(substr, s)"], "Feature": ["charindex(substr, s)"], "Description": ["Return type: ", "int", "start position of substr in string s or 0 when not found"], "Examples": ["charindex('gh', 'highigh')"], "Category": ["Character String Functions"], "index": 294, "vector_txt": "294:Feature: charindex(substr, s)\nDescription: Return type: intstart position of substr in string s or 0 when not found\nExamples: charindex('gh', 'highigh')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["charindex(substr, s, i)"], "Feature": ["charindex(substr, s, i)"], "Description": ["Return type: ", "int", "start position of substr in string s starting at offset i or 0 when not found"], "Examples": ["charindex('gh', 'highigh', 4)"], "Category": ["Character String Functions"], "index": 295, "vector_txt": "295:Feature: charindex(substr, s, i)\nDescription: Return type: intstart position of substr in string s starting at offset i or 0 when not found\nExamples: charindex('gh', 'highigh', 4)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\">=\"(arg1, arg2)"], "Feature": ["\">=\"(arg1, arg2)"], "Description": ["Return type: ", "boolean", "is arg1 greater than or equal to arg2"], "Examples": ["\">=\"('aa', 'ab')"], "Category": ["Comparison Functions"], "index": 296, "vector_txt": "296:Feature: \">=\"(arg1, arg2)\nDescription: Return type: booleanis arg1 greater than or equal to arg2\nExamples: \">=\"('aa', 'ab')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["code(int)"], "Feature": ["code(int)"], "Description": ["Return type: ", "char", "Unicode character for the integer code point"], "Examples": ["code(223)"], "Category": ["Character String Functions"], "index": 297, "vector_txt": "297:Feature: code(int)\nDescription: Return type: charUnicode character for the integer code point\nExamples: code(223)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["concat(s1, s2)"], "Feature": ["concat(s1, s2)"], "Description": ["Return type: ", "same as input", "concatenate strings s1 and s2. returns null when either s1 or s2 is null"], "Examples": ["concat('Front ', 242)"], "Category": ["Character String Functions"], "index": 298, "vector_txt": "298:Feature: concat(s1, s2)\nDescription: Return type: same as inputconcatenate strings s1 and s2. returns null when either s1 or s2 is null\nExamples: concat('Front ', 242)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["field(s, s1, s2, s3, ...)"], "Feature": ["field(s, s1, s2, s3, ...)"], "Description": ["Return type: ", "int", "Returns the index (position) of s in the s1, s2, s3, ... list. Returns NULL if str is not found."], "Examples": ["field('foo', 'bar', 'foo', 'baz')"], "Category": ["Character String Functions"], "index": 299, "vector_txt": "299:Feature: field(s, s1, s2, s3, ...)\nDescription: Return type: intReturns the index (position) of s in the s1, s2, s3, ... list. Returns NULL if str is not found.\nExamples: field('foo', 'bar', 'foo', 'baz')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["greatest(s1, s2)"], "Feature": ["greatest(s1, s2)"], "Description": ["Return type: ", "same as input", "alphabetically ordered last string value of strings s1 and s2. (same as sql_max(s1, s2))"], "Examples": ["greatest('ab', 'ac')"], "Category": ["Character String Functions"], "index": 300, "vector_txt": "300:Feature: greatest(s1, s2)\nDescription: Return type: same as inputalphabetically ordered last string value of strings s1 and s2. (same as sql_max(s1, s2))\nExamples: greatest('ab', 'ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["insert(s1, int pos, int nr, s2)"], "Feature": ["insert(s1, int pos, int nr, s2)"], "Description": ["Return type: ", "same as input arg 4", "insert string s2 into string s1 after position pos replacing nr characters in string s1. when pos is negative it counts from the end of the string. nr must be >= 0."], "Examples": ["insert('abcdef', 2, 1, 'XY')"], "Category": ["Character String Functions"], "index": 301, "vector_txt": "301:Feature: insert(s1, int pos, int nr, s2)\nDescription: Return type: same as input arg 4insert string s2 into string s1 after position pos replacing nr characters in string s1. when pos is negative it counts from the end of the string. nr must be >= 0.\nExamples: insert('abcdef', 2, 1, 'XY')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["lcase(s)"], "Feature": ["lcase(s)"], "Description": ["Return type: ", "same as input", "convert string s to lower case"], "Examples": ["lcase('MonetDB')"], "Category": ["Character String Functions"], "index": 302, "vector_txt": "302:Feature: lcase(s)\nDescription: Return type: same as inputconvert string s to lower case\nExamples: lcase('MonetDB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["least(s1, s2)"], "Feature": ["least(s1, s2)"], "Description": ["Return type: ", "same as input", "alphabetically ordered first string value of strings s1 and s2. (same as sql_min(s1, s2))"], "Examples": ["least('ab', 'ac')"], "Category": ["Character String Functions"], "index": 303, "vector_txt": "303:Feature: least(s1, s2)\nDescription: Return type: same as inputalphabetically ordered first string value of strings s1 and s2. (same as sql_min(s1, s2))\nExamples: least('ab', 'ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["left(s, int n)"], "Feature": ["left(s, int n)"], "Description": ["Return type: ", "same as input arg 1", "return first n characters in the string"], "Examples": ["left('MonetDB', 3)"], "Category": ["Character String Functions"], "index": 304, "vector_txt": "304:Feature: left(s, int n)\nDescription: Return type: same as input arg 1return first n characters in the string\nExamples: left('MonetDB', 3)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["length(s)"], "Feature": ["length(s)"], "Description": ["Return type: ", "int", "count number of UTF-8 characters in UTF-8 string s"], "Examples": ["length(R'2\u20ac')"], "Category": ["Character String Functions"], "index": 305, "vector_txt": "305:Feature: length(s)\nDescription: Return type: intcount number of UTF-8 characters in UTF-8 string s\nExamples: length(R'2\u20ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["locate(s1, s2)"], "Feature": ["locate(s1, s2)"], "Description": ["Return type: ", "int", "locate string s1 in s2, when found return start position else 0"], "Examples": ["locate('DB', 'MonetDB')"], "Category": ["Character String Functions"], "index": 306, "vector_txt": "306:Feature: locate(s1, s2)\nDescription: Return type: intlocate string s1 in s2, when found return start position else 0\nExamples: locate('DB', 'MonetDB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\"=\"(arg1, arg2)"], "Feature": ["\"=\"(arg1, arg2)"], "Description": ["Return type: ", "boolean", "is arg1 equal to arg2"], "Examples": ["\"=\"('aa', 'ab')"], "Category": ["Comparison Functions"], "index": 307, "vector_txt": "307:Feature: \"=\"(arg1, arg2)\nDescription: Return type: booleanis arg1 equal to arg2\nExamples: \"=\"('aa', 'ab')\nCategory: Comparison Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["locate(s1, s2, int pos)"], "Feature": ["locate(s1, s2, int pos)"], "Description": ["Return type: ", "int", "locate string s1 in s2 starting from position pos, when found return start position else 0"], "Examples": ["locate('DB', 'DBMonetDB', 3)"], "Category": ["Character String Functions"], "index": 308, "vector_txt": "308:Feature: locate(s1, s2, int pos)\nDescription: Return type: intlocate string s1 in s2 starting from position pos, when found return start position else 0\nExamples: locate('DB', 'DBMonetDB', 3)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["lower(s)"], "Feature": ["lower(s)"], "Description": ["Return type: ", "same as input", "convert string s to lower case"], "Examples": ["lower('MonetDB')"], "Category": ["Character String Functions"], "index": 309, "vector_txt": "309:Feature: lower(s)\nDescription: Return type: same as inputconvert string s to lower case\nExamples: lower('MonetDB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["lpad(s, int len)"], "Feature": ["lpad(s, int len)"], "Description": ["Return type: ", "same as input arg 1", "fill up the string to length len by prepending spaces. If the string is already longer than length then it is truncated (on the right)."], "Examples": ["lpad('abc', 6)"], "Category": ["Character String Functions"], "index": 310, "vector_txt": "310:Feature: lpad(s, int len)\nDescription: Return type: same as input arg 1fill up the string to length len by prepending spaces. If the string is already longer than length then it is truncated (on the right).\nExamples: lpad('abc', 6)\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["lpad(s1, int len, s2)"], "Feature": ["lpad(s1, int len, s2)"], "Description": ["Return type: ", "same as input arg 1", "fill up the string s1 to length len by prepending the characters s2. If the string s1 is already longer than length then it is truncated (on the right)."], "Examples": ["lpad('abc', 6, 'DB')"], "Category": ["Character String Functions"], "index": 311, "vector_txt": "311:Feature: lpad(s1, int len, s2)\nDescription: Return type: same as input arg 1fill up the string s1 to length len by prepending the characters s2. If the string s1 is already longer than length then it is truncated (on the right).\nExamples: lpad('abc', 6, 'DB')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["ltrim(s)"], "Feature": ["ltrim(s)"], "Description": ["Return type: ", "varchar", "remove leading whitespace characters from string s"], "Examples": ["ltrim(E' \\t\\fab \\tdf ')"], "Category": ["Character String Functions"], "index": 312, "vector_txt": "312:Feature: ltrim(s)\nDescription: Return type: varcharremove leading whitespace characters from string s\nExamples: ltrim(E' \\t\\fab \\tdf ')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["ltrim(s1, s2)"], "Feature": ["ltrim(s1, s2)"], "Description": ["Return type: ", "varchar", "remove leading s2 strings from string s1"], "Examples": ["ltrim('aabcdaa', 'a')"], "Category": ["Character String Functions"], "index": 313, "vector_txt": "313:Feature: ltrim(s1, s2)\nDescription: Return type: varcharremove leading s2 strings from string s1\nExamples: ltrim('aabcdaa', 'a')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["sys.md5(s)"], "Feature": ["sys.md5(s)"], "Description": ["Return type: ", "clob(32)", "calculates the MD5 hash of string, returning the result as 32 character hex number"], "Examples": ["sys.md5('abc')"], "Category": ["Character String Functions"], "index": 314, "vector_txt": "314:Feature: sys.md5(s)\nDescription: Return type: clob(32)calculates the MD5 hash of string, returning the result as 32 character hex number\nExamples: sys.md5('abc')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["sys.ms_stuff(varchar(32) s1, int pos, int nr, varchar(32) s2)"], "Feature": ["sys.ms_stuff(varchar(32) s1, int pos, int nr, varchar(32) s2)"], "Description": ["Return type: ", "varchar(32)", "insert string s2 into string s1 at position pos replacing nr characters in string s1. If pos <= 0 or > length of s1 then an empty string is returned. nr may be negative."], "Examples": ["sys.ms_stuff('abcdef', 2, 1, 'XY')"], "Category": ["Character String Functions"], "index": 315, "vector_txt": "315:Feature: sys.ms_stuff(varchar(32) s1, int pos, int nr, varchar(32) s2)\nDescription: Return type: varchar(32)insert string s2 into string s1 at position pos replacing nr characters in string s1. If pos <= 0 or > length of s1 then an empty string is returned. nr may be negative.\nExamples: sys.ms_stuff('abcdef', 2, 1, 'XY')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["octet_length(s)"], "Feature": ["octet_length(s)"], "Description": ["Return type: ", "int", "number of bytes in UTF-8 string s"], "Examples": ["octet_length(R'2\u20ac')"], "Category": ["Character String Functions"], "index": 316, "vector_txt": "316:Feature: octet_length(s)\nDescription: Return type: intnumber of bytes in UTF-8 string s\nExamples: octet_length(R'2\u20ac')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/string-functions"], "Title": ["patindex(pattern, s)"], "Feature": ["patindex(pattern, s)"], "Description": ["Return type: ", "int", "search for pattern in string s, when found return the position of the last matched character, when not found return 0"], "Examples": ["patindex('%bc%', 'abcd')"], "Category": ["Character String Functions"], "index": 317, "vector_txt": "317:Feature: patindex(pattern, s)\nDescription: Return type: intsearch for pattern in string s, when found return the position of the last matched character, when not found return 0\nExamples: patindex('%bc%', 'abcd')\nCategory: Character String Functions\n"}
{"HTML": ["https://www.monetdb.org/documentation-Aug2024/user-guide/sql-functions/comparison-functions"], "Title": ["\"<>\"(arg1, arg2)"], "Feature": ["\"<>\"(arg1, arg2)"], "Description": ["Return type: ", "boolean", "is arg1 not equal to arg2"], "Examples": ["\"<>\"('aa', 'ab')"], "Category": ["Comparison Functions"], "index": 318, "vector_txt": "318:Feature: \"<>\"(arg1, arg2)\nDescription: Return type: booleanis arg1 not equal to arg2\nExamples: \"<>\"('aa', 'ab')\nCategory: Comparison Functions\n"}
