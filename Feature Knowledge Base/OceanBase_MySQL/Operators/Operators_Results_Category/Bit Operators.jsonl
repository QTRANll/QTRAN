{"HTML": ["https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000000822071"], "Title": ["~"], "Feature": ["~"], "Description": ["按位取反", "二进制位上 0 变为 1，1 变为 0。结果是一个无符号的 64 位整数。"], "Examples": ["SELECT 5 & ~1;\n+--------+\n| 5 & ~1 |\n+--------+\n|      4 |\n+--------+\n1 row in set\n"], "Category": ["Bit Operators"]}
{"HTML": ["https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000000822071"], "Title": ["^"], "Feature": ["^"], "Description": ["按位异或", "两个操作数的二进制位相同为 0，相异为 1。结果是一个无符号的 64 位整数。"], "Examples": ["SELECT 1 ^ 1;\n+-------+\n| 1 ^ 1 |\n+-------+\n|     0 |\n+-------+\n1 row in set\n\nSELECT 1 ^ 0;\n+-------+\n| 1 ^ 0 |\n+-------+\n|     1 |\n+-------+\n1 row in set\n\nSELECT 13 ^ 5;\n+--------+\n| 13 ^ 5 |\n+--------+\n|      8 |\n+--------+\n1 row in set\n"], "Category": ["Bit Operators"]}
{"HTML": ["https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000000822071"], "Title": ["<<"], "Feature": ["<<"], "Description": ["逻辑左移", "两个操作数的二进制位全部左移若干位，高位丢弃，低位补 0。结果是一个无符号的 64 位整数。该值被截断为 64 位。如果移位计数大于或等于无符号 64 位数字的宽度，则结果为零。"], "Examples": ["SELECT 1 << 2;\n+--------+\n| 1 << 2 |\n+--------+\n|      4 |\n+--------+\n1 row in set\n"], "Category": ["Bit Operators"]}
{"HTML": ["https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000000822071"], "Title": [">>"], "Feature": [">>"], "Description": ["逻辑右移", "两个操作数的二进制位全部右移若干位。对无符号数，高位补 0。结果是一个无符号的 64 位整数。该值被截断为 64 位。如果移位计数大于或等于无符号 64 位数字的宽度，则结果为零。"], "Examples": ["SELECT 4 >> 2;\n+--------+\n| 4 >> 2 |\n+--------+\n|      1 |\n+--------+\n1 row in set\n"], "Category": ["Bit Operators"]}
{"HTML": ["https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000000822071"], "Title": ["&"], "Feature": ["&"], "Description": ["按位与", "两个操作数的二进制位都为 1 时，结果才为 1。结果是一个无符号的 64 位整数。"], "Examples": ["SELECT 28 & 15;\n+---------+\n| 28 & 15 |\n+---------+\n|      12 |\n+---------+\n1 row in set\n"], "Category": ["Bit Operators"]}
{"HTML": ["https://www.oceanbase.com/docs/common-oceanbase-database-cn-1000000000822071"], "Title": ["|"], "Feature": ["|"], "Description": ["按位或", "两个操作数的二进制位都为 0 时，结果才为 0。结果是一个无符号的 64 位整数。"], "Examples": ["SELECT 28 | 15;\n+---------+\n| 28 | 15 |\n+---------+\n|      31 |\n+---------+\n1 row in set\n"], "Category": ["Bit Operators"]}
