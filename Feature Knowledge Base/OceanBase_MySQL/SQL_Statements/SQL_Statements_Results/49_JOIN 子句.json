{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001054471"
    ],
    "Title": [
        "JOIN 子句"
    ],
    "Feature": [
        "table_references:\n    table_reference [, table_reference ...]\n\ntable_reference:\n    table_factor\n  | joined_table\n\ntable_factor:\n    table_name [partition_option]\n [[AS] alias] [index_hint_list]\n  | table_subquery [AS] alias\n  | ( table_references )\n\njoined_table:\n      table_reference [NATURAL] [[INNER] | CROSS] JOIN table_factor [join_condition]\n    | table_reference outer_join_type JOIN table_factor join_condition\n\npartition_option:\n    PARTITION (partition_name_list)\n\njoin_condition:\n     ON expression\n   | USING (join_column_list)\n\njoin_column_list:\n    column_name [, column_name ...]\n\nouter_join_type:\n    [NATURAL] {LEFT | RIGHT | FULL} [OUTER]\n\nindex_hint_list:\n    index_hint [, index_hint ...]\n\nindex_hint:\n    {USE | FORCE | IGNORE} {KEY | INDEX}\n       [FOR {JOIN | ORDER BY | GROUP BY}] (index_list)\n\nindex_list:\n    index_name [, index_name ...]\n"
    ],
    "Description": [
        "JOIN 子句用于表的联接。",
        "数据库中的联接语句用于将数据库中的两个或多个表根据联接条件组合起来。由\"联接\"生成的集合, 可以被保存为表，或者当成表来使用。联接语句的含义是把两张表的属性通过它们的值组合在一起。",
        "\n\n\n参数\n描述\n\n\n\n\nPARTITION (partition_name_list)\n指定表的分区进行联接。\n\n\nNATURAL\n进行自然联接。 NATURAL JOIN 会自动使用相同的列进行联接。\n\n\n[INNER] JOIN\n进行内联接。 在没有指定联接条件时，INNER JOIN 与逗号（,）是等价的，它们都会使用指定的表产生一个笛卡尔积。 注意 逗号（,）作为操作符，优先级小于 INNER JOIN、CROSS JOIN、LEFT JOIN 等，因此如果将逗号与其他联接关键字混合使用，可能会导致 ON 子句的条件错误。\n\n\nCROSS JOIN\nOceanBase 数据库 MySQL 模式中，CROSS JOIN 与 JOIN、INNER JOIN 是等价的。\n\n\nLEFT [OUTER] JOIN\n进行左外联接，左表的一行未在右表中找到的时候，就在右表自动填充 NULL。\n\n\nRIGHT [OUTER] JOIN\n进行右外联接，右表的一行未在左表中找到的时候，就在左表自动填充 NULL。\n\n\nFULL [OUTER] JOIN\n进行外联接，左表或者右表找不匹配行的时候都会自动填充 NULL。\n\n\ncolumn_name\n用于连接的列名。\n\n\nindex_hint\n进行查询是否使用指定的索引。 \n      \nUSE：指示某项操作使用索引。\nFORCE：指示某些操作强制使用索引。\nIGNORE：是指某项操作不使用索引。\nFOR JOIN：指定索引进行连接。\nFOR ORDER BY：指定索引进行排序。\nFOR GROUP BY：指定索引进行分组。\n\n\n\nON expression\n返回重复列的联接条件，适用于使用不同名称的列作为联接条件。\n\n\nUSING (join_column_list)\n不返回重复列的联接条件，仅限于联接的表使用相同名称的列作为联接条件。\n\n\n"
    ],
    "Examples": [
        "obclient> SELECT * FROM a JOIN b ON a.ID=b.ID;\n+------+------+------+------+\n| id   | name | id   | name |\n+------+------+------+------+\n|    1 | A    |    1 |  100 |\n|    3 | A    |    3 |   75 |\n+------+------+------+------+\n2 rows in set\n",
        "obclient> SELECT * FROM a CROSS JOIN b ON a.id=b.id;\n+------+------+------+------+\n| id   | name | id   | name |\n+------+------+------+------+\n|    1 | A    |    1 |  100 |\n|    3 | A    |    3 |   75 |\n+------+------+------+------+\n2 rows in set\n",
        "obclient> SELECT * FROM a NATURAL JOIN b;\nEmpty set\n",
        "obclient> SELECT * FROM a LEFT JOIN b USING(ID);\n+------+------+------+\n| id   | name | name |\n+------+------+------+\n|    1 | A    |  100 |\n|    2 | B    | NULL |\n|    3 | A    |   75 |\n+------+------+------+\n3 rows in set\n",
        "obclient> SELECT * FROM a RIGHT JOIN b USING(ID);\n+------+------+------+\n| id   | name | name |\n+------+------+------+\n|    1 |  100 | A    |\n|    3 |   75 | A    |\n|    4 |   50 | NULL |\n+------+------+------+\n3 rows in set\n",
        "obclient> SELECT * FROM a FULL JOIN b USING(ID);\n+------+------+------+\n| id   | name | name |\n+------+------+------+\n|    1 | A    |  100 |\n|    2 | B    | NULL |\n|    3 | A    |   75 |\n|    4 | NULL |   50 |\n+------+------+------+\n4 rows in set\n"
    ],
    "Category": [
        "No Category"
    ]
}