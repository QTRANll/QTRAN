{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001053522"
    ],
    "Title": [
        "CREATE TABLE"
    ],
    "Feature": [
        "CREATE [hint_options] TABLE [IF NOT EXISTS] table_name\n      (table_definition_list) [table_option_list] [partition_option] [table_column_group_option] [IGNORE | REPLACE] [AS] select;\n\nCREATE TABLE [IF NOT EXISTS] table_name\n      LIKE table_name;\n\ntable_definition_list:\n    table_definition [, table_definition ...]\n\ntable_definition:\n      column_definition_list\n    | [CONSTRAINT [constraint_name]] PRIMARY KEY index_desc\n    | [CONSTRAINT [constraint_name]] UNIQUE {INDEX | KEY}\n            [index_name] index_desc\n    | [CONSTRAINT [constraint_name]] FOREIGN KEY\n            [index_name] index_desc\n            REFERENCES reference_definition\n            [match_action][opt_reference_option_list]\n    | [FULLTEXT] {INDEX | KEY} [index_name] [index_type] (key_part,...) [WITH PARSER {SPACE | NGRAM | BENG}]\n      [index_option_list] [index_column_group_option]\n    | index_json_clause\n    | [CONSTRAINT [constraint_name]] CHECK(expression) constranit_state\n\ncolumn_definition_list:\n    column_definition [, column_definition ...]\n\ncolumn_definition:\n     column_name data_type\n         [DEFAULT const_value] [AUTO_INCREMENT]\n         [NULL | NOT NULL] [[PRIMARY] KEY] [UNIQUE [KEY]] [COMMENT string_value] [SKIP_INDEX(skip_index_option_list)]\n   | column_name data_type\n         [GENERATED ALWAYS] AS (expr) [VIRTUAL | STORED]\n         [opt_generated_column_attribute]\n\nskip_index_option_list:\n    skip_index_option [,skip_index_option ...]\n\nskip_index_option:\n    MIN_MAX\n    | SUM\n\nindex_desc:\n   (column_desc_list) [index_type] [index_option_list]\n\nmatch_action:\n   MATCH {SIMPLE | FULL | PARTIAL}\n\nopt_reference_option_list:\n   reference_option [,reference_option ...]\n\nreference_option:\n   ON {DELETE | UPDATE} {RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT}\n\n\nkey_part:\n    {index_col_name [(length)] | (expr)} [ASC | DESC]\n\nindex_type:\n    USING BTREE\n\nindex_option_list:\n    index_option [ index_option ...]\n\nindex_option:\n      [GLOBAL | LOCAL]\n    | block_size\n    | compression\n    | STORING(column_name_list)\n    | COMMENT string_value\n\ntable_option_list:\n    table_option [ table_option ...]\n\ntable_option:\n      [DEFAULT] {CHARSET | CHARACTER SET} [=] charset_name\n    | [DEFAULT] COLLATE [=] collation_name\n    | table_tablegroup\n    | block_size\n    | lob_inrow_threshold [=] num\n    | compression\n    | AUTO_INCREMENT [=] INT_VALUE\n    | COMMENT string_value\n    | ROW_FORMAT [=] REDUNDANT|COMPACT|DYNAMIC|COMPRESSED|DEFAULT\n    | PCTFREE [=] num\n    | parallel_clause\n    | DUPLICATE_SCOPE [=] 'none|cluster'\n    | TABLE_MODE [=] 'table_mode_value'\n    | auto_increment_cache_size [=] INT_VALUE\n\nparallel_clause:\n    {NOPARALLEL | PARALLEL integer}\n\ntable_mode_value:\n    NORMAL\n    | QUEUING\n    | MODERATE\n    | SUPER\n    | EXTREME\n\npartition_option:\n      PARTITION BY HASH(expression)\n      [subpartition_option] PARTITIONS partition_count\n    | PARTITION BY KEY([column_name_list])\n      [subpartition_option] PARTITIONS partition_count\n    | PARTITION BY RANGE {(expression) | COLUMNS (column_name_list)}\n      [subpartition_option] (range_partition_list)\n    | PARTITION BY LIST {(expression) | COLUMNS (column_name_list)}\n      [subpartition_option] PARTITIONS partition_count\n\nsubpartition_option:\n      SUBPARTITION BY HASH(expression)\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION BY KEY(column_name_list)\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION BY RANGE {(expression) | COLUMNS (column_name_list)}\n      (range_subpartition_list)\n    | SUBPARTITION BY LIST(expression)\n\nrange_partition_list:\n    range_partition [, range_partition ...]\n\nrange_partition:\n    PARTITION partition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE}\n\nrange_subpartition_list:\n    range_subpartition [, range_subpartition ...]\n\nrange_subpartition:\n    SUBPARTITION subpartition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE}\n\nexpression_list:\n    expression [, expression ...]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n\npartition_name_list:\n    partition_name [, partition_name ...]\n\npartition_count | subpartition_count:\n    INT_VALUE\n\ntable_column_group_option/index_column_group_option:\n      WITH COLUMN GROUP(all columns)\n    | WITH COLUMN GROUP(each column)\n    | WITH COLUMN GROUP(all columns, each column)\n\nindex_json_clause:\n    [UNIQUE] INDEX idx_json_name((CAST(json_column_name->'$.json_field_name' AS UNSIGNED ARRAY)))\n    | INDEX idx_json_name(column_name, [column_name, ...] (CAST(json_column_name->'$.json_field_name' AS CHAR(n) ARRAY)))\n"
    ],
    "Description": [
        "该语句用来在数据库中创建一张新表。",
        "\n\n\n参数\n描述\n\n\n\n\nhint_options\n指定 Hint 选项，为可选项。 \n      \n注意\n在当前版本中，CREATE TABLE 语句的 Hint 选项仅限于支持 /*+ parallel(N) */ 类型，其中 N 是并行度。并且该 Hint 选项仅适用于 CREATE TABLE … AS SELECT … 的场景，可以控制在表创建时数据查询和写入操作的并行度。\n\n\n\nIF NOT EXISTS\n如果指定 IF NOT EXISTS，即使待创建的表已存在，也不会报错；如果不指定且待创建的表已存在，则系统会报错。\n\n\nIGNORE | REPLACE\n可选项，使用 CREATE TABLE ... SELECT 语句时指示如何处理重复唯一键值的行。当有重复唯一键值的行时，如果不指定 IGNORE 或者 REPLACE 将会报错。 \n      \nIGNORE：如果新表中的唯一键值与复制的数据中的某行发生冲突，那么该冲突行将被忽略，不会被复制到新表中。即 IGNORE 选项会跳过重复的数据，只复制那些不会造成唯一键冲突的行。\nREPLACE：在遇到唯一键值重复的数据行，原新表中的行将被替换为新复制的数据中的行。\n\n\n\nPRIMARY KEY\n为创建的表指定主键。如果不指定，则使用隐藏主键。OceanBase 数据库支持修改表的主键或通过 ALTER TABLE 语句为表添加主键，参见 ALTER TABLE。\n\n\nFOREIGN KEY\n为创建的表指定外键。如果不指定外键名，则会使用表名 + OBFK + 创建时间命名。（例如，在 2021 年 8 月 1 日 00:00:00 为 t1 表创建的外键名称为 t1_OBFK_1627747200000000）。外键允许跨表交叉引用相关数据，当 UPDATE 或 DELETE 操作影响与子表相匹配行的父表中键值时，其结果取决于 ON UPDATE 和 ON DELETE 子句的引用操作： \n      \nCASCADE：表示从父表中删除或更新行，并自动删除或更新子表中匹配的行。\nSET NULL：表示从父表中删除或更新行，并将子表中的外键列设置为 NULL。\nRESTRICT：表示拒绝对父表的删除或更新操作。\nNO ACTION：指定延迟检查。\n此外还支持 SET DEFAULT 操作。\n\n\nFULLTEXT\n可选项，指定创建全文索引。有关创建全文索引的详细信息，参见 创建索引 中的 创建全文索引 章节。 \n      \n注意\n\n\n当前版本只支持创建局部全文索引。\n全文索引功能目前处于实验阶段，不推荐在生产环境中使用，以免影响系统稳定性。\n\n\n\n\n\nWITH PARSER {SPACE | NGRAM | BENG}\n可选项，指定全文索引的分词器。当前版本仅支持 SPACE（空格）、NGRAM 和 BENG（基础英文）三种内置分词器，不指定默认使用 SPACE（空格）分词器。\n\n\nKEY | INDEX\n为创建的表指定键或索引。如果不指定索引名，则会使用索引引用的第一列作为索引名，如果命名存在重复，则会使用下划线（_）+ 序号的方式命名。（例如，使用 c1 列创建的索引如果命名重复，则会将索引命名为 c1_2。） 您可以通过 SHOW INDEX 语句查看表上的索引。\n\n\nkey_part\n创建（函数）索引。\n\n\nindex_col_name\n指定索引的列名，每个列名后都支持 ASC（升序），不支持 DESC（降序）。默认为升序。建立索引的排序方式为：首先以 index_col_name 中第一个列的值排序；该列值相同的记录，按下一列名的值排序；以此类推。\n\n\nexpr\n表示合法的函数索引表达式，且允许是布尔表达式，例如 c1=c1。 \n      \n注意\nOceanBase 数据库当前版本禁止创建生成列上的函数索引。\n\n\n\nROW_FORMAT\n指定表是否开启 Encoding 存储格式。 \n      \nredundant：不开启 Encoding 存储格式。\ncompact：不开启 Encoding 存储格式。\ndynamic：Encoding 存储格式。\ncompressed：Encoding 存储格式。\ndefault：等价 dynamic 模式。\n\n\n\n[GENERATED ALWAYS] AS (expr) [VIRTUAL | STORED]\n创建生成列，expr 为用于计算列值的表达式。 \n      \nVIRTUAL：列值不会被存储，而是在读取行时，在任何 BEFORE 触发器之后立即计算。虚拟列不占用存储空间。\nSTORED：在插入或更新行时评估和存储列值。存储列确实需要存储空间并且可以被索引。\n\n\n\nBLOCK_SIZE\n指定表的微块大小。\n\n\nlob_inrow_threshold\n用于配置 INROW 阈值，当 LOB 数据大小超过该阈值时，会转为 OUTROW 存储在 LOB Meta 表中，默认为 4KB。\n\n\nCOMPRESSION\n指定表的压缩算法，取值如下： \n      \nnone：不使用压缩算法。\nlz4_1.0: 使用 lz4 压缩算法。\nzstd_1.0: 使用 zstd 压缩算法。\nsnappy_1.0: 使用 snappy 压缩算法。\n\n\n\nCHARSET | CHARACTER SET\n指定表中列的默认字符集，可使用的字符集请参见 字符集。\n\n\nCOLLATE\n指定表中列的默认字符序，可使用的字符序请参见 字符序。\n\n\ntable_tablegroup\n指定表所属的 tablegroup。\n\n\nAUTO_INCREMENT\n指定表中自增列的初始值。OceanBase 数据库支持使用自增列作为分区键。\n\n\nCOMMENT\n注释。不区分大小写。\n\n\nPCTFREE\n指定宏块保留空间百分比。\n\n\nparallel_clause\n指定表级别的并行度： \n      \nNOPARALLEL：并行度为 1，默认配置\nPARALLEL integer：指定并行度，integer 取值大于等于 1。\n\n\n\nDUPLICATE_SCOPE\n指定复制表的属性，取值如下： \n      \nnone：表示该表是一个普通表，为默认值。\ncluster：表示该表是一个复制表，Leader 需要将事务复制到当前租户的所有 F（全能）副本及 R（只读）副本。\nOceanBase 数据库目前仅支持 cluster 级别的复制表。\n\n\nCHECK\n限制列中的值的范围。 \n      \n如果对单个列定义 CHECK 约束，那么该列级约束可以写到列定义中，并且可以指定名称。\n如果对一个表定义 CHECK 约束，那么此约束会应用于表中多个列，且允许出现在列的定义前。在删除表时，表中创建的 CHECK 约束也会一起被删除。\n 可以通过如下方式查看约束信息： 使用 SHOW CREATE TABLE 命令 查看 information_schema.TABLE_CONSTRAINTS 视图 查看 information_schema.CHECK_CONSTRAINTS 视图\n\n\nconstraint_name\n约束名称，最多包含 64 个字符。 \n      \n约束名称的开头结尾中间都允许有空格，但需要用\"`“标识名称的开头和结尾。\n约束名称可以包含特殊字符”$“。\n如果约束名称为保留字，需要用”`\"标识，否则会报错。\n在同一 Database 下不允许 CHECK 约束的名称重复。\n\n\n\nexpression\n约束表达式。 \n      \nexpression 不允许为空。\nexpression 结果不能为非布尔类型。\nexpression 不能包含不存在的列。\n\n\n\ntable_column_group_option/index_column_group_option\n指定表或索引的列存选项。具体解释如下： \n      \nWITH COLUMN GROUP(all columns, each column)：指定创建行存列存冗余的表或索引。\nWITH COLUMN GROUP(all columns)：指定添加行存表或索引。\nWITH COLUMN GROUP(each column)：指定创建列存表或索引。\n\n\n\nSKIP_INDEX\n标识列的 Skip Index 属性。 取值如下： \n      \nMIN_MAX：是 Skip Index 中最通用的聚合数据类型，它会在索引节点粒度下存储被索引列的最大值、最小值和 Null Count。这种类型的数据可以加速下推的 Filter 和 MIN/MAX 聚合的下推。\nSUM：用于加速数值类型的 SUM 聚合的下推。\n\n\n注意\n\n\nJSON 和空间数据类型的列禁止创建 Skip Index。\n生成列禁止创建 Skip Index。\n\n\n\n\n\nindex_json_clause\n指定创建多值索引子句。更多多值索引信息，参见 创建索引 下 创建多值索引 章节。 \n      \n注意\n多值索引功能目前处于实验阶段，不推荐在生产环境中使用，以免影响系统稳定性。\n\n\n\njson_column_name\n指定表 JSON 数据类型的列名称。\n\n\nidx_json_name\n指定待创建的多值索引的索引名。\n\n\njson_field_name\nJson 列中需要创建索引的字段名称。\n\n\nTABLE_MODE\n可选项，用于指定合并触发阈值与合并策略，即控制数据转储后的合并行为。取值的详细介绍可参见下文 table_mode_value。\n\n\nauto_increment_cache_size\n可选项，用于设置缓存的自增值个数。该参数默认值为 0，表示该项未进行配置，系统将采用租户级别的配置项（auto_increment_cache_size）作为自增列的缓存大小设置。\n\n\n",
        "table_mode_value",
        "\n说明\n在以下列出的 TABLE_MODE 模式中，除了 NORMAL 模式之外，所有模式都代表 QUEUING 表。这种 QUEUING 表是最基本的表类型，并且随后列出的几种模式（除了 NORMAL 模式）代表了使用更加积极的合并策略。\n",
        "NORMAL",
        "：默认值，表示正常。在该模式下，数据转储后触发合并的概率极低。",
        "QUEUING",
        "：在该模式下，数据转储后触发合并的概率低。",
        "MODERATE",
        "：表示适度。在该模式下，数据转储后触发合并的概率为中等。",
        "SUPER",
        "：表示超级。在该模式下，数据转储后触发合并的概率高。",
        "EXTREME",
        "：表示极端。在该模式下，转储后触发合并的概率较高。",
        "更多有关合并的信息，请参见 自适应合并。"
    ],
    "Examples": [
        "obclient> CREATE TABLE tbl1 (c1 INT PRIMARY KEY, c2 VARCHAR(50));\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl2 (c1 INT PRIMARY KEY, c2 INT, c3 INT, INDEX i1 (c2));\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl3 (c1 INT, c2 INT, INDEX i1 ((c1+1)), UNIQUE KEY ((c1+c2)));\nQuery OK, 0 rows affected\n\nobclient> SHOW CREATE TABLE tbl3;\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                                                                                     |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tbl3    | CREATE TABLE `tbl3` (\n`c1` int(11) DEFAULT NULL,\n`c2` int(11) DEFAULT NULL,\nUNIQUE KEY `functional_index` ((`c1` + `c2`)) BLOCK_SIZE 16384 LOCAL,\nKEY `i1` ((`c1` + 1)) BLOCK_SIZE 16384 LOCAL\n) DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 2 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 |\n+-------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n",
        "obclient> CREATE TABLE tbl4 (c1 INT PRIMARY KEY, c2 INT) PARTITION BY HASH(c1) PARTITIONS 8;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl5 (c1 INT, c2 INT, c3 INT) PARTITION BY RANGE(c1)\n     SUBPARTITION BY KEY(c2, c3) SUBPARTITIONS 5\n     (PARTITION p0 VALUES LESS THAN(0), PARTITION p1 VALUES LESS THAN(100));\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl6 (c1 VARCHAR(10),\n                 c2 VARCHAR(10) CHARSET GBK COLLATE gbk_bin)\n             DEFAULT CHARSET utf8 COLLATE utf8mb4_general_ci;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl7 (c1 INT, c2 INT, c3 VARCHAR(64))\n      COMPRESSION 'zstd_1.0'\n      ROW_FORMAT DYNAMIC\n      PCTFREE 5;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl8(c1 INT PRIMARY KEY, c2 INT) PARALLEL 3;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl9(inv_id BIGINT NOT NULL AUTO_INCREMENT,c1 BIGINT,\nPRIMARY KEY (inv_id) ) PARTITION BY HASH(inv_id) PARTITIONS 8;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE ref_t1(c1 INT PRIMARY KEY, C2 INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE ref_t2(c1 INT PRIMARY KEY, C2 INT,FOREIGN KEY(c2) REFERENCES ref_t1(c1) ON UPDATE SET NULL);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl10 (col1 INT, col2 INT, col3 INT, CONSTRAINT equal_check1 CHECK(col1 = col3 * 2));\nQuery OK, 0 rows affected\n\nobclient> SHOW CREATE TABLE tbl10;\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                                                               |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tbl10  | CREATE TABLE `tbl10` (\n  `col1` int(11) DEFAULT NULL,\n  `col2` int(11) DEFAULT NULL,\n  `col3` int(11) DEFAULT NULL,\n  CONSTRAINT `equal_check1` CHECK ((`col1` = (`col3` * 2)))\n) DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 1 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 |\n+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set\n",
        "obclient> CREATE TABLE tbl11 LIKE tbl10;\nQuery OK, 0 rows affected\n\nobclient> SHOW CREATE TABLE tbl11;\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                                                                                |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tbl11  | CREATE TABLE `tbl11` (\n  `col1` int(11) DEFAULT NULL,\n  `col2` int(11) DEFAULT NULL,\n  `col3` int(11) DEFAULT NULL,\n  CONSTRAINT `tbl11_OBCHECK_1650793233327894` CHECK ((`col1` = (`col3` * 2)))\n) DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 1 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 |\n+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set\n",
        "obclient> CREATE RESOURCE UNIT IF NOT EXISTS 2c5g MAX_CPU 2, MEMORY_SIZE '5G';\nQuery OK, 0 rows affected\n",
        "obclient> CREATE RESOURCE POOL tenant_pool UNIT = '2c5g', UNIT_NUM = 2, ZONE_LIST = ('z1', 'z2', 'z3');\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TENANT obmysql resource_pool_list=('tenant_pool'), LOCALITY = \"F@z1, F@z2, R@z3\", PRIMARY_ZONE = \"z1\" SET ob_tcp_invited_nodes='%';\nQuery OK, 0 rows affected\n",
        "obclient> USE test;\nDatabase changed\nobclient> CREATE TABLE dup_t1(c1 INT) DUPLICATE_SCOPE = 'cluster';\nQuery OK, 0 rows affected\n",
        "obclient> SELECT * FROM oceanbase.DBA_OB_LS WHERE FLAG LIKE \"%DUPLICATE%\";\n+-------+--------+--------------+---------------+-------------+---------------------+----------+---------------------+---------------------+-----------+\n| LS_ID | STATUS | PRIMARY_ZONE | UNIT_GROUP_ID | LS_GROUP_ID | CREATE_SCN          | DROP_SCN | SYNC_SCN            | READABLE_SCN        | FLAG      |\n+-------+--------+--------------+---------------+-------------+---------------------+----------+---------------------+---------------------+-----------+\n|  1003 | NORMAL | z1;z2        |             0 |           0 | 1683267390195713284 |     NULL | 1683337744205408139 | 1683337744205408139 | DUPLICATE |\n+-------+--------+--------------+---------------+-------------+---------------------+----------+---------------------+---------------------+-----------+\n1 row in set\n\n",
        "obclient> SELECT * FROM oceanbase.CDB_OB_TABLE_LOCATIONS WHERE TABLE_NAME = \"dup_t1\";\n+-----------+---------------+------------+----------+------------+----------------+-------------------+------------+---------------+-----------+-------+------+----------------+----------+----------+--------------+-----------------+\n| TENANT_ID | DATABASE_NAME | TABLE_NAME | TABLE_ID | TABLE_TYPE | PARTITION_NAME | SUBPARTITION_NAME | INDEX_NAME | DATA_TABLE_ID | TABLET_ID | LS_ID | ZONE | SVR_IP         | SVR_PORT | ROLE     | REPLICA_TYPE | DUPLICATE_SCOPE |\n+-----------+---------------+------------+----------+------------+----------------+-------------------+------------+---------------+-----------+-------+------+----------------+----------+----------+--------------+-----------------+\n|      1002 | test          | dup_t1     |   500002 | USER TABLE | NULL           | NULL              | NULL       |          NULL |    200001 |  1003 | z1   | 11.xxx.xxx.xxx |    36125 | LEADER   | FULL         | CLUSTER         |\n|      1002 | test          | dup_t1     |   500002 | USER TABLE | NULL           | NULL              | NULL       |          NULL |    200001 |  1003 | z1   | 11.xxx.xxx.xxx  |    36124 | FOLLOWER | READONLY     | CLUSTER         |\n|      1002 | test          | dup_t1     |   500002 | USER TABLE | NULL           | NULL              | NULL       |          NULL |    200001 |  1003 | z2   | 11.xxx.xxx.xxx |    36127 | FOLLOWER | FULL         | CLUSTER         |\n|      1002 | test          | dup_t1     |   500002 | USER TABLE | NULL           | NULL              | NULL       |          NULL |    200001 |  1003 | z2   | 11.xxx.xxx.xxx |    36126 | FOLLOWER | READONLY     | CLUSTER         |\n|      1002 | test          | dup_t1     |   500002 | USER TABLE | NULL           | NULL              | NULL       |          NULL |    200001 |  1003 | z3   | 11.xxx.xxx.xxx |    36128 | FOLLOWER | READONLY     | CLUSTER         |\n|      1002 | test          | dup_t1     |   500002 | USER TABLE | NULL           | NULL              | NULL       |          NULL |    200001 |  1003 | z3   | 11.xxx.xxx.xxx  |    36129 | FOLLOWER | READONLY     | CLUSTER         |\n+-----------+---------------+------------+----------+------------+----------------+-------------------+------------+---------------+-----------+-------+------+----------------+----------+----------+--------------+-----------------+\n6 rows in set\n",
        "obclient> INSERT INTO dup_t1 VALUES(1);\nQuery OK, 1 row affected\n\nobclient> SELECT * FROM dup_t1;\n+------+\n| c1   |\n+------+\n|    1 |\n+------+\n1 row in set\n",
        "CREATE TABLE tbl1_cg (col1 INT PRIMARY KEY, col2 VARCHAR(50)) WITH COLUMN GROUP(each column);\n",
        "CREATE TABLE tbl2_cg (col1 INT PRIMARY KEY, col2 INT, col3 INT, INDEX i1 (col2) WITH COLUMN GROUP(each column));\n",
        "CREATE TABLE tbl3_cg (col1 INT PRIMARY KEY, col2 INT, col3 INT, INDEX i1 (col2) WITH COLUMN GROUP(each column)) WITH COLUMN GROUP(each column);\n",
        "CREATE TABLE test_skidx(\n  col1 INT SKIP_INDEX(MIN_MAX, SUM),\n  col2 FLOAT SKIP_INDEX(MIN_MAX),\n  col3 VARCHAR(1024) SKIP_INDEX(MIN_MAX),\n  col4 CHAR(10)\n);\n",
        "CREATE /*+ parallel(5) */ TABLE tbl1 (col1 INT) AS SELECT col1 FROM tbl2;\n"
    ],
    "Category": [
        "No Category"
    ]
}