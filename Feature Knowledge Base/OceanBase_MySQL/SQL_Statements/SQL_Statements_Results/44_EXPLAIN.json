{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001053520"
    ],
    "Title": [
        "EXPLAIN"
    ],
    "Feature": [
        "{EXPLAIN [INTO table_name ] [SET statement_id = string]  \n | DESCRIBE\n | DESC}\n[explain_type] [PRETTY | PRETTY_COLOR] dml_statement;\n\nexplain_type：\n    BASIC\n  | OUTLINE\n  | EXTENDED\n  | EXTENDED_NOADDR\n  | PARTITIONS\n  | FORMAT = {TRADITIONAL| JSON}\n\ndml_statement:\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n"
    ],
    "Description": [
        "该语句用于解释 SQL 语句的执行计划，可以是 SELECT、DELETE、INSERT、REPLACE 或 UPDATE 语句。",
        "EXPLAIN 与 DESCRIBE、DESC 互为同义词。",
        "\n\n\n参数\n描述\n\n\n\n\nINTO table_name\n表示将 EXPLAIN 的计划信息保存到指定表内。如果没有指定 INTO table_name，默认查询到 PLAN_TABLE 表内。\n\n\nSET statement_id\n表示当前查询使用字符串标记，以方便后续查询该 SQL 的计划信息。如果没有指定 SET statement_id，默认使用空字符串作为信息标记。\n\n\nPRETTY | PRETTY_COLOR\n将计划树中的父节点和子节点使用树线或彩色树线连接起来，使得执行计划展示更方便阅读。\n\n\nBASIC\n指定输出计划的基础信息，如算子 ID、算子名称、所引用的表名。\n\n\nOUTLINE\n指定输出的计划信息包含 OUTLINE 信息。\n\n\nEXTENDED\nEXPLAIN 产生附加信息，包括：每个算子的输入列和输出列，访问表的分区信息，当前使用的 Filter 信息，如果当前算子使用了索引，显示所使用的索引列及抽取的 Query Range。\n\n\nEXTENDED_NOADDR\n以简约的方式展示附加信息。\n\n\nPARTITIONS\n显示分区相关信息。\n\n\nFORMAT = {TRADITIONAL| JSON}\n指定 EXPALIN 的输出格式： \n      \nTRADITIONAL：表格输出格式\nJSON：KEY:VALUE 输出格式，JSON 显示为JSON 字符串，包括 EXTENDED 和 PARTITIONS 信息。\n\n\n\ndml_statement\nDML 语句。\n\n\n"
    ],
    "Examples": [
        "/* 创建表 test */\nobclient> CREATE TABLE test (statement_id VARCHAR(30), plan_id INT, gmt_create TIMESTAMP,\n   remarks VARCHAR(4000), operator VARCHAR(255), options VARCHAR(255), object_node VARCHAR(40),\n   object_owner VARCHAR(128), object_name VARCHAR(128), object_alias VARCHAR(261), object_instance INT,\n   object_type VARCHAR(30),optimizer VARCHAR(4000), search_columns INT, id INT, parent_id INT, depth INT,\n   position INT,is_last_child INT, cost INT, cardinality INT, bytes INT, rowset INT, other_tag VARCHAR(4000),\n   partition_start VARCHAR(4000), partition_stop VARCHAR(4000), partition_id INT, other VARCHAR(4000),\n   distribution VARCHAR(64), cpu_cost INT, io_cost INT, temp_space INT, access_predicates VARCHAR(4000),\n   filter_predicates VARCHAR(4000),startup_predicates VARCHAR(4000), projection VARCHAR(4000),\n   special_predicates VARCHAR(4000), time INT, qblock_name VARCHAR(128), other_xml VARCHAR(4000));\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE t1(c1 INT);\nQuery OK, 0 rows affected\n\n/* 解释查询计划，并把计划信息保存在指定表 test 内 */\nobclient> EXPLAIN INTO test SELECT COUNT(*) FROM t1;\n+--------------------------------------------------------------------------+\n| Query Plan                                                               |\n+--------------------------------------------------------------------------+\n| =================================================                        |\n| |ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|                        |\n| -------------------------------------------------                        |\n| |0 |SCALAR GROUP BY  |    |1       |2           |                        |\n| |1 |└─TABLE FULL SCAN|t1  |1       |2           |                        |\n| =================================================                        |\n| Outputs & filters:                                                       |\n| -------------------------------------                                    |\n|   0 - output([T_FUN_COUNT_SUM(T_FUN_COUNT(*))]), filter(nil), rowset=256 |\n|       group(nil), agg_func([T_FUN_COUNT_SUM(T_FUN_COUNT(*))])            |\n|   1 - output([T_FUN_COUNT(*)]), filter(nil), rowset=256                  |\n|       access(nil), partitions(p0)                                        |\n|       is_index_back=false, is_global_index=false,                        |\n|       range_key([t1.__pk_increment]), range(MIN ; MAX)always true        |\n+--------------------------------------------------------------------------+\n14 rows in set\n\nobclient> SELECT DBMS_XPLAN.DISPLAY('TYPICAL',null,'test')\\G\n*************************** 1. row ***************************\nDBMS_XPLAN.DISPLAY('TYPICAL',null,'test'):\n =================================================\n|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|\n-------------------------------------------------\n|0 |SCALAR GROUP BY  |    |1       |2           |\n|1 |└─TABLE FULL SCAN|t1  |1       |2           |\n=================================================\n\nOutputs & filters:\n-------------------------------------\n  0 - output([T_FUN_COUNT_SUM(T_FUN_COUNT(*))]), filter(nil), rowset=256\n      group(nil), agg_func([T_FUN_COUNT_SUM(T_FUN_COUNT(*))])\n  1 - output([T_FUN_COUNT(*)]), filter(nil), rowset=256\n      access(nil), partitions(p0)\n      is_index_back=false, is_global_index=false,\n      range_key([t1.__pk_increment]), range(MIN ; MAX)always true\n1 row in set\n",
        "obclient> EXPLAIN INTO test SET statement_id='test2' SELECT COUNT(*) FROM t1;\n+--------------------------------------------------------------------------+\n| Query Plan                                                               |\n+--------------------------------------------------------------------------+\n| =================================================                        |\n| |ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|                        |\n| -------------------------------------------------                        |\n| |0 |SCALAR GROUP BY  |    |1       |2           |                        |\n| |1 |└─TABLE FULL SCAN|t1  |1       |2           |                        |\n| =================================================                        |\n| Outputs & filters:                                                       |\n| -------------------------------------                                    |\n|   0 - output([T_FUN_COUNT_SUM(T_FUN_COUNT(*))]), filter(nil), rowset=256 |\n|       group(nil), agg_func([T_FUN_COUNT_SUM(T_FUN_COUNT(*))])            |\n|   1 - output([T_FUN_COUNT(*)]), filter(nil), rowset=256                  |\n|       access(nil), partitions(p0)                                        |\n|       is_index_back=false, is_global_index=false,                        |\n|       range_key([t1.__pk_increment]), range(MIN ; MAX)always true        |\n+--------------------------------------------------------------------------+\n14 rows in set\n\nobclient> SELECT DBMS_XPLAN.DISPLAY('TYPICAL','test2','test')\\G\n*************************** 1. row ***************************\nDBMS_XPLAN.DISPLAY('TYPICAL','test2','test'): =================================================\n|ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|\n-------------------------------------------------\n|0 |SCALAR GROUP BY  |    |1       |2           |\n|1 |└─TABLE FULL SCAN|t1  |1       |2           |\n=================================================\n\nOutputs & filters:\n-------------------------------------\n  0 - output([T_FUN_COUNT_SUM(T_FUN_COUNT(*))]), filter(nil), rowset=256\n      group(nil), agg_func([T_FUN_COUNT_SUM(T_FUN_COUNT(*))])\n  1 - output([T_FUN_COUNT(*)]), filter(nil), rowset=256\n      access(nil), partitions(p0)\n      is_index_back=false, is_global_index=false,\n      range_key([t1.__pk_increment]), range(MIN ; MAX)always true\n1 row in set\n",
        "obclient> EXPLAIN SELECT * FROM t1,t2 WHERE t1.c2=t2.c2 AND t2.c1 > 4;\n+------------------------------------------------------------------------------------+\n| Query Plan                                                                         |\n+------------------------------------------------------------------------------------+\n| =================================================                                  |\n| |ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|                                  |\n| -------------------------------------------------                                  |\n| |0 |HASH JOIN        |    |1       |9           |                                  |\n| |1 |├─TABLE FULL SCAN|t2  |1       |4           |                                  |\n| |2 |└─TABLE FULL SCAN|t1  |2       |4           |                                  |\n| =================================================                                  |\n| Outputs & filters:                                                                 |\n| -------------------------------------                                              |\n|   0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16           |\n|       equal_conds([t1.c2 = t2.c2]), other_conds(nil)                               |\n|   1 - output([t2.c2], [t2.c1]), filter([t2.c1 > 4]), rowset=16                     |\n|       access([t2.c2], [t2.c1]), partitions(p0)                                     |\n|       is_index_back=false, is_global_index=false, filter_before_indexback[false],  |\n|       range_key([t2.__pk_increment]), range(MIN ; MAX)always true                  |\n|   2 - output([t1.c2], [t1.c1]), filter(nil), rowset=16                             |\n|       access([t1.c2], [t1.c1]), partitions(p0)                                     |\n|       is_index_back=false, is_global_index=false,                                  |\n|       range_key([t1.__pk_increment]), range(MIN ; MAX)always true                  |\n+------------------------------------------------------------------------------------+\n",
        "obclient> EXPLAIN EXTENDED_NOADDR SELECT * FROM t1,t2 WHERE t1.c2=t2.c2 AND t2.c1 > 4;\n+------------------------------------------------------------------------------------+\n| Query Plan                                                                         |\n+------------------------------------------------------------------------------------+\n| =================================================                                  |\n| |ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|                                  |\n| -------------------------------------------------                                  |\n| |0 |HASH JOIN        |    |1       |9           |                                  |\n| |1 |├─TABLE FULL SCAN|t2  |1       |4           |                                  |\n| |2 |└─TABLE FULL SCAN|t1  |2       |4           |                                  |\n| =================================================                                  |\n| Outputs & filters:                                                                 |\n| -------------------------------------                                              |\n|   0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16           |\n|       equal_conds([t1.c2 = t2.c2]), other_conds(nil)                               |\n|   1 - output([t2.c2], [t2.c1]), filter([t2.c1 > 4]), rowset=16                     |\n|       access([t2.c2], [t2.c1]), partitions(p0)                                     |\n|       is_index_back=false, is_global_index=false, filter_before_indexback[false],  |\n|       range_key([t2.__pk_increment]), range(MIN ; MAX)always true                  |\n|   2 - output([t1.c2], [t1.c1]), filter(nil), rowset=16                             |\n|       access([t1.c2], [t1.c1]), partitions(p0)                                     |\n|       is_index_back=false, is_global_index=false,                                  |\n|       range_key([t1.__pk_increment]), range(MIN ; MAX)always true                  |\n| Used Hint:                                                                         |\n| -------------------------------------                                              |\n|   /*+                                                                              |\n|                                                                                    |\n|   */                                                                               |\n| Qb name trace:                                                                     |\n| -------------------------------------                                              |\n|   stmt_id:0, stmt_type:T_EXPLAIN                                                   |\n|   stmt_id:1, SEL$1                                                                 |\n| Outline Data:                                                                      |\n| -------------------------------------                                              |\n|   /*+                                                                              |\n|       BEGIN_OUTLINE_DATA                                                           |\n|       LEADING(@\"SEL$1\" (\"mysql\".\"t2\"@\"SEL$1\" \"mysql\".\"t1\"@\"SEL$1\"))                |\n|       USE_HASH(@\"SEL$1\" \"mysql\".\"t1\"@\"SEL$1\")                                      |\n|       FULL(@\"SEL$1\" \"mysql\".\"t2\"@\"SEL$1\")                                          |\n|       FULL(@\"SEL$1\" \"mysql\".\"t1\"@\"SEL$1\")                                          |\n|       OPTIMIZER_FEATURES_ENABLE('4.0.0.0')                                         |\n|       END_OUTLINE_DATA                                                             |\n|   */                                                                               |\n| Optimization Info:                                                                 |\n| -------------------------------------                                              |\n|   t2:                                                                              |\n|       table_rows:3                                                                 |\n|       physical_range_rows:3                                                        |\n|       logical_range_rows:3                                                         |\n|       index_back_rows:0                                                            |\n|       output_rows:0                                                                |\n|       table_dop:1                                                                  |\n|       dop_method:Table DOP                                                         |\n|       avaiable_index_name:[t2]                                                     |\n|       stats version:0                                                              |\n|       dynamic sampling level:1                                                     |\n|   t1:                                                                              |\n|       table_rows:2                                                                 |\n|       physical_range_rows:2                                                        |\n|       logical_range_rows:2                                                         |\n|       index_back_rows:0                                                            |\n|       output_rows:2                                                                |\n|       table_dop:1                                                                  |\n|       dop_method:Table DOP                                                         |\n|       avaiable_index_name:[t1]                                                     |\n|       stats version:0                                                              |\n|       dynamic sampling level:1                                                     |\n|   Plan Type:                                                                       |\n|       LOCAL                                                                        |\n|   Note:                                                                            |\n|       Degree of Parallelisim is 1 because of table property                        |\n+------------------------------------------------------------------------------------+\n",
        "obclient> EXPLAIN FORMAT=TRADITIONAL SELECT * FROM t1,t2 WHERE t1.c2=t2.c2 AND t2.c1 > 4;\n+------------------------------------------------------------------------------------+\n| Query Plan                                                                         |\n+------------------------------------------------------------------------------------+\n| =================================================                                  |\n| |ID|OPERATOR         |NAME|EST.ROWS|EST.TIME(us)|                                  |\n| -------------------------------------------------                                  |\n| |0 |HASH JOIN        |    |1       |9           |                                  |\n| |1 |├─TABLE FULL SCAN|t2  |1       |4           |                                  |\n| |2 |└─TABLE FULL SCAN|t1  |2       |4           |                                  |\n| =================================================                                  |\n| Outputs & filters:                                                                 |\n| -------------------------------------                                              |\n|   0 - output([t1.c1], [t1.c2], [t2.c1], [t2.c2]), filter(nil), rowset=16           |\n|       equal_conds([t1.c2 = t2.c2]), other_conds(nil)                               |\n|   1 - output([t2.c2], [t2.c1]), filter([t2.c1 > 4]), rowset=16                     |\n|       access([t2.c2], [t2.c1]), partitions(p0)                                     |\n|       is_index_back=false, is_global_index=false, filter_before_indexback[false],  |\n|       range_key([t2.__pk_increment]), range(MIN ; MAX)always true                  |\n|   2 - output([t1.c2], [t1.c1]), filter(nil), rowset=16                             |\n|       access([t1.c2], [t1.c1]), partitions(p0)                                     |\n|       is_index_back=false, is_global_index=false,                                  |\n|       range_key([t1.__pk_increment]), range(MIN ; MAX)always true                  |\n+------------------------------------------------------------------------------------+\n",
        "obclient> EXPLAIN FORMAT=JSON SELECT * FROM t1,t2 WHERE t1.c2=t2.c2 AND t2.c1 > 4;\n+----------------------------------------------------------+\n| Query Plan                                               |\n+----------------------------------------------------------+\n| {                                                        |\n|   \"ID\":0,                                                |\n|   \"OPERATOR\":\"HASH JOIN \",                               |\n|   \"NAME\":\"\",                                             |\n|   \"EST.ROWS\":1,                                          |\n|   \"EST.TIME(us)\":9,                                      |\n|   \"output\":\"output([t1.c1], [t1.c2], [t2.c1], [t2.c2])\", |\n|   \"CHILD_1\": {                                           |\n|     \"ID\":1,                                              |\n|     \"OPERATOR\":\"TABLE FULL SCAN\",                        |\n|     \"NAME\":\"t2\",                                         |\n|     \"EST.ROWS\":1,                                        |\n|     \"EST.TIME(us)\":4,                                    |\n|     \"output\":\"output([t2.c2], [t2.c1])\"                  |\n|   },                                                     |\n|   \"CHILD_2\": {                                           |\n|     \"ID\":2,                                              |\n|     \"OPERATOR\":\"TABLE FULL SCAN\",                        |\n|     \"NAME\":\"t1\",                                         |\n|     \"EST.ROWS\":2,                                        |\n|     \"EST.TIME(us)\":4,                                    |\n|     \"output\":\"output([t1.c2], [t1.c1])\"                  |\n|   }                                                      |\n| }                                                        |\n+----------------------------------------------------------+\n"
    ],
    "Category": [
        "No Category"
    ]
}