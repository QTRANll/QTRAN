{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000001053474"
    ],
    "Title": [
        "ALTER TABLE"
    ],
    "Feature": [
        "alter_table_stmt:\n    ALTER TABLE table_name alter_table_action_list;\n\nalter_table_action_list:\n    alter_table_action [, alter_table_action ...]\n\nalter_table_action:\n      ADD [COLUMN] column_definition  \n          [ opt_position_column ]\n    | ADD [COLUMN] (column_definition_list)\n    | ADD [CONSTRAINT [constraint_name]] UNIQUE {INDEX | KEY}\n          [index_name] index_desc\n    | ADD [CONSTRAINT [constraint_name]] FOREIGN KEY\n          [index_name] index_desc\n          REFERENCES reference_definition\n          [match_action][opt_reference_option_list]\n    | ADD PRIMARY KEY (column_name)\n    | ADD CONSTRAINT [constraint_name] CHECK (expression)[[NOT] ENFORCED]\n    | ADD PARTITION (range_partition_list)\n    | ADD {INDEX | KEY} [index_name] [index_type] (key_part,...) [index_option_list][index_column_group_option]\n    | ADD COLUMN GROUP([all columns, ]each column)\n    | ALTER [COLUMN] column_name {\n          SET DEFAULT const_value\n        | DROP DEFAULT\n      }\n    | ALTER {CHECK | CONSTRAINT} symbol [NOT] ENFORCED\n    | ALTER INDEX index_name\n          [VISIBLE | INVISIBLE]\n    | CHANGE [COLUMN] column_name column_definition\n    | DROP [COLUMN] column_name\n    | DROP {PARTITION | SUBPARTITION} partition_name_list\n    | DROP TABLEGROUP\n    | DROP FOREIGN KEY fk_name\n    | DROP PRIMARY KEY [, ADD PRIMARY KEY (column)]\n    | DROP CHECK constraint_name\n    | DROP COLUMN GROUP([all columns, ]each column)\n    | MODIFY [COLUMN] column_definition\n    | RENAME COLUMN old_col_name TO new_col_name\n    | RENAME [TO] table_name\n    | RENAME {INDEX | KEY} old_index_name TO new_index_name\n    | [SET] table_option_list\n    | TRUNCATE {PARTITION | SUBPARTITION} partition_name_list\n    | EXCHANGE PARTITION partition_name WITH TABLE non_partition_table_name WITHOUT VALIDATION\n\ncolumn_definition_list:\n    column_definition [, column_definition ...]\n\ncolumn_definition:\n    column_name data_type\n    [DEFAULT const_value] [AUTO_INCREMENT]\n    [NULL | NOT NULL] [[PRIMARY] KEY] [UNIQUE [KEY]] [COMMENT string_value] [SKIP_INDEX(skip_index_option_list)] [ opt_position_column ]\n\nskip_index_option_list:\n    skip_index_option [,skip_index_option ...]\n\nskip_index_option:\n    MIN_MAX\n    | SUM\n\nopt_position_column:\n    FIRST | BEFORE | AFTER column_name\n\nindex_desc:\n   (column_desc_list) [index_type] [index_option_list]\n\nmatch_action:\n   MATCH {SIMPLE | FULL | PARTIAL}\n\nopt_reference_option_list:\n   reference_option [,reference_option ...]\n\nreference_option:\n   ON {DELETE | UPDATE} {RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT}\n\ncolumn_desc_list:\n    column_desc [, column_desc ...]\n\ncolumn_desc:\n     column_name [(length)] [ASC | DESC]\n\nkey_part:\n    {index_col_name [(length)] | (expr)} [ASC | DESC]\n\nindex_type:\n    USING BTREE\n\nindex_option_list:\n    index_option [ index_option ...]\n\nindex_option:\n     [GLOBAL | LOCAL]\n    | block_size\n    | compression\n    | STORING(column_name_list)\n    | COMMENT string_value\n\nindex_column_group_option:\n    WITH COLUMN GROUP([all columns, ]each column)\n\ntable_option_list:\n    table_option [ table_option ...]\n\ntable_option:\n      TABLEGROUP = tablegroup_name\n    | block_size\n    |lob_inrow_threshold [=] num\n    | compression\n    | AUTO_INCREMENT [=] INT_VALUE\n    | COMMENT string_value\n    | parallel_clause\n    | TABLE_MODE [=] 'table_mode_value'\n    | AUTO_INCREMENT_CACHE_SIZE [=] INT_VALUE\n\nparallel_clause:\n    {NOPARALLEL | PARALLEL integer}\n\ntable_mode_value:\n    NORMAL\n    | QUEUING\n    | MODERATE\n    | SUPER\n    | EXTREME\n\npartition_option:\n      PARTITION BY HASH(expression)\n      [subpartition_option] PARTITIONS partition_count\n    | PARTITION BY KEY([column_name_list])\n      [subpartition_option] PARTITIONS partition_count\n    | PARTITION BY RANGE {(expression) | COLUMNS (column_name_list)}\n      [subpartition_option] (range_partition_list)\n\nsubpartition_option:\n      SUBPARTITION BY HASH(expression)\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION BY KEY(column_name_list)\n      SUBPARTITIONS subpartition_count\n    | SUBPARTITION BY RANGE {(expression) | COLUMNS (column_name_list)}\n      (range_subpartition_list)\n\nrange_partition_list:\n    range_partition [, range_partition ...]\n\nrange_partition:\n    PARTITION partition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE}\n\nrange_subpartition_list:\n    range_subpartition [, range_subpartition ...]\n\nrange_subpartition:\n    SUBPARTITION subpartition_name\n    VALUES LESS THAN {(expression_list) | MAXVALUE}\n\nexpression_list:\n    expression [, expression ...]\n\ncolumn_name_list:\n    column_name [, column_name ...]\n\npartition_name_list:\n    partition_name [, partition_name ...]\n\npartition_count | subpartition_count:\n    INT_VALUE\n"
    ],
    "Description": [
        "该语句用来修改已存在的表的结构，例如修改表及表属性、新增列、修改列及属性、删除列等。",
        "\n\n\n参数\n描述\n\n\n\n\nADD [COLUMN]\n增加列，支持增加生成列。\n\n\n[FIRST | BEFORE | AFTER column_name]\n将新增的列作为表的第一列或在 column_name 列之后。 目前，OceanBase 数据库仅支持在 ADD COLUMN 语法中设置列的位置。\n\n\nCHANGE [COLUMN]\n修改列名和列定义，仅支持增加特定字符数据类型（VARCHAR、VARBINARY、CHAR 等）的长度。\n\n\nMODIFY [COLUMN]\n修改列属性。\n\n\nALTER [COLUMN] {SET DEFAULT const_value | DROP DEFAULT}\n修改列的默认值。\n\n\nDROP [COLUMN]\n删除列，不允许删除主键列或者包含索引的列。\n\n\nADD FOREIGN KEY\n增加外键。 如果不指定外键名，则会使用表名 + OBFK + 创建时间命名。（例如，在 2021 年 8 月 1 日 00:00:00 为 t1 表创建的外键名称为 t1_OBFK_1627747200000000）。外键允许跨表交叉引用相关数据，当 UPDATE 或 DELETE 操作影响与子表相匹配行的父表中键值时，其结果取决于 ON UPDATE 和 ON DELETE 子句的引用操作： \n      \nCASCADE：表示从父表中删除或更新行，并自动删除或更新子表中匹配的行。\nSET NULL：表示从父表中删除或更新行，并将子表中的外键列设置为 NULL。\nRESTRICT：表示拒绝对父表的删除或更新操作。\nNO ACTION：指定延迟检查。\n此外还支持 SET DEFAULT 操作。\n\n\nADD PRIMARY KEY\n增加主键。 可以指定一个或多个列作为主键。如果是多个列，它们将组成复合主键。\n\n\nALTER INDEX\n修改索引是否可见，当索引状态为 INVISIBLE 时，SQL 优化器将不会选择该索引。\n\n\nkey_part\n创建（函数）索引。\n\n\nindex_col_name\n指定索引的列名，每个列名后都支持 ASC（升序），不支持 DESC（降序）。默认为升序。 建立索引的排序方式为：首先以 index_col_name 中第一个列的值排序；该列值相同的记录，按下一列名的值排序；以此类推。\n\n\nexpr\n表示合法的函数索引表达式，且允许是布尔表达式，例如 c1=c1。注意 OceanBase 数据库当前版本禁止创建生成列上的函数索引。\n\n\nADD [PARTITION]\n为分区表增加分区。\n\n\nDROP {PARTITION | SUBPARTITION}\n删除分区： \n      \nPARTITION：针对 Range、List 类型的一级分区，删除指定分区（如果指定分区下存在二级分区，会同时删除该分区下所有二级分区），包括分区定义和其中的数据，同时对分区上存在的索引进行维护。\nSUBPARTITION：针对 *-RANGE、*-LIST 类型的二级分区，删除指定二级分区，包括分区定义和其中的数据。同时对分区上存在的索引进行维护。\n 多个分区名称之间用逗号分隔。 注意 删除分区时，请尽量避免该分区上存在活动的事务或查询，否则可能会导致 SQL 语句报错，或者一些异常情况。\n\n\nTRUNCATE {PARTITION | SUBPARTITION}\n删除分区数据： \n      \nPARTITION：针对 Range、List 类型的一级分区，清除指定分区中的全部数据（如果指定分区下存在二级分区，会同时清除该分区下所有二级分区中的数据），同时对分区上存在的索引进行维护。\nSUBPARTITION：针对 *-RANGE、*-LIST 类型的二级分区，清除指定二级分区中的全部数据。同时对分区上存在的索引进行维护。\n 多个分区名称之间用逗号分隔。 注意 删除分区数据时，请尽量避免该分区上存在活动的事务或查询，否则可能会导致 SQL 语句报错，或者一些异常情况。\n\n\nRENAME COLUMN old_col_name TO new_col_name\n修改列名称。仅修改列名，不改变列定义。 \n      \n注意\n\n\n如果目标名称在表中已经存在，则执行会报错。\n如果重命名的列出现了循环，可以正常执行，例如 ALTER TABLE t1 RENAME COLUMN a to b, RENAME COLUMN b to a;。\n如果重命名的列上建有索引，或者有外键约束，RENAME COLUMN 可以正常执行，并且索引定义和外键约束会自动级联修改。\n同一条 ALTER TABLE 语句中不支持同时包含 RENAME COLUMN 和 ADD PARTITION／ALTER COLUMN 的场景。\n\n\n\n\n\nRENAME [TO] table_name\n表重命名。 \n      \n注意\n在 RENAME TABLE 操作过程中，由于加入了表锁定和读写防御措施，这将增加操作的耗时。为了避免对其他用户执行 DDL 操作造成影响，建议不要批量进行 RENAME TABLE 操作。\n\n\n\nRENAME {INDEX | KEY}\n重命名索引或键。\n\n\nDROP [TABLEGROUP]\n删除表组。\n\n\nDROP [FOREIGN KEY]\n删除外键。\n\n\nDROP [PRIMARY KEY]\n删除主键。 \n      \n说明\n对于 MySQL 模式，以下情况不允许删除主键：\n\n该表是包含外键信息的父表。\n该表是子表，但主键列包含外键引用列。\n\n\n\n\n\n[SET] table_option\n设置表级属性，可选以下参数： \n      \nREPLICA_NUM：设置表的副本数（暂不支持）。\ntablegroup_name：设置表所属的表组。\nBLOCK_SIZE：设置表的微块大小，默认为 16384，即 16 KB，取值范围为 [1024,1048576]。\nlob_inrow_threshold：用于配置 INROW 阈值，当 LOB 数据大小超过该阈值时，会转为 OUTROW 存储在 LOB Meta 表中，默认为 4KB。\nCOMPRESSION：设置表的压缩方式，默认为 None，表示不压缩。\nAUTO_INCREMENT：设置表中自增列的下一个取值，可以增大或者减小。 \n        \n注意\n当减小一个表的自增字段的值时，需注意以下情况：如果表中已存在数据并且自增列中的最大值不小于新指定的 AUTO_INCREMENT 值时，新的 AUTO_INCREMENT 值将自动调整为表中自增列现有最大值的下一个取值。例如，自增列当前的最大值为 5，当前 AUTO_INCREMENT 的值是 8，而 AUTO_INCREMENT 设置为介于 0 到 6 之间的任何值，语句执行成功后，实际的 AUTO_INCREMENT 值都会被调整为 6。\n\ncomment：设置表的注释信息。\nPROGRESSIVE_MERGE_NUM：设置渐进合并步数，取值范围为 [0,100]。\nparallel_clause：指定表级别的并行度。\nNOPARALLEL：并行度为 1，默认配置。\nPARALLEL integer：指定并行度，integer 取值大于等于 1。\n\n\n\nCHECK\n更改 CHECK 约束。 支持如下操作： \n      \n添加新的 CHECK 约束。\n删除当前名称为 constraint_name 的 CHECK 约束。\n\n\n\n[NOT] ENFORCED\n是否强制执行名为 constraint_name 的 CHECK 约束。 \n      \n如果省略或指定为 ENFORCED，则创建并强制执行约束，为默认状态。\n如果指定为 NOT ENFORCED，则创建约束但不强制执行。\n\n\n\nADD COLUMN GROUP([all columns, ]each column)\n将表变更为列存表。具体解释如下： \n      \nADD COLUMN GROUP(all columns, each column)：将表变更为行存列存冗余的表。\nADD COLUMN GROUP(each column)：将表变更为列存表。\n\n\n\nDROP COLUMN GROUP([all columns, ]each column)\n移除表的存储格式。具体解释如下： \n      \nDROP COLUMN GROUP(all columns, each column): 移除表的行存列存冗余格式。\nDROP COLUMN GROUP(all columns): 移除表的行存格式。\nDROP COLUMN GROUP(each column): 移除表的列存格式。\n\n\n\nindex_column_group_option\n指定索引选项。具体解释如下： \n      \nWITH COLUMN GROUP(all columns, each column)：指定添加行存列存冗余的索引。\nWITH COLUMN GROUP(all columns)：指定添加行存索引。\nWITH COLUMN GROUP(each column)：指定添加列存索引。\n\n\n\nSKIP_INDEX\n修改列的 Skip Index 属性。取值如下： \n      \nMIN_MAX：是 Skip Index 中最通用的聚合数据类型，它会在索引节点粒度下存储被索引列的最大值、最小值和 Null Count。这种类型的数据可以加速下推的 Filter 和 MIN/MAX 聚合的下推。\nSUM：用于加速数值类型的 SUM 聚合的下推。\n\n\n注意\n\n\nJSON 和空间数据类型的列禁止创建 Skip Index。\n生成列禁止创建 Skip Index。\n\n\n\n\n\nEXCHANGE PARTITION partition_name WITH TABLE non_partition_table_name\n指定分区交换。其中，partition_name 表示分区交换中分区表的分区名称。non_partition_table_name 表示分区交换中非分区表名称。更多分区交换的信息，参见 分区交换。\n\n\nTABLE_MODE\n可选项，用于指定合并触发阈值与合并策略，即控制数据转储后的合并行为。取值的详细介绍可参见下文 table_mode_value。\n\n\nAUTO_INCREMENT_CACHE_SIZE\n用于设置缓存的自增值个数。该参数默认值为 0，表示该项未进行配置，系统将采用租户级别的配置项（auto_increment_cache_size）作为自增列的缓存大小设置。\n\n\n",
        "table_mode_value",
        "\n说明\n在以下列出的 TABLE_MODE 模式中，除了 NORMAL 模式之外，所有模式都代表 QUEUING 表。这种 QUEUING 表是最基本的表类型，并且随后列出的几种模式（除了 NORMAL 模式）代表了使用更加积极的合并策略。\n",
        "NORMAL",
        "：默认值，表示正常。在该模式下，数据转储后触发合并的概率极低。",
        "QUEUING",
        "：在该模式下，数据转储后触发合并的概率低。",
        "MODERATE",
        "：表示适度。在该模式下，数据转储后触发合并的概率为中等。",
        "SUPER",
        "：表示超级。在该模式下，数据转储后触发合并的概率高。",
        "EXTREME",
        "：表示极端。在该模式下，转储后触发合并的概率较高。",
        "更多有关合并的信息，请参见 自适应合并。"
    ],
    "Examples": [
        "obclient> CREATE TABLE tbl1 (c1 INT(11) PRIMARY KEY,c2 VARCHAR(50));\nQuery OK, 0 rows affected\n\nobclient> DESCRIBE tbl1;\n+-------+------------+----------+--------+---------+-------+\n| Field | Type       | Null     | Key    | Default | Extra |\n+-------+------------+----------+--------+---------+-------+\n| c1    | int(11)    | NO       | PRI    | NULL    |       |    \n| c2    | varchar(50)| YES      |        | NULL    |       |   \n+-------+------------+----------+--------+---------+-------+\n",
        "obclient> ALTER TABLE tbl1 ADD c3 INT;\nQuery OK, 1 row affected\n\nobclient> DESCRIBE tbl1;\n+-------+------------+----------+--------+---------+-------+\n| Field | Type       | Null     | Key    | Default | Extra |\n+-------+------------+----------+--------+---------+-------+\n| c1    | int(11)    | NO       | PRI    | NULL    |       |    \n| c2    | varchar(50)| YES      |        | NULL    |       |  \n| c3    | int(11)    | YES      |        | NULL    |       |  \n+-------+------------+----------+--------+---------+-------+\n3 row affected\n",
        "obclient> ALTER TABLE tbl1 DROP c3;\nQuery OK, 1 row affected\n\nobclient> DESCRIBE tbl1;\n+-------+------------+----------+--------+---------+-------+\n| Field | Type       | Null     | Key    | Default | Extra |\n+-------+------------+----------+--------+---------+-------+\n| c1    | int(11)    | NO       | PRI    | NULL    |       |    \n| c2    | varchar(50)| YES      |        | NULL    |       |  \n+-------+------------+----------+--------+---------+-------+\n2 row affected\n",
        "obclient> ALTER TABLE tbl1 CHANGE COLUMN c2 c3 VARCHAR(50);\nQuery OK, 1 row affected\n\nobclient> DESCRIBE tbl1;\n+-------+------------+----------+--------+---------+-------+\n| Field | Type       | Null     | Key    | Default | Extra |\n+-------+------------+----------+--------+---------+-------+\n| c1    | int(11)    | NO       | PRI    | NULL    |       |    \n| c3    | varchar(50)| YES      |        | NULL    |       |  \n+-------+------------+----------+--------+---------+-------+\n2 rows affected\n",
        "obclient> ALTER TABLE tbl1 ADD COLUMN c4 INTEGER FIRST;\nQuery OK, 1 row affected\n\nobclient> DESCRIBE tbl1;\n+-------+------------+----------+--------+---------+-------+\n| Field | Type       | Null     | Key    | Default | Extra |\n+-------+------------+----------+--------+---------+-------+\n| c4    | int(11)    | YES      |        | NULL    |       |  \n| c1    | int(11)    | NO       | PRI    | NULL    |       |    \n| c3    | varchar(50)| YES      |        | NULL    |       |  \n+-------+------------+----------+--------+---------+-------+\n3 row affected\n",
        "obclient> ALTER TABLE tbl1 ADD COLUMN c2 INTEGER AFTER c1;\nQuery OK, 1 row affected\n\nobclient> DESCRIBE tbl1;\n+-------+------------+----------+--------+---------+-------+\n| Field | Type       | Null     | Key    | Default | Extra |\n+-------+------------+----------+--------+---------+-------+\n| c4    | int(11)    | YES      |        | NULL    |       |  \n| c1    | int(11)    | NO       | PRI    | NULL    |       |\n| c2    | int(11)    | YES      |        | NULL    |       |    \n| c3    | varchar(50)| YES      |        | NULL    |       |  \n+-------+------------+----------+--------+---------+-------+\n4 row affected\n",
        "obclient> ALTER TABLE tbl1 ADD COLUMN c5 INT BEFORE c4;\nQuery OK, 1 row affected\n\nobclient> DESCRIBE tbl1;\n+-------+------------+----------+--------+---------+-------+\n| Field | Type       | Null     | Key    | Default | Extra |\n+-------+------------+----------+--------+---------+-------+\n| c5    | int(11)    | YES      |        | NULL    |       |  \n| c4    | int(11)    | YES      |        | NULL    |       |  \n| c1    | int(11)    | NO       | PRI    | NULL    |       |\n| c2    | int(11)    | YES      |        | NULL    |       |    \n| c3    | varchar(50)| YES      |        | NULL    |       |  \n+-------+------------+----------+--------+---------+-------+\n5 row affected\n",
        "obclient> CREATE TABLE tbl2(c1 INT PRIMARY KEY,c2 INT);\nQuery OK, 0 row affected\nobclient> CREATE TABLE tbl3(c1 INT PRIMARY KEY,c2 INT);\nQuery OK, 0 row affected\nobclient> ALTER TABLE tbl2 ADD CONSTRAINT fk1 FOREIGN KEY (c2) REFERENCES tbl3(c1) ON UPDATE SET NULL;\nQuery OK, 0 row affected\n",
        "obclient> ALTER TABLE tbl2 DROP FOREIGN KEY fk1;\nQuery OK, 0 row affected\n",
        "obclient> ALTER TABLE tbl2 DROP PRIMARY KEY;\nQuery OK, 0 row affected\n",
        "obclient> CREATE TABLE tbl2(c1 INT(11) PRIMARY KEY,c2 INT(50));\nQuery OK, 0 row affected\n\nobclient> CREATE INDEX ind1 ON tbl2 (c2 ASC);\nQuery OK, 0 row affected\nobclient> ALTER TABLE tbl2 RENAME INDEX ind1 TO ind2;\nQuery OK, 0 row affected\n",
        "obclient> ALTER TABLE tbl2 ADD INDEX ind3 (c1,c2);\nQuery OK, 0 row affected\n",
        "obclient> SHOW INDEX FROM tbl2;\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+\n| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment   | Index_comment | Visible |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+\n| tbl2  |          0 | PRIMARY  |            1 | c1          | A         |        NULL | NULL     | NULL   |      | BTREE      | available |               | YES     |\n| tbl2  |          1 | ind2     |            1 | c2          | A         |        NULL | NULL     | NULL   |  YES | BTREE      | available |               | YES     |\n| tbl2  |          1 | ind3     |            1 | c1          | A         |        NULL | NULL     | NULL   |      | BTREE      | available |               | YES     |\n| tbl2  |          1 | ind3     |            2 | c2          | A         |        NULL | NULL     | NULL   |  YES | BTREE      | available |               | YES     |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+\n4 rows in set\n",
        "obclient> ALTER TABLE tbl2 DROP INDEX ind2;\nQuery OK, 0 row affected\n",
        "obclient> ALTER TABLE t1_func ADD INDEX ((CONCAT(c1,'a')));\nQuery OK, 0 rows affected\nobclient> ALTER TABLE t1_func ADD INDEX ((c1+1));\nQuery OK, 0 rows affected\nobclient> ALTER TABLE t1_func ADD INDEX i2 ((CONCAT(c1,'a')));\nQuery OK, 0 rows affected\nobclient> SHOW CREATE TABLE t1_func;\nn| Table   | Create Table|\nn| t1_func | CREATE TABLE `t1_func` (\n`c1` int(11) DEFAULT NULL,\n`c2` int(11) DEFAULT NULL,\nKEY `i1` (((`c1` + `c2`) < 1)) BLOCK_SIZE 16384 LOCAL,\nKEY `functional_index` (concat(`c1`,'a')) BLOCK_SIZE 16384 LOCAL,\nKEY `functional_index_2` ((`c1` + 1)) BLOCK_SIZE 16384 LOCAL,\nKEY `i2` (concat(`c1`,'a')) BLOCK_SIZE 16384 LOCAL\n) DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 1 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 |\nn1 row in set\n",
        "CREATE TABLE tbl3 (col1 INT, col2 VARCHAR(50));\n",
        "ALTER TABLE tbl3 ADD INDEX idx1_tbl3 (col1) WITH COLUMN GROUP(each column);\n",
        "obclient> CREATE TABLE t_log_part_by_range (\n    log_id      bigint NOT NULL\n    , log_value varchar(50)\n    , log_date  timestamp NOT NULL  \n) PARTITION BY RANGE(UNIX_TIMESTAMP(log_date))\n(\n    PARTITION M202001 VALUES LESS THAN(UNIX_TIMESTAMP('2020/02/01'))\n    , PARTITION M202002 VALUES LESS THAN(UNIX_TIMESTAMP('2020/03/01'))\n    , PARTITION M202003 VALUES LESS THAN(UNIX_TIMESTAMP('2020/04/01'))\n    , PARTITION M202004 VALUES LESS THAN(UNIX_TIMESTAMP('2020/05/01'))\n    , PARTITION M202005 VALUES LESS THAN(UNIX_TIMESTAMP('2020/06/01'))\n);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE t_log_part_by_range TRUNCATE PARTITION M202001, M202002;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE t_log_part_by_range (\n    log_id      bigint NOT NULL\n    , log_value varchar(50)\n    , log_date  timestamp NOT NULL  \n) PARTITION BY RANGE(UNIX_TIMESTAMP(log_date))\n(\n    PARTITION M202001 VALUES LESS THAN(UNIX_TIMESTAMP('2020/02/01'))\n    , PARTITION M202002 VALUES LESS THAN(UNIX_TIMESTAMP('2020/03/01'))\n    , PARTITION M202003 VALUES LESS THAN(UNIX_TIMESTAMP('2020/04/01'))\n    , PARTITION M202004 VALUES LESS THAN(UNIX_TIMESTAMP('2020/05/01'))\n    , PARTITION M202005 VALUES LESS THAN(UNIX_TIMESTAMP('2020/06/01'))\n);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE t_log_part_by_range ADD PARTITION\n         (PARTITION M202006 VALUES LESS THAN(UNIX_TIMESTAMP('2020/07/01'))\n         );\n",
        "obclient> ALTER TABLE tbl3 PARALLEL 2;\n",
        "obclient> CREATE TABLE tbl4 (col1 BIGINT(10) NOT NULL,col2 INT);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl4 MODIFY col1 BIGINT(10) AUTO_INCREMENT;\nQuery OK, 0 rows affected\n",
        "obclient> ALTER TABLE tbl4 ADD PRIMARY KEY (col1);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl4 DROP PRIMARY KEY,ADD PRIMARY KEY (`col2`);\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl7(col1 VARCHAR(10),col2 VARCHAR(10));\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl7 ADD CONSTRAINT my_check CHECK (col1> col2) ;\nQuery OK, 0 rows affected\n",
        "obclient> ALTER TABLE tbl7 DROP CHECK my_check;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE dept(  \n    deptno           NUMBER(2,0),  \n    dname            VARCHAR(14),  \n    location         VARCHAR(13),   \n    CONSTRAINT pk_dept PRIMARY KEY(deptno)  \n);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE emp(  \n    empno         NUMBER(4,0) NOT NULL,  \n    empname       VARCHAR(10) NOT NULL,  \n    job           VARCHAR(9) NOT NULL,  \n    mgr           NUMBER(4,0) NOT NULL,  \n    hiredate      DATE NOT NULL,  \n    sal           NUMBER(7,2) DEFAULT NULL,\n    comm          NUMBER(7,2) DEFAULT NULL,        \n    deptno        NUMBER(2,0) DEFAULT NULL,   \n    CONSTRAINT PK_emp PRIMARY KEY (empno),\n    CONSTRAINT FK_deptno  FOREIGN KEY (deptno)  REFERENCES dept (deptno)  \n);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE emp MODIFY deptno NUMBER(2,0) DEFAULT '12' NOT NULL;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl8 (a INT, b INT);\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl8 RENAME COLUMN a TO b;\nERROR 1060 (42S21): Duplicate column name 'b'\n\nobclient> ALTER TABLE tbl8 RENAME COLUMN a TO a;\nQuery OK, 0 rows affected\n",
        "obclient> CREATE TABLE tbl9 (a INT, b INT, index idx_a(a));\nQuery OK, 0 rows affected\n\nobclient> SHOW INDEX FROM tbl9;\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment   | Index_comment | Visible | Expression |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n| tbl9  |          1 | idx_a    |            1 | a           | A         |        NULL | NULL     | NULL   | YES  | BTREE      | available |               | YES     | NULL       |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n1 row in set\n\nobclient> ALTER TABLE tbl9 RENAME COLUMN a TO c;\nQuery OK, 0 rows affected\n\nobclient> SHOW INDEX FROM tbl9;\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment   | Index_comment | Visible | Expression |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n| tbl9  |          1 | idx_a    |            1 | c           | A         |        NULL | NULL     | NULL   | YES  | BTREE      | available |               | YES     | NULL       |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n1 row in set\n",
        "DROP TABLE tbl9;\nobclient> CREATE TABLE tbl9 (c1 INT PRIMARY KEY, c2 BLOB, c3 INT, INDEX i1 (c2(10)));\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl9 RENAME COLUMN c2 TO c2_, RENAME COLUMN c1 TO c2_1;\nDESC tbl9;\nQuery OK, 0 rows affected\n\nobclient> SHOW INDEX FROM tbl9;\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment   | Index_comment | Visible | Expression |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n| tbl9  |          0 | PRIMARY  |            1 | c2_1        | A         |        NULL | NULL     | NULL   |      | BTREE      | available |               | YES     | NULL       |\n| tbl9  |          1 | i1       |            1 | c2_         | A         |        NULL | 10       | NULL   | YES  | BTREE      | available |               | YES     | NULL       |\n+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+-----------+---------------+---------+------------+\n2 rows in set\n",
        "obclient> CREATE TABLE tbl10 (a INT PRIMARY KEY);\nQuery OK, 0 rows affected\n\nobclient> CREATE TABLE tbl11(b INT, FOREIGN KEY (b) REFERENCES tbl10(a));\n\nobclient> SHOW CREATE TABLE tbl11;\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                                                                      |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tbl11 | CREATE TABLE `tbl11` (\n`b` int(11) DEFAULT NULL,\nCONSTRAINT `tbl11_OBFK_1694681944513338` FOREIGN KEY (`b`) REFERENCES `test`.`tbl10`(`a`) ON UPDATE RESTRICT ON DELETE RESTRICT\n) DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 1 BLOCK_SIZE =  16384 USE_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set\n\nobclient> ALTER TABLE tbl10 RENAME COLUMN a TO c;\nQuery OK, 0 rows affected\n\nobclient> SHOW CREATE TABLE tbl11;\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Table | Create Table                                                                                                                                                                                                                                                                                                                                                      |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| tbl11 | CREATE TABLE `tbl11` (\n`b` int(11) DEFAULT NULL,\nCONSTRAINT `tbl11_OBFK_1694681944513338` FOREIGN KEY (`b`) REFERENCES `test`.`tbl10`(`c`) ON UPDATE RESTRICT ON DELETE RESTRICT\n) DEFAULT CHARSET = utf8mb4 ROW_FORMAT = DYNAMIC COMPRESSION = 'zstd_1.3.8' REPLICA_NUM = 1 BLOCK_SIZE = 16384 USE_BLOOM_FILTER = FALSE TABLET_SIZE = 134217728 PCTFREE = 0 |\n+-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n1 row in set\n",
        "obclient> CREATE TABLE tbl12(a INT, b INT AS (a + 1), c INT, d INT, CONSTRAINT d_check CHECK(d > 0)) PARTITION BY HASH(c + 1) PARTITIONS 2;\n\nobclient> ALTER TABLE tbl12 RENAME COLUMN a TO e;\nERROR 3108 (HY000): Column 'a' has a generated column dependency\n",
        "obclient> ALTER TABLE tbl12 RENAME COLUMN c TO e;\nERROR 3855 (HY000): Column 'c' has a partitioning function dependency and cannot be dropped or renamed.\n",
        "obclient> ALTER TABLE tbl12 RENAME COLUMN d TO e;\nERROR 3959 (HY000): Check constraint 'd_check' uses column 'd', hence column cannot be dropped or renamed.\n",
        "DROP TABLE IF EXISTS tbl12;\nobclient> CREATE TABLE tbl12(i INT, INDEX ((i+1)));\nQuery OK, 0 rows affected\n\nobclient> ALTER TABLE tbl12 RENAME COLUMN i TO j;\nERROR 3837 (HY000): Column 'i' has a functional index dependency and cannot be dropped or renamed.\n",
        "obclient> CREATE TABLE tbl13(a INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE VIEW v1 AS SELECT a + 1 FROM tbl13;\nQuery OK, 0 rows affected\n\nobclient> SELECT * FROM v1;\nEmpty set\n\nobclient> ALTER TABLE tbl13 RENAME COLUMN a TO b;\nQuery OK, 0 rows affected\n\nobclient> SELECT * FROM v1;\nERROR 1356 (42S22): View 'test.v1' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them\n",
        "obclient> CREATE TABLE tbl14(a INT);\nQuery OK, 0 rows affected\n\nobclient> CREATE PROCEDURE proc() SELECT a + 1 FROM tbl14;\nQuery OK, 0 rows affected\n\nobclient> CALL proc();\nEmpty set\n\nobclient> ALTER TABLE tbl14 RENAME COLUMN a TO b;\nQuery OK, 0 rows affected\n\nobclient> CALL proc();\nERROR 1054 (42S22): Unknown column 'a' in 'field list'\n",
        "CREATE TABLE tbl1 (col1 INT PRIMARY KEY, col2 VARCHAR(50));\n",
        "ALTER TABLE tbl1 ADD COLUMN GROUP(all columns, each column);\n",
        "ALTER TABLE tbl1 DROP COLUMN GROUP(all columns, each column);\n",
        "ALTER TABLE tbl1 ADD COLUMN GROUP(each column);\n",
        "ALTER TABLE tbl1 DROP COLUMN GROUP(each column);\n",
        "CREATE TABLE test_skidx(\n  col1 INT SKIP_INDEX(MIN_MAX, SUM),\n  col2 FLOAT SKIP_INDEX(MIN_MAX),\n  col3 VARCHAR(1024) SKIP_INDEX(MIN_MAX),\n  col4 CHAR(10)\n  );\n",
        "ALTER TABLE test_skidx MODIFY COLUMN col2 FLOAT SKIP_INDEX(SUM);\n",
        "ALTER TABLE test_skidx MODIFY COLUMN col4 CHAR(10) SKIP_INDEX(MIN_MAX);\n",
        "ALTER TABLE test_skidx MODIFY COLUMN col1 INT SKIP_INDEX();\n",
        "ALTER TABLE test_skidx MODIFY COLUMN col1 INT;\n"
    ],
    "Category": [
        "No Category"
    ]
}