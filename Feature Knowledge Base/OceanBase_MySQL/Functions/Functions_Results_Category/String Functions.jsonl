{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823440"], "Title": ["INSERT"], "Feature": ["INSERT (str1,pos,len,str2)\n"], "Description": ["返回字符串 str1，字符串中起始于 pos 位置，长度为 len 的子字符串将被 str2 取代。如果 pos 超过字符串长度，则返回值为原始字符串。假如 len 的长度大于其它字符串的长度，则从位置 pos 开始替换。如果任何一个参数为 NULL，则返回值为 NULL。该函数支持多字节字元。", "str1 和 str2 必须是字符串，pos 和 len 必须是整数。任意参数为 NULL，结果总为 NULL。", "str1 和 str2 中的文字符被视为字节流。", "pos 值为负数或者大于 str1 长度时，返回 str1。", "当 len 小于 0，或大于 str1 的长度时，返回结果为 str1 从开头到 pos 位置的串，和 str2 的组合串。"], "Examples": ["obclient> SELECT INSERT('Quadratic',-2,100,'What'), INSERT('Quadratic',7,3,'What'),\n      INSERT('Quadratic',-1,3,'What'), INSERT('Quadratic',10,3,'What'), INSERT('Quadratic',5,-1,''),\n      INSERT('Quadratic',7,-1,'What')\\G\n*************************** 1. row ***************************\nINSERT('Quadratic',-2,100,'What'): Quadratic\n   INSERT('Quadratic',7,3,'What'): QuadraWhat\n  INSERT('Quadratic',-1,3,'What'): Quadratic\n  INSERT('Quadratic',10,3,'What'): Quadratic\n      INSERT('Quadratic',5,-1,''): Quad\n  INSERT('Quadratic',7,-1,'What'): QuadraWhat\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823467"], "Title": ["INSTR"], "Feature": ["INSTR(str,substr)\n"], "Description": ["返回字符串 str 中子字符串的第一个出现位置。这和 LOCATE() 的双参数形式相同，除非参数的顺序被颠倒。"], "Examples": ["obclient> SELECT INSTR('foobarbar', 'bar'), INSTR('xbar', 'foobar');\n+---------------------------+-------------------------+\n| INSTR('foobarbar', 'bar') | INSTR('xbar', 'foobar') |\n+---------------------------+-------------------------+\n|                         4 |                       0 |\n+---------------------------+-------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823478"], "Title": ["INT2IP"], "Feature": ["INT2IP(int_value)\n"], "Description": ["将整数 int_value 转换成 IP 地址。", "假设输入的数值为 s，则返回的 IP 地址 s4.s3.s2.s1 的计算方式为：", "s1：s mod 2^8^", "s2：s - s1 / 2^8^ mod 2^8^", "s3：((s - s1) / 2^8^ - s2 )/ 2^8^ mod 2^8^", "s4：(((s - s1) / 2^8^ - s2 )/ 2^8^ - s3)/ 2^8^ mod 2^8^", "如果输入大于 4294967295 的值或 NULL 值，则返回 NULL。"], "Examples": ["obclient> SELECT\n     INT2IP(16777216),\n     HEX(16777216),\n     INT2IP(1)\n     \\G\n*************************** 1. row ***************************\nINT2IP(16777216): 1.0.0.0\n   HEX(16777216): 1000000\n       INT2IP(1): 0.0.0.1\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823459"], "Title": ["IP2INT"], "Feature": ["IP2INT('ip_addr')\n"], "Description": ["将 IP 地址 ip_addr 转换成整数。", "假设输入的 IP 形如 s1.s2.s3.s4，则返回值的计算规则为：", "s1 * 2^24^ + s2 * 2^16^ + s3 * 2^8^+ s4"], "Examples": ["obclient> SELECT\n     IP2INT('0.0.0.1'),\n     HEX(IP2INT('0.0.0.1')),\n     HEX(IP2INT('1.0.0.0'))\n     \\G\n*************************** 1. row ***************************\n     IP2INT('0.0.0.1'): 1\nHEX(IP2INT('0.0.0.1')): 1\nHEX(IP2INT('1.0.0.0')): 1000000\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823452"], "Title": ["LCASE"], "Feature": ["LCASE(str)\n"], "Description": ["将字符串中的大写字母转化为小写字母。", "该函数是 LOWER() 的同义词。"], "Examples": ["obclient> SELECT LCASE('OBCLIENT您好！');\n+----------------------------+\n| LCASE('OBCLIENT您好！')    |\n+----------------------------+\n| obclient您好！             |\n+----------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823442"], "Title": ["BIN"], "Feature": ["bin(N)\n"], "Description": ["返回数字 N 的二进制形式。该函数等价于 CONV(N,10,2)。", "如果 N 为 NULL，则返回 NULL。"], "Examples": ["obclient> SELECT BIN(12);\n+---------+\n| BIN(12) |\n+---------+\n| 1100    |\n+---------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823433"], "Title": ["LEFT"], "Feature": ["LEFT(str,len)\n"], "Description": ["返回字符串 str 从左侧起的 len 个字符，如果 str 或 len 为 NULL，则返回 NULL。", "该函数是多字节安全的。"], "Examples": ["obclient> SELECT LEFT('oceanbase', 5);\n+----------------------+\n| LEFT('oceanbase', 5) |\n+----------------------+\n| ocean                |\n+----------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823462"], "Title": ["LENGTH"], "Feature": ["LENGTH(str)\n"], "Description": ["返回 str 的字节长度。", "多字节的字符会被计算为多个字符。例如，输入 5 个 2 字节字符，CHAR_LENGTH() 返回 5，而 LENGTH() 则返回 10。"], "Examples": ["obclient> SELECT LENGTH('中国'), LENGTH('hello');\n+------------------+-----------------+\n| LENGTH('中国') | LENGTH('hello') |\n+------------------+-----------------+\n|                6 |               5 |\n+------------------+-----------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823447"], "Title": ["LOCATE"], "Feature": ["LOCATE(substr,str)\nLOCATE(substr,str,pos)\n"], "Description": ["第一个语法返回字符串 str 中子字符串 substr 的第一个出现位置。第二个语法返回字符串 str 中子字符串 substr 的第一个出现位置，起始位置在 pos。如果 substr 不在 str 中，则返回值为 0。"], "Examples": ["obclient> SELECT LOCATE('bar', 'foobarbar'), LOCATE('xbar', 'foobar'), LOCATE('bar', 'foobarbar',5);\n+----------------------------+--------------------------+------------------------------+\n| LOCATE('bar', 'foobarbar') | LOCATE('xbar', 'foobar') | LOCATE('bar', 'foobarbar',5) |\n+----------------------------+--------------------------+------------------------------+\n|                          4 |                        0 |                            7 |\n+----------------------------+--------------------------+------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823477"], "Title": ["LOWER"], "Feature": ["LOWER(str)\n"], "Description": ["将字符串中的大写字母转化为小写字母。", "该函数是 LCASE() 的同义词。"], "Examples": ["obclient> SELECT LOWER('OBCLIENT您好！');\n+-----------------------------+\n| LOWER('OBCLIENT您好！') |\n+-----------------------------+\n| obclient您好！          |\n+-----------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823470"], "Title": ["LPAD"], "Feature": ["LPAD(str,len,padstr)\n"], "Description": ["使用字符串 padstr 从左侧填充字符串 str，直到长度为 len 时为止。", "如果 str 长度大于 len，则返回 str 左边 len 个字符。如果 str 长度小于 len，且 padstr 和 str 连接后大于 len，则返回连接后的右边 len 个字符。"], "Examples": ["obclient> SELECT LPAD('Base',9,'Ocean');\n+------------------------+\n| LPAD('Base',9,'Ocean') |\n+------------------------+\n| OceanBase              |\n+------------------------+\n1 row in set\n\nobclient> SELECT LPAD('Base',1,'Ocean');\n+------------------------+\n| LPAD('Base',1,'Ocean') |\n+------------------------+\n| B                      |\n+------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823475"], "Title": ["LTRIM"], "Feature": ["LTRIM(str)\n"], "Description": ["删除字符串左侧的空格。"], "Examples": ["obclient> SELECT LTRIM('    obclient    ') AS ltrim;\n+--------------+\n| ltrim        |\n+--------------+\n| obclient     |\n+--------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823436"], "Title": ["MAKE_SET"], "Feature": ["MAKE_SET(bits,str1,str2,...)\n"], "Description": ["返回将 bits 指定位为 1 的字符串的集合，以逗号（,）分隔。str1 对应 2^0^ 位，str2 对应 2^1^ 位，以此类推。如果对应位的 strn 不存在，则返回 NULL。", "例如，将 bits 指定为 5，换算为二进制为 0101，则返回 str1 与 str3。"], "Examples": ["obclient> SELECT MAKE_SET(1,'a','b','c');\n+-------------------------+\n| MAKE_SET(1,'a','b','c') |\n+-------------------------+\n| a                       |\n+-------------------------+\n1 row in set\n\nobclient> SELECT MAKE_SET(1 | 4,'hello','ocean','base');\n+----------------------------------------+\n| MAKE_SET(1 | 4,'hello','ocean','base') |\n+----------------------------------------+\n| hello,base                             |\n+----------------------------------------+\n1 row in set\n\nobclient> SELECT MAKE_SET(1 | 4,'hello','ocean',NULL,'base');\n+---------------------------------------------+\n| MAKE_SET(1 | 4,'hello','ocean',NULL,'base') |\n+---------------------------------------------+\n| hello                                       |\n+---------------------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823473"], "Title": ["MID"], "Feature": ["MID(str,pos,len)\n"], "Description": ["返回 str 的子字符串，起始位置为 pos，长度为 len。参数中包含 NULL 时，返回 NULL。", "不指定 len 时，返回的子字符串从 pos 位置开始到 str 结尾。", "pos 值为负数时，从 str 尾部向头部倒序确定起始位置。", "len 小于等于 0，或 pos 指定的起始位置非法时，返回空字符串。", "该函数是 SUBSTRING(str,pos,len) 的别名。"], "Examples": ["obclient> SELECT MID('OceanBase',6);\n+--------------------+\n| MID('OceanBase',6) |\n+--------------------+\n| Base               |\n+--------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823485"], "Title": ["OCT"], "Feature": ["OCT(N)\n"], "Description": ["返回 N 的八进制值，该函数等价于 CONV(N,10,8)。", "如果 N 为 NULL，则该函数返回 NULL。"], "Examples": ["obclient> SELECT OCT(12);\n+---------+\n| OCT(12) |\n+---------+\n| 14      |\n+---------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823481"], "Title": ["OCTET_LENGTH"], "Feature": ["OCTET_LENGTH(str)\n"], "Description": ["OCTET_LENGTH() 是 LENGTH() 的同义词。"], "Examples": ["obclient> SELECT OCTET_LENGTH('中国'), OCTET_LENGTH('hello');\n+------------------------+-----------------------+\n| OCTET_LENGTH('中国')   | OCTET_LENGTH('hello') |\n+------------------------+-----------------------+\n|                      6 |                     5 |\n+------------------------+-----------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823449"], "Title": ["ORD"], "Feature": ["ORD(str)\n"], "Description": ["返回字符串最左侧字符的字符码。单字节编码如果最左侧字符是多字节编码字符，返回值计算规则如下：", "(1st byte code)\n+ (2nd byte code * 256)\n+ (3rd byte code * 256^2) ...\n", "如果最左边的字符不是多字节字符，则 ORD() 返回与 ASCII() 函数相同的值。"], "Examples": ["obclient> SELECT ORD('中国');\n+---------------+\n| ORD('中国') |\n+---------------+\n|      14989485 |\n+---------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823469"], "Title": ["BIT_LENGTH"], "Feature": ["BIT_LENGTH(str)\n"], "Description": ["返回字符串 str 的比特位长度。"], "Examples": ["obclient> SELECT BIT_LENGTH('oceanbase');\n+-------------------------+\n| BIT_LENGTH('oceanbase') |\n+-------------------------+\n|                      72 |\n+-------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823443"], "Title": ["POSITION"], "Feature": ["POSITION(substr IN str)\n"], "Description": ["回字符串 str 中子字符串 substr 的第一个出现位置。"], "Examples": ["obclient> SELECT POSITION('bar' IN 'foobarbar');\n+--------------------------------+\n| POSITION('bar' IN 'foobarbar') |\n+--------------------------------+\n|                              4 |\n+--------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823444"], "Title": ["QUOTE"], "Feature": ["quote(str)\n"], "Description": ["引用一个字符串以产生一个结果可以作为 SQL 语句中正确地转义数据值。", "对于一般情况，返回的字符串会在原字符串前后加单引号（'）。", "对于每个反斜杠（\\）、单引号（'）、ASCII 编码的 NUL 值与 Control+Z，会在前面加反斜杠（\\）。", "如果参数为 NULL，则返回值为不包括单引号的 'NULL' 字符串。"], "Examples": ["obclient> SELECT QUOTE('Don\\'t!');\n+------------------+\n| QUOTE('Don\\'t!') |\n+------------------+\n| 'Don\\'t!'        |\n+------------------+\n1 row in set\n\nobclient> SELECT QUOTE(NULL);\n+-------------+\n| QUOTE(NULL) |\n+-------------+\n| NULL        |\n+-------------+\n1 row in set\n\nobclient> SELECT LENGTH(QUOTE(NULL));\n+---------------------+\n| LENGth(QUOTE(NULL)) |\n+---------------------+\n|                   4 |\n+---------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823446"], "Title": ["REGEXP"], "Feature": ["str [NOT] REGEXP | RLIKE pat\n"], "Description": ["正则匹配。参数中包含 NULL 时，返回 NULL。"], "Examples": ["obclient> SELECT\n     1234 REGEXP 1,\n     'hello' RLIKE 'h%'\n     \\G\n*************************** 1. row ***************************\n     1234 REGEXP 1: 1\n'hello' RLIKE 'h%': 0\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823457"], "Title": ["REGEXP_INSTR"], "Feature": ["REGEXP_INSTR(expr, pat [, pos [, occurrence [, return_option [, match_type ]]]])\n"], "Description": ["返回表达式 expr 中满足表达式 pat 的子字符串的起始位置。如果不存在满足匹配规则的子字符串则返回 0，如果 expr 或 pat 为 NULL，则该函数也返回 NULL。返回值所表示的位置从 1 开始。", "pos 表示从表达式 expr 的第几个字符开始搜索，缺省为 1。", "occurrence 表示 expr 中第几次出现 pat 的位置，缺省为 1。", "return_option 表示返回值的类型，缺省为 0。", "\n取值为 0 时，表示 REGEXP_INSTR() 返回匹配到的第一个字符的位置。\n取值为 1 时，表示 REGEXP_INSTR() 返回匹配到的最后一个字符的位置。\n", "取值为 0 时，表示 REGEXP_INSTR() 返回匹配到的第一个字符的位置。", "取值为 1 时，表示 REGEXP_INSTR() 返回匹配到的最后一个字符的位置。", "match_type 表示匹配规则。有关匹配规则的详细信息，请参见 REGEXP_LIKE。"], "Examples": ["obclient> SELECT REGEXP_INSTR('ocean base oceanbase', 'ocean');\n+-----------------------------------------------+\n| REGEXP_INSTR('ocean base oceanbase', 'ocean') |\n+-----------------------------------------------+\n|                                             1 |\n+-----------------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_INSTR('ocean base oceanbase', 'ocean',2);\n+-------------------------------------------------+\n| REGEXP_INSTR('ocean base oceanbase', 'ocean',2) |\n+-------------------------------------------------+\n|                                               12 |\n+-------------------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_INSTR('ocean base oceanbase', 'ocean',1,2);\n+---------------------------------------------------+\n| REGEXP_INSTR('ocean base oceanbase', 'ocean',1,2) |\n+---------------------------------------------------+\n|                                                12 |\n+---------------------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_INSTR('ocean base oceanbase', 'ocean',1,2,1);\n+-----------------------------------------------------+\n| REGEXP_INSTR('ocean base oceanbase', 'ocean',1,2,1) |\n+-----------------------------------------------------+\n|                                                  17 |\n+-----------------------------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823466"], "Title": ["REGEXP_LIKE"], "Feature": ["REGEXP_LIKE(expr, pat[, match_type])\n"], "Description": ["如果字符串 expr 匹配到正则表达式 pat 中指定的值，则返回 1，否则返回 0。如果 expr 或 pat 为 NULL，则返回 NULL。", "match_type 具有以下取值，表示匹配模式：", "c 表示区分大小写。", "i 表示不区分大小写。", "m 表示识别字符串中的换行符。默认情况下，只匹配字符串表达式开始和结束处的换行符。", "n 表示句号 . 仅字符匹配换行符（\\n）。默认情况下，. 匹配任何非换行符（\\n）的单字符。", "u 表示仅匹配 Unix 行结尾。只有换行符（\\n）可以被 .、^ 与 $ 识别为行结尾。"], "Examples": ["obclient> SELECT REGEXP_LIKE('OceanBase', 'OCEANBASE');\n+---------------------------------------+\n| REGEXP_LIKE('OceanBase', 'OCEANBASE') |\n+---------------------------------------+\n|                                     1 |\n+---------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_LIKE('OceanBase', 'OCEANBASE','c');\n+-------------------------------------------+\n| REGEXP_LIKE('OceanBase', 'OCEANBASE','c') |\n+-------------------------------------------+\n|                                         0 |\n+-------------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_LIKE('Ocean\\nBase', 'OCEAN.BASE');\n+------------------------------------------+\n| REGEXP_LIKE('Ocean\\nBase', 'OCEAN.BASE') |\n+------------------------------------------+\n|                                        0 |\n+------------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_LIKE('Ocean\\nBase', 'OCEAN.BASE','n');\n+----------------------------------------------+\n| REGEXP_LIKE('Ocean\\nBase', 'OCEAN.BASE','n') |\n+----------------------------------------------+\n|                                            1 |\n+----------------------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823455"], "Title": ["REGEXP_REPLACE"], "Feature": ["REGEXP_REPLACE(expr, pat, repl[, pos[, occurrence[, match_type]]])\n"], "Description": ["将字符串 expr 中匹配 pat 的子字符串替换为 repl 指定的字符串，并返回替换后的字符串。如果 expr、pat 或 repl 为 NULL，则该函数返回 NULL。", "pos 表示从表达式 expr 的第几个字符开始搜索，缺省为 1。", "occurrence 表示将第几次匹配替换为 repl，默认为 0，表示替换所有匹配的子字符串。", "match_type 表示匹配规则。有关匹配规则的详细信息，请参见 REGEXP_LIKE。"], "Examples": ["obclient> SELECT REGEXP_REPLACE('OceanBase', 'a', '2');\n+---------------------------------------+\n| REGEXP_REPLACE('OceanBase', 'a', '2') |\n+---------------------------------------+\n| Oce2nB2se                             |\n+---------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_REPLACE('OceanBase', 'a', '2',7);\n+-----------------------------------------+\n| REGEXP_REPLACE('OceanBase', 'a', '2',7) |\n+-----------------------------------------+\n| OceanB2se                               |\n+-----------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_REPLACE('OceanBase', 'a', '2',1,2);\n+-------------------------------------------+\n| REGEXP_REPLACE('OceanBase', 'a', '2',1,2) |\n+-------------------------------------------+\n| OceanB2se                                 |\n+-------------------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823438"], "Title": ["REGEXP_SUBSTR"], "Feature": ["REGEXP_SUBSTR(str,pattern,[position[,occurrence[,match_param[,subexpr]]]])\n"], "Description": ["在 str 中搜索匹配正则表达式 pattern 的子串，如果子串不存在，则返回 NULL。该函数支持多字节字元。除 match_param 外，其他任意参数为 NULL，结果为 NULL。参数解释如下：", "str 表示待搜索的字符串，支持多字节字元。", "pattern 表示正则表达式，正则表达式规则兼容 MySQL 数据库。", "position 表示搜索的开始位置。必须是大于 0 的正整数，小于等于 0 报错，输入为 NULL 返回 NULL，默认值为 1，表示从第一个字符开始搜索。", "occurrence 表示返回第几次匹配的值。必须是大于等于 0 的正整数，小于等于 0 报错，输入为 NULL 返回 NULL，默认值是 1，表示返回第一次匹配的结果。", "match_param 表示匹配规则，字符串类型。有关匹配规则的详细信息，请参见 REGEXP_LIKE。", "subexpr 表示返回正则表达式中第几个组的值。大于等于 0 的整数，小于 0 则报错。默认值是 0，表示返回满足整个 pattern 的子串。"], "Examples": ["obclient> SELECT REGEXP_SUBSTR('I have 2 apples and 100 bucks!', '[[:blank:]][[:alnum:]]*', 1, 1) FROM DUAL;\n+----------------------------------------------------------------------------------+\n| regexp_substr('I have 2 apples and 100 bucks!', '[[:blank:]][[:alnum:]]*', 1, 1) |\n+----------------------------------------------------------------------------------+\n|  have                                                                            |\n+----------------------------------------------------------------------------------+\n1 row in set\n\nobclient> SELECT REGEXP_SUBSTR('foothebar', 'foo(.*)(bar)', 1, 1, 'c', 1) FROM DUAL;\n+----------------------------------------------------------+\n| regexp_substr('foothebar', 'foo(.*)(bar)', 1, 1, 'c', 1) |\n+----------------------------------------------------------+\n| the                                                      |\n+----------------------------------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823483"], "Title": ["REPEAT"], "Feature": ["REPEAT(str, count)\n"], "Description": ["返回 str 重复 count 次组成的字符串。count 小于等于 0 时，返回空字符串。参数中包含 NULL 时，返回 NULL。"], "Examples": ["obclient> SELECT\n     REPEAT('1', -1),\n     REPEAT(null, null),\n     REPEAT('Abc', 4)\n     \\G\n*************************** 1. row ***************************\n   REPEAT('1', -1):\nREPEAT(null, null): NULL\n  REPEAT('Abc', 4): AbcAbcAbcAbc\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823439"], "Title": ["REPLACE"], "Feature": ["REPLACE(str, from_str, to_str)\n"], "Description": ["REPLACE() 函数用于替换字符串中的子字符串。这个函数会在 str 中查找所有的 from_str 并将其替换为 to_str。如果 str 中没有找到匹配的 from_str，则原始字符串将保持不变。", "REPLACE() 中任何参数为 NULL 的情况下，则结果返回 NULL。", "REPLACE() 函数是区分大小写的，这意味着它将考虑字符串的大小写。如果您想进行大小写不敏感的替换，可以使用 REPLACE(UPPER(str), UPPER(from_str), to_str) 或 REPLACE(LOWER(str), LOWER(from_str), to_str) 来确保在不考虑大小写的情况下执行替换。", "REPLACE() 函数是多字节安全的。", "\n\n\n参数\n必选/可选\n说明\n\n\n\n\nstr\n必选\n原始字符串，要进行替换的目标。\n\n\nfrom_str\n必选\n要替换的子字符串。\n\n\nto_str\n必选\n替换后的新字符串。\n\n\n"], "Examples": ["obclient> SELECT REPLACE('abc.efg.gpg.nowdew.abc.dabc.e', 'abc.', 'www');\n", "+---------------------------------------------------------+\n| REPLACE('abc.efg.gpg.nowdew.abc.dabc.e', 'abc.', 'www') |\n+---------------------------------------------------------+\n| wwwefg.gpg.nowdew.wwwdwwwe                              |\n+---------------------------------------------------------+\n1 row in set\n", "obclient> SELECT REPLACE('abc.efg.gpg.nowdew.abc.dabc.e', NULL, 'www');\n", "+-------------------------------------------------------+\n| REPLACE('abc.efg.gpg.nowdew.abc.dabc.e', NULL, 'www') |\n+-------------------------------------------------------+\n| NULL                                                  |\n+-------------------------------------------------------+\n1 row in set\n", "obclient> SELECT REPLACE('abc.efg.gpg.nowdew.abc.dabc.e', 'abc.', 'WWW');\n", "+---------------------------------------------------------+\n| REPLACE('abc.efg.gpg.nowdew.abc.dabc.e', 'abc.', 'WWW') |\n+---------------------------------------------------------+\n| WWWefg.gpg.nowdew.WWWdWWWe                              |\n+---------------------------------------------------------+\n1 row in set\n", "obclient> SELECT REPLACE(UPPER('Hello World'), UPPER('world'), 'Universe');\n", "+-----------------------------------------------------------+\n| REPLACE(UPPER('Hello World'), UPPER('world'), 'Universe') |\n+-----------------------------------------------------------+\n| HELLO Universe                                            |\n+-----------------------------------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823472"], "Title": ["REVERSE"], "Feature": ["REVERSE(str)\n"], "Description": ["返回字符串 str 的倒序排列。", "该函数是多字节安全的。"], "Examples": ["obclient> SELECT REVERSE('oceanbase');\n+----------------------+\n| REVERSE('oceanbase') |\n+----------------------+\n| esabnaeco            |\n+----------------------+\n1 row in set\n\nobclient> SELECT REVERSE(1000);\n+---------------+\n| REVERSE(1000) |\n+---------------+\n| 0001          |\n+---------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823463"], "Title": ["RIGHT"], "Feature": ["RIGHT(str,len)\n"], "Description": ["返回字符串 str 从右侧起的 len 个字符，如果 str 或 len 为 NULL，则返回 NULL。", "该函数是多字节安全的。"], "Examples": ["obclient> SELECT RIGHT('oceanbase',4);\n+----------------------+\n| RIGHT('oceanbase',4) |\n+----------------------+\n| base                 |\n+----------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823460"], "Title": ["RLIKE"], "Feature": ["str RLIKE pat\n"], "Description": ["字符串是否匹配正则表达式。如果字符串 str 与指定的正则表达式匹配，则返回 1，否则返回 0。如果字符串 str 或者 pat 其中任一个是 NULL，返回值是 NULL。", "该函数是 REGEXP() 的同义词。"], "Examples": ["obclient> SELECT 'hello world!' RLIKE '^hello','hello world!' RLIKE '^hello$';\n+-------------------------------+--------------------------------+\n| 'hello world!' RLIKE '^hello' | 'hello world!' RLIKE '^hello$' |\n+-------------------------------+--------------------------------+\n|                             1 |                              0 |\n+-------------------------------+--------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823451"], "Title": ["RPAD"], "Feature": ["RPAD(str,len,padstr)\n"], "Description": ["使用字符串 padstr 从右侧填充字符串 str，直到长度为 len 时为止。", "如果 str 长度大于 len，则返回 str 左边 len 个字符。", "如果 str 长度小于 len，str 和 padstr 连接后大于 len，则返回连接后的左边 len 个字符。", "如果 str 长度小于 len，str 和 padstr 连接后小于 len，则返回 str 与多个重复 padstr 连接（总长度大于等于 len）后的左边 len 个字符。"], "Examples": ["obclient> SELECT RPAD('hi',5,'?');\n+------------------+\n| RPAD('hi',5,'?') |\n+------------------+\n| hi???            |\n+------------------+\n1 row in set\n\nobclient> SELECT RPAD('hi',1,'?');\n+------------------+\n| RPAD('hi',1,'?') |\n+------------------+\n| h                |\n+------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823476"], "Title": ["RTRIM"], "Feature": ["RTRIM(str)\n"], "Description": ["删除字符串 str 右侧的空格。"], "Examples": ["obclient> SELECT RTRIM('    obclient    ') AS rtrim;\n+--------------+\n| rtrim        |\n+--------------+\n|     obclient |\n+--------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823432"], "Title": ["SOUNDEX"], "Feature": ["SOUNDEX(str)\n"], "Description": ["返回由四个字符组成的代码以评估两个字符串在发音时的相似性。"], "Examples": ["obclient> SELECT SOUNDEX('a');\n+--------------+\n| SOUNDEX('a') |\n+--------------+\n| A000         |\n+--------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823461"], "Title": ["SPACE"], "Feature": ["SPACE(N)\n"], "Description": ["返回包含 N 个空格的字符串。"], "Examples": ["obclient> SELECT SPACE(5);\n+----------+\n| SPACE(5) |\n+----------+\n|          |\n+----------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823448"], "Title": ["STRCMP"], "Feature": ["STRCMP(expr1,expr2)\n"], "Description": ["如果字符串 expr1 与 expr2 一致，则返回 0。如果 expr1 是 expr2 的子串，则返回 -1；如果 expr2 是 expr1 的子串，则返回 1。"], "Examples": ["obclient> SELECT STRCMP('text', 'text2');\n+-------------------------+\n| STRCMP('text', 'text2') |\n+-------------------------+\n|                      -1 |\n+-------------------------+\n1 row in set\n\nobclient> SELECT STRCMP('text2', 'text');\n+-------------------------+\n| STRCMP('text2', 'text') |\n+-------------------------+\n|                       1 |\n+-------------------------+\n1 row in set\n\nobclient> SELECT STRCMP('text', 'text');\n+------------------------+\n| STRCMP('text', 'text') |\n+------------------------+\n|                      0 |\n+------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823465"], "Title": ["SUBSTR"], "Feature": ["SUBSTR(str, pos)\nSUBSTR(str, pos, len)\nSUBSTR(str FROM pos)         \nSUBSTR(str FROM pos FOR len)\n"], "Description": ["返回 str 的子字符串，起始位置为 pos，长度为 len。参数中包含 NULL 时，返回 NULL。", "不指定 len 时，返回的子字符串从 pos 位置开始到 str 结尾。", "pos 值为负数时，从 str 尾部向头部倒序确定起始位置。", "len 小于等于 0，或 pos 指定的起始位置非法时，返回空字符串。"], "Examples": ["obclient> SELECT\n     SUBSTR('abcdefg', 3),\n     SUBSTR('abcdefg', 3, 2),\n     SUBSTR('abcdefg', -3),\n     SUBSTR('abcdefg', 3, -2),\n     SUBSTR('abcdefg' from -4 for 2)\n     \\G\n*************************** 1. row ***************************\n           SUBSTR('abcdefg', 3): cdefg\n        SUBSTR('abcdefg', 3, 2): cd\n          SUBSTR('abcdefg', -3): efg\n       SUBSTR('abcdefg', 3, -2):\nSUBSTR('abcdefg' from -4 for 2): de\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823458"], "Title": ["SUBSTRING"], "Feature": ["SUBSTRING(str, pos)  \nSUBSTRING(str, pos, len)         \nSUBSTRING(str FROM pos)      \nSUBSTRING(str FROM pos FOR len)\n"], "Description": ["返回 str 的子字符串，起始位置为 pos，长度为 len。参数中包含 NULL 时，返回 NULL。该函数是 SUBSTR() 的别名。", "不指定 len 时，返回的子字符串从 pos 位置开始到 str 结尾。", "pos 值为负数时，从 str 尾部向头部倒序确定起始位置。", "len 小于等于 0，或 pos 指定的起始位置非法时，返回空字符串。"], "Examples": ["obclient> SELECT\n    SUBSTRING('abcdefg', 3),\n    SUBSTRING('abcdefg', 3, 2),\n    SUBSTRING('abcdefg', -3),\n    SUBSTRING('abcdefg', 3, -2),\n    SUBSTRING('abcdefg' from -4 for 2)\n    \\G\n*************************** 1. row ***************************\n           SUBSTRING('abcdefg', 3): cdefg\n        SUBSTRING('abcdefg', 3, 2): cd\n          SUBSTRING('abcdefg', -3): efg\n       SUBSTRING('abcdefg', 3, -2):\nSUBSTRING('abcdefg' from -4 for 2): de\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823441"], "Title": ["SUBSTRING_INDEX"], "Feature": ["SUBSTRING_INDEX(str, delim, count)\n"], "Description": ["在定界符 delim 以及 count 出现前，从字符串 str 返回字符串。", "如果 count 为正值，则返回最终定界符（从左边开始）左边的一切内容。", "如果 count 为负值，则返回定界符（从右边开始）右边的一切内容。", "如果任意一个参数为 NULL，返回 NULL；", "如果 str 或 delim 为空字符串，则返回空串；", "如果 count=0，也返回空串。", "*str、delim 和 count 参数支持数值与字符串的隐式转换。"], "Examples": ["obclient> SELECT SUBSTRING_INDEX('ABCDABC', 'ABC', 0), SUBSTRING_INDEX('ABCDABC', 'ABC', 1), SUBSTRING_INDEX('ABCDABC', 'ABC', 2), SUBSTRING_INDEX('ABCDABC', 'ABC', 3), SUBSTRING_INDEX('ABCDABC', 'ABC', -1), SUBSTRING_INDEX('ABCDABC', 'ABC', -2), SUBSTRING_INDEX('ABCDABC', 'ABC', -3)\\G\n*************************** 1. row ***************************\n SUBSTRING_INDEX('ABCDABC', 'ABC', 0):\n SUBSTRING_INDEX('ABCDABC', 'ABC', 1):\n SUBSTRING_INDEX('ABCDABC', 'ABC', 2): ABCD\n SUBSTRING_INDEX('ABCDABC', 'ABC', 3): ABCDABC\nSUBSTRING_INDEX('ABCDABC', 'ABC', -1):\nSUBSTRING_INDEX('ABCDABC', 'ABC', -2): DABC\nSUBSTRING_INDEX('ABCDABC', 'ABC', -3): ABCDABC\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823434"], "Title": ["CHAR"], "Feature": ["CHAR(value1,... [USING charset_name])\n"], "Description": ["将每个参数转换为整数，并返回由这些整数的代码值所给出的字符组成的字符串，并跳过 NULL 值。", "此外，如果参数大于 255，则会将该参数被转换为多个结果字节。例如，CHAR(256) 等价于 CHAR(1,0)，CHAR(256*256) 等价于 CHAR(1,0,0)。", "默认情况下，CHAR() 返回的字符串的字符集是 binary，您可以通过 USING 子句来指定返回的字符集。", "obclient> select CHARSET(char('')), CHARSET(char('' USING utf8mb4));\n+-------------------+---------------------------------+\n| CHARSET(char('')) | CHARSET(char('' USING utf8mb4)) |\n+-------------------+---------------------------------+\n| binary            | utf8mb4                         |\n+-------------------+---------------------------------+\n1 row in set\n", "如果返回的值在指定的字符集中是非法的，则会抛出一个 WARNING 提示。特别地，如果 sql_mode 设置为 STRICT_ALL_TABLES 或 STRICT_TRANS_TABLES 时，如果返回的值在指定的字符集中非法，则会返回 NULL。", "有关 sql_mode 的详细信息，请参见 sql_mode。", "obclient> SET SESSION sql_mode='STRICT_ALL_TABLES';\nobclient> SELECT CHAR(399 USING utf8);\n+----------------------+\n| CHAR(399 USING utf8) |\n+----------------------+\n| NULL                 |\n+----------------------+\n1 row in set, 1 warning\n"], "Examples": ["obclient> SELECT CHAR(79,99,101,97,110,66,97.4,115,'101');\n+------------------------------------------+\n| CHAR(79,99,101,97,110,66,97.4,115,'101') |\n+------------------------------------------+\n| OceanBase                                |\n+------------------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823486"], "Title": ["TO_BASE64"], "Feature": ["TO_BASE64(str)\n"], "Description": ["将字符串参数转换为 base-64 编码形式。可以使用 FROM_BASE64 函数对 Base-64 编码的字符串进行解码，详细信息请参见 FROM_BASE64()。"], "Examples": ["obclient> SELECT TO_BASE64('OB');\n+-----------------+\n| TO_BASE64('OB')\n+-----------------+\n| T0I=            |\n+-----------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823445"], "Title": ["TRIM"], "Feature": ["TRIM([[{BOTH | LEADING | TRAILING}] [remstr] FROM] str\n"], "Description": ["删除字符串所有前缀和/或后缀，默认为 BOTH。参数中包含 NULL 时，返回 NULL。"], "Examples": ["obclient> SELECT\n     TRIM(' bar '),\n     TRIM(LEADING 'x' FROM 'xxxbarxxx'),\n     TRIM(BOTH 'x' FROM 'xxxbarxxx'),\n     TRIM(TRAILING 'x' FROM 'xxxbarxxx')\n     \\G\n*************************** 1. row ***************************\n                      TRIM(' bar '): bar\n TRIM(LEADING 'x' FROM 'xxxbarxxx'): barxxx\n    TRIM(BOTH 'x' FROM 'xxxbarxxx'): bar\nTRIM(TRAILING 'x' FROM 'xxxbarxxx'): xxxbar\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823431"], "Title": ["UCASE"], "Feature": ["UCASE(str)\n"], "Description": ["将字符串 str 中的小写字母转化为大写字母。该函数是 UPPER() 函数的同义词。"], "Examples": ["obclient> SELECT UCASE('obclient您好！');\n+----------------------------+\n| UCASE('obclient您好！')    |\n+----------------------------+\n| OBCLIENT您好！             |\n+----------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823453"], "Title": ["UNHEX"], "Feature": ["UNHEX(str)\n"], "Description": ["将字符串 str 中的十六进制数字转换为字节，该函数返回二进制字符串。", "字符串 str 中的字符必须为 0~9、A~F 与 a~f 中的值，如果字符串中含有任何非十六进制字符，则该函数返回 NULL。", "如果 str 是 BINARY 数据类型的列，并存在使用 0x00 填充的字节，则该函数也会返回 NULL。对于数字类型的参数 N，UNHEX(N) 并不是 HEX(N) 的逆运算，对于这种情况，您可以使用 CONV(HEX(N),16,10) 替代。", "特别地，您可以在客户端连接串中使用 --binary-as-hex 参数，表示将二进制字符串使用十六进制来表示。"], "Examples": ["obclient> SELECT UNHEX('4f6365616e42617365');\n+-----------------------------+\n| UNHEX('4f6365616e42617365') |\n+-----------------------------+\n| OceanBase                   |\n+-----------------------------+\n1 row in set\n\nobclient> SELECT X'4f6365616e42617365';\n+-----------------------+\n| X'4f6365616e42617365' |\n+-----------------------+\n| OceanBase             |\n+-----------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823454"], "Title": ["CHARACTER_LENGTH"], "Feature": ["CHARACTER_LENGTH(str)\n"], "Description": ["CHARACTER_LENGTH() 是 CHAR_LENGTH() 的同义词。"], "Examples": ["obclient> SELECT CHARACTER_LENGTH('中国'), LENGTH('中国'),CHARACTER_LENGTH('hello');\n+----------------------------+------------------+---------------------------+\n| CHARACTER_LENGTH('中国')   | LENGTH('中国')   | CHARACTER_LENGTH('hello') |\n+----------------------------+------------------+---------------------------+\n|                          2 |                6 |                         5 |\n+----------------------------+------------------+---------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823471"], "Title": ["UPPER"], "Feature": ["UPPER(str)\n"], "Description": ["将字符串 str 中的小写字母转化为大写字母。"], "Examples": ["obclient> obclient> SELECT UPPER('obclient您好！');\n+----------------------------+\n| UPPER('obclient您好！')    |\n+----------------------------+\n| OBCLIENT您好！             |\n+----------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823479"], "Title": ["CHAR_LENGTH"], "Feature": ["CHAR_LENGTH(str)\n"], "Description": ["返回字符串 str 包含的字符数。", "多字节的字符会被计为一个字符，例如，输入 5 个 2 字节字符，LENGTH() 返回 10，而 CHAR_LENGTH() 则返回 5。"], "Examples": ["obclient> SELECT CHAR_LENGTH('中国'), LENGTH('中国'),CHAR_LENGTH('hello');\n+-----------------------+------------------+----------------------+\n| CHAR_LENGTH('中国')   | LENGTH('中国')   | CHAR_LENGTH('hello') |\n+-----------------------+------------------+----------------------+\n|                     2 |                6 |                    5 |\n+-----------------------+------------------+----------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823435"], "Title": ["WEIGHT_STRING"], "Feature": ["WEIGHT_STRING(str [AS {CHAR|BINARY}(N)] [LEVEL levels] [flags])\n\nlevels:\n   N [ASC|DESC|REVERSE] [, N [ASC|DESC|REVERSE]] ...\n"], "Description": ["WEIGHT_STRING() 函数返回输入字符串的权重，返回值是一个二进制字符串，表示字符串的比较和排序值。比较规则如下：", "如果 WEIGHT_STRING(str1) = WEIGHT_STRING(str2)，则 str1 = str2（即 str1 和 str2 相等）。", "如果 WEIGHT_STRING(str1) < WEIGHT_STRING(str2)，则 str1 < str2（即 str1 排在 str2 之前）。", "WEIGHT_STRING() 函数仅供内部调试使用，可用于测试和调试排序规则，尤其是在添加新排序规则的场景。", "语法说明", "WEIGHT_STRING() 函数的语法解释如下：", "\n\n\n关键字\n说明\n\n\n\n\nstr\n输入的字符串表达式。 \n      \n如果输入是非二进制（字符）的字符串，例如 CHAR、VARCHAR 或 TEXT 值，则返回值包含字符串的排序规则权重。\n如果输入是二进制（字节）的字符串，例如 BINARY、VARBINARY 或 BLOB 值，则返回值与输入相同（二进制字符串中每个字节的权重就是字节值）。\n如果输入为 NULL，则返回 NULL。\n 对于非 NULL 返回值，如果其长度在 VARBINARY 的最大长度范围内，则该值的数据类型为 VARBINARY，否则数据类型为 BLOB。\n\n\nAS\n该子句将输入字符串转换为指定的类型和长度，为可选项。\n\n\nLEVEL\n该子句指定返回值的权重级别，为可选项。\n\n\nflags\n此参数暂未使用，为可选项。\n\n\n", "AS 子句使用说明", "AS 子句可以将输入字符串强制转换为非二进制或二进制字符串，并将其强制设置为指定长度，使用说明如下：", "AS CHAR(N) 将字符串转换为非二进制字符串，并在右侧用空格填充到 N（N>=1） 个字符的长度。如果 N 小于输入字符串的长度，则字符串将被截断为 N 个字符，而且截断时不会发出告警。", "AS BINARY(N) 将字符串转换为二进制字符串，N 以字节（不是字符）为单位，填充使用 0x00 字节（不是空格）。", "示例如下：", "obclient> SELECT HEX(WEIGHT_STRING('ab' AS CHAR(4)));\n+-------------------------------------+\n| HEX(WEIGHT_STRING('ab' AS CHAR(4))) |\n+-------------------------------------+\n| 41422020                            |\n+-------------------------------------+\n1 row in set\n\nobclient> SELECT HEX(WEIGHT_STRING('ab' AS BINARY(4)));\n+---------------------------------------+\n| HEX(WEIGHT_STRING('ab' AS BINARY(4))) |\n+---------------------------------------+\n| 61620000                              |\n+---------------------------------------+\n1 row in set\n", "LEVEL 子句使用说明", "LEVEL 子句可以用来指定返回值应该包含排序规则级别的权重。多个级别可以使用逗号（，）分隔形成列表的形式，连续多个级别可以使用破折号（-）标定范围。例如 LEVEL1-5。", "一般遵从以下规则：", "任何小于 1 的级别都被视为 1。任何大于输入字符串排序规则最大值的级别都被视为排序规则的最大值。最大值因排序规则而异，但永远不会大于 6。", "在级别列表中的级别必须按递增顺序排列。在某个级别范围内，如果第二个数字小于第一个数字，则将其视为与第一个数字相同（例如，3-2 与 3-3 等同）。", "如果省略 LEVEL 子句，则假定 LEVEL 1 - max，其中 max 是排序规则的最大级别。", "如果 LEVEL 子句使用列表表示法（而不是范围表示法），则级别编号后面可以使用以下修饰符：", "\nASC：返回权重且不做任何修改。这是默认设置。\nDESC：返回按位反转的权重。\nREVERSE：以相反的顺序返回权重（即反转字符串，第一个字符排在最后，最后一个字符排在前）。\n", "ASC：返回权重且不做任何修改。这是默认设置。", "DESC：返回按位反转的权重。", "REVERSE：以相反的顺序返回权重（即反转字符串，第一个字符排在最后，最后一个字符排在前）。", "示例如下：", "obclient> SELECT HEX(WEIGHT_STRING(0x56af LEVEL 1));\n+------------------------------------+\n| HEX(WEIGHT_STRING(0x56af LEVEL 1)) |\n+------------------------------------+\n| 56AF                               |\n+------------------------------------+\n1 row in set\n\nobclient> SELECT HEX(WEIGHT_STRING(0x56af LEVEL 1 DESC));\n+-----------------------------------------+\n| HEX(WEIGHT_STRING(0x56af LEVEL 1 DESC)) |\n+-----------------------------------------+\n| A950                                    |\n+-----------------------------------------+\n1 row in set\n\nobclient> SELECT HEX(WEIGHT_STRING(0x56af LEVEL 1 REVERSE ));\n+---------------------------------------------+\n| HEX(WEIGHT_STRING(0x56af LEVEL 1 REVERSE )) |\n+---------------------------------------------+\n| AF56                                        |\n+---------------------------------------------+\n1 row in set\n\nobclient> SELECT HEX(WEIGHT_STRING(0x56af LEVEL 1 DESC REVERSE ));\n+--------------------------------------------------+\n| HEX(WEIGHT_STRING(0x56af LEVEL 1 DESC REVERSE )) |\n+--------------------------------------------------+\n| 50A9                                             |\n+--------------------------------------------------+\n1 row in set\n"], "Examples": ["obclient> SET @s = CAST('AB' AS BINARY);\nQuery OK, 0 rows affected\n\nobclient> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   |\n+------+---------+------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823474"], "Title": ["CONCAT"], "Feature": ["CONCAT(str1, str2, ...)\n"], "Description": ["把多个字符串连接成一个字符串。如果所有参数都是非二进制字符串，则结果是一个非二进制字符串。如果参数包含任何二进制字符串，则结果是一个二进制字符串。对于数值类型的参数，会被转换为等价的非二进制字符串形式。", "参数中包含 NULL 时，返回 NULL。"], "Examples": ["obclient> SELECT\n     CONCAT('test','obclient', '1.0'),\n     CONCAT('test','obclient', NULL)\n     \\G\n*************************** 1. row ***************************\nCONCAT('test','obclient', '1.0'): testobclient1.0\n CONCAT('test','obclient', NULL): NULL\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823464"], "Title": ["CONCAT_WS"], "Feature": ["CONCAT_WS(separator, str1, .., strN)\n"], "Description": ["把多个字符串连接成一个字符串，相邻字符串间使用 separator 分隔。参数中包含 NULL 时，将忽略 NULL。", "该函数不会忽略空字符串。"], "Examples": ["obclient> SELECT\n     CONCAT_WS('_', 'First', 'Second'),\n     CONCAT_WS('_', 'First', NULL, 'Second')\n     \\G\n*************************** 1. row ***************************\n      CONCAT_WS('_', 'First', 'Second'): First_Second\nCONCAT_WS('_', 'First', NULL, 'Second'): First_Second\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823482"], "Title": ["ELT"], "Feature": ["ELT(N, str1, str2, str3,...)\n"], "Description": ["返回检索的字符串的索引。", "如果 N=1，则返回值为 str1；如果 N=2，则返回值为 str2；以此类推。如果 N 小于 1 或大于参数的数目，则返回值为 NULL。", "ELT() 是 FIELD() 的补数。"], "Examples": ["obclient> SELECT ELT(3, 'abc1', 'abc2', 'abc', 'abc4', 'abc'), ELT(0, 'null1', NULL);\n+----------------------------------------------+-----------------------+\n| ELT(3, 'abc1', 'abc2', 'abc', 'abc4', 'abc') | ELT(0, 'NULL1', NULL) |\n+----------------------------------------------+-----------------------+\n| abc                                          | NULL                  |\n+----------------------------------------------+-----------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823430"], "Title": ["EXPORT_SET"], "Feature": ["EXPORT_SET(bits,on,off[,separator[,number_of_bits]])\n"], "Description": ["返回一个字符串，对于在 bits 值中设置的位，会得到一个 on 字符串；对于未在 bits 值中设置的位，都会得到一个 off 字符串。从右到左检查 bits 中的位（即从低位到高位）。", "字符串从左到右添加到结果中，由 separator 字符串分隔（默认为逗号字符\",\"）。检查的位数由 number_of_bits 给出，如果未指定，则默认为 64 位。如果大于 64 位，则 number_of_bits 将被静默剪裁为 64 位。number_of_bits 被视为无符号整数，因此值 -1 与 64 实际上相同。"], "Examples": ["obclient> SELECT EXPORT_SET(6, '1','0',',', 10);\n+--------------------------------+\n| EXPORT_SET(6, '1','0',',', 10) |\n+--------------------------------+\n| 0,1,1,0,0,0,0,0,0,0            |\n+--------------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823484"], "Title": ["FIELD"], "Feature": ["FIELD(str,str1,str2,str3,...)\n"], "Description": ["返回参数 str 在 str1, str2, str3,... 列表中的索引位置（从 1 开始的位置）。在找不到 str 的情况下，返回值为 0。", "如果所有的对于 FIELD() 的参数均为字符串，则所有参数均按照字符串进行比较。如果所有的参数均为数字，则按照数字进行比较。否则，参数均按照 DOUBLE 类型进行比较。", "如果 str 为 NULL，则返回值为 0，原因是 NULL 不能同任何值进行同等比较。FILED() 是 ELT() 的补数。"], "Examples": ["obclient> SELECT FIELD('abc','abc1','abc2','abc','abc4','abc'), FIELD(NULL, 'null1', NULL);\n+-----------------------------------------------+----------------------------+\n| FIELD('abc','abc1','abc2','abc','abc4','abc') | FIELD(NULL, 'null1', NULL) |\n+-----------------------------------------------+----------------------------+\n|                                             3 |                          0 |\n+-----------------------------------------------+----------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823480"], "Title": ["FIND_IN_SET"], "Feature": ["FIND_IN_SET(str,strlist)\n"], "Description": ["返回字符串集合 strlist 中指定字符串 str 的位置，从 1 开始。如果 str 不存在于 strlist，则返回 0。如果 str 或 strlist 为 NULL，则返回 NULL。", "str 字符串中不能包含逗号（,）。"], "Examples": ["obclient> SELECT FIND_IN_SET('b','a,b,c,d');\n+----------------------------+\n| FIND_IN_SET('b','a,b,c,d') |\n+----------------------------+\n|                          2 |\n+----------------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823437"], "Title": ["FORMAT"], "Feature": ["FORMAT(X,D)\n"], "Description": ["把数字 X 格式转换为 #,###,###.## 格式，四舍五入到 D 位小数，并以字符串形式返回结果。", "如果整数部分超过三位，会用逗号（,）作为千分位分隔符。", "如果 D 为 0，则结果没有小数点或小数部分。"], "Examples": ["obclient> SELECT FORMAT(12332.123456, 4) FROM DUAL;\n+-------------------------+\n| format(12332.123456, 4) |\n+-------------------------+\n| 12,332.1235             |\n+-------------------------+\n1 row in set\n\nobclient> SELECT FORMAT(12332.1, 4) FROM DUAL;\n+--------------------+\n| format(12332.1, 4) |\n+--------------------+\n| 12,332.1000        |\n+--------------------+\n1 row in set\n\nobclient> SELECT FORMAT(12332.2, 0) FROM DUAL;\n+--------------------+\n| format(12332.2, 0) |\n+--------------------+\n| 12,332             |\n+--------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823450"], "Title": ["FROM_BASE64"], "Feature": ["FROM_BASE64(str)\n"], "Description": ["解码一个 base-64 编码的字符串，并以二进制字符串的形式返回。通常用来对 TO_BASE64() 编码的字符串进行解码，详细信息请参见 TO_BASE64()。"], "Examples": ["obclient> SELECT FROM_BASE64('T0I=');\n+---------------------+\n| FROM_BASE64('T0I=') |\n+---------------------+\n| OB                  |\n+---------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823468"], "Title": ["ASCII"], "Feature": ["ASCII(str)\n"], "Description": ["返回字符串 str 最左侧字符的 ASCII 码。", "如果 str 为空字符串，则该函数返回 0。如果 str 为 NULL，则该函数返回 NULL。"], "Examples": ["obclient> SELECT ASCII('');\n+-----------+\n| ASCII('') |\n+-----------+\n|         0 |\n+-----------+\n1 row in set\n\nobclient> SELECT ASCII('oceanbase');\n+--------------------+\n| ASCII('oceanbase') |\n+--------------------+\n|                111 |\n+--------------------+\n1 row in set\n\nobclient> SELECT ASCII('Oceanbase');\n+--------------------+\n| ASCII('Oceanbase') |\n+--------------------+\n|                 79 |\n+--------------------+\n1 row in set\n"], "Category": ["String Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823456"], "Title": ["HEX"], "Feature": ["HEX(str)\n"], "Description": ["将数字或字符串 str 转化为十六进制字符串，其中 str 中的每个字符的每个字节都转换为两个十六进制数字。", "对于数字类型的参数 N，UNHEX(N) 并不是 HEX(N) 的逆运算，对于这种情况，您可以使用 CONV(HEX(N),16,10) 替代。"], "Examples": ["obclient> SELECT HEX(255), HEX('abc');\n+----------+------------+\n| HEX(255) | HEX('abc') |\n+----------+------------+\n| FF       | 616263     |\n+----------+------------+\n1 row in set\n"], "Category": ["String Functions"]}
