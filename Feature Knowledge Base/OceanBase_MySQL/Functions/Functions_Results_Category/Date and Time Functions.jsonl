{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823408"], "Title": ["LAST_DAY"], "Feature": ["LAST_DAY(date)\n"], "Description": ["返回 date 当月最后一天的日期值。"], "Examples": ["obclient> SELECT LAST_DAY('2004-02-05');\n+------------------------+\n| LAST_DAY('2004-02-05') |\n+------------------------+\n| 2004-02-29             |\n+------------------------+\n1 row in set\n\nobclient> SELECT LAST_DAY('2004-01-01 01:01:01');\n+---------------------------------+\n| LAST_DAY('2004-01-01 01:01:01') |\n+---------------------------------+\n| 2004-01-31                      |\n+---------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823389"], "Title": ["LOCALTIME"], "Feature": ["LOCALTIME\nLOCALTIME([scale])\n"], "Description": ["返回当前日期时间。LOCALTIME 和 LOCALTIME() 是 NOW() 的同义词。", "scale 表示微秒部分的精度，有效值为 0 到 6 的整数，默认值为 0。"], "Examples": ["obclient> SELECT LOCALTIME(0);\n+---------------------+\n| LOCALTIME(0)        |\n+---------------------+\n| 2021-08-25 17:20:31 |\n+---------------------+\n1 row in set\n\nobclient> SELECT LOCALTIME(6);\n+----------------------------+\n| LOCALTIME(6)               |\n+----------------------------+\n| 2021-08-25 17:20:41.358574 |\n+----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823415"], "Title": ["LOCALTIMESTAMP"], "Feature": ["LOCALTIMESTAMP([scale])\n"], "Description": ["返回当前日期和时间，scale 表示微秒部分精度，有效值为 0 到 6 的整数。LOCALTIMESTAMP 和 LOCALTIMESTAMP() 是 NOW() 的同义词。"], "Examples": ["obclient> SELECT LOCALTIMESTAMP,LOCALTIMESTAMP(0),LOCALTIMESTAMP(6);\n+---------------------+---------------------+----------------------------+\n| LOCALTIMESTAMP      | LOCALTIMESTAMP(0)   | LOCALTIMESTAMP(6)          |\n+---------------------+---------------------+----------------------------+\n| 2021-08-25 17:17:08 | 2021-08-25 17:17:08 | 2021-08-25 17:17:08.952508 |\n+---------------------+---------------------+----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823416"], "Title": ["MAKEDATE"], "Feature": ["MAKEDATE(year,dayofyear)\n"], "Description": ["返回指定 year 年份第 dayofyear 天的日期值。dayofyear 取值必须大于 0，否则返回 NULL。", "如果 dayofyear 大于 366，则会将多余的值添加到 year 指定的年份，如果相加后 year 大于 9999，则该函数返回 NULL。"], "Examples": ["obclient> SELECT MAKEDATE(2011,31), MAKEDATE(2011,32);\n+-------------------+-------------------+\n| MAKEDATE(2011,31) | MAKEDATE(2011,32) |\n+-------------------+-------------------+\n| 2011-01-31        | 2011-02-01        |\n+-------------------+-------------------+\n1 row in set\n\nobclient> SELECT MAKEDATE(2011,0);\n+------------------+\n| MAKEDATE(2011,0) |\n+------------------+\n| NULL             |\n+------------------+\n1 row in set\n\nobclient> SELECT MAKEDATE(2011,2917923);\n+------------------------+\n| MAKEDATE(2011,2917923) |\n+------------------------+\n| NULL                   |\n+------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823368"], "Title": ["MAKETIME"], "Feature": ["MAKETIME(hour,minute,second)\n"], "Description": ["返回由 hour:minute:second 指定的时间值，其中 second 可以有小数部分。"], "Examples": ["obclient> SELECT MAKETIME(12,15,30);\n+--------------------+\n| MAKETIME(12,15,30) |\n+--------------------+\n| 12:15:30.000000    |\n+--------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823398"], "Title": ["MICROSECOND"], "Feature": ["MICROSECOND(expr)\n"], "Description": ["返回时间或日期时间表达式 expr 的微秒数。"], "Examples": ["obclient> SELECT MICROSECOND('12:00:00.999999');\n+--------------------------------+\n| MICROSECOND('12:00:00.999999') |\n+--------------------------------+\n|                         999999 |\n+--------------------------------+\n1 row in set\n\nobclient> SELECT MICROSECOND('2021-07-15 18:20:17.000010');\n+-------------------------------------------+\n| MICROSECOND('2021-07-15 18:20:17.000010') |\n+-------------------------------------------+\n|                                        10 |\n+-------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823384"], "Title": ["MINUTE"], "Feature": ["MINUTE(time)\n"], "Description": ["返回时间 time 中的分钟数。"], "Examples": ["obclient> SELECT MINUTE('18:20:17');\n+--------------------+\n| MINUTE('18:20:17') |\n+--------------------+\n|                 20 |\n+--------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823397"], "Title": ["MONTH"], "Feature": ["MONTH(date)\n"], "Description": ["返回 date 的月份信息。"], "Examples": ["obclient> SELECT MONTH('2008-02-03');\n+---------------------+\n| MONTH('2008-02-03') |\n+---------------------+\n|                   2 |\n+---------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823424"], "Title": ["MONTHNAME"], "Feature": ["MONTHNAME(date)\n"], "Description": ["返回指定日期 date 的月份全称。"], "Examples": ["obclient> SELECT MONTHNAME('2008-02-03');\n+-------------------------+\n| MONTHNAME('2008-02-03') |\n+-------------------------+\n| February                |\n+-------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823396"], "Title": ["NOW"], "Feature": ["NOW([scale])\n"], "Description": ["返回当前日期时间，考虑时区设置。该函数为 CURRENT_TIMESTAMP() 的别名。", "scale 表示微秒部分精度，有效值为 0 到 6 的整数，默认值为 0。"], "Examples": ["obclient> SELECT NOW(6);\n+----------------------------+\n| NOW(6)                     |\n+----------------------------+\n| 2021-07-20 16:30:54.816317 |\n+----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823400"], "Title": ["PERIOD_ADD"], "Feature": ["PERIOD_ADD(P,N)\n"], "Description": ["向时间段 P 添加 N 个月。其中 P 的格式为 YYMM 或 YYYYMM。", "返回值的格式为 YYYYMM。", "\n说明\n参数 P 不能是 DATE 类型，即非日期值。\n"], "Examples": ["obclient> SELECT PERIOD_ADD(200801,2);\n+----------------------+\n| PERIOD_ADD(200801,2) |\n+----------------------+\n|               200803 |\n+----------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823377"], "Title": ["PERIOD_DIFF"], "Feature": ["PERIOD_DIFF(p1, p2)\n"], "Description": ["以月份为单位返回两个日期之间的间隔。日期只能包含年月信息，格式只能为 YYYYMM 或 YYMM。"], "Examples": ["obclient> SELECT PERIOD_DIFF(200802, 200703);\n+----------------------------+\n| PERIOD_DIFF(200802,200703) |\n+----------------------------+\n|                         11 |\n+----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823410"], "Title": ["QUARTER"], "Feature": ["QUARTER(date)\n"], "Description": ["返回指定日期的季度值，取值范围为 [1,4]。"], "Examples": ["obclient> SELECT QUARTER(NOW()), NOW();\n+----------------+---------------------+\n| QUARTER(NOW()) | NOW()               |\n+----------------+---------------------+\n|              3 | 2021-07-12 19:45:01 |\n+----------------+---------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823403"], "Title": ["SECOND"], "Feature": ["SECOND(time)\n"], "Description": ["返回时间 time 中的秒数。"], "Examples": ["obclient> SELECT SECOND('18:20:17');\n+--------------------+\n| SECOND('18:20:17') |\n+--------------------+\n|                 17 |\n+--------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823407"], "Title": ["SEC_TO_TIME"], "Feature": ["SEC_TO_TIME(seconds)\n"], "Description": ["返回 seconds 转换为的时间类型。结果的范围仅限于 TIME 数据类型的范围。"], "Examples": ["obclient> SELECT SEC_TO_TIME(2378);\n+-------------------+\n| SEC_TO_TIME(2378) |\n+-------------------+\n| 00:39:38          |\n+-------------------+\n1 row in set\n\nobclient> SELECT SEC_TO_TIME(2378) + 0;\n+-----------------------+\n| SEC_TO_TIME(2378) + 0 |\n+-----------------------+\n|                  3938 |\n+-----------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823394"], "Title": ["STR_TO_DATE"], "Feature": ["STR_TO_DATE(str, format)\n"], "Description": ["使用 format 将 str 转换为 DATETIME 值、DATE 值或 TIME 值。返回值类型取决于 format 包含日期时间的哪些部分。", "如果 str 或 format 为 NULL，则该函数返回 NULL。", "如果 str 非有效的日期格式，则返回值会根据 sql_mode 的设置有所不同：", "\nsql_mode 包含了 NO_ZERO_IN_DATE：返回 NULL。\nsql_mode 不包含 NO_ZERO_IN_DATE：\n\n如果 str 为 INT 类型，并且 str < 0，则返回 0000-00-00 00:00:00，并提示 Warning。 obclient> SELECT STR_TO_DATE(-100,'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(-100,'%Y-%b-%D %r') |\n+---------------------------------+\n| 0000-00-00 00:00:00             |\n+---------------------------------+\n1 row in set, 1 warning\n\n如果 str 为 INT 类型，并且 0 ≤ str ≤ 69，则返回 1999-11-30 00:00:00 加 str 的年份； obclient> SELECT STR_TO_DATE(0,'%Y-%b-%D %r');\n+------------------------------+\n| STR_TO_DATE(0,'%Y-%b-%D %r') |\n+------------------------------+\n| 1999-11-30 00:00:00          |\n+------------------------------+\n1 row in set\n\n如果 str 为 INT 类型，并且 69 < str ≤ 99，则返回 1969-11-30 00:00:00 加 str - 70 的年份。 obclient> SELECT STR_TO_DATE(88,'%Y-%b-%D %r');\n+-------------------------------+\n| STR_TO_DATE(88,'%Y-%b-%D %r') |\n+-------------------------------+\n| 1987-11-30 00:00:00           |\n+-------------------------------+\n1 row in set\n\n如果 str 为 INT 类型，并且 100 < str ≤ 9999，则返回 0099-11-30 00:00:00 加 str - 100 的年份。 obclient> SELECT STR_TO_DATE(2088,'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(2088,'%Y-%b-%D %r') |\n+---------------------------------+\n| 2087-11-30 00:00:00             |\n+---------------------------------+\n1 row in set\n\n如果 str为 INT 类型，并且 str > 10000，则返回 NULL，并提示 Warning。 obclient> SELECT STR_TO_DATE(10001,'%Y-%b-%D %r');\n+----------------------------------+\n| STR_TO_DATE(10001,'%Y-%b-%D %r') |\n+----------------------------------+\n| NULL                             |\n+----------------------------------+\n1 row in set, 1 warning\n\n如果 str 为字符串，则会将字符串尽可能转换为日期时间，并返回 1999-11-30 00:00:00 加 str 作为类型的日期时间；如果不能转换为日期时间，则返回 NULL。 obclient> SELECT STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r');\n+------------------------------------------------------+\n| STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r') |\n+------------------------------------------------------+\n| NULL                                                 |\n+------------------------------------------------------+\n1 row in set, 1 warning\n\nobclient> SELECT STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', 'a%Y-%b-%D %r');\n+-------------------------------------------------------+\n| STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', 'a%Y-%b-%D %r') |\n+-------------------------------------------------------+\n| 2014-01-01 05:05:05                                   |\n+-------------------------------------------------------+\n1 row in set\n\n如果 str 为其他类型，则返回 NULL，并提示 Warning。 obclient> SELECT STR_TO_DATE(1.6,'%Y-%b-%D %r');\n+--------------------------------+\n| STR_TO_DATE(1.6,'%Y-%b-%D %r') |\n+--------------------------------+\n| NULL                           |\n+--------------------------------+\n1 row in set, 1 warning\n\nobclient> SELECT STR_TO_DATE(pi(),'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(pi(),'%Y-%b-%D %r') |\n+---------------------------------+\n| NULL                            |\n+---------------------------------+\n1 row in set, 1 warning\n\n\n", "sql_mode 包含了 NO_ZERO_IN_DATE：返回 NULL。", "sql_mode 不包含 NO_ZERO_IN_DATE：", "\n如果 str 为 INT 类型，并且 str < 0，则返回 0000-00-00 00:00:00，并提示 Warning。 obclient> SELECT STR_TO_DATE(-100,'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(-100,'%Y-%b-%D %r') |\n+---------------------------------+\n| 0000-00-00 00:00:00             |\n+---------------------------------+\n1 row in set, 1 warning\n\n如果 str 为 INT 类型，并且 0 ≤ str ≤ 69，则返回 1999-11-30 00:00:00 加 str 的年份； obclient> SELECT STR_TO_DATE(0,'%Y-%b-%D %r');\n+------------------------------+\n| STR_TO_DATE(0,'%Y-%b-%D %r') |\n+------------------------------+\n| 1999-11-30 00:00:00          |\n+------------------------------+\n1 row in set\n\n如果 str 为 INT 类型，并且 69 < str ≤ 99，则返回 1969-11-30 00:00:00 加 str - 70 的年份。 obclient> SELECT STR_TO_DATE(88,'%Y-%b-%D %r');\n+-------------------------------+\n| STR_TO_DATE(88,'%Y-%b-%D %r') |\n+-------------------------------+\n| 1987-11-30 00:00:00           |\n+-------------------------------+\n1 row in set\n\n如果 str 为 INT 类型，并且 100 < str ≤ 9999，则返回 0099-11-30 00:00:00 加 str - 100 的年份。 obclient> SELECT STR_TO_DATE(2088,'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(2088,'%Y-%b-%D %r') |\n+---------------------------------+\n| 2087-11-30 00:00:00             |\n+---------------------------------+\n1 row in set\n\n如果 str为 INT 类型，并且 str > 10000，则返回 NULL，并提示 Warning。 obclient> SELECT STR_TO_DATE(10001,'%Y-%b-%D %r');\n+----------------------------------+\n| STR_TO_DATE(10001,'%Y-%b-%D %r') |\n+----------------------------------+\n| NULL                             |\n+----------------------------------+\n1 row in set, 1 warning\n\n如果 str 为字符串，则会将字符串尽可能转换为日期时间，并返回 1999-11-30 00:00:00 加 str 作为类型的日期时间；如果不能转换为日期时间，则返回 NULL。 obclient> SELECT STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r');\n+------------------------------------------------------+\n| STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r') |\n+------------------------------------------------------+\n| NULL                                                 |\n+------------------------------------------------------+\n1 row in set, 1 warning\n\nobclient> SELECT STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', 'a%Y-%b-%D %r');\n+-------------------------------------------------------+\n| STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', 'a%Y-%b-%D %r') |\n+-------------------------------------------------------+\n| 2014-01-01 05:05:05                                   |\n+-------------------------------------------------------+\n1 row in set\n\n如果 str 为其他类型，则返回 NULL，并提示 Warning。 obclient> SELECT STR_TO_DATE(1.6,'%Y-%b-%D %r');\n+--------------------------------+\n| STR_TO_DATE(1.6,'%Y-%b-%D %r') |\n+--------------------------------+\n| NULL                           |\n+--------------------------------+\n1 row in set, 1 warning\n\nobclient> SELECT STR_TO_DATE(pi(),'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(pi(),'%Y-%b-%D %r') |\n+---------------------------------+\n| NULL                            |\n+---------------------------------+\n1 row in set, 1 warning\n\n", "如果 str 为 INT 类型，并且 str < 0，则返回 0000-00-00 00:00:00，并提示 Warning。", "obclient> SELECT STR_TO_DATE(-100,'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(-100,'%Y-%b-%D %r') |\n+---------------------------------+\n| 0000-00-00 00:00:00             |\n+---------------------------------+\n1 row in set, 1 warning\n", "如果 str 为 INT 类型，并且 0 ≤ str ≤ 69，则返回 1999-11-30 00:00:00 加 str 的年份；", "obclient> SELECT STR_TO_DATE(0,'%Y-%b-%D %r');\n+------------------------------+\n| STR_TO_DATE(0,'%Y-%b-%D %r') |\n+------------------------------+\n| 1999-11-30 00:00:00          |\n+------------------------------+\n1 row in set\n", "如果 str 为 INT 类型，并且 69 < str ≤ 99，则返回 1969-11-30 00:00:00 加 str - 70 的年份。", "obclient> SELECT STR_TO_DATE(88,'%Y-%b-%D %r');\n+-------------------------------+\n| STR_TO_DATE(88,'%Y-%b-%D %r') |\n+-------------------------------+\n| 1987-11-30 00:00:00           |\n+-------------------------------+\n1 row in set\n", "如果 str 为 INT 类型，并且 100 < str ≤ 9999，则返回 0099-11-30 00:00:00 加 str - 100 的年份。", "obclient> SELECT STR_TO_DATE(2088,'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(2088,'%Y-%b-%D %r') |\n+---------------------------------+\n| 2087-11-30 00:00:00             |\n+---------------------------------+\n1 row in set\n", "如果 str为 INT 类型，并且 str > 10000，则返回 NULL，并提示 Warning。", "obclient> SELECT STR_TO_DATE(10001,'%Y-%b-%D %r');\n+----------------------------------+\n| STR_TO_DATE(10001,'%Y-%b-%D %r') |\n+----------------------------------+\n| NULL                             |\n+----------------------------------+\n1 row in set, 1 warning\n", "如果 str 为字符串，则会将字符串尽可能转换为日期时间，并返回 1999-11-30 00:00:00 加 str 作为类型的日期时间；如果不能转换为日期时间，则返回 NULL。", "obclient> SELECT STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r');\n+------------------------------------------------------+\n| STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r') |\n+------------------------------------------------------+\n| NULL                                                 |\n+------------------------------------------------------+\n1 row in set, 1 warning\n\nobclient> SELECT STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', 'a%Y-%b-%D %r');\n+-------------------------------------------------------+\n| STR_TO_DATE('a2014-Jan-1st 5:5:5 pm', 'a%Y-%b-%D %r') |\n+-------------------------------------------------------+\n| 2014-01-01 05:05:05                                   |\n+-------------------------------------------------------+\n1 row in set\n", "如果 str 为其他类型，则返回 NULL，并提示 Warning。", "obclient> SELECT STR_TO_DATE(1.6,'%Y-%b-%D %r');\n+--------------------------------+\n| STR_TO_DATE(1.6,'%Y-%b-%D %r') |\n+--------------------------------+\n| NULL                           |\n+--------------------------------+\n1 row in set, 1 warning\n\nobclient> SELECT STR_TO_DATE(pi(),'%Y-%b-%D %r');\n+---------------------------------+\n| STR_TO_DATE(pi(),'%Y-%b-%D %r') |\n+---------------------------------+\n| NULL                            |\n+---------------------------------+\n1 row in set, 1 warning\n", "有关 format 支持的格式，请参见 DATE_FORMAT。"], "Examples": ["obclient> SELECT STR_TO_DATE('2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r');\n+-----------------------------------------------------+\n| STR_TO_DATE('2014-Jan-1st 5:5:5 pm', '%Y-%b-%D %r') |\n+-----------------------------------------------------+\n| 2014-01-01 05:05:05                                 |\n+-----------------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823406"], "Title": ["SUBDATE"], "Feature": ["SUBDATE(date,INTERVAL expr unit)\n\nSUBDATE(expr,days)\n"], "Description": ["当 SUBDATE() 使用第二个参数 INTERVAL 的形式调用时，该函数是 DATE_SUB() 的同义词，用于返回日期时间 date 减去 expr 后的值。", "有关 INTERVAL 和 unit 参数的信息，请参见 DATE_ADD。", "SUBDATE(expr,days) 允许使用 days 的整数值。在这种情况下，它被解释为从日期或日期时间表达式 expr 中减去的天数。"], "Examples": ["obclient> SELECT DATE_SUB('2022-01-02', INTERVAL 31 DAY);\n+-----------------------------------------+\n| DATE_SUB('2022-01-02', INTERVAL 31 DAY) |\n+-----------------------------------------+\n| 2021-12-02                              |\n+-----------------------------------------+\n1 row in set\n\nobclient> SELECT SUBDATE('2022-01-02', INTERVAL 31 DAY);\n+----------------------------------------+\n| SUBDATE('2022-01-02', INTERVAL 31 DAY) |\n+----------------------------------------+\n| 2021-12-02                             |\n+----------------------------------------+\n1 row in set\n\nobclient> SELECT SUBDATE('2022-01-02 12:00:00', 31);\n+------------------------------------+\n| SUBDATE('2022-01-02 12:00:00', 31) |\n+------------------------------------+\n| 2021-12-02 12:00:00                |\n+------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823411"], "Title": ["SUBTIME"], "Feature": ["SUBTIME(expr1,expr2)\n"], "Description": ["返回时间或时间日期表达式 expr1 与时间表达式 expr2 的差值，返回值的格式与 expr1 保持一致。"], "Examples": ["obclient> SELECT SUBTIME('2021-07-14 19:12:59.999999','1 1:1:1.000002');\n+--------------------------------------------------------+\n| SUBTIME('2021-07-14 19:12:59.999999','1 1:1:1.000002') |\n+--------------------------------------------------------+\n| 2021-07-13 18:11:58.999997                             |\n+--------------------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823417"], "Title": ["SYSDATE"], "Feature": ["SYSDATE(fsp)\n"], "Description": ["返回当前日期和时间，格式为 %Y-%m-%d %H.%i.%s。", "fsp 表示秒精度，即返回值的小数位秒部分包含多少位数字。有效值为 0 到 6 的整数，默认值为 0。"], "Examples": ["obclient> SELECT SYSDATE();\n+---------------------+\n| SYSDATE()           |\n+---------------------+\n| 2021-07-15 14:10:06 |\n+---------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823429"], "Title": ["TIME"], "Feature": ["TIME(datetime)\n"], "Description": ["以 TIME 类型返回 datetime 的时间信息。"], "Examples": ["obclient> SELECT TIME('2003-12-31 01:02:03');\n+-----------------------------+\n| TIME('2003-12-31 01:02:03') |\n+-----------------------------+\n| 01:02:03.000000             |\n+-----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823376"], "Title": ["TIMEDIFF"], "Feature": ["TIMEDIFF(date1, date2)\n"], "Description": ["以 TIME 类型返回两个日期时间的时间间隔。"], "Examples": ["obclient> SELECT\n     TIMEDIFF('2015-06-06 12:12:12', '2014-06-05 11:11:11'),\n     TIMEDIFF('2015-06-06 12:12:12', '2015-06-05 11:11:11')\n     \\G\n*************************** 1. row ***************************\nTIMEDIFF('2015-06-06 12:12:12', '2014-06-05 11:11:11'): 838:59:59\nTIMEDIFF('2015-06-06 12:12:12', '2015-06-05 11:11:11'): 25:01:01\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823372"], "Title": ["TIMESTAMP"], "Feature": ["TIMESTAMP(expr)\nTIMESTAMP(expr1,expr2)\n"], "Description": ["第一种声明返回日期时间表达式 expr 的日期时间值。", "第二种声明返回日期时间表达式 expr1 与时间表达式 expr2 相加，返回日期时间表达式，如果 expr2 中包含日期，则也只取其中的时间值。", "如果任一参数为 NULL，则该函数返回 NULL。"], "Examples": ["obclient> SELECT TIMESTAMP('2020-12-31');\n+----------------------------+\n| TIMESTAMP('2020-12-31')    |\n+----------------------------+\n| 2020-12-31 00:00:00.000000 |\n+----------------------------+\n1 row in set\n\nobclient> SELECT TIMESTAMP('2020-12-31 12:00:00','12:00:00');\n+---------------------------------------------+\n| TIMESTAMP('2020-12-31 12:00:00','12:00:00') |\n+---------------------------------------------+\n| 2021-01-01 00:00:00.000000                  |\n+---------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823420"], "Title": ["TIMESTAMPADD"], "Feature": ["TIMESTAMPADD(unit, interval_expr, date)\n"], "Description": ["日期时间的算术计算。", "该函数的作用与 DATE_ADD 相同，但 unit 只能是以下单位：", "MICROSECOND", "SECOND", "MINUTE", "HOUR", "DAY", "WEEK", "MONTH", "QUARTER", "YEAR"], "Examples": ["obclient> SELECT\n     TIMESTAMPADD(DAY, -5, '2010-01-01 00:00:00'),\n     DATE_ADD('2010-01-01 00:00:00', INTERVAL -5 DAY)\n     \\G\n*************************** 1. row ***************************\n    TIMESTAMPADD(DAY, -5, '2010-01-01 00:00:00'): 2009-12-27 00:00:00\nDATE_ADD('2010-01-01 00:00:00', INTERVAL -5 DAY): 2009-12-27 00:00:00\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823405"], "Title": ["TIMESTAMPDIFF"], "Feature": ["TIMESTAMPDIFF(unit, date1, date2)\n"], "Description": ["以 unit 为单位返回两个日期时间的间隔。unit 只能为 DATE_ADD 中的独立单位。"], "Examples": ["obclient> SELECT\n     TIMESTAMPDIFF(SECOND, NOW(), '2011-01-01 11:11:11'),\n     TIMESTAMPDIFF(DAY, '2011-01-01 11:11:11', NOW())\n     \\G\n*************************** 1. row ***************************\nTIMESTAMPDIFF(SECOND, NOW(), '2011-01-01 11:11:11'): -231677498\n   TIMESTAMPDIFF(DAY, '2011-01-01 11:11:11', NOW()): 2681\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823380"], "Title": ["TIME_FORMAT"], "Feature": ["TIME_FORMAT(time,format)\n"], "Description": ["用法与 DATE_FORMAT 函数类似，但 format 只支持小时、分钟、秒和微秒的格式符。", "如果时间值 time 包含大于 23 的小时部分，%H 和 %k 小时格式说明符生成大于 0..23 的值，其他小时格式说明符生成小时值（模 12）。"], "Examples": ["obclient> SELECT TIME_FORMAT('100:00:00', '%H %k %h %I %l');\n+--------------------------------------------+\n| TIME_FORMAT('100:00:00', '%H %k %h %I %l') |\n+--------------------------------------------+\n| 100 100 04 04 4                            |\n+--------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823402"], "Title": ["TIME_TO_SEC"], "Feature": ["TIME_TO_SEC(time)\n"], "Description": ["将时间类型参数 time 转换为秒。"], "Examples": ["obclient> SELECT TIME_TO_SEC('22:23:00');\n+-------------------------+\n| TIME_TO_SEC('22:23:00') |\n+-------------------------+\n|                   80580 |\n+-------------------------+\n1 row in set\n\nobclient> SELECT TIME_TO_SEC('00:39:38');\n+-------------------------+\n| TIME_TO_SEC('00:39:38') |\n+-------------------------+\n|                    2378 |\n+-------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823413"], "Title": ["TIME_TO_USEC"], "Feature": ["TIME_TO_USEC(date)\n"], "Description": ["将 date 值转换为距离 1970-01-01 00:00:00.000000 的微秒数，并考虑时区信息。", "date 可以表示日期，也可以表示日期时间。"], "Examples": ["obclient> SELECT TIME_TO_USEC('2014-03-25'), TIME_TO_USEC(NOW());\n+----------------------------+---------------------+\n| TIME_TO_USEC('2014-03-25') | TIME_TO_USEC(NOW()) |\n+----------------------------+---------------------+\n|           1395676800000000 |    1525528100000000 |\n+----------------------------+---------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823414"], "Title": ["TO_DAYS"], "Feature": ["TO_DAYS(date)\n"], "Description": ["返回指定 date 值对应的天数。天数指距离 0000-01-01 的天数。"], "Examples": ["obclient> SELECT TO_DAYS('2015-11-04'), TO_DAYS('20151104');\n+-----------------------+---------------------+\n| TO_DAYS('2015-11-04') | TO_DAYS('20151104') |\n+-----------------------+---------------------+\n|                736271 |              736271 |\n+-----------------------+---------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823369"], "Title": ["TO_SECONDS"], "Feature": ["TO_SECONDS(expr)\n"], "Description": ["返回时间或日期时间表达式 expr 自公元零年起的秒数。如果 expr 为 NULL，则返回 NULL。"], "Examples": ["obclient> SELECT TO_SECONDS(950501);\n+--------------------+\n| TO_SECONDS(950501) |\n+--------------------+\n|        62966505600 |\n+--------------------+\n1 row in set\n\nobclient> SELECT TO_SECONDS('2021-07-15');\n+--------------------------+\n| TO_SECONDS('2021-07-15') |\n+--------------------------+\n|              63793526400 |\n+--------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823418"], "Title": ["UNIX_TIMESTAMP"], "Feature": ["UNIX_TIMESTAMP()\nUNIX_TIMESTAMP(date)\n"], "Description": ["不指定 date 参数时，返回当前时间距离 '1970-01-01 00:00:00' 的秒数，需要考虑时区信息。", "指定 date 参数时，返回指定时间距离 '1970-01-01 00:00:00' 的秒数，需要考虑时区信息。"], "Examples": ["obclient> SELECT UNIX_TIMESTAMP(), TIME_TO_USEC(NOW());\n+------------------+---------------------+\n| UNIX_TIMESTAMP() | TIME_TO_USEC(NOW()) |\n+------------------+---------------------+\n|       1525570561 |    1525570561000000 |\n+------------------+---------------------+\n1 row in set\n\nobclient> SELECT UNIX_TIMESTAMP('1997-10-04 22:23:00');\n+---------------------------------------+\n| UNIX_TIMESTAMP('1997-10-04 22:23:00') |\n+---------------------------------------+\n|                             875974980 |\n+---------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823423"], "Title": ["USEC_TO_TIME"], "Feature": ["USEC_TO_TIME(usec)\n"], "Description": ["USEC_TO_TIME 函数用于将微秒数（usec）转换为 TIMESTAMP 类型的值。OceanBase 数据库使用的时区是 UTC（协调世界时）。因此，将微秒数转换为 TIMESTAMP 时，系统会考虑时区信息，并以 UTC 时区为准。", "\n\n\n参数\n说明\n\n\n\n\nusec\n需要转换为 TIMESTAMP 类型值。usec 表示距离 1970-01-01 00:00:00.000000 的微秒数。\n\n\n"], "Examples": ["obclient> SELECT USEC_TO_TIME(1);\n+----------------------------+\n| USEC_TO_TIME(1)            |\n+----------------------------+\n| 1970-01-01 08:00:00.000001 |\n+----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823391"], "Title": ["UTC_DATE"], "Feature": ["UTC_DATE([fsp])\n"], "Description": ["将当前 UTC 日期以 %Y-%m-%d 格式返回。", "fsp 参数用于指定日期精度，有效值为 0 到 6 之间的整数。"], "Examples": ["obclient> SELECT UTC_DATE(), UTC_DATE() + 0, UTC_DATE() + 6;\n+------------+----------------+----------------+\n| UTC_DATE() | UTC_DATE() + 0 | UTC_DATE() + 6 |\n+------------+----------------+----------------+\n| 2021-07-14 |       20210714 |       20210720 |\n+------------+----------------+----------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823393"], "Title": ["UTC_TIME"], "Feature": ["UTC_TIME([fsp])\n"], "Description": ["将当前 UTC 时间以 %H:%i:%s 格式返回。", "fsp 参数用于指定分秒精度，有效值为 0 到 6 之间的整数。"], "Examples": ["obclient> SELECT UTC_TIME(), UTC_TIME() + 0, UTC_TIME() + 6;\n+------------+----------------+----------------+\n| UTC_TIME() | UTC_TIME() + 0 | UTC_TIME() + 6 |\n+------------+----------------+----------------+\n| 13:07:35   |         130735 |         130741 |\n+------------+----------------+----------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823390"], "Title": ["UTC_TIMESTAMP"], "Feature": ["UTC_TIMESTAMP([fsp])\n"], "Description": ["将当前 UTC 时间以 %Y-%m-%d %H:%i:%s 格式返回。", "fsp 参数用于指定分秒精度，有效值为 0 到 6 之间的整数。"], "Examples": ["obclient> SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0, UTC_TIMESTAMP() + 6;\n+---------------------+---------------------+---------------------+\n| UTC_TIMESTAMP()     | UTC_TIMESTAMP() + 0 | UTC_TIMESTAMP() + 6 |\n+---------------------+---------------------+---------------------+\n| 2021-07-13 13:10:28 |      20210713131028 |      20210713131034 |\n+---------------------+---------------------+---------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823387"], "Title": ["WEEK"], "Feature": ["WEEK(date[,mode])\n"], "Description": ["返回日期或日期时间类型 date 所指定的周在一年中的位置。", "mode 参数表示确定周数计算的逻辑，其取值范围与含义如下表所示。", "\n\n\n取值\n周的第一天\n范围\n含义\n\n\n\n\n0\n星期日\n0~53\n第一个星期日的周记为该年的第一周\n\n\n1\n星期一\n0~53\n包含四天以上的周记为该年的第一周\n\n\n2\n星期日\n1~53\n第一个星期日的周记为该年的第一周\n\n\n3\n星期一\n1~53\n包含四天以上的周记为该年的第一周\n\n\n4\n星期日\n0~53\n包含四天以上的周记为该年的第一周\n\n\n5\n星期一\n0~53\n第一个星期一的周记为该年的第一周\n\n\n6\n星期日\n1~53\n包含四天以上的周记为该年的第一周\n\n\n7\n星期一\n1~53\n第一个星期一的周记为该年的第一周\n\n\n", "\n说明\n如果指定的日期是该年的第一天，则该函数可能会返回上一年的最后一周。\n"], "Examples": ["obclient> SELECT WEEK('2021-01-01',0);\n+----------------------+\n| WEEK('2021-01-01',0) |\n+----------------------+\n|                    0 |\n+----------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823399"], "Title": ["WEEKDAY"], "Feature": ["WEEKDAY(date)\n"], "Description": ["返回日期或日期时间类型 date 在一周中的位置。"], "Examples": ["obclient> SELECT WEEKDAY('2021-07-16 00:00:00');\n+--------------------------------+\n| WEEKDAY('2020-07-16 00:00:00') |\n+--------------------------------+\n|                              5 |\n+--------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823426"], "Title": ["WEEKOFYEAR"], "Feature": ["WEEKOFYEAR(date)\n"], "Description": ["返回日期或时间日期类型 date 所指定的周在一年中的位置。"], "Examples": ["obclient> SELECT WEEKOFYEAR('2020-07-16');\n+--------------------------+\n| WEEKOFYEAR('2020-07-16') |\n+--------------------------+\n|                       29 |\n+--------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823421"], "Title": ["YEAR"], "Feature": ["YEAR(date)\n"], "Description": ["返回 date 值的年份信息。"], "Examples": ["obclient> SELECT YEAR('1987-01-01');\n+--------------------+\n| YEAR('1987-01-01') |\n+--------------------+\n|               1987 |\n+--------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823379"], "Title": ["YEARWEEK"], "Feature": ["YEARWEEK(date[,mode])\n"], "Description": ["返回日期或日期时间类型 date 的年份，以及周在一年中的位置。", "mode 参数表示确定周数计算的逻辑，其取值范围与含义如下表所示。", "\n\n\n取值\n周的第一天\n范围\n含义\n\n\n\n\n0\n星期日\n0~53\n第一个星期日的周记为该年的第一周\n\n\n1\n星期一\n0~53\n包含四天以上的周记为该年的第一周\n\n\n2\n星期日\n1~53\n第一个星期日的周记为该年的第一周\n\n\n3\n星期一\n1~53\n包含四天以上的周记为该年的第一周\n\n\n4\n星期日\n0~53\n包含四天以上的周记为该年的第一周\n\n\n5\n星期一\n0~53\n第一个星期一的周记为该年的第一周\n\n\n6\n星期日\n1~53\n包含四天以上的周记为该年的第一周\n\n\n7\n星期一\n1~53\n第一个星期一的周记为该年的第一周\n\n\n", "\n说明\n如果指定的日期是该年的第一天，则该函数可能会返回上一年的最后一周。\n"], "Examples": ["obclient> SELECT YEARWEEK('2021-01-01');\n+------------------------+\n| YEARWEEK('2021-01-01') |\n+------------------------+\n|                 202052 |\n+------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823412"], "Title": ["ADDDATE"], "Feature": ["ADDDATE(date,INTERVAL expr unit)\nADDDATE(expr,days)\n"], "Description": ["该函数的第一种声明是 DATE_ADD() 的同义词。有关 unit 参数的详细信息，请参见 DATE_ADD。", "该函数的第二种声明用于将 days 指定的天数与 expr 指定的日期相加。"], "Examples": ["obclient> SELECT ADDDATE('2021-08-01', INTERVAL 31 DAY);\n+----------------------------------------+\n| ADDDATE('2021-08-01', INTERVAL 31 DAY) |\n+----------------------------------------+\n| 2021-09-01                             |\n+----------------------------------------+\n1 row in set\n\nobclient> SELECT ADDDATE('2021-08-01', 31);\n+---------------------------+\n| ADDDATE('2021-08-01', 31) |\n+---------------------------+\n| 2021-09-01                |\n+---------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823392"], "Title": ["CONVERT_TZ"], "Feature": ["CONVERT_TZ(dt,from_tz,to_tz)\n"], "Description": ["将日期时间值 dt 从 from_tz 给定的时区转换为 to_tz 给定的时区，并返回结果值。如果 dt 参数无效，则返回 NULL。", "如果该值在从 from_tz 转换为 UTC 时超出 TIMESTAMP 类型的支持范围，则不会发生转换。有关 TIMESTAMP 类型范围详细信息，请参见 DATE、DATETIME 和 TIMESTAMP 类型。"], "Examples": ["obclient> SELECT CONVERT_TZ('2014-01-01 12:00:00','+00:00','+8:00');\n+----------------------------------------------------+\n| CONVERT_TZ('2014-01-01 12:00:00','+00:00','+8:00') |\n+----------------------------------------------------+\n| 2014-01-01 20:00:00                                |\n+----------------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823373"], "Title": ["ADDTIME"], "Feature": ["ADDTIME(expr1,expr2)\n"], "Description": ["expr1 是时间或日期时间表达式，而 expr2 是时间表达式。ADDTIME() 将 expr2 添加到 expr1 并返回结果。"], "Examples": ["obclient> SELECT ADDTIME('2022-09-08 23:59:59.999999', '1 1:1:1.000002');\n+---------------------------------------------------------+\n| ADDTIME('2022-09-08 23:59:59.999999', '1 1:1:1.000002') |\n+---------------------------------------------------------+\n| 2022-09-10 01:01:01.000001                              |\n+---------------------------------------------------------+\n1 row in set\n\nobclient> SELECT ADDTIME('01:10:01.999999', '02:01:10.999998');\n+-----------------------------------------------+\n| ADDTIME('01:10:01.999999', '02:01:10.999998') |\n+-----------------------------------------------+\n| 03:11:12.999997                               |\n+-----------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823370"], "Title": ["CURDATE"], "Feature": ["CURDATE()\n"], "Description": ["返回当前日期，不含时间部分。"], "Examples": ["obclient> SELECT CURDATE();\n+------------+\n| CURDATE()  |\n+------------+\n| 2018-05-05 |\n+------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823419"], "Title": ["CURRENT_DATE"], "Feature": ["CURRENT_DATE()\nCURRENT_DATE\n"], "Description": ["返回当前日期，不含时间部分。该函数是 CURDATE 的别名。"], "Examples": ["obclient> SELECT CURRENT_DATE;\n+--------------+\n| CURRENT_DATE |\n+--------------+\n| 2021-08-23   |\n+--------------+\n1 row in set\n\nobclient> SELECT CURRENT_DATE();\n+----------------+\n| CURRENT_DATE() |\n+----------------+\n| 2021-08-23     |\n+----------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823375"], "Title": ["CURRENT_TIME"], "Feature": ["CURRENT_TIME([scale])\n"], "Description": ["返回当前时间，不含日期部分。", "scale 表示微秒部分精度，有效值为 0 到 6 的整数，默认值为 0。"], "Examples": ["obclient> SELECT CURRENT_TIME(6);\n+-----------------+\n| CURRENT_TIME(6) |\n+-----------------+\n| 11:11:45.215311 |\n+-----------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823386"], "Title": ["CURRENT_TIMESTAMP"], "Feature": ["CURRENT_TIMESTAMP([scale])\n"], "Description": ["返回当前时区的日期时间。", "scale 表示微秒部分精度，有效值为 0 到 6 的整数，默认值为 0。"], "Examples": ["obclient> SELECT CURRENT_TIMESTAMP(6);\n+----------------------------+\n| CURRENT_TIMESTAMP(6)       |\n+----------------------------+\n| 2018-05-05 11:35:39.177764 |\n+----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823395"], "Title": ["CURTIME"], "Feature": ["CURTIME(scale)\n"], "Description": ["返回当前时间，不含日期部分。该函数是 CURRENT_TIME() 的别名。", "scale 表示微秒部分精度，有效值为 0 到 6 的整数，默认值为 0。"], "Examples": ["obclient> SELECT CURTIME(0);\n+------------+\n| CURTIME(0) |\n+------------+\n| 16:17:11   |\n+------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823422"], "Title": ["DATE"], "Feature": ["DATE(expr)\n"], "Description": ["返回时间或时间日期表达式 expr 的日期。"], "Examples": ["obclient> SELECT DATE('2021-07-14 19:12:03');\n+-----------------------------+\n| DATE('2021-07-14 19:12:03') |\n+-----------------------------+\n| 2021-07-14                  |\n+-----------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823388"], "Title": ["DATEDIFF"], "Feature": ["DATEDIFF(date1, date2)\n"], "Description": ["返回 date1 和 date2 之间的天数。", "计算中只用到参数的日期部分，忽略时间部分。"], "Examples": ["obclient> SELECT DATEDIFF('2015-06-19','1994-12-17');\n+-------------------------------------+\n| DATEDIFF('2015-06-19','1994-12-17') |\n+-------------------------------------+\n|                                7489 |\n+-------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823371"], "Title": ["DATE_ADD"], "Feature": ["DATE_ADD(date, INTERVAL expr unit)\n"], "Description": ["DATE_ADD 函数用于向指定日期添加一段时间，并返回计算结果。", "参数说明如下：", "date 表示日期时间基准，可以是日期类型、时间类型与日期时间类型。", "expr 表示时间间隔，可以为负值。", "unit 表示时间间隔单位。", "以下为所有时间间隔单位列表：", "\n\n\n单位\n类型\n含义\n格式\n\n\n\n\nMICROSECOND\n独立\n微秒\nMICROSECONDS\n\n\nSECOND\n独立\n秒\nSECONDS\n\n\nMINUTE\n独立\n分钟\nMINUTES\n\n\nHOUR\n独立\n小时\nHOURS\n\n\nDAY\n独立\n天\nDAYS\n\n\nWEEK\n独立\n周\nWEEKS\n\n\nMONTH\n独立\n月\nMONTHS\n\n\nQUARTER\n独立\n季度\nQUARTERS\n\n\nYEAR\n独立\n年\nYEARS\n\n\nSECOND_MICROSECOND\n组合\n秒到微秒\n'SECONDS.MICROSECONDS'\n\n\nMINUTE_MICROSECOND\n组合\n分钟到微秒\n'MINUTES:SECONDS.MICROSECONDS'\n\n\nMINUTE_SECOND\n组合\n分钟到秒\n'MINUTES:SECONDS'\n\n\nHOUR_MICROSECOND\n组合\n小时到微秒\n'HOURS:MINUTES:SECONDS.MICROSECONDS'\n\n\nHOUR_SECOND\n组合\n小时到秒\n'HOURS:MINUTES:SECONDS'\n\n\nHOUR_MINUTE\n组合\n小时到分钟\n'HOURS:MINUTES'\n\n\nDAY_SECOND\n组合\n天到秒\n'DAYS HOURS:MINUTES:SECONDS'\n\n\nDAY_MINUTE\n组合\n天到分钟\n'DDAYSD HOURS:MINUTES'\n\n\nDAY_HOUR\n组合\n天到小时\n'DAYS HOURS'\n\n\nYEAR_MONTH\n组合\n年到月\n'YEARS-MONTHS'\n\n\n"], "Examples": ["obclient> SELECT\n     DATE_ADD(NOW(), INTERVAL 5 DAY),\n     DATE_ADD('2021-01-10', INTERVAL 5 MICROSECOND),\n     DATE_ADD('2021-01-10', INTERVAL 5 SECOND),\n     DATE_ADD('2021-01-10', INTERVAL 5 MINUTE),\n     DATE_ADD('2021-01-10', INTERVAL 5 HOUR),\n     DATE_ADD('2021-01-10', INTERVAL 5 DAY),\n     DATE_ADD('2021-01-10', INTERVAL 5 WEEK),\n     DATE_ADD('2021-01-10', INTERVAL 5 MONTH),\n     DATE_ADD('2021-01-10', INTERVAL 5 QUARTER),\n     DATE_ADD('2021-01-10', INTERVAL 5 YEAR),\n     DATE_ADD('2021-01-10', INTERVAL '5.000005' SECOND_MICROSECOND),\n     DATE_ADD('2021-01-10', INTERVAL '05:05.000005' MINUTE_MICROSECOND),\n     DATE_ADD('2021-01-10', INTERVAL '05:05' MINUTE_SECOND),\n     DATE_ADD('2021-01-10', INTERVAL '05:05:05.000005' HOUR_MICROSECOND),\n     DATE_ADD('2021-01-10', INTERVAL '05:05:05' HOUR_SECOND),\n     DATE_ADD('2021-01-10', INTERVAL '05:05' HOUR_MINUTE),\n     DATE_ADD('2021-01-10', INTERVAL '01 05:05:05.000005' DAY_MICROSECOND),\n     DATE_ADD('2021-01-10', INTERVAL '01 05:05:05' DAY_SECOND),\n     DATE_ADD('2021-01-10', INTERVAL '01 05:05' DAY_MINUTE),\n     DATE_ADD('2021-01-10', INTERVAL '01 05' DAY_HOUR),\n     DATE_ADD('2021-01-10', INTERVAL '1-01' YEAR_MONTH)\n     \\G\n*************************** 1. row ***************************\n                                      DATE_ADD(NOW(), INTERVAL 5 DAY): 2021-04-21 16:04:53\n                       DATE_ADD('2014-01-10', INTERVAL 5 MICROSECOND): 2021-01-10 00:00:00.000005\n                            DATE_ADD('2014-01-10', INTERVAL 5 SECOND): 2021-01-10 00:00:05\n                            DATE_ADD('2014-01-10', INTERVAL 5 MINUTE): 2021-01-10 00:05:00\n                              DATE_ADD('2014-01-10', INTERVAL 5 HOUR): 2021-01-10 05:00:00\n                               DATE_ADD('2014-01-10', INTERVAL 5 DAY): 2021-01-15\n                              DATE_ADD('2014-01-10', INTERVAL 5 WEEK): 2021-02-14\n                             DATE_ADD('2014-01-10', INTERVAL 5 MONTH): 2021-06-10\n                           DATE_ADD('2014-01-10', INTERVAL 5 QUARTER): 2021-04-10\n                              DATE_ADD('2014-01-10', INTERVAL 5 YEAR): 2021-01-10\n       DATE_ADD('2014-01-10', INTERVAL '5.000005' SECOND_MICROSECOND): 2021-01-10 00:00:05.000005\n   DATE_ADD('2014-01-10', INTERVAL '05:05.000005' MINUTE_MICROSECOND): 2021-01-10 00:05:05.000005\n               DATE_ADD('2014-01-10', INTERVAL '05:05' MINUTE_SECOND): 2021-01-10 00:05:05\n  DATE_ADD('2014-01-10', INTERVAL '05:05:05.000005' HOUR_MICROSECOND): 2021-01-10 05:05:05.000005\n              DATE_ADD('2014-01-10', INTERVAL '05:05:05' HOUR_SECOND): 2021-01-10 05:05:05\n                 DATE_ADD('2014-01-10', INTERVAL '05:05' HOUR_MINUTE): 2021-01-10 05:05:00\nDATE_ADD('2014-01-10', INTERVAL '01 05:05:05.000005' DAY_MICROSECOND): 2021-01-11 05:05:05.000005\n            DATE_ADD('2014-01-10', INTERVAL '01 05:05:05' DAY_SECOND): 2021-01-11 05:05:05\n               DATE_ADD('2014-01-10', INTERVAL '01 05:05' DAY_MINUTE): 2021-01-11 05:05:00\n                    DATE_ADD('2014-01-10', INTERVAL '01 05' DAY_HOUR): 2021-01-11 05:00:00\n                   DATE_ADD('2014-01-10', INTERVAL '1-01' YEAR_MONTH): 2021-02-10\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823428"], "Title": ["DATE_FORMAT"], "Feature": ["DATE_FORMAT(date, format)\n"], "Description": ["将日期时间以指定格式输出。date 表示日期时间，format 表示输出格式。", "以下为所有输出格式列表：", "\n\n\n格式符\n含义\n格式\n\n\n\n\n%a\n星期的英文缩写。\nSun..Sat\n\n\n%b\n月份的英文缩写。\nJan..Dec\n\n\n%c\n月份的数字形式。\n1..12\n\n\n%D\n日的英文缩写。\n1st..31st\n\n\n%d\n日的数字形式。\n01..31\n\n\n%e\n日的数字形式。\n1.. 31\n\n\n%f\n微秒。\n000000..999999\n\n\n%H\n小时。\n00..23\n\n\n%h\n小时。\n01..12\n\n\n%I\n小时。\n01..12\n\n\n%i\n分钟。\n00..59\n\n\n%j\n一年中的第几天。\n001..366\n\n\n%k\n小时。\n0..23\n\n\n%l\n小时。\n0..12\n\n\n%M\n月份的英文名称。\nJanuary..December\n\n\n%m\n月份的数字形式。\n01..12\n\n\n%p\n上午或下午。\nAM/PM\n\n\n%r\n12 小时制时间。\nhh:mm:ss AM/PM\n\n\n%S\n秒。\n00..59\n\n\n%s\n秒。\n00..59\n\n\n%T\n24 小时制时间。\nhh:mm:ss\n\n\n%U\n一年中的第几周，周日为每周第一天。\n00..53\n\n\n%u\n一年中的第几周，周一为每周第一天。\n00..53\n\n\n%V\n一年中的第几周，周日为每周第一天（和 %X 同时使用）。\n01..53\n\n\n%v\n一年中的第几周，周一为每周第一天（和 %x 同时使用）。\n01..53\n\n\n%W\n星期的英文名称。\nSunday..Saturday\n\n\n%w\n一周中的第几天。\n0=Sunday..6=Saturday\n\n\n%X\n一周所属的年份，周日为每周第一天（和 %V 同时使用）。\n\n\n\n%x\n一周所属的年份，周一为每周第一天（和 %v 同时使用）。\n\n\n\n%Y\n四位年份。\n\n\n\n%y\n两位年份。\n\n\n\n%%\n文字字符，输出一个 %。\n\n\n\n"], "Examples": ["obclient> SELECT\n          DATE_FORMAT('2014-01-01', '%Y-%M-%d'),\n          DATE_FORMAT('2014-01-01', '%X-%V'),\n          DATE_FORMAT('2014-01-01', '%U')\n          \\G\n*************************** 1. row ***************************\nDATE_FORMAT('2014-01-01', '%Y-%M-%d'): 2014-January-01\n   DATE_FORMAT('2014-01-01', '%X-%V'): 2013-52\n      DATE_FORMAT('2014-01-01', '%U'): 00\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823381"], "Title": ["DATE_SUB"], "Feature": ["DATE_SUB(date,INTERVAL expr unit)\n"], "Description": ["返回日期时间 date 减去 expr 后的值。", "date 表示日期时间基准，可以是 DATE 类型、TIME 类型或 DATETIME 类型。", "expr 表示时间间隔，可以为负值。", "unit 表示时间间隔单位。", "以下为所有时间间隔单位列表：", "\n\n\n单位\n类型\n含义\n格式\n\n\n\n\nMICROSECOND\n独立\n微秒\nMICROSECONDS\n\n\nSECOND\n独立\n秒\nSECONDS\n\n\nMINUTE\n独立\n分钟\nMINUTES\n\n\nHOUR\n独立\n小时\nHOURS\n\n\nDAY\n独立\n天\nDAYS\n\n\nWEEK\n独立\n周\nWEEKS\n\n\nMONTH\n独立\n月\nMONTHS\n\n\nQUARTER\n独立\n季度\nQUARTERS\n\n\nYEAR\n独立\n年\nYEARS\n\n\nSECOND_MICROSECOND\n组合\n秒到微秒\n'SECONDS.MICROSECONDS'\n\n\nMINUTE_MICROSECOND\n组合\n分钟到微秒\n'MINUTES:SECONDS.MICROSECONDS'\n\n\nMINUTE_SECOND\n组合\n分钟到秒\n'MINUTES:SECONDS'\n\n\nHOUR_MICROSECOND\n组合\n小时到微秒\n'HOURS:MINUTES:SECONDS.MICROSECONDS'\n\n\nHOUR_SECOND\n组合\n小时到秒\n'HOURS:MINUTES:SECONDS'\n\n\nHOUR_MINUTE\n组合\n小时到分钟\n'HOURS:MINUTES'\n\n\nDAY_SECOND\n组合\n天到秒\n'DAYS HOURS:MINUTES:SECONDS'\n\n\nDAY_MINUTE\n组合\n天到分钟\n'DDAYSD HOURS:MINUTES'\n\n\nDAY_HOUR\n组合\n天到小时\n'DAYS HOURS'\n\n\nYEAR_MONTH\n组合\n年到月\n'YEARS-MONTHS'\n\n\n"], "Examples": ["obclient> SELECT\n     DATE_SUB(NOW(), INTERVAL 5 DAY),\n     DATE_SUB('2014-01-10', INTERVAL 5 MICROSECOND),\n     DATE_SUB('2014-01-10', INTERVAL 5 SECOND),\n     DATE_SUB('2014-01-10', INTERVAL 5 MINUTE),\n     DATE_SUB('2014-01-10', INTERVAL 5 HOUR),\n     DATE_SUB('2014-01-10', INTERVAL 5 DAY),\n     DATE_SUB('2014-01-10', INTERVAL 5 WEEK),\n     DATE_SUB('2014-01-10', INTERVAL 5 MONTH),\n     DATE_SUB('2014-01-10', INTERVAL 5 QUARTER),\n     DATE_SUB('2014-01-10', INTERVAL 5 YEAR),\n     DATE_SUB('2014-01-10', INTERVAL '5.000005' SECOND_MICROSECOND),\n     DATE_SUB('2014-01-10', INTERVAL '05:05.000005' MINUTE_MICROSECOND),\n     DATE_SUB('2014-01-10', INTERVAL '05:05' MINUTE_SECOND),\n     DATE_SUB('2014-01-10', INTERVAL '05:05:05.000005' HOUR_MICROSECOND),\n     DATE_SUB('2014-01-10', INTERVAL '05:05:05' HOUR_SECOND),\n     DATE_SUB('2014-01-10', INTERVAL '05:05' HOUR_MINUTE),\n     DATE_SUB('2014-01-10', INTERVAL '01 05:05:05.000005' DAY_MICROSECOND),\n     DATE_SUB('2014-01-10', INTERVAL '01 05:05:05' DAY_SECOND),\n     DATE_SUB('2014-01-10', INTERVAL '01 05:05' DAY_MINUTE),\n     DATE_SUB('2014-01-10', INTERVAL '01 05' DAY_HOUR),\n     DATE_SUB('2014-01-10', INTERVAL '1-01' YEAR_MONTH)\n     \\G\n*************************** 1. row ***************************\n                                      DATE_SUB(NOW(), INTERVAL 5 DAY): 2021-08-18 14:56:32\n                       DATE_SUB('2014-01-10', INTERVAL 5 MICROSECOND): 2014-01-09 23:59:59.999995\n                            DATE_SUB('2014-01-10', INTERVAL 5 SECOND): 2014-01-09 23:59:55\n                            DATE_SUB('2014-01-10', INTERVAL 5 MINUTE): 2014-01-09 23:55:00\n                              DATE_SUB('2014-01-10', INTERVAL 5 HOUR): 2014-01-09 19:00:00\n                               DATE_SUB('2014-01-10', INTERVAL 5 DAY): 2014-01-05\n                              DATE_SUB('2014-01-10', INTERVAL 5 WEEK): 2013-12-06\n                             DATE_SUB('2014-01-10', INTERVAL 5 MONTH): 2013-08-10\n                           DATE_SUB('2014-01-10', INTERVAL 5 QUARTER): 2012-10-10\n                              DATE_SUB('2014-01-10', INTERVAL 5 YEAR): 2009-01-10\n       DATE_SUB('2014-01-10', INTERVAL '5.000005' SECOND_MICROSECOND): 2014-01-09 23:59:54.999995\n   DATE_SUB('2014-01-10', INTERVAL '05:05.000005' MINUTE_MICROSECOND): 2014-01-09 23:54:54.999995\n               DATE_SUB('2014-01-10', INTERVAL '05:05' MINUTE_SECOND): 2014-01-09 23:54:55\n  DATE_SUB('2014-01-10', INTERVAL '05:05:05.000005' HOUR_MICROSECOND): 2014-01-09 18:54:54.999995\n              DATE_SUB('2014-01-10', INTERVAL '05:05:05' HOUR_SECOND): 2014-01-09 18:54:55\n                 DATE_SUB('2014-01-10', INTERVAL '05:05' HOUR_MINUTE): 2014-01-09 18:55:00\nDATE_SUB('2014-01-10', INTERVAL '01 05:05:05.000005' DAY_MICROSECOND): 2014-01-08 18:54:54.999995\n            DATE_SUB('2014-01-10', INTERVAL '01 05:05:05' DAY_SECOND): 2014-01-08 18:54:55\n               DATE_SUB('2014-01-10', INTERVAL '01 05:05' DAY_MINUTE): 2014-01-08 18:55:00\n                    DATE_SUB('2014-01-10', INTERVAL '01 05' DAY_HOUR): 2014-01-08 19:00:00\n                   DATE_SUB('2014-01-10', INTERVAL '1-01' YEAR_MONTH): 2012-12-10\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823374"], "Title": ["DAY"], "Feature": ["DAY(date)\n"], "Description": ["返回 date 中月份的日期，范围为 1 到 31。DAY() 是 DAYOFMONTH() 的同义词。"], "Examples": ["obclient> SELECT DAY('2008-12-31');\n+--------------------------+\n| DAY('2008-12-31') |\n+--------------------------+\n|                       31 |\n+--------------------------+\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823383"], "Title": ["DAYNAME"], "Feature": ["DAYNAME(date)\n"], "Description": ["返回日期所对应的工作日名称。"], "Examples": ["obclient> SELECT DAYNAME('2022-09-08');\n+-----------------------+\n| DAYNAME('2022-09-08') |\n+-----------------------+\n| Thursday              |\n+-----------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823378"], "Title": ["DAYOFMONTH"], "Feature": ["DAYOFMONTH(date)\n"], "Description": ["返回日期或时间日期 date 在一个月中的位置。"], "Examples": ["obclient> SELECT DAYOFMONTH('2008-12-31');\n+--------------------------+\n| DAYOFMONTH('2008-12-31') |\n+--------------------------+\n|                       31 |\n+--------------------------+\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823427"], "Title": ["DAYOFWEEK"], "Feature": ["DAYOFWEEK(date)\n"], "Description": ["返回日期或时间日期 date 在一周中的位置，从周日开始计算。"], "Examples": ["obclient> SELECT DAYOFWEEK('2021-07-15');\n+-------------------------+\n| DAYOFWEEK('2021-07-15') |\n+-------------------------+\n|                       5 |\n+-------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823409"], "Title": ["DAYOFYEAR"], "Feature": ["DAYOFYEAR(date)\n"], "Description": ["返回日期或时间日期 date 在一年中的位置。"], "Examples": ["obclient> SELECT DAYOFYEAR('2021-07-15');\n+-------------------------+\n| DAYOFYEAR('2021-07-15') |\n+-------------------------+\n|                     196 |\n+-------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823385"], "Title": ["EXTRACT"], "Feature": ["EXTRACT(unit FROM date)\n"], "Description": ["以整数类型返回 date 的指定部分值。如果指定多个部分，则将所有值按顺序拼接。", "有关参数 unit 的详细信息，请参见 DATE_ADD。当 unit 为 WEEK 时，以周日为每周第一天。"], "Examples": ["obclient> SELECT EXTRACT(WEEK FROM '2013-01-01'),\n     EXTRACT(WEEK FROM '2013-01-06'),\n     EXTRACT(YEAR_MONTH FROM '2012-03-09'),\n     EXTRACT(DAY FROM NOW())\\G;\n*************************** 1. row ***************************\n      EXTRACT(WEEK FROM '2013-01-01'): 0\n      EXTRACT(WEEK FROM '2013-01-06'): 1\nEXTRACT(YEAR_MONTH FROM '2012-03-09'): 201203\n              EXTRACT(DAY FROM NOW()): 16\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823401"], "Title": ["FROM_DAYS"], "Feature": ["FROM_DAYS(N)\n"], "Description": ["返回指定天数 N 对应的 DATE 值。天数指距离 0000-01-01 的天数。"], "Examples": ["obclient> SELECT FROM_DAYS(736271), FROM_DAYS(700000);\n+-------------------+-------------------+\n| FROM_DAYS(736271) | FROM_DAYS(700000) |\n+-------------------+-------------------+\n| 2015-11-04        | 1916-07-15        |\n+-------------------+-------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823425"], "Title": ["FROM_UNIXTIME"], "Feature": ["FROM_UNIXTIME(unix_timestamp)\nFROM_UNIXTIME(unix_timestamp, format)\n"], "Description": ["FROM_UNIXTIME() 的返回值遵循如下规则：", "不指定 format 参数时，返回 DATETIME 类型值，不考虑时区。", "指定 format 参数时，返回指定格式的日期时间字符串。", "unix_timestamp 指 UNIX 时间戳，即距离 1970-01-01 00:00:00 的秒数。", "有关 format 支持的格式的详细信息，请参见 DATE_FORMAT。"], "Examples": ["obclient> SELECT FROM_UNIXTIME(UNIX_TIMESTAMP(), '%Y %D %M %h:%i:%s %x');\n+---------------------------------------------------------+\n| FROM_UNIXTIME(UNIX_TIMESTAMP(), '%Y %D %M %h:%i:%s %x') |\n+---------------------------------------------------------+\n| 2018 5th May 08:41:26 2018                              |\n+---------------------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823382"], "Title": ["GET_FORMAT"], "Feature": ["GET_FORMAT({DATE | TIME | DATETIME | TIMESTAMP}, {'EUR' | 'USA' | 'JIS' | 'ISO' | 'INTERNAL'})\n"], "Description": ["该函数返回指定格式的字符串，可以与 DATE_FORMAT 或 STR_TO_DATE 函数一起使用。根据第一个参数和第二个参数不同取值的组合，可以产生如下表所示的字符串格式（结果中使用的格式符说明请参考 DATE_FORMAT 函数）。", "\n\n\n函数调用\n结果\n\n\n\n\nGET_FORMAT(DATE,'USA')\n'%m.%d.%Y'\n\n\nGET_FORMAT(DATE,'JIS')\n'%Y-%m-%d'\n\n\nGET_FORMAT(DATE,'ISO')\n'%Y-%m-%d'\n\n\nGET_FORMAT(DATE,'EUR')\n'%d.%m.%Y'\n\n\nGET_FORMAT(DATE,'INTERNAL')\n'%Y%m%d'\n\n\nGET_FORMAT(DATETIME,'USA')\n'%Y-%m-%d %H.%i.%s'\n\n\nGET_FORMAT(DATETIME,'JIS')\n'%Y-%m-%d %H:%i:%s'\n\n\nGET_FORMAT(DATETIME,'ISO')\n'%Y-%m-%d %H:%i:%s'\n\n\nGET_FORMAT(DATETIME,'EUR')\n'%Y-%m-%d %H.%i.%s'\n\n\nGET_FORMAT(DATETIME,'INTERNAL')\n'%Y%m%d%H%i%s'\n\n\nGET_FORMAT(TIME,'USA')\n'%h:%i:%s %p'\n\n\nGET_FORMAT(TIME,'JIS')\n'%H:%i:%s'\n\n\nGET_FORMAT(TIME,'ISO')\n'%H:%i:%s'\n\n\nGET_FORMAT(TIME,'EUR')\n'%H.%i.%s'\n\n\nGET_FORMAT(TIME,'INTERNAL')\n'%H%i%s'\n\n\nGET_FORMAT(TIMESTAMP,'USA')\n'%Y-%m-%d %H.%i.%s'\n\n\nGET_FORMAT(TIMESTAMP,'JIS')\n'%Y-%m-%d %H:%i:%s'\n\n\nGET_FORMAT(TIMESTAMP,'ISO')\n'%Y-%m-%d %H:%i:%s'\n\n\nGET_FORMAT(TIMESTAMP,'EUR')\n'%Y-%m-%d %H.%i.%s'\n\n\nGET_FORMAT(TIMESTAMP,'INTERNAL')\n'%Y%m%d%H%i%s'\n\n\n"], "Examples": ["obclient> SELECT DATE_FORMAT('2003-10-03',GET_FORMAT(DATE,'EUR'));\n+--------------------------------------------------+\n| DATE_FORMAT('2003-10-03',GET_FORMAT(DATE,'EUR')) |\n+--------------------------------------------------+\n| 03.10.2003                                       |\n+--------------------------------------------------+\n1 row in set\n\nobclient> SELECT STR_TO_DATE('10.31.2003',GET_FORMAT(DATE,'USA'));\n+--------------------------------------------------+\n| STR_TO_DATE('10.31.2003',GET_FORMAT(DATE,'USA')) |\n+--------------------------------------------------+\n| 2003-10-31 00:00:00.000000                       |\n+--------------------------------------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823404"], "Title": ["HOUR"], "Feature": ["HOUR(time)\n"], "Description": ["返回时间类型 time 的小时部分的数值。"], "Examples": ["obclient> SELECT HOUR('10:05:03');\n+------------------+\n| HOUR('10:05:03') |\n+------------------+\n|               10 |\n+------------------+\n1 row in set\n\nobclient> SELECT HOUR('272:59:59');\n+-------------------+\n| HOUR('272:59:59') |\n+-------------------+\n|               272 |\n+-------------------+\n1 row in set\n"], "Category": ["Date and Time Functions"]}
