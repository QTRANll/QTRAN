{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822991"], "Title": ["MD5"], "Feature": ["MD5(str)\n"], "Description": ["返回字符串的 MD5 128 位校验和。", "返回值为 32 位十六进制数字组成的字符串，如果 str 为 NULL 则返回 NULL。"], "Examples": ["obclient> SELECT MD5(1);\n+----------------------------------+\n| MD5(1)                           |\n+----------------------------------+\n| c4ca4238a0b923820dcc509a6f75849b |\n+----------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822995"], "Title": ["RANDOM_BYTES"], "Feature": ["RANDOM_BYTES(len)\n"], "Description": ["返回 len 字节长度的随机二进制字符串，长度 len 的合法取值为 [1~1024]。"], "Examples": ["obclient [test]> select RANDOM_BYTES(2);\n+-----------------+\n| RANDOM_BYTES(2) |\n+-----------------+\n| H              |\n+-----------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822997"], "Title": ["SHA"], "Feature": ["SHA(str)\n"], "Description": ["计算并返回给定字符串的 SHA-1 160 位校验和，该值以 40 个十六进制数字的字符串形式返回。等效于 SHA1() 函数。"], "Examples": ["obclient [test]> SELECT SHA('OB');\n+------------------------------------------+\n| SHA('OB')                                |\n+------------------------------------------+\n| 29a6de2fd8618f31afb281a608c57995b7eb105d |\n+------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823000"], "Title": ["SHA1"], "Feature": ["SHA1(str)\n"], "Description": ["计算并返回给定字符串的 SHA-1 160 位校验和，该值以 40 个十六进制数字的字符串形式返回。等效于 SHA() 函数。"], "Examples": ["obclient [test]> SELECT SHA1('OB');\n+------------------------------------------+\n| SHA1('OB')                               |\n+------------------------------------------+\n| 29a6de2fd8618f31afb281a608c57995b7eb105d |\n+------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822989"], "Title": ["SHA2"], "Feature": ["SHA2(str,len)\n"], "Description": ["函数计算并返回给定字符串的 SHA-2 摘要，包括：SHA-224、SHA-256、SHA-384 和 SHA-512 算法。str 是要散列的明文字符串，len 指示结果的所需位长度，其值必须为 224、256、384、512 或 0（相当于 256）。"], "Examples": ["obclient [test]> SELECT SHA2('OB',224);\n+----------------------------------------------------------+\n| SHA2('OB',224)                                           |\n+----------------------------------------------------------+\n| 00ac28313083c3a30fa0c671f01829ff0fd3253938d0c0225c4c670e |\n+----------------------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822993"], "Title": ["UNCOMPRESS"], "Feature": ["UNCOMPRESS(str)\n"], "Description": ["解压缩由 COMPRESS() 函数压缩的字符串。"], "Examples": ["obclient [test]> SELECT UNCOMPRESS(COMPRESS('abc'));\n+-----------------------------+\n| UNCOMPRESS(COMPRESS('abc')) |\n+-----------------------------+\n| abc                         |\n+-----------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822998"], "Title": ["UNCOMPRESSED_LENGTH"], "Feature": ["UNCOMPRESSED_LENGTH(str)\n"], "Description": ["返回压缩字符串在 COMPRESS() 函数压缩前的长度。"], "Examples": ["obclient [test]> SELECT UNCOMPRESSED_LENGTH(COMPRESS('abc'));\n+--------------------------------------+\n| UNCOMPRESSED_LENGTH(COMPRESS('abc')) |\n+--------------------------------------+\n|                                    3 |\n+--------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822986"], "Title": ["VALIDATE_PASSWORD_STRENGTH"], "Feature": ["VALIDATE_PASSWORD_STRENGTH(str)\n"], "Description": ["对指定的密码字符串，返回一个整数以指示密码的强度。返回值范围从 0（弱）到 100（强）。密码评估涉及的系统变量，可通过 SHOW VARIABLES LIKE 'validate_password%'; 进行查看。"], "Examples": ["obclient [test]> SELECT VALIDATE_PASSWORD_STRENGTH('ob$_@123');\n+----------------------------------------------+\n| VALIDATE_PASSWORD_STRENGTH('ob$_@123') |\n+----------------------------------------------+\n|                                          100 |\n+----------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823001"], "Title": ["COMPRESS"], "Feature": ["COMPRESS(str)\n"], "Description": ["压缩字符串并将结果作为二进制字符串返回。可以使用 UNCOMPRESS 函数对结果进行解压。"], "Examples": ["obclient> SELECT COMPRESS('abc');\n+-----------------+\n| COMPRESS('abc') |\n+-----------------+\n|    x?KLJ M'  |\n+-----------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822988"], "Title": ["AES_DECRYPT"], "Feature": ["AES_DECRYPT(crypt_str,key_str[,init_vector])\n"], "Description": ["根据密钥 key_str 返回密文 crypt_str 进行 AES 解密的明文。", "有关 init_vector 参数的详细信息，请参见 AES_ENCRYPT。"], "Examples": ["obclient> SELECT AES_DECRYPT(AES_ENCRYPT('oceanbase',UNHEX('F3229A0B371ED2D9441B830D21A390C3')),UNHEX('F3229A0B371ED2D9441B830D21A390C3'));\n+---------------------------------------------------------------------------------------------------------------------------+\n| AES_DECRYPT(AES_ENCRYPT('oceanbase',UNHEX('F3229A0B371ED2D9441B830D21A390C3')),UNHEX('F3229A0B371ED2D9441B830D21A390C3')) |\n+---------------------------------------------------------------------------------------------------------------------------+\n| oceanbase                                                                                                                 |\n+---------------------------------------------------------------------------------------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822999"], "Title": ["AES_ENCRYPT"], "Feature": ["AES_ENCRYPT(str,key_str[,init_vector])\n"], "Description": ["使用密钥字符串 key_str 对字符串 str 进行加密并返回加密后的二进制字符串。str 没有长度限制，该函数会将 str 自动填充至加密块的整数倍。密文长度的计算公式为：", "16 * (trunc(string_length / 16) + 1)\n", "如果任一函数参数为 NULL，则该函数返回 NULL。", "AES_ENCRYPT()使用官方 AES（Advanced Encryption Standard）算法实现数据的加密。AES 标准允许使用各种密钥长度，默认为 128 位。也可以使用 196 或 256 位的密钥长度。密钥长度越长，安全性越高，但加密速度降低。 AES_ENCRYPT() 与 AES_DECRYPT() 函数可通过初始化向量控制块加密模式：", "block_encryption_mode 系统变量用于控制基于块的加密算法的模式。默认值为 aes-128-ecb，表示使用 128 位密钥长度和 ECB 模式进行加密。", "init_vector 参数表示初始化向量：", "\n当加密模式需要设置 init_vector 参数时，其长度必须是 16 字节及以上（超过 16 的字节将被忽略）。如果缺少 init_vector，则会发生错误。\n当加密模式不需要设置 init_vector 参数时，则该参数会被忽略。\n", "对于需要初始化向量的加密模式，加密和解密必须使用相同的向量。", "obclient> SET block_encryption_mode = 'aes-256-cbc';\nobclient> SET @key_str ='My secret passphrase';\nobclient> SET @init_vector = '1111111111111111';\nobclient> SET @crypt_str = AES_ENCRYPT('text',@key_str,@init_vector);\nobclient> SELECT AES_DECRYPT(@crypt_str,@key_str,@init_vector);\n+-----------------------------------------------+\n| AES_DECRYPT(@crypt_str,@key_str,@init_vector) |\n+-----------------------------------------------+\n| text                                          |\n+-----------------------------------------------+\n1 row in set\n", "下表列出了块加密模式、支持的 SSL 库以及是否需要初始化向量参数的详细信息。", "\n\n\n块加密模式\n支持的 SSL 库\n是否需要初始化向量\n\n\n\n\nECB\nOpenSSL\n否\n\n\nCBC\nOpenSSL\n是\n\n\nCFB1\nOpenSSL\n是\n\n\nCFB8\nOpenSSL\n是\n\n\nCFB128\nOpenSSL\n是\n\n\nOFB\nOpenSSL\n是\n\n\n", "当加密模式需要设置 init_vector 参数时，其长度必须是 16 字节及以上（超过 16 的字节将被忽略）。如果缺少 init_vector，则会发生错误。", "当加密模式不需要设置 init_vector 参数时，则该参数会被忽略。"], "Examples": ["obclient> SET @pass=AES_ENCRYPT('hello world', 'key','1111111111111111');\nQuery OK, 0 rows affected\n", "obclient> SELECT CHAR_LENGTH(@pass);\n+--------------------+\n| CHAR_LENGTH(@pass) |\n+--------------------+\n|                 16 |\n+--------------------+\n1 row in set\n", "obclient> SELECT AES_DECRYPT(@pass, 'key');\nERROR 1582 (42000): Incorrect parameter count\nobclient> SELECT AES_DECRYPT(@pass, 'key','1111111111111111');\n+----------------------------------------------+\n| AES_DECRYPT(@pass, 'key','1111111111111111') |\n+----------------------------------------------+\n| hello world                                  |\n+----------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822996"], "Title": ["DECODE"], "Feature": ["DECODE(crypt_str,pass_str)\n"], "Description": ["DECODE() 使用 pass_str 作为密码对加密的字符串 crypt_str 进行解密并返回解密后的字符串。"], "Examples": ["obclient> SELECT DECODE(ENCODE('secret','cry'), 'cry');\n+---------------------------------------+\n| DECODE(ENCODE('secret','cry'), 'cry') |\n+---------------------------------------+\n| secret                                |\n+---------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822990"], "Title": ["DES_DECRYPT"], "Feature": ["DES_DECRYPT(crypt_str[,key_str])\n"], "Description": ["该函数用于解密由函数 DES_ENCRYPT() 加密的字符串。如果发生错误，该函数返回 NULL。 此功能仅在 OceanBase 数据库已配置为支持 SSL 时才有效。", "key_str 参数用于传递解密消息的密钥。如果没有指定 key_str 参数，DES_DECRYPT() 函数会检查加密字符串的第一个字节以确定用于加密原始字符串的 DES 密钥编号，然后从 DES 密钥文件中读取密钥以解密字符串。由此，要求用户必须具有 SUPER 权限。", "如果 crypt_str 参数不是加密字符串，则直接返回该字符串。"], "Examples": ["obclient> SELECT DES_DECRYPT(DES_ENCRYPT('secret','cry'), 'cry');\n+-------------------------------------------------+\n| DES_DECRYPT(DES_ENCRYPT('secret','cry'), 'cry') |\n+-------------------------------------------------+\n| secret                                          |\n+-------------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822994"], "Title": ["DES_ENCRYPT"], "Feature": ["DES_ENCRYPT(str[,{key_num|key_str}])\n"], "Description": ["此功能仅在 OceanBase 数据库已配置为支持 SSL 时才有效。", "key_str 参数用于传递加密密钥，用于加密 str。如果没有指定该参数，则使用 DES 密钥文件中的第一个密钥。key_num 参数的取值是 DES 密钥文件中的密钥编号（0 到 9）。", "返回字符串是一个二进制字符串，其中第一个字符是 CHAR(128 | key_num)。如果发生错误，DES_ENCRYPT() 返回 NULL。128 是为了更容易识别加密密钥。如果使用字符串密钥，则 key_num 为 127。", "结果中的字符串长度根据以下公式计算得出：", "new_len = orig_len + (8 - (orig_len % 8)) + 1\n", "DES 密钥文件中的每一行的格式为 key_num des_key_str_。每个 key_num 值必须是 0 到 9 范围内的数字。文件中的行可以按任何顺序排列。des_key_str 是用于加密信息的字符串。 数字和密钥之间至少应有一个空格。如果您没有为 DES_ENCRYPT() 指定任何密钥参数，则第一个密钥作为默认密钥。", "\n说明\nOceanBase 数据库当前版本还不支持用 --des_key_file 编辑 DES 密钥文件，所以目前 DES_ENCRYPT() 和 DES_DECRYPT() 从密钥文件中读到的密钥是和 MySQL 8.0 的默认密钥文件一样的。\n"], "Examples": ["obclient [test]> SELECT DES_ENCRYPT('text', CONCAT('ob_random_salt','ob_secret_password'));\n+--------------------------------------------------------------------+\n| DES_ENCRYPT('text', CONCAT('ob_random_salt','ob_secret_password')) |\n+--------------------------------------------------------------------+\n| ]\u0005UA                                                              |\n+--------------------------------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822992"], "Title": ["ENCODE"], "Feature": ["ENCODE(str,pass_str)\n"], "Description": ["ENCODE() 使用 pass_str 作为密码加密字符串。返回的结果是一个与 str 长度相同的二进制字符串。要解密该结果，请使用 DECODE()。"], "Examples": ["obclient> SELECT ENCODE('text', CONCAT('ob_random_salt','ob_secret_password'))\n+---------------------------------------------------------------+\n| ENCODE('text', CONCAT('ob_random_salt','ob_secret_password')) |\n+---------------------------------------------------------------+\n5\u0016+                                                          |\n+---------------------------------------------------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000822987"], "Title": ["ENCRYPT"], "Feature": ["ENCRYPT(str[,salt])\n"], "Description": ["ENCRYPT() 使用 Unix crypt() 调用加密 str 并返回二进制字符串。salt 参数必须是至少包含两个字符的字符串，否则结果为 NULL。如果没有指定 salt 参数，则使用随机值。", "因为系统调用需要一个以零字节结尾的字符串，所以不建议将 ENCRYPT() 与 ucs2、utf16、utf16le 或 utf32 多字节字符集一起使用。", "如果系统不支持 crypt()，则 ENCRYPT() 始终返回 NULL。"], "Examples": ["obclient> SELECT ENCRYPT('hello');\n+------------------+\n| ENCRYPT('hello') |\n+------------------+\n| XROflfjMAx1GA    |\n+------------------+\n1 row in set\n"], "Category": ["Encryption Functions"]}
