{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823318"], "Title": ["SCN_TO_TIMESTAMP"], "Feature": ["SCN_TO_TIMESTAMP(number)\n"], "Description": ["SCN_TO_TIMESTAMP() 函数将 SCN 作为参数，并返回与该 SCN 关联的时间戳。返回值是 DATETIME 类型。"], "Examples": ["obclient [oceanbase]> SELECT MAX_SCN, SCN_TO_TIMESTAMP(MAX_SCN) FROM gv$ob_log_stat;\n+---------------------+----------------------------+\n| MAX_SCN             | SCN_TO_TIMESTAMP(MAX_SCN)  |\n+---------------------+----------------------------+\n| 1676966395664862550 | 2023-02-21 15:59:55.664862 |\n| 1676966395664862550 | 2023-02-21 15:59:55.664862 |\n+---------------------+----------------------------+\n2 rows in set\n"], "Category": ["Cast Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823317"], "Title": ["CAST"], "Feature": ["CAST(expr AS type)\n"], "Description": ["CAST() 将某种数据类型的表达式显式转换为另一种数据类型，即将 expr 字段值转换为 type 数据类型。", "参数说明", "参数解释如下：", "expr：表示任何有效的 SQL 表达式。", "AS：用于分隔两个参数，在 AS 之前的是要处理的数据，在 AS 之后是要转换的数据类型。", "type：表示目标系统所提供的数据类型。支持如下类型：", "\nCHAR[(N)] [CHARACTER SET charset_name] 生成具有 CHAR 数据类型的字符串。除了当表达式 expr 为空（长度为 0）时，结果类型为 CHAR(0)。如果指定了可选长度 N，CHAR(N) 会强制转换为使用不超过 N 个参数的字符，短于 N 个字符长度的值不会发生填充；如果没有指定可选长度 N，OceanBase 数据库会根据表达式计算最大长度。如果没有 CHARACTER SET charset_name 子句，CHAR 会生成具有默认字符集的字符串。\nDATE：产生一个 DATE 值。\nDATETIME [ (M) ]：产生一个 DATETIME 值。M 值是可选的，用于指定小数位上秒的精度，范围为 [0,6]。\nDECIMAL [ (M [,D] ) ]：产生一个 DECIMAL 值。M 和 D 值是可选的，它们分别指定最大位数（精度）和小数点后的位数（小数位数）。M 最大值为 65，D 最大值为 30。如果省略 D，则默认为 0; 如果省略 M，则默认为 10。\nSIGNED [INTEGER]：产生一个有符号的 BIGINT 值。\nJSON：生成 JSON 值。有关 JSON 与其他类型的值转换规则，请参见 JSON 数据类型转换。\nTIME [ (M) ]：产生一个 TIME 值。如果给出了可选的 M 值，则它指定小数位上秒的精度。\nUNSIGNED [INTEGER]：产生一个无符号的 BIGINT 值。\n", "CHAR[(N)] [CHARACTER SET charset_name]", "生成具有 CHAR 数据类型的字符串。除了当表达式 expr 为空（长度为 0）时，结果类型为 CHAR(0)。如果指定了可选长度 N，CHAR(N) 会强制转换为使用不超过 N 个参数的字符，短于 N 个字符长度的值不会发生填充；如果没有指定可选长度 N，OceanBase 数据库会根据表达式计算最大长度。如果没有 CHARACTER SET charset_name 子句，CHAR 会生成具有默认字符集的字符串。", "DATE：产生一个 DATE 值。", "DATETIME [ (M) ]：产生一个 DATETIME 值。M 值是可选的，用于指定小数位上秒的精度，范围为 [0,6]。", "DECIMAL [ (M [,D] ) ]：产生一个 DECIMAL 值。M 和 D 值是可选的，它们分别指定最大位数（精度）和小数点后的位数（小数位数）。M 最大值为 65，D 最大值为 30。如果省略 D，则默认为 0; 如果省略 M，则默认为 10。", "SIGNED [INTEGER]：产生一个有符号的 BIGINT 值。", "JSON：生成 JSON 值。有关 JSON 与其他类型的值转换规则，请参见 JSON 数据类型转换。", "TIME [ (M) ]：产生一个 TIME 值。如果给出了可选的 M 值，则它指定小数位上秒的精度。", "UNSIGNED [INTEGER]：产生一个无符号的 BIGINT 值。", "使用说明", "在使用 CAST 函数进行数据类型转换时，支持以下情况：", "两个表达式的数据类型完全相同", "两个表达式可隐式转换", "必须显式转换数据类型", "当用户试图进行不可能的转换，OceanBase 数据库将显示一条错误信息。如果转换时没有指定数据类型的长度，则使用 OceanBase 数据库系统内部最大长度。例如 VARCHAR 是 262,143 字节，NUMBER 是 65 比特位的浮动精度。", "CAST() 支持带符号和无符号的 64 比特值的运算。如果您正在使用数字操作符 (例如 +) 而其中一个操作数为无符号整数，则结果为无符号。您可以使用 SIGNED 和 UNSIGNED 对结果进行显式声明，将运算分别指定为带符号或无符号的 64 比特位的整数。如果任意一个操作数为一个浮点值，则结果为一个浮点值。"], "Examples": ["obclient> SELECT CAST(0 AS DATE);\n+-----------------+\n| CAST(0 AS DATE) |\n+-----------------+\n| 0000-00-00      |\n+-----------------+\n1 row in set\n", "obclient> SELECT CAST(123 AS TIME);\n+-------------------+\n| CAST(123 AS TIME) |\n+-------------------+\n| 00:01:23          |\n+-------------------+\n1 row in set\n", "obclient> SELECT CAST(123 AS DATETIME(4));\n+--------------------------+\n| CAST(123 AS DATETIME(4)) |\n+--------------------------+\n| 2000-01-23 00:00:00.0000 |\n+--------------------------+\n1 row in set\n", "obclient>  SELECT CAST(123 AS DECIMAL(3,2));\n+---------------------------+\n| CAST(123 AS DECIMAL(3,2)) |\n+---------------------------+\n|                      9.99 |\n+---------------------------+\n1 row in set\n", "obclient> SELECT CAST(\"123\" AS JSON);\n+---------------------+\n| CAST(\"123\" AS JSON) |\n+---------------------+\n| 123                 |\n+---------------------+\n1 row in set\n", "obclient> SELECT CAST(1-2 AS UNSIGNED), CAST(cast(1-2 AS UNSIGNED) AS SIGNED);\n+-----------------------+---------------------------------------+\n| CAST(1-2 AS UNSIGNED) | CAST(cast(1-2 AS UNSIGNED) AS SIGNED) |\n+-----------------------+---------------------------------------+\n|  18446744073709551615 |                                    -1 |\n+-----------------------+---------------------------------------+\n1 row in set\n", "obclient> SELECT CAST(1 AS UNSIGNED) - 2.0;\n+---------------------------+\n| CAST(1 AS UNSIGNED) - 2.0 |\n+---------------------------+\n|                      -1.0 |\n+---------------------------+\n1 row in set\n", "obclient> SELECT CAST(123 AS CHAR(2));\n+----------------------+\n| CAST(123 AS CHAR(2)) |\n+----------------------+\n| 12                   |\n+----------------------+\n1 row in set\n", "obclient> SELECT CAST(1 AS CHAR CHARACTER SET utf8mb4);\n+---------------------------------------+\n| CAST(1 AS CHAR CHARACTER SET utf8mb4) |\n+---------------------------------------+\n| 1                                     |\n+---------------------------------------+\n1 row in set\n"], "Category": ["Cast Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823319"], "Title": ["TIMESTAMP_TO_SCN"], "Feature": ["TIMESTAMP_TO_SCN(timestamp)\n"], "Description": ["TIMESTAMP_TO_SCN() 函数将时间戳类型的参数作为输入并返回对应的 SCN（System Change Number）。该函数输入参数类型为 DATETIME 类型，返回的数据类型为 UINT64_T。"], "Examples": ["obclient> SELECT TIMESTAMP_TO_SCN(\"2023-02-21 00:00:01\");\n+-----------------------------------------+\n| timestamp_to_scn(\"2023-02-21 00:00:01\") |\n+-----------------------------------------+\n|                     1676908801000000000 |\n+-----------------------------------------+\n1 row in set\n"], "Category": ["Cast Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823320"], "Title": ["CONVERT"], "Feature": ["CONVERT(expr USING transcoding_name)\nCONVERT(expr,type)\n"], "Description": ["CONVERT() 函数的两种声明对应两种不同的应用：", "CONVERT(expr USING transcoding_name) 用于将表达式 expr 转换为 transcoding_name 指定的字符集。", "CONVERT(expr,type) 用于将表达式 expr 转换为 type 指定的数据类型。", "在这种用法中，CONVERT(expr,type) 与 CAST(expr AS type) 是完全一致的。有关 CAST 函数的详细信息，请参见 CAST。"], "Examples": ["obclient> SELECT CHARSET(CONVERT('abc' USING binary));\n+--------------------------------------+\n| charset(CONVERT('abc' USING binary)) |\n+--------------------------------------+\n| binary                               |\n+--------------------------------------+\n1 row in set\n", "obclient> SELECT CONVERT('test', CHAR);\n+-----------------------+\n| CONVERT('test', CHAR) |\n+-----------------------+\n| test                  |\n+-----------------------+\n1 row in set\n"], "Category": ["Cast Functions"]}
