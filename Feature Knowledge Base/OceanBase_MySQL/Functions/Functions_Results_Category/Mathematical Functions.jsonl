{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823339"], "Title": ["ABS"], "Feature": ["ABS(expr)\n"], "Description": ["绝对值函数，求表达式绝对值，函数返回值类型与数值表达式的数据类型相同。", "支持比较运算，结果为 BOOL 值，被转化为数字类型处理，产生的结果为 1(TRUE)、0 (FALSE)。", "如果输入 NULL，返回值为 NULL。", "如果输入纯数字的字符串，支持自动转换成数字类型。返回值会被转化为一个 BIGINT。"], "Examples": ["obclient> SELECT ABS(5), ABS(-5.777), ABS(0), ABS(1/2), ABS(1-5);\n+--------+-------------+--------+----------+----------+\n| ABS(5) | ABS(-5.777) | ABS(0) | ABS(1/2) | ABS(1-5) |\n+--------+-------------+--------+----------+----------+\n|      5 |       5.777 |      0 |   0.5000 |        4 |\n+--------+-------------+--------+----------+----------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823354"], "Title": ["ATAN"], "Feature": ["ATAN(X)\n"], "Description": ["返回 X 的反正切值，即正切值为 X 的值。"], "Examples": ["obclient> SELECT ATAN(-10), ATAN(0), ATAN(10), ATAN(-0.5), ATAN(0.5);\n+---------------------+---------+--------------------+---------------------+--------------------+\n| ATAN(-10)           | ATAN(0) | ATAN(10)           | ATAN(-0.5)          | ATAN(0.5)          |\n+---------------------+---------+--------------------+---------------------+--------------------+\n| -1.4711276743037347 |       0 | 1.4711276743037347 | -0.4636476090008061 | 0.4636476090008061 |\n+---------------------+---------+--------------------+---------------------+--------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823338"], "Title": ["ATAN2"], "Feature": ["ATAN2(X,Y)\n"], "Description": ["返回 X 与 Y 的反正切。它类似于计算 Y/X 的反正切，两个参数的符号用于确定结果所在的象限。", "该函数也可写作 ATAN(X,Y)，请参见 ATAN。"], "Examples": ["obclient> SELECT ATAN(PI(),0);\n+--------------------+\n| ATAN(PI(),0)       |\n+--------------------+\n| 1.5707963267948966 |\n+--------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823353"], "Title": ["LN"], "Feature": ["LN(X)\n"], "Description": ["返回 X 的自然对数，即 X 的以 e 为底的对数。如果 X 小于或等于 0，则返回 NULL，并上报警告 Invalid argument for logarithm。", "此函数与 LOG(X) 同义。"], "Examples": ["obclient> SELECT LN(-10), LN(0), LN(10), LN(-3.14), LN(3.14);\n+---------+-------+-------------------+-----------+-------------------+\n| LN(-10) | LN(0) | LN(10)            | LN(-3.14) | LN(3.14)          |\n+---------+-------+-------------------+-----------+-------------------+\n|    NULL |  NULL | 2.302585092994046 |      NULL | 1.144222799920162 |\n+---------+-------+-------------------+-----------+-------------------+\n1 row in set, 3 warnings\n\nobclient> SHOW WARNINGS;\n+---------+------+--------------------------------+\n| Level   | Code | Message                        |\n+---------+------+--------------------------------+\n| Warning | 3020 | Invalid argument for logarithm |\n| Warning | 3020 | Invalid argument for logarithm |\n| Warning | 3020 | Invalid argument for logarithm |\n+---------+------+--------------------------------+\n3 rows in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823356"], "Title": ["LOG"], "Feature": ["LOG([B,]X)\n"], "Description": ["LOG(X) 返回 X 的自然对数，即 X 的以 e 为底的对数。如果 X 小于或等于 0，则返回 NULL，并上报警告 Invalid argument for logarithm。只提供 X 时，该函数与 LN(X) 函数相同。", "LOG(B,X) 返回以 B 为底 X 的对数。如果 X 小于或等于 0，或者 B 小于或等于 1，则返回 NULL。"], "Examples": ["obclient> SELECT LOG(-10), LOG(0), LOG(10), LOG(-3.14), LOG(3.14);\n+----------+--------+-------------------+------------+-------------------+\n| LOG(-10) | LOG(0) | LOG(10)           | LOG(-3.14) | LOG(3.14)         |\n+----------+--------+-------------------+------------+-------------------+\n|     NULL |   NULL | 2.302585092994046 |       NULL | 1.144222799920162 |\n+----------+--------+-------------------+------------+-------------------+\n1 row in set, 3 warnings\n\nobclient> SELECT LOG(10, 100), LOG(1,100);\n+--------------+------------+\n| LOG(10, 100) | LOG(1,100) |\n+--------------+------------+\n|            2 |       NULL |\n+--------------+------------+\n1 row in set, 1 warning\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823336"], "Title": ["LOG10"], "Feature": ["LOG10(X)\n"], "Description": ["返回以 10 为底的 X 的指数。"], "Examples": ["obclient> SELECT LOG10(1000);\n+-------------+\n| LOG10(1000) |\n+-------------+\n|           3 |\n+-------------+\n1 row in set\n\nobclient> SELECT LOG10(-1000);\n+--------------+\n| LOG10(-1000) |\n+--------------+\n|         NULL |\n+--------------+\n1 row in set, 1 warning\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823340"], "Title": ["LOG2"], "Feature": ["LOG2(X)\n"], "Description": ["返回以 2 为底的 X 的指数。"], "Examples": ["obclient> SELECT LOG2(65536);\n+-------------+\n| LOG2(65536) |\n+-------------+\n|          16 |\n+-------------+\n1 row in set\n\nobclient> SELECT LOG2(-65536);\n+--------------+\n| LOG2(-65536) |\n+--------------+\n|         NULL |\n+--------------+\n1 row in set, 1 warning\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823359"], "Title": ["MOD"], "Feature": ["MOD(N,M)\n"], "Description": ["取余函数。MOD(N,M)、N % M 与 N MOD M 三种形式是等效的。", "MOD() 对于带有小数部分的数值也起作用，它返回除法运算后的精确余数。", "N 或 M 中任何一个参数为 NULL，返回值都为 NULL。M 为 0 时，也返回 NULL。"], "Examples": ["obclient> SELECT MOD(29,19), 29 MOD 19, 29 % 19;\n+------------+-----------+---------+\n| MOD(29,19) | 29 MOD 19 | 29 % 19 |\n+------------+-----------+---------+\n|         10 |        10 |      10 |\n+------------+-----------+---------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823347"], "Title": ["NEG"], "Feature": ["NEG(expr)\n"], "Description": ["求补函数，对操作数执行求补运算，即用零减去操作数，然后结果返回操作数。", "支持比较运算，结果为 BOOL 值，被转化为数字类型处理，产生的结果为 1(TRUE)、0 (FALSE)，再对结果求补。"], "Examples": ["obclient> SELECT NEG(1), NEG(1+1), NEG(2*3), NEG(1=1), NEG(5<1);\n+--------+----------+----------+----------+----------+\n| NEG(1) | NEG(1+1) | NEG(2*3) | NEG(1=1) | NEG(5<1) |\n+--------+----------+----------+----------+----------+\n|     -1 |       -2 |       -6 |       -1 |        0 |\n+--------+----------+----------+----------+----------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823351"], "Title": ["NORMAL"], "Feature": ["NORMAL(<mean> , <stddev> , <gen>)\n"], "Description": ["该函数返回一个符合正态分布（Normal Distribution，又称高斯分布）的浮点数。", "mean", " 表示均值，", "stddev", " 表示标准差。", "mean", " 和 ", "stddev", " 的取值必须是标量值，不随行迭代而变。例如，整形或浮点型常量、标量函数等。 \n    ", "\nmean 和 stddev 的取值可以是 1、2、ABS(-10)；PL 里还可以是 @v1、1+@v3 等。\nmean 和 stddev 的取值不可以是 RAND()、RANDOM()、RAND(2)、t1.c1、ABS(-t1.c1)、1+c2 等。\n", "mean", " 和 ", "stddev", " 的取值可以是 ", "1", "、", "2", "、", "ABS(-10)", "；PL 里还可以是 ", "@v1", "、", "1+@v3", " 等。", "mean", " 和 ", "stddev", " 的取值不可以是 ", "RAND()", "、", "RANDOM()", "、", "RAND(2)", "、", "t1.c1", "、", "ABS(-t1.c1)", "、", "1+c2", " 等。", "随机值生成算法基于 ", "std::normal_distribution", "，采用了 “Marsaglia Polar Method”算法，该算法会消耗较多 CPU。", "gen", " 是一个数值生成函数，通常使用 ", "RANDOM()", " 函数生成。如果传入值是一个常量，则 ", "NORMAL()", " 函数返回值也为一个定值。"], "Examples": ["obclient> SELECT v, COUNT(*) FROM (SELECT ROUND(NORMAL(3, 0.1, RANDOM()), 1) v FROM TABLE(GENERATOR(1000000))) x GROUP BY v ORDER BY v;\n+------+----------+\n| v    | COUNT(*) |\n+------+----------+\n|  2.5 |        4 |\n|  2.6 |      238 |\n|  2.7 |     5979 |\n|  2.8 |    60889 |\n|  2.9 |   241991 |\n|  3.0 |   382951 |\n|  3.1 |   241306 |\n|  3.2 |    60533 |\n|  3.3 |     5861 |\n|  3.4 |      243 |\n|  3.5 |        5 |\n+------+----------+\n11 rows in set\n", "obclient> SELECT COUNT(NORMAL(0, 1, RANDOM())) v FROM TABLE(GENERATOR(1000000));\n+---------+\n| V       |\n+---------+\n| 1000000 |\n+---------+\n1 row in set (1.49 sec)\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823327"], "Title": ["BIT_COUNT"], "Feature": ["BIT_COUNT(N)\n"], "Description": ["返回 N 转换为二进制后 1 的数量。如果 N 为 NULL，则返回 NULL。"], "Examples": ["obclient> SELECT BIT_COUNT(42), BIT_COUNT(b'1010');\n+---------------+--------------------+\n| BIT_COUNT(42) | BIT_COUNT(b'1010') |\n+---------------+--------------------+\n|             3 |                  2 |\n+---------------+--------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823357"], "Title": ["PI"], "Feature": ["PI()\n"], "Description": ["返回 π 的值（圆周率）。"], "Examples": ["obclient> SELECT PI();\n+----------+\n| PI()     |\n+----------+\n| 3.141593 |\n+----------+\n1 row in set\n\nobclient> SELECT ROUND(2*PI(),2);\n+----------------+\n| ROUND(2*PI(),2)|\n+----------------+\n| 6.28           |\n+----------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823358"], "Title": ["POW"], "Feature": ["POW(X,Y)\n"], "Description": ["返回 X 的 Y 次方。", "X 与 Y 中任何一个参数为 NULL，返回值都为 NULL。"], "Examples": ["obclient> SELECT POW(4,2), POW(4,-2), POW(1,NULL);\n+----------+-----------+-------------+\n| POW(4,2) | POW(4,-2) | POW(1,NULL) |\n+----------+-----------+-------------+\n|       16 |    0.0625 |        NULL |\n+----------+-----------+-------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823332"], "Title": ["POWER"], "Feature": ["POWER(X,Y)\n"], "Description": ["返回 X 的 Y 次方，该函数是 POW() 的别名。", "X 与 Y 中任何一个参数为 NULL，返回值都为 NULL。"], "Examples": ["obclient> SELECT POWER(2,8);\n+------------+\n| POWER(2,8) |\n+------------+\n|        256 |\n+------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823335"], "Title": ["RADIANS"], "Feature": ["RADIANS(X)\n"], "Description": ["该函数将角度转换为弧度，返回 X 的弧度值。其中，π 弧度等于 180 度。"], "Examples": ["obclient> SELECT RADIANS(-10), RADIANS(0), RADIANS(10), RADIANS(-0.5), RADIANS(0.5);\n+----------------------+------------+---------------------+-----------------------+----------------------+\n| RADIANS(-10)         | RADIANS(0) | RADIANS(10)         | RADIANS(-0.5)         | RADIANS(0.5)         |\n+----------------------+------------+---------------------+-----------------------+----------------------+\n| -0.17453292519943295 |          0 | 0.17453292519943295 | -0.008726646259971648 | 0.008726646259971648 |\n+----------------------+------------+---------------------+-----------------------+----------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823330"], "Title": ["ACOS"], "Feature": ["ACOS(X)\n"], "Description": ["返回 X 的反余弦值，即余弦为 X 的值。如果 X 的取值不在 [-1,1] 区间内，该函数返回 NULL。"], "Examples": ["obclient> SELECT ACOS(-10), ACOS(0), ACOS(10), ACOS(-0.5), ACOS(0.5);\n+-----------+--------------------+----------+--------------------+--------------------+\n| ACOS(-10) | ACOS(0)            | ACOS(10) | ACOS(-0.5)         | ACOS(0.5)          |\n+-----------+--------------------+----------+--------------------+--------------------+\n|      NULL | 1.5707963267948966 |     NULL | 2.0943951023931957 | 1.0471975511965979 |\n+-----------+--------------------+----------+--------------------+--------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823341"], "Title": ["RAND"], "Feature": ["RAND([N])\n"], "Description": ["RAND([N]) 函数接受 0 个或者 1 个参数（N 被称为随机数种子），返回一个范围是 [0,1.0) 的随机浮点数。如果想获得一个范围在 [i, j) 的随机整数，可以使用表达式 FLOOR(I + RAND() * (j - i))。", "如果参数 N 不指定，那么在执行之前会使用随机种子初始化，之后 RAND() 会根据这个初始化值来生成随机数，所以 RAND() 每次会生成不同的随机数序列。", "如果参数 N 指定，那么 N 会作为随机数种子来生成随机数。根据 N 是否是常量，分成以下两种情况：", "如果 N 是常量，那么 N 在执行之前会被当成随机种子初始化，之后 RAND(N) 会根据这个初始化值来生成随机数。相同的 N 值会生成相同的随机数序列。", "如果 N 是变量（比如 N 是一个列值），那么 N 会在每次执行的时候作为随机数种子来生成随机数。相同的 N 值会生成相同的随机数。", "除了出现在 SECLET 语句中，RAND([N]) 也可以出现在 WHERE、ORDER BY 和 GROUP BY 语句中，它的执行方式还是按照上述规则执行。例如，如果想随机的对一个表进行排序，可以使用 SELECT FROM T1 ORDER BY RAND()。如果想随机取样一个表的 100 行，可以使用 SELECT FROM T1 ORDER BY RAND() LIMIT 100。"], "Examples": ["obclient> SELECT A, B, RAND() FROM T3;\n+------+------+---------------------+\n| A    | B    | RAND()              |\n+------+------+---------------------+\n|    1 |    1 |   0.641815407799385 |\n|    2 |    2 | 0.16825051248841966 |\n|    3 |    3 |  0.9158063697775886 |\n+------+------+---------------------+\n3 rows in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823329"], "Title": ["RANDOM"], "Feature": ["RANDOM(seed)\n"], "Description": ["该函数生成一个 64 位的整数伪随机值。", "seed", " 为整数类型，不同 ", "seed", " 可以生成不同的随机数值序列。", "RANDOM()", " 使用了 MT19937 伪随机数生成算法，其随机空间非常大，生成 2", "19937", " - 1 个随机元素后才会重复生成相同序列。"], "Examples": ["obclient> SELECT RANDOM(4) FROM TABLE(GENERATOR(3));\n+---------------------+\n| RANDOM(4)           |\n+---------------------+\n| 5267436225003336391 |\n| -851690886662571060 |\n| 1738617244330437274 |\n+---------------------+\n3 rows in set\n", "obclient> SELECT UNIFORM(1, 100, RANDOM()) FROM TABLE(GENERATOR(4));\n+---------------------------+\n| UNIFORM(1, 100, RANDOM()) |\n+---------------------------+\n|                        66 |\n|                        71 |\n|                        52 |\n|                        14 |\n+---------------------------+\n4 rows in set\n", "obclient> SELECT * FROM t1;\n+------+\n| c1   |\n+------+\n|    3 |\n|    4 |\n|    5 |\n|    1 |\n|    1 |\n+------+\n5 rows in set\n\nobclient> SELECT t1.c1, RAND(t1.c1), RANDOM(t1.c1) FROM TABLE(GENERATOR(1)), t1;\n+------+---------------------+----------------------+\n| c1   | RAND(t1.c1)         | RANDOM(t1.c1)        |\n+------+---------------------+----------------------+\n|    3 |  0.9057697559760601 |  1084041170817055659 |\n|    4 | 0.15595286540310166 |  5267436225003336391 |\n|    5 | 0.40613597483014313 |  3192483991702052534 |\n|    1 | 0.40540353712197724 | -6753783847308464280 |\n|    1 | 0.40540353712197724 | -6753783847308464280 |\n+------+---------------------+----------------------+\n5 rows in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823333"], "Title": ["RANDSTR"], "Feature": ["RANDSTR(N, gen)\n"], "Description": ["该函数按照指定长度生成一个随机字符串，字符串中的字符包含 A-Z、a-z 和 0-9。", "N 为生成的随机字符串长度：", "\n当 N < 0 时，返回 NULL。\n当 N = 0 时，返回空字符串。\n当 N > 0 并且 N <= max_allowed_packet 时，返回长度为 N 的随机字符串。\n当 N > max_allowed_packet 时，返回 NULL。其中 max_allowed_packet 为系统变量，默认值为 16777216。\n", "当 ", "N < 0", " 时，返回 ", "NULL", "。", "当 ", "N = 0", " 时，返回空字符串。", "当 ", "N > 0", " 并且 ", "N <= max_allowed_packet", " 时，返回长度为 N 的随机字符串。", "当 ", "N > max_allowed_packet", " 时，返回 ", "NULL", "。其中 ", "max_allowed_packet", " 为系统变量，默认值为 16777216。", "gen 为分布函数，可取值如下：", "\n常量，则每次调用 RANDSTR() 都会生成相同的随机串。\n返回整数值的随机函数，例如 RANDOM()。\n分布函数，例如均匀分布、zipf 分布、高斯分布等。\n", "常量，则每次调用 ", "RANDSTR()", " 都会生成相同的随机串。", "返回整数值的随机函数，例如 ", "RANDOM()", "。", "分布函数，例如均匀分布、zipf 分布、高斯分布等。", "随机串的生成算法：采用 LCG 算法生成 N 个随机值，据此选出 N 个字符组成随机串。所以当 N 很大时会消耗较多 CPU。例如下面生成了一个长度为 300 M 的随机串，耗时 1.7 秒。", "obclient> SELECT LENGTH(RANDSTR(300000000, 1)) FROM DUAL;;\n+------------------------------+\n| LENGTH(RANDSTR(300000000,1)) |\n+------------------------------+\n|                    300000000 |\n+------------------------------+\n1 row in set (1.73 sec)\n"], "Examples": ["obclient> SELECT RANDSTR(10, RANDOM()) FROM TABLE(GENERATOR(7));\n+-----------------------+\n| RANDSTR(10, RANDOM()) |\n+-----------------------+\n| TGfdBAZ1BP            |\n| VvMbD2bChR            |\n| VNSB6MpgQw            |\n| 3QWYQYQVJ4            |\n| CpyE58jM0o            |\n| vBvsJBGGmX            |\n| rg3Pkde0UJ            |\n+-----------------------+\n7 rows in set\n", "obclient> SELECT RANDSTR(1, ZIPF(1, 10, RANDOM())) s, COUNT(*) FROM TABLE(GENERATOR(1000)) GROUP BY s ORDER BY 1 ASC;\n+------+----------+\n| s    | COUNT(*) |\n+------+----------+\n| 0    |       27 |\n| 1    |       41 |\n| 4    |       32 |\n| 5    |       54 |\n| 8    |       64 |\n| 9    |       69 |\n| C    |       88 |\n| D    |      125 |\n| G    |      168 |\n| H    |      332 |\n+------+----------+\n10 rows in set\n", "obclient> SELECT RANDSTR(5, 40) FROM DUAL;\n+----------------+\n| RANDSTR(5, 40) |\n+----------------+\n| UU3g0          |\n+----------------+\n1 row in set\n\nobclient> SELECT RANDSTR(1, 40) FROM DUAL;\n+----------------+\n| RANDSTR(1, 40) |\n+----------------+\n| U              |\n+----------------+\n1 row in set\n\nobclient> SELECT RANDSTR(0, 40) FROM DUAL;\n+----------------+\n| RANDSTR(0, 40) |\n+----------------+\n|                |\n+----------------+\n1 row in set\n\nobclient> SELECT RANDSTR(-1, 40) FROM DUAL;\n+-----------------+\n| RANDSTR(-1, 40) |\n+-----------------+\n| NULL            |\n+-----------------+\n1 row in set\n", "obclient> SELECT RANDSTR(10, 1442) FROM TABLE(GENERATOR(7));\n+-------------------+\n| RANDSTR(10, 1442) |\n+-------------------+\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n+-------------------+\n7 rows in set\n\nobclient> SELECT RANDSTR(10, 1442) FROM TABLE(GENERATOR(7));\n+-------------------+\n| RANDSTR(10, 1442) |\n+-------------------+\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n+-------------------+\n7 rows in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823346"], "Title": ["ROUND"], "Feature": ["ROUND(X)\nROUND(X,D)\n"], "Description": ["返回一个数值，四舍五入到指定的长度或精度。", "返回参数 X, 其值接近于最近似的整数。在有两个参数的情况下，返回 X，其值保留到小数点后 D 位，而第 D 位的保留方式为四舍五入。如果要接保留 X 值小数点左边的 D 位，可将 D 设为负值。", "返回值的类型同第一个自变量相同（假设它是一个整数、双精度数或小数）。这意味着对于一个整数参数，结果也是一个整数（无小数部分）。", "对于准确值数字，ROUND() 使用\"四舍五入\"或\"舍入成最接近的数\"的规则：对于一个分数部分为 .5 或大于 .5 的值，正数则上舍入到邻近的整数值，负数则下舍入临近的整数值。（换言之, 其舍入的方向是数轴上远离零的方向）。对于一个分数部分小于 .5 的值，正数则下舍入下一个整数值，负数则下舍入邻近的整数值，而正数则上舍入邻近的整数值。", "对于近似值数字，ROUND() 遵循\"四舍 > 五入 > 五取最接近的偶数\"的规则，即一个带有任何小数部分的值会被舍入成最接近的偶数整数。"], "Examples": ["obclient> SELECT ROUND(2.15,2);\n+---------------+\n| ROUND(2.15,2) |\n+---------------+\n|          2.15 |\n+---------------+\n1 row in set\n\nobclient> SELECT ROUND(2555e-2,1);\n+------------------+\n| ROUND(2555e-2,1) |\n+------------------+\n|             25.6 |\n+------------------+\n1 row in set\n\nobclient> SELECT ROUND(25e-1),  ROUND(25.3e-1),  ROUND(35e-1);\n+--------------+----------------+--------------+\n| ROUND(25e-1) | ROUND(25.3e-1) | ROUND(35e-1) |\n+--------------+----------------+--------------+\n|            2 |              3 |            4 |\n+--------------+----------------+--------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823362"], "Title": ["SIGN"], "Feature": ["SIGN(X)\n"], "Description": ["SIGN(X) 返回参数的符号，该符号取决于 X 的值为负、零或正。支持浮点数与十六进制数。返回结果为：", "负值：-1", "零值：0", "正值：1", "该函数支持比较运算，结果会被转换为数字类型处理，生成的结果为 1(TRUE)或 0 (FALSE)。", "如果输入 NULL，返回值为 NULL。"], "Examples": ["obclient> SELECT SIGN(-32), SIGN(0), SIGN(234);\n+-----------+---------+-----------+\n| SIGN(-32) | SIGN(0) | SIGN(234) |\n+-----------+---------+-----------+\n|        -1 |       0 |         1 |\n+-----------+---------+-----------+\n1 row in set\n\nobclient> SELECT SIGN(NULL),SIGN(FALSE),SIGN(0X01);\n+------------+-------------+------------+\n| SIGN(NULL) | SIGN(FALSE) | SIGN(0X01) |\n+------------+-------------+------------+\n|       NULL |           0 |          1 |\n+------------+-------------+------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823342"], "Title": ["SIN"], "Feature": ["SIN(X)\n"], "Description": ["返回给定弧度 X 的正弦值。"], "Examples": ["obclient> SELECT SIN(PI());\n+------------------------+\n| SIN(PI())              |\n+------------------------+\n| 1.2246467991473532e-16 |\n+------------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823360"], "Title": ["SQRT"], "Feature": ["SQRT(X)\n"], "Description": ["返回 X 的平方根。"], "Examples": ["obclient> SELECT SQRT(4);\n+---------+\n| SQRT(4) |\n+---------+\n|       2 |\n+---------+\n1 row in set\n\nobclient> SELECT SQRT(5);\n+------------------+\n| SQRT(5)          |\n+------------------+\n| 2.23606797749979 |\n+------------------+\n1 row in set\n\nobclient> SELECT SQRT(-16);\n+-----------+\n| SQRT(-16) |\n+-----------+\n|      NULL |\n+-----------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823345"], "Title": ["CEIL"], "Feature": ["CEIL(expr)\n"], "Description": ["返回大于等于 expr 的最小整数。", "支持比较运算，结果为 BOOL 值，被转化为数字类型处理，产生的结果为 1(TRUE)、0 (FALSE)。", "如果输入 NULL，返回值为 NULL。", "如果输入纯数字的字符串，支持自动转换成数字类型。", "返回值会被转化为一个 BIGINT。"], "Examples": ["obclient> SELECT CEIL(1.2), CEIL(-1.2), CEIL(1+1.5), CEIL(1=1),CEIL(1<1),CEIL(null);\n+-----------+------------+-------------+-----------+-----------+------------+\n| CEIL(1.2) | CEIL(-1.2) | CEIL(1+1.5) | CEIL(1=1) | CEIL(1<1) | CEIL(null) |\n+-----------+------------+-------------+-----------+-----------+------------+\n|         2 |         -1 |           3 |         1 |         0 |       NULL |\n+-----------+------------+-------------+-----------+-----------+------------+\n1 row in set\n\nobclient> SELECT CEIL(name);\nERROR 1054 (42S22): Unknown column 'name' in 'field list'\n\nobclient> SELECT CEIL('2');\n+-----------+\n| CEIL('2') |\n+-----------+\n|         2 |\n+-----------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823328"], "Title": ["CEILING"], "Feature": ["CEILING(X)\n"], "Description": ["返回大于等于 X 的最小整数，该函数是 CEIL() 的别名", "支持比较运算，结果为 BOOL 值，被转化为数字类型处理，产生的结果为 1(TRUE)、0 (FALSE)。", "如果输入 NULL，返回值为 NULL。", "如果输入纯数字的字符串，支持自动转换成数字类型。", "返回值会被转化为一个 BIGINT。"], "Examples": ["obclient> SELECT CEILING(1.23);\n+---------------+\n| CEILING(1.23) |\n+---------------+\n|             2 |\n+---------------+\n1 row in set\n\nobclient> SELECT CEILING(-1.23);\n+----------------+\n| CEILING(-1.23) |\n+----------------+\n|             -1 |\n+----------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823348"], "Title": ["TAN"], "Feature": ["TAN(X)\n"], "Description": ["返回给定弧度 X 的正切值。"], "Examples": ["obclient> SELECT TAN(PI());\n+-------------------------+\n| TAN(PI())               |\n+-------------------------+\n| -1.2246467991473532e-16 |\n+-------------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823355"], "Title": ["TRUNCATE"], "Feature": ["TRUNCATE(X,D)\n"], "Description": ["返回 X 保留 D 位小数的结果。如果 D 为 0，则返回 X 的整数部分。如果 D 为负数，则使 X 的小数点左侧的 D 位数变成 0。"], "Examples": ["obclient> SELECT TRUNCATE(3.27,1);\n+------------------+\n| TRUNCATE(3.27,1) |\n+------------------+\n|              3.2 |\n+------------------+\n1 row in set\n\nobclient> SELECT TRUNCATE(3.27,0);\n+------------------+\n| TRUNCATE(3.27,0) |\n+------------------+\n|                3 |\n+------------------+\n1 row in set\n\nobclient> SELECT TRUNCATE(3.27,-1);\n+-------------------+\n| TRUNCATE(3.27,-1) |\n+-------------------+\n|                 0 |\n+-------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823326"], "Title": ["UNIFORM"], "Feature": ["UNIFORM(<min> , <max> , <gen>)\n"], "Description": ["该函数返回一个符合均匀分布（Uniform Distribution）的整数或浮点数。", "min", ", ", "max", " 的取值必须是标量值，不随行迭代而变。例如，常量、标量函数等。PL 里还可以是 ", "@v1", "、", "1+@v3", " 等。", "MySQL 模式下，当 ", "min", " 或 ", "max", " 均为整数时，", "UNIFORM()", " 函数的输出结果为整数；否则，", "UNIFORM()", " 函数的输出结果为浮点数。", "gen", " 是一个数值生成函数，通常使用 ", "RANDOM()", " 函数生成。如果传入值是一个常量，则 ", "UNIFORM()", " 函数返回值也为一个定值。"], "Examples": ["obclient> SELECT v, COUNT(*) FROM (SELECT UNIFORM(1, 10, RANDOM()) v FROM TABLE(GENERATOR(1000000))) x GROUP BY v ORDER BY v;\n+------+----------+\n| v    | count(*) |\n+------+----------+\n|    1 |   100738 |\n|    2 |   100119 |\n|    3 |   100223 |\n|    4 |    99537 |\n|    5 |   100125 |\n|    6 |   100001 |\n|    7 |   100275 |\n|    8 |    99235 |\n|    9 |    99837 |\n|   10 |    99910 |\n+------+----------+\n10 rows in set\n", "obclient> SELECT UNIFORM(0.0, 10, RANDOM()) FROM TABLE(GENERATOR(4)) ORDER BY 1;\n+----------------------------+\n| UNIFORM(0.0, 10, RANDOM()) |\n+----------------------------+\n|         2.3520877625884653 |\n|          4.155845987385725 |\n|          8.323930497420852 |\n|          9.844002748532109 |\n+----------------------------+\n4 rows in set\n\nobclient> SELECT UNIFORM(0, 10, RANDOM()) FROM TABLE(GENERATOR(4)) ORDER BY 1;\n+--------------------------+\n| UNIFORM(0, 10, RANDOM()) |\n+--------------------------+\n|                        0 |\n|                        4 |\n|                        8 |\n|                        9 |\n+--------------------------+\n4 rows in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823350"], "Title": ["ZIPF"], "Feature": ["ZIPF(<s> , <N> , <gen>)\n"], "Description": ["该函数返回一个符合齐夫分布（Zipf-distributed）的整数，取值范围为 [0, N)，分区的特征指数为 s。", "s", " 为特征指数，", "s", " 越大生成的序列越倾斜。将序列绘制成曲线时，曲线越陡峭。", "s", " 和 ", "N", " 取值要求：必须是一个标量值，不随行迭代而变。例如，整形或浮点型常量、标量函数等，PL 里还可以是 ", "@v1", "、", "1+@v3", " 等。", "s", " 的取值范围为 [1, +∞)，", "N", " 的取值范围为 [1，16777215]。", "zipf", " 算法实现时消耗的存储、计算资源和 ", "N", " 的取值相关。算法空间复杂度为 ", "O(N)", "，每生成一个整数的时间复杂度为 ", "O(logN)", "。所以，", "N", " 的取值范围被限制为 [1, 16777215]。", "gen", " 是一个数值生成函数，通常使用 ", "RANDOM()", " 函数生成。如果传入值是一个常量，则 ", "zipf()", " 函数返回值也为一个定值。"], "Examples": ["obclient> SELECT ZIPF(1, 10, RANDOM()) FROM TABLE(GENERATOR(6));\n+-----------------------+\n| ZIPF(1, 10, RANDOM()) |\n+-----------------------+\n|                     4 |\n|                     5 |\n|                     2 |\n|                     1 |\n|                     0 |\n|                     2 |\n+-----------------------+\n6 rows in set\n\nobclient> SELECT ZIPF(1, 10, 0415) FROM TABLE(GENERATOR(6));\n+-------------------+\n| ZIPF(1, 10, 0415) |\n+-------------------+\n|                 8 |\n|                 8 |\n|                 8 |\n|                 8 |\n|                 8 |\n|                 8 |\n+-------------------+\n6 rows in set\n\nobclient> SELECT ZIPF(ABS(-1), 23, RANDOM()) FROM DUAL;\n+-----------------------------+\n| ZIPF(ABS(-1), 23, RANDOM()) |\n+-----------------------------+\n|                           1 |\n+-----------------------------+\n1 row in set\n", "obclient> SELECT  COUNT(*), ZIPF(1, 10, RANDOM()) v FROM TABLE(GENERATOR(10000)) GROUP BY v ORDER BY 1;\n+----------+------+\n| COUNT(*) | v    |\n+----------+------+\n|      350 |    9 |\n|      369 |    8 |\n|      450 |    7 |\n|      488 |    6 |\n|      559 |    5 |\n|      727 |    4 |\n|      877 |    3 |\n|     1100 |    2 |\n|     1755 |    1 |\n|     3325 |    0 |\n+----------+------+\n10 rows in set\n\nobclient> SELECT COUNT(*), ZIPF(2, 10, RANDOM()) v FROM TABLE(GENERATOR(10000)) GROUP BY v ORDER BY 1;\n+----------+------+\n| COUNT(*) | v    |\n+----------+------+\n|       69 |    9 |\n|       73 |    8 |\n|      102 |    7 |\n|      118 |    6 |\n|      187 |    5 |\n|      260 |    4 |\n|      419 |    3 |\n|      679 |    2 |\n|     1632 |    1 |\n|     6461 |    0 |\n+----------+------+\n10 rows in set\n\nobclient> SELECT COUNT(*), ZIPF(3, 10, RANDOM()) v FROM TABLE(GENERATOR(10000)) GROUP BY v ORDER BY 1;\n+----------+------+\n| COUNT(*) | v    |\n+----------+------+\n|        6 |    9 |\n|       12 |    8 |\n|       15 |    7 |\n|       35 |    5 |\n|       40 |    6 |\n|       77 |    4 |\n|      118 |    3 |\n|      292 |    2 |\n|     1106 |    1 |\n|     8299 |    0 |\n+----------+------+\n10 rows in set\n\nobclient> SELECT COUNT(*), ZIPF(4, 10, RANDOM()) v FROM TABLE(GENERATOR(10000)) GROUP BY v ORDER BY 1;\n+----------+------+\n| COUNT(*) | v    |\n+----------+------+\n|        1 |    8 |\n|        1 |    7 |\n|        1 |    9 |\n|        2 |    5 |\n|        6 |    6 |\n|       19 |    4 |\n|       35 |    3 |\n|      120 |    2 |\n|      548 |    1 |\n|     9267 |    0 |\n+----------+------+\n10 rows in set\n\nobclient> SELECT COUNT(*), ZIPF(5, 10, RANDOM()) v FROM TABLE(GENERATOR(10000)) GROUP BY v ORDER BY 1;\n+----------+------+\n| COUNT(*) | v    |\n+----------+------+\n|        2 |    5 |\n|        3 |    4 |\n|       18 |    3 |\n|       31 |    2 |\n|      309 |    1 |\n|     9637 |    0 |\n+----------+------+\n6 rows in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823363"], "Title": ["CONV"], "Feature": ["CONV(N, from_base, to_base)\n"], "Description": ["不同数基间转换数字。返回值为一个字符串，由 from_base 基转化为 to_base 基。", "输入参数 N 可以是一个整数或字符串。最小基数为 2，而最大基数为 36。如果 to_base 是一个负数，则 N 被看作一个带符号数。否则，N 被看作无符号数。", "from_base 如果是负数，则被当作整数处理，符号被忽略。", "N 参数仅支持 int 类型和字符串类型输入。", "from_base 和 to_base 参数仅支持十进制 int 类型输入，且取值范围为 [-36, -2] U [2, 36]。", "非法输入将导致报错，其中非法输入包括以下情况：", "from_base 或者 to_base 不是一个合法的十进制 int 类型输入；", "from_base 或者 to_base 超出 [-36,-2] ∪ [2,36] 的取值范围；", "N 不是一个合法的数字表示，例如取值超出 0～9，a～z，A～Z 的字符范围；", "N 超出了 from_base 基的取值范围，例如 from_base 为 2，而 N 取值为 3；", "N 的取值超出了 BIGINT 的最大表示范围，即 [-9223372036854775807, 9223372036854775807]。"], "Examples": ["obclient> SELECT CONV(9223372036854775807,10,2);\n+-----------------------------------------------------------------+\n| CONV(9223372036854775807,10,2)                                  |\n+-----------------------------------------------------------------+\n| 111111111111111111111111111111111111111111111111111111111111111 |\n+-----------------------------------------------------------------+\n1 row in set\n\nobclient> SELECT CONV('-acc',21,-7);\n+--------------------+\n| CONV('-acc',21,-7) |\n+--------------------+\n| -16425             |\n+--------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823344"], "Title": ["COS"], "Feature": ["COS(X)\n"], "Description": ["返回给定弧度 X 的余弦值。"], "Examples": ["obclient> SELECT COS(PI());\n+-----------+\n| COS(PI()) |\n+-----------+\n|        -1 |\n+-----------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823331"], "Title": ["COT"], "Feature": ["COT(X)\n"], "Description": ["返回 X 的余切值。"], "Examples": ["obclient> SELECT COT(-10), COT(10), COT(-0.5), COT(0.5);\n+---------------------+--------------------+--------------------+-------------------+\n| COT(-10)            | COT(10)            | COT(-0.5)          | COT(0.5)          |\n+---------------------+--------------------+--------------------+-------------------+\n| -1.5423510453569202 | 1.5423510453569202 | -1.830487721712452 | 1.830487721712452 |\n+---------------------+--------------------+--------------------+-------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823352"], "Title": ["CRC32"], "Feature": ["CRC32(expr)\n"], "Description": ["计算循环冗余校验值并返回 32 位无符号值。", "参数 expr 应该是一个字符串，如果不是，则可能被视为一个字符串。", "如果参数为 NULL，则结果为 NULL。"], "Examples": ["obclient>SELECT CRC32('hello-world');\n+-----------------------+\n| COS32('hello-world') |\n+-----------------------+\n|               2983461467|\n+-----------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823343"], "Title": ["DEGREES"], "Feature": ["DEGREES(x)\n"], "Description": ["DEGREES() 函数将参数 x 从弧度转换为度数并返回。"], "Examples": ["obclient> SELECT DEGREES(PI());\n+---------------+\n| DEGREES(PI()) |\n+---------------+\n|           180 |\n+---------------+\n1 row in set\n\nobclient> SELECT DEGREES(PI()/2);\n+-------------------+\n| DEGREES(PI()/2) |\n+-------------------+\n|                90 |\n+-------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823334"], "Title": ["EXP"], "Feature": ["EXP(X)\n"], "Description": ["返回自然底数 e 的 X 次幂。"], "Examples": ["obclient> SELECT EXP(2);\n+------------------+\n| EXP(2)           |\n+------------------+\n| 7.38905609893065 |\n+------------------+\n1 row in set\n\nobclient> SELECT EXP(0);\n+--------+\n| EXP(0) |\n+--------+\n|      1 |\n+--------+\n1 row in set\n\nobclient> SELECT EXP(-2);\n+--------------------+\n| EXP(-2)            |\n+--------------------+\n| 0.1353352832366127 |\n+--------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823349"], "Title": ["FLOOR"], "Feature": ["FLOOR(expr)\n"], "Description": ["和 CEIL(expr) 函数功能类似，返回小于或者等于指定表达式的最大整数。", "支持比较运算，结果为 BOOLEAN 值，被转化为数字类型处理，产生的结果为 1(TRUE)、0 (FALSE)。", "如果输入 NULL，返回值为 NULL。", "如果输入纯数字的字符串，支持自动转换成数字类型。", "返回值会被转化为一个 BIGINT。"], "Examples": ["obclient> SELECT FLOOR(1.2), FLOOR(-1.2), FLOOR(1+1.5), FLOOR(1=1),FLOOR(1<1),FLOOR(null);\n+------------+-------------+--------------+------------+------------+-------------+\n| FLOOR(1.2) | FLOOR(-1.2) | FLOOR(1+1.5) | FLOOR(1=1) | FLOOR(1<1) | FLOOR(null) |\n+------------+-------------+--------------+------------+------------+-------------+\n|          1 |          -2 |            2 |          1 |          0 |        NULL |\n+------------+-------------+--------------+------------+------------+-------------+\n1 row in set\n\nobclient> SELECT FLOOR('2');\n+------------+\n| FLOOR('2') |\n+------------+\n|          2 |\n+------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823361"], "Title": ["GENERATOR"], "Feature": ["GENERATOR(N)\n"], "Description": ["该函数为 Table Function 框架中的一个内置函数，即允许在 Table Function 中调用它，最终返回 N 行数据。N 是一个大于等于 0 的 64 位正整数。", "Table function 是一种在 SQL 语言中使用的函数，它能够返回一张数据表作为结果。与传统的 SQL 函数只能返回标量值不同，Table Function 可以返回多行、多列的数据集。", "TABLE(GENERATOR(N)) 并不真的生成任何数据，它只会产生连续 N 个 “行”，如果需要生成数据，需要在 SELECT 后面添加具体的表达式，例如常量、变量、函数、UDF 等。TABLE(GENERATOR(N)) 可以用于并行执行，例如并行 SELECT、并行 DML 等，但是负责读取 TABLE(GENERATOR(N)) 生成行的线程只会有一个，也就是说，包含 TABLE(GENERATOR(N)) 的 DFO 的 DOP=1。"], "Examples": ["obclient> SELECT COUNT(*) FROM TABLE(GENERATOR(100000));\n+----------+\n| COUNT(*) |\n+----------+\n|   100000 |\n+----------+\n1 row in set\n\nobclient> SELECT NORMAL(0, 1, RANDOM()) FROM TABLE(GENERATOR(5));\n+------------------------+\n| NORMAL(0, 1, RANDOM()) |\n|------------------------|\n|           0.227384164  |\n|           0.9945290748 |\n|          -0.2045078571 |\n|          -1.594607893  |\n|          -0.8213296842 |\n+------------------------+\n5 rows in set\n\nobclient> SELECT RANDSTR(1, ZIPF(1, 5, RANDOM())) str FROM TABLE(GENERATOR(5));\n+------------------------+\n|                    str |\n|------------------------|\n|                     A  |\n|                     D  |\n|                     A  |\n|                     A  |\n|                     C  |\n+------------------------+\n5 rows in set\n", "obclient> CREATE TABLE t1 (c1 BIGINT);\nQuery OK, 0 rows affected\n\nobclient> INSERT INTO t1 VALUES (1), (2);\nQuery OK, 2 rows affected\nRecords: 2  Duplicates: 0  Warnings: 0\n\nobclient> SELECT c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+------+----------------------+\n| c1   | random(1)            |\n+------+----------------------+\n|    1 | -6753783847308464280 |\n|    2 | -6707106347154343346 |\n|    1 |  -899926183391115878 |\n|    2 | -8835543475904200562 |\n|    1 | -2750444335953844424 |\n|    2 |  7588216632478230601 |\n+------+----------------------+\n6 rows in set\n\nobclient> EXPLAIN SELECT c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+------------------------------------------------------------------------+\n| Query Plan                                                             |\n+------------------------------------------------------------------------+\n| ==================================================================     |\n| |ID|OPERATOR                   |NAME       |EST.ROWS|EST.TIME(us)|     |\n| ------------------------------------------------------------------     |\n| |0 |NESTED-LOOP JOIN CARTESIAN |           |398     |14          |     |\n| |1 |├─FUNCTION_TABLE           |FUNC_TABLE1|199     |1           |     |\n| |2 |└─MATERIAL                 |           |2       |2           |     |\n| |3 |  └─TABLE FULL SCAN        |t1         |2       |2           |     |\n| ==================================================================     |\n| Outputs & filters:                                                     |\n| -------------------------------------                                  |\n|   0 - output([t1.c1], [RANDOM(1)]), filter(nil), rowset=256            |\n|       conds(nil), nl_params_(nil), use_batch=false                     |\n|   1 - output(nil), filter(nil)                                         |\n|       value(GENERATOR(3))                                              |\n|   2 - output([t1.c1]), filter(nil), rowset=256                         |\n|   3 - output([t1.c1]), filter(nil), rowset=256                         |\n|       access([t1.c1]), partitions(p0)                                  |\n|       is_index_back=false, is_global_index=false,                      |\n|       range_key([t1.__pk_increment]), range(MIN ; MAX)always true      |\n+------------------------------------------------------------------------+\n19 rows in set\n\nobclient> SELECT /*+ PARALLEL(2) */ c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+------+----------------------+\n| c1   | random(1)            |\n+------+----------------------+\n|    1 | -6753783847308464280 |\n|    2 | -6707106347154343346 |\n|    1 |  -899926183391115878 |\n|    2 | -8835543475904200562 |\n|    1 | -2750444335953844424 |\n|    2 |  7588216632478230601 |\n+------+----------------------+\n6 rows in set\n\nobclient> EXPLAIN SELECT /*+ PARALLEL(2) */ c1, RANDOM(1) FROM t1, TABLE(GENERATOR(3));\n+------------------------------------------------------------------------+\n| Query Plan                                                             |\n+------------------------------------------------------------------------+\n| ==================================================================     |\n| |ID|OPERATOR                   |NAME       |EST.ROWS|EST.TIME(us)|     |\n| ------------------------------------------------------------------     |\n| |0 |NESTED-LOOP JOIN CARTESIAN |           |398     |13          |     |\n| |1 |├─FUNCTION_TABLE           |FUNC_TABLE1|199     |1           |     |\n| |2 |└─MATERIAL                 |           |2       |2           |     |\n| |3 |  └─PX COORDINATOR         |           |2       |2           |     |\n| |4 |    └─EXCHANGE OUT DISTR   |:EX10000   |2       |2           |     |\n| |5 |      └─PX BLOCK ITERATOR  |           |2       |1           |     |\n| |6 |        └─TABLE FULL SCAN  |t1         |2       |1           |     |\n| ==================================================================     |\n| Outputs & filters:                                                     |\n| -------------------------------------                                  |\n|   0 - output([t1.c1], [RANDOM(1)]), filter(nil), rowset=256            |\n|       conds(nil), nl_params_(nil), use_batch=false                     |\n|   1 - output(nil), filter(nil)                                         |\n|       value(GENERATOR(3))                                              |\n|   2 - output([t1.c1]), filter(nil), rowset=256                         |\n|   3 - output([t1.c1]), filter(nil), rowset=256                         |\n|   4 - output([t1.c1]), filter(nil), rowset=256                         |\n|       dop=2                                                            |\n|   5 - output([t1.c1]), filter(nil), rowset=256                         |\n|   6 - output([t1.c1]), filter(nil), rowset=256                         |\n|       access([t1.c1]), partitions(p0)                                  |\n|       is_index_back=false, is_global_index=false,                      |\n|       range_key([t1.__pk_increment]), range(MIN ; MAX)always true      |\n+------------------------------------------------------------------------+\n26 rows in set\n"], "Category": ["Mathematical Functions"]}
{"HTML": ["https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823337"], "Title": ["ASIN"], "Feature": ["ASIN(X)\n"], "Description": ["返回 X 的反正弦值，即正弦为 X 的值。如果 X 的取值不在 [-1,1] 区间内，该函数返回 NULL。"], "Examples": ["obclient> SELECT ASIN(-10), ASIN(0), ASIN(10), ASIN(-0.5), ASIN(0.5);\n+-----------+---------+----------+---------------------+--------------------+\n| ASIN(-10) | ASIN(0) | ASIN(10) | ASIN(-0.5)          | ASIN(0.5)          |\n+-----------+---------+----------+---------------------+--------------------+\n|      NULL |       0 |     NULL | -0.5235987755982989 | 0.5235987755982989 |\n+-----------+---------+----------+---------------------+--------------------+\n1 row in set\n"], "Category": ["Mathematical Functions"]}
