{
    "HTML": [
        "https://www.oceanbase.com/docs/enterprise-oceanbase-database-cn-1000000000823333"
    ],
    "Title": [
        "RANDSTR"
    ],
    "Feature": [
        "RANDSTR(N, gen)\n"
    ],
    "Description": [
        "该函数按照指定长度生成一个随机字符串，字符串中的字符包含 A-Z、a-z 和 0-9。",
        "N 为生成的随机字符串长度：",
        "\n当 N < 0 时，返回 NULL。\n当 N = 0 时，返回空字符串。\n当 N > 0 并且 N <= max_allowed_packet 时，返回长度为 N 的随机字符串。\n当 N > max_allowed_packet 时，返回 NULL。其中 max_allowed_packet 为系统变量，默认值为 16777216。\n",
        "当 ",
        "N < 0",
        " 时，返回 ",
        "NULL",
        "。",
        "当 ",
        "N = 0",
        " 时，返回空字符串。",
        "当 ",
        "N > 0",
        " 并且 ",
        "N <= max_allowed_packet",
        " 时，返回长度为 N 的随机字符串。",
        "当 ",
        "N > max_allowed_packet",
        " 时，返回 ",
        "NULL",
        "。其中 ",
        "max_allowed_packet",
        " 为系统变量，默认值为 16777216。",
        "gen 为分布函数，可取值如下：",
        "\n常量，则每次调用 RANDSTR() 都会生成相同的随机串。\n返回整数值的随机函数，例如 RANDOM()。\n分布函数，例如均匀分布、zipf 分布、高斯分布等。\n",
        "常量，则每次调用 ",
        "RANDSTR()",
        " 都会生成相同的随机串。",
        "返回整数值的随机函数，例如 ",
        "RANDOM()",
        "。",
        "分布函数，例如均匀分布、zipf 分布、高斯分布等。",
        "随机串的生成算法：采用 LCG 算法生成 N 个随机值，据此选出 N 个字符组成随机串。所以当 N 很大时会消耗较多 CPU。例如下面生成了一个长度为 300 M 的随机串，耗时 1.7 秒。",
        "obclient> SELECT LENGTH(RANDSTR(300000000, 1)) FROM DUAL;;\n+------------------------------+\n| LENGTH(RANDSTR(300000000,1)) |\n+------------------------------+\n|                    300000000 |\n+------------------------------+\n1 row in set (1.73 sec)\n"
    ],
    "Examples": [
        "obclient> SELECT RANDSTR(10, RANDOM()) FROM TABLE(GENERATOR(7));\n+-----------------------+\n| RANDSTR(10, RANDOM()) |\n+-----------------------+\n| TGfdBAZ1BP            |\n| VvMbD2bChR            |\n| VNSB6MpgQw            |\n| 3QWYQYQVJ4            |\n| CpyE58jM0o            |\n| vBvsJBGGmX            |\n| rg3Pkde0UJ            |\n+-----------------------+\n7 rows in set\n",
        "obclient> SELECT RANDSTR(1, ZIPF(1, 10, RANDOM())) s, COUNT(*) FROM TABLE(GENERATOR(1000)) GROUP BY s ORDER BY 1 ASC;\n+------+----------+\n| s    | COUNT(*) |\n+------+----------+\n| 0    |       27 |\n| 1    |       41 |\n| 4    |       32 |\n| 5    |       54 |\n| 8    |       64 |\n| 9    |       69 |\n| C    |       88 |\n| D    |      125 |\n| G    |      168 |\n| H    |      332 |\n+------+----------+\n10 rows in set\n",
        "obclient> SELECT RANDSTR(5, 40) FROM DUAL;\n+----------------+\n| RANDSTR(5, 40) |\n+----------------+\n| UU3g0          |\n+----------------+\n1 row in set\n\nobclient> SELECT RANDSTR(1, 40) FROM DUAL;\n+----------------+\n| RANDSTR(1, 40) |\n+----------------+\n| U              |\n+----------------+\n1 row in set\n\nobclient> SELECT RANDSTR(0, 40) FROM DUAL;\n+----------------+\n| RANDSTR(0, 40) |\n+----------------+\n|                |\n+----------------+\n1 row in set\n\nobclient> SELECT RANDSTR(-1, 40) FROM DUAL;\n+-----------------+\n| RANDSTR(-1, 40) |\n+-----------------+\n| NULL            |\n+-----------------+\n1 row in set\n",
        "obclient> SELECT RANDSTR(10, 1442) FROM TABLE(GENERATOR(7));\n+-------------------+\n| RANDSTR(10, 1442) |\n+-------------------+\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n+-------------------+\n7 rows in set\n\nobclient> SELECT RANDSTR(10, 1442) FROM TABLE(GENERATOR(7));\n+-------------------+\n| RANDSTR(10, 1442) |\n+-------------------+\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n| 4dTm5bOtGc        |\n+-------------------+\n7 rows in set\n"
    ],
    "Category": [
        "Mathematical Functions"
    ]
}