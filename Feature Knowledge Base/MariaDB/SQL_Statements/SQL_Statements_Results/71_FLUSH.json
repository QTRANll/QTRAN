{
    "HTML": [
        "https://mariadb.com//kb/en/flush/"
    ],
    "Title": [
        "FLUSH"
    ],
    "Feature": [
        "FLUSH [NO_WRITE_TO_BINLOG | LOCAL]\n    flush_option [, flush_option] ...\n",
        "or when flushing tables:",
        "FLUSH [NO_WRITE_TO_BINLOG | LOCAL] TABLES [table_list]  [table_flush_option]\n",
        "\nwhere table_list is a list of tables separated by , (comma)."
    ],
    "Description": [
        "The FLUSH statement clears or reloads various internal caches used by\nMariaDB. To execute FLUSH, you must have the RELOAD\nprivilege. See GRANT.",
        "The RESET statement is similar to FLUSH. See\nRESET.",
        "You cannot issue a FLUSH statement from within a stored function or a trigger. Doing so within a stored procedure is permitted, as long as it is not called by a stored function or trigger. See Stored Routine Limitations, Stored Function Limitations and Trigger Limitations.",
        "If a listed table is a view, an error like the following will be produced:",
        "ERROR 1347 (HY000): 'test.v' is not BASE TABLE\n",
        "By default, FLUSH statements are written to the binary log and will be replicated. The NO_WRITE_TO_BINLOG keyword (LOCAL is an alias) will ensure the statement is not written to the binary log. ",
        "The different flush options are:",
        "OptionDescription\nCHANGED_PAGE_BITMAPSXtraDB only. Internal command used for backup purposes. See the Information Schema CHANGED_PAGE_BITMAPS Table.\nCLIENT_STATISTICSReset client statistics (see SHOW CLIENT_STATISTICS).\nDES_KEY_FILEReloads the DES key file (Specified with the --des-key-file startup option).\nHOSTSFlush the hostname cache (used for converting ip to host names and for unblocking blocked hosts. See max_connect_errors and performance_schema.host_cache\nINDEX_STATISTICSReset index statistics (see SHOW INDEX_STATISTICS).\n[ERROR | ENGINE | GENERAL | SLOW | RELAY] LOGSClose and reopen the specified log type, or all log types if none are specified. FLUSH RELAY LOGS [connection-name] can be used to flush the relay logs for a specific connection. Only one connection can be specified per FLUSH command. See Multi-source replication. FLUSH ENGINE LOGS will delete all unneeded Aria redo logs. FLUSH BINARY LOGS DELETE_DOMAIN_ID=(list-of-domains) can be used to discard obsolete GTID domains from the server's binary log state. In order for this to be successful, no event group from the listed GTID domains can be present in existing binary log files. If some still exist, then they must be purged prior to executing this command. If the command completes successfully, then it also rotates the binary log.\nBINARY LOGSFLUSH BINARY LOGS rotates the current binary log.\nBINARY LOGS DELETE_DOMAIN_ID=(list-of-domains)FLUSH BINARY LOGS DELETE_DOMAIN_ID can be used to discard obsolete GTID domains from the server's binary log state. In order for this to be successful, no event group from the listed GTID domains can be present in existing binary log files. If some still exist, then they must be purged prior to executing this command. If the command completes successfully, then it also rotates the binary log.\nMASTERDeprecated option, use RESET MASTER instead.\nPRIVILEGESReload all privileges from the privilege tables in the mysql database. If the server is started with --skip-grant-table option, this will activate the privilege tables again.\nQUERY CACHEDefragment the query cache to better utilize its memory. If you want to reset the query cache, you can do it with RESET QUERY CACHE.\nQUERY_RESPONSE_TIMESee the QUERY_RESPONSE_TIME plugin.\nSLAVEDeprecated option, use RESET REPLICA or RESET SLAVE instead.\nSSLUsed to dynamically reinitialize the server's TLS context by reloading the files defined by several TLS system variables. See FLUSH SSL for more information.\n[ GLOBAL | SESSION ] STATUSResets all server status variables that can be reset to 0. Not all global status variables support this, so not all global values are reset. From MariaDB 11.5, GLOBAL or SESSION can be specified. See FLUSH STATUS for more information.\nTABLEClose tables given as options or all open tables if no table list was used. From MariaDB 10.4.1, using without any table list will only close tables not in use, and tables not locked by the FLUSH TABLES connection. If there are no locked tables, FLUSH TABLES will be instant and will not cause any waits, as it no longer waits for tables in use. When a table list is provided, from MariaDB 10.4.1, the server will wait for the end of any transactions that are using the tables. Previously, FLUSH TABLES only waited for the statements to complete.\nTABLESSame as FLUSH TABLE.\nTABLES ... FOR EXPORTFor InnoDB tables, flushes table changes to disk to permit binary table copies while the server is running. See FLUSH TABLES ... FOR EXPORT for more.\nTABLES WITH READ LOCKCloses all open tables. New tables are only allowed to be opened with read locks until an UNLOCK TABLES is given.\nTABLES WITH READ LOCK AND DISABLE CHECKPOINTAs TABLES WITH READ LOCK but also disable all checkpoint writes by transactional table engines. This is useful when doing a disk snapshot of all tables.\nTABLE_STATISTICSReset table statistics (see SHOW TABLE_STATISTICS).\nUSER_RESOURCESResets all per hour user resources. This enables clients that have exhausted their resources to connect again.\nUSER_STATISTICSReset user statistics (see SHOW USER_STATISTICS).\nUSER_VARIABLESReset user variables (see User-defined variables).\n\n",
        "You can also use the mariadb-admin client to flush things. Use mariadb-admin --help to examine what flush commands it supports."
    ],
    "Examples": [],
    "Category": [
        "Administrative SQL Statements"
    ]
}