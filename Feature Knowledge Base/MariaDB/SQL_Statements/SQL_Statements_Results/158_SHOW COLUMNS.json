{
    "HTML": [
        "https://mariadb.com//kb/en/show-columns/"
    ],
    "Title": [
        "SHOW COLUMNS"
    ],
    "Feature": [
        "SHOW [FULL] {COLUMNS | FIELDS} FROM tbl_name [FROM db_name]\n    [LIKE 'pattern' | WHERE expr]\n"
    ],
    "Description": [
        "SHOW COLUMNS displays information about the columns in a\ngiven table. It also works for views. The LIKE clause, if\npresent on its own, indicates which column names to match. The WHERE and LIKE clauses can be given to select rows using more general conditions, as discussed in Extended SHOW.",
        "If the data types differ from what you expect them to be based on a\nCREATE TABLE statement, note that MariaDB sometimes changes\ndata types when you create or alter a table. The conditions under which this\noccurs are described in the Silent Column Changes article.",
        "The FULL keyword causes the output to include the column\ncollation and comments, as well as the privileges you have for each column.",
        "You can use db_name.tbl_name as an alternative to the\ntbl_name FROM db_name syntax. In other words, these two\nstatements are equivalent:",
        "SHOW COLUMNS FROM mytable FROM mydb;\nSHOW COLUMNS FROM mydb.mytable;\n",
        "SHOW COLUMNS displays the following values for each table\ncolumn:",
        "Field indicates the column name.",
        "Type indicates the column data type.",
        "Collation indicates the collation for non-binary string columns, or\nNULL for other columns. This value is displayed only if you use the\nFULL keyword.",
        "The Null field contains YES if NULL values can be stored in the column,\nNO if not.",
        "The Key field indicates whether the column is indexed:",
        "If Key is empty, the column either is not indexed or is indexed only as a\n  secondary column in a multiple-column, non-unique index.\nIf Key is PRI, the column is a PRIMARY KEY or\n  is one of the columns in a multiple-column PRIMARY KEY.\nIf Key is UNI, the column is the first column of a unique-valued\n  index that cannot contain NULL values.\nIf Key is MUL, multiple occurrences of a given value are allowed\n  within the column. The column is the first column of a non-unique index or a\n  unique-valued index that can contain NULL values.\n",
        "If more than one of the Key values applies to a given column of a\ntable, Key displays the one with the highest priority, in the order\nPRI, UNI, MUL.",
        "A UNIQUE index may be displayed as PRI if\nit cannot contain NULL values and there is no\nPRIMARY KEY in the table. A UNIQUE index\nmay display as MUL if several columns form a composite\nUNIQUE index; although the combination of the columns is\nunique, each column can still hold multiple occurrences of a given value.",
        "The Default field indicates the default value that is assigned to the\ncolumn.",
        "The Extra field contains any additional information that is available about a given column.",
        "ValueDescription\nAUTO_INCREMENTThe column was created with the AUTO_INCREMENT keyword.\nPERSISTENTThe column was created with the PERSISTENT keyword. (New in 5.3)\nVIRTUALThe column was created with the VIRTUAL keyword. (New in 5.3)\non update CURRENT_TIMESTAMPThe column is a TIMESTAMP column that is automatically updated on INSERT and UPDATE.\n\n",
        "Privileges indicates the privileges you have for the column. This\nvalue is displayed only if you use the FULL keyword.",
        "Comment indicates any comment the column has. This value is displayed\nonly if you use the FULL keyword.",
        "SHOW FIELDS is a synonym for\nSHOW COLUMNS. Also DESCRIBE and EXPLAIN can be used as shortcuts.",
        "You can also list a table's columns with: ",
        "mariadb-show db_name tbl_name\n",
        "See the mariadb-show command for more details.",
        "The DESCRIBE statement provides information similar to SHOW COLUMNS. The information_schema.COLUMNS table provides similar, but more complete, information.",
        "The SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements also provide information about tables."
    ],
    "Examples": [
        "SHOW COLUMNS FROM city;\n+------------+----------+------+-----+---------+----------------+\n| Field      | Type     | Null | Key | Default | Extra          |\n+------------+----------+------+-----+---------+----------------+\n| Id         | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name       | char(35) | NO   |     |         |                |\n| Country    | char(3)  | NO   | UNI |         |                |\n| District   | char(20) | YES  | MUL |         |                |\n| Population | int(11)  | NO   |     | 0       |                |\n+------------+----------+------+-----+---------+----------------+\n",
        "SHOW COLUMNS FROM employees WHERE Type LIKE 'Varchar%';\n+---------------+-------------+------+-----+---------+-------+\n| Field         | Type        | Null | Key | Default | Extra |\n+---------------+-------------+------+-----+---------+-------+\n| first_name    | varchar(30) | NO   | MUL | NULL    |       |\n| last_name     | varchar(40) | NO   |     | NULL    |       |\n| position      | varchar(25) | NO   |     | NULL    |       |\n| home_address  | varchar(50) | NO   |     | NULL    |       |\n| home_phone    | varchar(12) | NO   |     | NULL    |       |\n| employee_code | varchar(25) | NO   | UNI | NULL    |       |\n+---------------+-------------+------+-----+---------+-------+\n"
    ],
    "Category": [
        "Administrative SQL Statements"
    ]
}