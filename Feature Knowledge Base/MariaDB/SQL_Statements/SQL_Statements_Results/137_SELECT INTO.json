{
    "HTML": [
        "https://mariadb.com//kb/en/selectinto/"
    ],
    "Title": [
        "SELECT INTO"
    ],
    "Feature": [
        "SELECT col_name [, col_name] ...\n    INTO var_name [, var_name] ...\n    table_expr\n"
    ],
    "Description": [
        "SELECT ... INTO enables selected columns to be stored directly\ninto variables. No resultset is produced. The query should return a single row. If the query\nreturns no rows, a warning with error code 1329 occurs (No data), and\nthe variable values remain unchanged. If the query returns multiple\nrows, error 1172 occurs (Result consisted of more than one row). If it\nis possible that the statement may retrieve multiple rows, you can use\nLIMIT 1 to limit the result set to a single row.",
        "The INTO clause can also be specified at the end of the statement.",
        "In the context of such statements that occur as part of events\nexecuted by the Event Scheduler, diagnostics messages (not only\nerrors, but also warnings) are written to the error log, and, on\nWindows, to the application event log.",
        "This statement can be used with both local variables and user-defined variables.",
        "For the complete syntax, see SELECT.",
        "Another way to set a variable's value is the SET statement.",
        "SELECT ... INTO results are not stored in the query cache even if SQL_CACHE is specified."
    ],
    "Examples": [
        "SELECT id, data INTO @x,@y \nFROM test.t1 LIMIT 1;\nSELECT * from t1 where t1.a=@x and t1.b=@y\n",
        "SELECT  * INTO @x FROM (SELECT t1.a FROM t1 UNION SELECT t2.a FROM t2) dt;\n"
    ],
    "Category": [
        "Programmatic and Compound Statements"
    ]
}