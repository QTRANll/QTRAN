{
    "HTML": [
        "https://mariadb.com//kb/en/alter-event/"
    ],
    "Title": [
        "ALTER EVENT"
    ],
    "Feature": [
        "ALTER\n    [DEFINER = { user | CURRENT_USER }]\n    EVENT event_name\n    [ON SCHEDULE schedule]\n    [ON COMPLETION [NOT] PRESERVE]\n    [RENAME TO new_event_name]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT 'comment']\n    [DO sql_statement]\n"
    ],
    "Description": [
        "The ALTER EVENT statement is used to change one or more of the\ncharacteristics of an existing event without the need to drop and recreate it.\nThe syntax for each of the DEFINER, ON SCHEDULE, ON COMPLETION,\nCOMMENT, ENABLE / DISABLE, and DO clauses is exactly the\nsame as when used with CREATE EVENT.",
        "This statement requires the EVENT privilege.\nWhen a user executes a successful ALTER EVENT statement, that user becomes\nthe definer for the affected event.",
        "(In MySQL 5.1.11 and earlier, an event could be altered only by its definer, or\nby a user having the SUPER privilege.)",
        "ALTER EVENT works only with an existing event:",
        "ALTER EVENT no_such_event ON SCHEDULE EVERY '2:3' DAY_HOUR;\nERROR 1539 (HY000): Unknown event 'no_such_event'\n"
    ],
    "Examples": [
        "ALTER EVENT myevent \n  ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 2 HOUR \n  DO \n    UPDATE myschema.mytable SET mycol = mycol + 1;\n"
    ],
    "Category": [
        "Administrative SQL Statements"
    ]
}