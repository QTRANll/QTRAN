{
    "HTML": [
        "https://mariadb.com//kb/en/json_unquote/"
    ],
    "Title": [
        "JSON_UNQUOTE"
    ],
    "Feature": [
        "JSON_UNQUOTE(val)\n"
    ],
    "Description": [
        "Unquotes a JSON value, returning a string, or NULL if the argument is null. ",
        "An error will occur if the given value begins and ends with double quotes and is an invalid JSON string literal.",
        "If the given value is not a JSON string, value is passed through unmodified.",
        "Certain character sequences have special meanings within a string. Usually, a backslash is ignored, but the escape sequences in the table below are recognised by MariaDB, unless the SQL Mode is set to NO_BACKSLASH_ESCAPES SQL.",
        "Escape sequenceCharacter\n\\\"Double quote (\")\n\\bBackslash\n\\fFormfeed\n\\nNewline (linefeed)\n\\rCarriage return\n\\tTab\n\\\\Backslash (\\)\n\\uXXXXUTF-8 bytes for Unicode value XXXX\n\n"
    ],
    "Examples": [
        "SELECT JSON_UNQUOTE('\"Monty\"');\n+-------------------------+\n| JSON_UNQUOTE('\"Monty\"') |\n+-------------------------+\n| Monty                   |\n+-------------------------+\n",
        "SELECT JSON_UNQUOTE('Si\\bng\\ting');\n+-----------------------------+\n| JSON_UNQUOTE('Si\\bng\\ting') |\n+-----------------------------+\n| Sng\ting                   |\n+-----------------------------+\n",
        "SET @@sql_mode = 'NO_BACKSLASH_ESCAPES';\n\nSELECT JSON_UNQUOTE('Si\\bng\\ting');\n+-----------------------------+\n| JSON_UNQUOTE('Si\\bng\\ting') |\n+-----------------------------+\n| Si\\bng\\ting                 |\n+-----------------------------+\n"
    ],
    "Category": [
        "JSON Functions"
    ]
}