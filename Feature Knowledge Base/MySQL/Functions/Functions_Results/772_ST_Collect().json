{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/built-in-function-reference.html",
        "https://dev.mysql.com/doc/refman/8.4/en/spatial-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference",
        "14.16.1 Spatial Function Reference"
    ],
    "Feature": [
        "ST_Collect([DISTINCT]\n          g)\n          [over_clause]"
    ],
    "Description": [
        "Aggregate spatial values into collection",
        "\nST_Collect([DISTINCT]\n          g)\n          [over_clause]\n",
        "\n          Aggregates geometry values and returns a single geometry\n          collection value. With the DISTINCT option,\n          returns the aggregation of the distinct geometry arguments.\n        ",
        "\n          As with other aggregate functions, GROUP BY\n          may be used to group arguments into subsets.\n          ST_Collect() returns an\n          aggregate value for each subset.\n        ",
        "\n          This function executes as a window function if\n          over_clause is present.\n          over_clause is as described in\n          Section\u00a014.20.2, \u201cWindow Function Concepts and Syntax\u201d. In contrast to most\n          aggregate functions that support windowing,\n          ST_Collect() permits use of\n          over_clause together with\n          DISTINCT.\n        ",
        "\nST_Collect() handles its\n          arguments as follows:\n",
        "\n\nNULL arguments are ignored.\n            \n              If all arguments are NULL or the\n              aggregate result is empty, the return value is\n              NULL.\n            \n              If any geometry argument is not a syntactically\n              well-formed geometry, an\n              ER_GIS_INVALID_DATA error\n              occurs.\n            \n              If any geometry argument is a syntactically well-formed\n              geometry in an undefined spatial reference system (SRS),\n              an ER_SRS_NOT_FOUND error\n              occurs.\n            \n              If there are multiple geometry arguments and those\n              arguments are in the same SRS, the return value is in that\n              SRS. If those arguments are not in the same SRS, an\n              ER_GIS_DIFFERENT_SRIDS_AGGREGATION\n              error occurs.\n            \n              The result is the narrowest\n              MultiXxx or\n              GeometryCollection value possible, with\n              the result type determined from the\n              non-NULL geometry arguments as follows:\n\n\n\n                  If all arguments are Point values,\n                  the result is a MultiPoint value.\n                \n                  If all arguments are LineString\n                  values, the result is a\n                  MultiLineString value.\n                \n                  If all arguments are Polygon\n                  values, the result is a\n                  MultiPolygon value.\n                \n                  Otherwise, the arguments are a mix of geometry types\n                  and the result is a\n                  GeometryCollection value.\n\n\n\n",
        "\n          This example data set shows hypothetical products by year and\n          location of manufacture:\n        ",
        "Press CTRL+C to copy CREATE TABLE product (\n  year INTEGER,\n  product VARCHAR(256),\n  location Geometry\n);\n\nINSERT INTO product\n(year,  product,     location) VALUES\n(2000, \"Calculator\", ST_GeomFromText('point(60 -24)',4326)),\n(2000, \"Computer\"  , ST_GeomFromText('point(28 -77)',4326)),\n(2000, \"Abacus\"    , ST_GeomFromText('point(28 -77)',4326)),\n(2000, \"TV\"        , ST_GeomFromText('point(38  60)',4326)),\n(2001, \"Calculator\", ST_GeomFromText('point(60 -24)',4326)),\n(2001, \"Computer\"  , ST_GeomFromText('point(28 -77)',4326));",
        "\n          Some sample queries using\n          ST_Collect() on the data set:\n        ",
        "Press CTRL+C to copy mysql> SELECT ST_AsText(ST_Collect(location)) AS result\n       FROM product;\n+------------------------------------------------------------------+\n| result                                                           |\n+------------------------------------------------------------------+\n| MULTIPOINT((60 -24),(28 -77),(28 -77),(38 60),(60 -24),(28 -77)) |\n+------------------------------------------------------------------+\n\nmysql> SELECT ST_AsText(ST_Collect(DISTINCT location)) AS result\n       FROM product;\n+---------------------------------------+\n| result                                |\n+---------------------------------------+\n| MULTIPOINT((60 -24),(28 -77),(38 60)) |\n+---------------------------------------+\n\nmysql> SELECT year, ST_AsText(ST_Collect(location)) AS result\n       FROM product GROUP BY year;\n+------+------------------------------------------------+\n| year | result                                         |\n+------+------------------------------------------------+\n| 2000 | MULTIPOINT((60 -24),(28 -77),(28 -77),(38 60)) |\n| 2001 | MULTIPOINT((60 -24),(28 -77))                  |\n+------+------------------------------------------------+\n\nmysql> SELECT year, ST_AsText(ST_Collect(DISTINCT location)) AS result\n       FROM product GROUP BY year;\n+------+---------------------------------------+\n| year | result                                |\n+------+---------------------------------------+\n| 2000 | MULTIPOINT((60 -24),(28 -77),(38 60)) |\n| 2001 | MULTIPOINT((60 -24),(28 -77))         |\n+------+---------------------------------------+\n\n# selects nothing\nmysql> SELECT ST_Collect(location) AS result\n       FROM product WHERE year = 1999;\n+--------+\n| result |\n+--------+\n| NULL   |\n+--------+\n\nmysql> SELECT ST_AsText(ST_Collect(location)\n         OVER (ORDER BY year, product ROWS BETWEEN 1 PRECEDING AND CURRENT ROW))\n         AS result\n       FROM product;\n+-------------------------------+\n| result                        |\n+-------------------------------+\n| MULTIPOINT((28 -77))          |\n| MULTIPOINT((28 -77),(60 -24)) |\n| MULTIPOINT((60 -24),(28 -77)) |\n| MULTIPOINT((28 -77),(38 60))  |\n| MULTIPOINT((38 60),(60 -24))  |\n| MULTIPOINT((60 -24),(28 -77)) |\n+-------------------------------+"
    ],
    "Examples": [
        "CREATE TABLE product (\n  year INTEGER,\n  product VARCHAR(256),\n  location Geometry\n);\n\nINSERT INTO product\n(year,  product,     location) VALUES\n(2000, \"Calculator\", ST_GeomFromText('point(60 -24)',4326)),\n(2000, \"Computer\"  , ST_GeomFromText('point(28 -77)',4326)),\n(2000, \"Abacus\"    , ST_GeomFromText('point(28 -77)',4326)),\n(2000, \"TV\"        , ST_GeomFromText('point(38  60)',4326)),\n(2001, \"Calculator\", ST_GeomFromText('point(60 -24)',4326)),\n(2001, \"Computer\"  , ST_GeomFromText('point(28 -77)',4326));",
        "mysql> SELECT ST_AsText(ST_Collect(location)) AS result\n       FROM product;\n+------------------------------------------------------------------+\n| result                                                           |\n+------------------------------------------------------------------+\n| MULTIPOINT((60 -24),(28 -77),(28 -77),(38 60),(60 -24),(28 -77)) |\n+------------------------------------------------------------------+\n\nmysql> SELECT ST_AsText(ST_Collect(DISTINCT location)) AS result\n       FROM product;\n+---------------------------------------+\n| result                                |\n+---------------------------------------+\n| MULTIPOINT((60 -24),(28 -77),(38 60)) |\n+---------------------------------------+\n\nmysql> SELECT year, ST_AsText(ST_Collect(location)) AS result\n       FROM product GROUP BY year;\n+------+------------------------------------------------+\n| year | result                                         |\n+------+------------------------------------------------+\n| 2000 | MULTIPOINT((60 -24),(28 -77),(28 -77),(38 60)) |\n| 2001 | MULTIPOINT((60 -24),(28 -77))                  |\n+------+------------------------------------------------+\n\nmysql> SELECT year, ST_AsText(ST_Collect(DISTINCT location)) AS result\n       FROM product GROUP BY year;\n+------+---------------------------------------+\n| year | result                                |\n+------+---------------------------------------+\n| 2000 | MULTIPOINT((60 -24),(28 -77),(38 60)) |\n| 2001 | MULTIPOINT((60 -24),(28 -77))         |\n+------+---------------------------------------+\n\n# selects nothing\nmysql> SELECT ST_Collect(location) AS result\n       FROM product WHERE year = 1999;\n+--------+\n| result |\n+--------+\n| NULL   |\n+--------+\n\nmysql> SELECT ST_AsText(ST_Collect(location)\n         OVER (ORDER BY year, product ROWS BETWEEN 1 PRECEDING AND CURRENT ROW))\n         AS result\n       FROM product;\n+-------------------------------+\n| result                        |\n+-------------------------------+\n| MULTIPOINT((28 -77))          |\n| MULTIPOINT((28 -77),(60 -24)) |\n| MULTIPOINT((60 -24),(28 -77)) |\n| MULTIPOINT((28 -77),(38 60))  |\n| MULTIPOINT((38 60),(60 -24))  |\n| MULTIPOINT((60 -24),(28 -77)) |\n+-------------------------------+"
    ],
    "Category": [
        "Built-In Functions",
        "Spatial Analysis Functions"
    ],
    "Reference HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/spatial-aggregate-functions.html#function_st-collect"
    ],
    "Feature Type": [
        "Function"
    ]
}