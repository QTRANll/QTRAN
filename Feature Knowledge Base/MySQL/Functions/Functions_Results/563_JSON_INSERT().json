{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/built-in-function-reference.html",
        "https://dev.mysql.com/doc/refman/8.4/en/json-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference",
        "14.17.1 JSON Function Reference"
    ],
    "Feature": [
        "JSON_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...)"
    ],
    "Description": [
        "Insert data into JSON document",
        "\nJSON_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...)\n",
        "\n          Inserts data into a JSON document and returns the result.\n          Returns NULL if any argument is\n          NULL. An error occurs if the\n          json_doc argument is not a valid\n          JSON document or any path argument\n          is not a valid path expression or contains a\n          * or ** wildcard.\n        ",
        "\n          The path-value pairs are evaluated left to right. The document\n          produced by evaluating one pair becomes the new value against\n          which the next pair is evaluated.\n        ",
        "\n          A path-value pair for an existing path in the document is\n          ignored and does not overwrite the existing document value. A\n          path-value pair for a nonexisting path in the document adds\n          the value to the document if the path identifies one of these\n          types of values:\n",
        "\n\n              A member not present in an existing object. The member is\n              added to the object and associated with the new value.\n            \n              A position past the end of an existing array. The array is\n              extended with the new value. If the existing value is not\n              an array, it is autowrapped as an array, then extended\n              with the new value.\n\n",
        "\n          Otherwise, a path-value pair for a nonexisting path in the\n          document is ignored and has no effect.\n        ",
        "\n          For a comparison of\n          JSON_INSERT(),\n          JSON_REPLACE(), and\n          JSON_SET(), see the discussion\n          of JSON_SET().\n        ",
        "Press CTRL+C to copy mysql> SET @j = '{ \"a\": 1, \"b\": [2, 3]}';\nmysql> SELECT JSON_INSERT(@j, '$.a', 10, '$.c', '[true, false]');\n+----------------------------------------------------+\n| JSON_INSERT(@j, '$.a', 10, '$.c', '[true, false]') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+",
        "\n          The third and final value listed in the result is a quoted\n          string and not an array like the second one (which is not\n          quoted in the output); no casting of values to the JSON type\n          is performed. To insert the array as an array, you must\n          perform such casts explicitly, as shown here:\n        ",
        "Press CTRL+C to copy mysql> SELECT JSON_INSERT(@j, '$.a', 10, '$.c', CAST('[true, false]' AS JSON));\n+------------------------------------------------------------------+\n| JSON_INSERT(@j, '$.a', 10, '$.c', CAST('[true, false]' AS JSON)) |\n+------------------------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [true, false]}                        |\n+------------------------------------------------------------------+\n1 row in set (0.00 sec)"
    ],
    "Examples": [
        "mysql> SET @j = '{ \"a\": 1, \"b\": [2, 3]}';\nmysql> SELECT JSON_INSERT(@j, '$.a', 10, '$.c', '[true, false]');\n+----------------------------------------------------+\n| JSON_INSERT(@j, '$.a', 10, '$.c', '[true, false]') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+",
        "mysql> SELECT JSON_INSERT(@j, '$.a', 10, '$.c', CAST('[true, false]' AS JSON));\n+------------------------------------------------------------------+\n| JSON_INSERT(@j, '$.a', 10, '$.c', CAST('[true, false]' AS JSON)) |\n+------------------------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [true, false]}                        |\n+------------------------------------------------------------------+\n1 row in set (0.00 sec)"
    ],
    "Category": [
        "Built-In Functions",
        "JSON Functions"
    ],
    "Reference HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/json-modification-functions.html#function_json-insert"
    ],
    "Feature Type": [
        "Function"
    ]
}