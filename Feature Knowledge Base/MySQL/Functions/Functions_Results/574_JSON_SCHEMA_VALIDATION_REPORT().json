{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/built-in-function-reference.html",
        "https://dev.mysql.com/doc/refman/8.4/en/json-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference",
        "14.17.1 JSON Function Reference"
    ],
    "Feature": [
        "JSON_SCHEMA_VALIDATION_REPORT(schema,document)"
    ],
    "Description": [
        "Validate JSON document against JSON schema; returns report in JSON",
        "\nJSON_SCHEMA_VALIDATION_REPORT(schema,document)\n",
        "\n          Validates a JSON document against a\n          JSON schema. Both\n          schema and\n          document are required. As with\n          JSON_VALID_SCHEMA(), the schema must be a valid JSON object,\n          and the document must be a valid JSON document. Provided that\n          these conditions are met, the function returns a report, as a\n          JSON document, on the outcome of the validation. If the JSON\n          document is considered valid according to the JSON Schema, the\n          function returns a JSON object with one property\n          valid having the value \"true\". If the JSON\n          document fails validation, the function returns a JSON object\n          which includes the properties listed here:\n",
        "\n\nvalid: Always \"false\" for a failed\n              schema validation\n            \nreason: A human-readable string\n              containing the reason for the failure\n            \nschema-location: A JSON pointer URI\n              fragment identifier indicating where in the JSON schema\n              the validation failed (see Note following this list)\n            \ndocument-location: A JSON pointer URI\n              fragment identifier indicating where in the JSON document\n              the validation failed (see Note following this list)\n            \nschema-failed-keyword: A string\n              containing the name of the keyword or property in the JSON\n              schema that was violated\n\n",
        "\n\nNote\n\n\n            JSON pointer URI fragment identifiers are defined in\n            RFC\n            6901 - JavaScript Object Notation (JSON) Pointer.\n            (These are not the same as the JSON\n            path notation used by\n            JSON_EXTRACT() and other\n            MySQL JSON functions.) In this notation,\n            # represents the entire document, and\n            #/myprop represents the portion of the\n            document included in the top-level property named\n            myprop. See the specification just cited\n            and the examples shown later in this section for more\n            information.\n\n",
        "\n          In this example, we set a user variable\n          @schema to the value of a JSON schema for\n          geographical coordinates, and another one\n          @document to the value of a JSON document\n          containing one such coordinate. We then verify that\n          @document validates according to\n          @schema by using them as the arguments to\n          JSON_SCHEMA_VALIDATION_REORT():\n        ",
        "Press CTRL+C to copy mysql> SET @schema = '{\n    '>  \"id\": \"http://json-schema.org/geo\",\n    '> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    '> \"description\": \"A geographical coordinate\",\n    '> \"type\": \"object\",\n    '> \"properties\": {\n    '>   \"latitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -90,\n    '>     \"maximum\": 90\n    '>   },\n    '>   \"longitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -180,\n    '>     \"maximum\": 180\n    '>   }\n    '> },\n    '> \"required\": [\"latitude\", \"longitude\"]\n    '>}';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SET @document = '{\n    '> \"latitude\": 63.444697,\n    '> \"longitude\": 10.445118\n    '>}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALIDATION_REPORT(@schema, @document);\n+---------------------------------------------------+\n| JSON_SCHEMA_VALIDATION_REPORT(@schema, @document) |\n+---------------------------------------------------+\n| {\"valid\": true}                                   |\n+---------------------------------------------------+\n1 row in set (0.00 sec)",
        "\n          Now we set @document such that it specifies\n          an illegal value for one of its properties, like this:\n        ",
        "Press CTRL+C to copy mysql> SET @document = '{\n    '> \"latitude\": 63.444697,\n    '> \"longitude\": 310.445118\n    '> }';",
        "\n          Validation of @document now fails when\n          tested with\n          JSON_SCHEMA_VALIDATION_REPORT(). The output\n          from the function call contains detailed information about the\n          failure (with the function wrapped by\n          JSON_PRETTY() to provide better\n          formatting), as shown here:\n        ",
        "Press CTRL+C to copy mysql> SELECT JSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document))\\G\n*************************** 1. row ***************************\nJSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document)): {\n  \"valid\": false,\n  \"reason\": \"The JSON document location '#/longitude' failed requirement 'maximum' at JSON Schema location '#/properties/longitude'\",\n  \"schema-location\": \"#/properties/longitude\",\n  \"document-location\": \"#/longitude\",\n  \"schema-failed-keyword\": \"maximum\"\n}\n1 row in set (0.00 sec)",
        "\n          Since @schema contains the\n          required attribute, we can set\n          @document to a value that is otherwise\n          valid but does not contain the required properties, then test\n          it against @schema. The output of\n          JSON_SCHEMA_VALIDATION_REPORT() shows that\n          validation fails due to lack of a required element, like this:\n        ",
        "Press CTRL+C to copy mysql> SET @document = '{}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document))\\G\n*************************** 1. row ***************************\nJSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document)): {\n  \"valid\": false,\n  \"reason\": \"The JSON document location '#' failed requirement 'required' at JSON Schema location '#'\",\n  \"schema-location\": \"#\",\n  \"document-location\": \"#\",\n  \"schema-failed-keyword\": \"required\"\n}\n1 row in set (0.00 sec)",
        "\n          If we now set the value of @schema to the\n          same JSON schema but without the required\n          attribute, @document validates because it\n          is a valid JSON object, even though it contains no properties,\n          as shown here:\n        ",
        "Press CTRL+C to copy mysql> SET @schema = '{\n    '> \"id\": \"http://json-schema.org/geo\",\n    '> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    '> \"description\": \"A geographical coordinate\",\n    '> \"type\": \"object\",\n    '> \"properties\": {\n    '>   \"latitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -90,\n    '>     \"maximum\": 90\n    '>   },\n    '>   \"longitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -180,\n    '>     \"maximum\": 180\n    '>   }\n    '> }\n    '>}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALIDATION_REPORT(@schema, @document);\n+---------------------------------------------------+\n| JSON_SCHEMA_VALIDATION_REPORT(@schema, @document) |\n+---------------------------------------------------+\n| {\"valid\": true}                                   |\n+---------------------------------------------------+\n1 row in set (0.00 sec)"
    ],
    "Examples": [
        "mysql> SET @schema = '{\n    '>  \"id\": \"http://json-schema.org/geo\",\n    '> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    '> \"description\": \"A geographical coordinate\",\n    '> \"type\": \"object\",\n    '> \"properties\": {\n    '>   \"latitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -90,\n    '>     \"maximum\": 90\n    '>   },\n    '>   \"longitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -180,\n    '>     \"maximum\": 180\n    '>   }\n    '> },\n    '> \"required\": [\"latitude\", \"longitude\"]\n    '>}';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SET @document = '{\n    '> \"latitude\": 63.444697,\n    '> \"longitude\": 10.445118\n    '>}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALIDATION_REPORT(@schema, @document);\n+---------------------------------------------------+\n| JSON_SCHEMA_VALIDATION_REPORT(@schema, @document) |\n+---------------------------------------------------+\n| {\"valid\": true}                                   |\n+---------------------------------------------------+\n1 row in set (0.00 sec)",
        "mysql> SET @document = '{\n    '> \"latitude\": 63.444697,\n    '> \"longitude\": 310.445118\n    '> }';",
        "mysql> SET @document = '{}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document))\\G\n*************************** 1. row ***************************\nJSON_PRETTY(JSON_SCHEMA_VALIDATION_REPORT(@schema, @document)): {\n  \"valid\": false,\n  \"reason\": \"The JSON document location '#' failed requirement 'required' at JSON Schema location '#'\",\n  \"schema-location\": \"#\",\n  \"document-location\": \"#\",\n  \"schema-failed-keyword\": \"required\"\n}\n1 row in set (0.00 sec)",
        "mysql> SET @schema = '{\n    '> \"id\": \"http://json-schema.org/geo\",\n    '> \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    '> \"description\": \"A geographical coordinate\",\n    '> \"type\": \"object\",\n    '> \"properties\": {\n    '>   \"latitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -90,\n    '>     \"maximum\": 90\n    '>   },\n    '>   \"longitude\": {\n    '>     \"type\": \"number\",\n    '>     \"minimum\": -180,\n    '>     \"maximum\": 180\n    '>   }\n    '> }\n    '>}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT JSON_SCHEMA_VALIDATION_REPORT(@schema, @document);\n+---------------------------------------------------+\n| JSON_SCHEMA_VALIDATION_REPORT(@schema, @document) |\n+---------------------------------------------------+\n| {\"valid\": true}                                   |\n+---------------------------------------------------+\n1 row in set (0.00 sec)"
    ],
    "Category": [
        "Built-In Functions",
        "JSON Functions"
    ],
    "Reference HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/json-validation-functions.html#function_json-schema-validation-report"
    ],
    "Feature Type": [
        "Function"
    ]
}