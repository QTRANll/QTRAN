{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/built-in-function-reference.html",
        "https://dev.mysql.com/doc/refman/8.4/en/spatial-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference",
        "14.16.1 Spatial Function Reference"
    ],
    "Feature": [
        "ST_LineInterpolatePoints(ls,\n          fractional_distance)"
    ],
    "Description": [
        "The points a given percentage along a LineString",
        "\nST_LineInterpolatePoints(ls,\n          fractional_distance)\n",
        "\n          This function takes a LineString geometry\n          and a fractional distance in the range (0.0, 1.0] and returns\n          the MultiPoint consisting of the\n          LineString start point, plus\n          Point values along the\n          LineString at each fraction of the distance\n          from its start point to its endpoint. It can be used to answer\n          questions such as which Point values lie\n          every 10% of the way along the road described by the geometry\n          argument.\n        ",
        "\n          The function is implemented for LineString\n          geometries in all spatial reference systems, both Cartesian\n          and geographic.\n        ",
        "\n          If the fractional_distance argument\n          divides 1.0 with zero remainder the result may not contain the\n          last point of the LineString argument but a\n          point close to it due to numerical inaccuracies in\n          approximate-value computations.\n        ",
        "\n          A related function,\n          ST_LineInterpolatePoint(),\n          takes similar arguments but returns the\n          Point along the\n          LineString at the given fraction of the\n          distance from its start point to its endpoint.\n        ",
        "\nST_LineInterpolatePoints()\n          handles its arguments as described in the introduction to this\n          section, with these exceptions:\n",
        "\n\n              If the geometry argument is not a\n              LineString, an\n              ER_UNEXPECTED_GEOMETRY_TYPE\n              error occurs.\n            \n              If the fractional distance argument is outside the range\n              [0.0, 1.0], an\n              ER_DATA_OUT_OF_RANGE error\n              occurs.\n\n",
        "Press CTRL+C to copy mysql> SET @ls1 = ST_GeomFromText('LINESTRING(0 0,0 5,5 5)');\nmysql> SELECT ST_AsText(ST_LineInterpolatePoint(@ls1, .5));\n+----------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoint(@ls1, .5)) |\n+----------------------------------------------+\n| POINT(0 5)                                   |\n+----------------------------------------------+\nmysql> SELECT ST_AsText(ST_LineInterpolatePoint(@ls1, .75));\n+-----------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoint(@ls1, .75)) |\n+-----------------------------------------------+\n| POINT(2.5 5)                                  |\n+-----------------------------------------------+\nmysql> SELECT ST_AsText(ST_LineInterpolatePoint(@ls1, 1));\n+---------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoint(@ls1, 1)) |\n+---------------------------------------------+\n| POINT(5 5)                                  |\n+---------------------------------------------+\nmysql> SELECT ST_AsText(ST_LineInterpolatePoints(@ls1, .25));\n+------------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoints(@ls1, .25)) |\n+------------------------------------------------+\n| MULTIPOINT((0 2.5),(0 5),(2.5 5),(5 5))        |\n+------------------------------------------------+",
        "\nST_LineInterpolatePoints() is a\n          MySQL extension to OpenGIS.\n        "
    ],
    "Examples": [
        "mysql> SET @ls1 = ST_GeomFromText('LINESTRING(0 0,0 5,5 5)');\nmysql> SELECT ST_AsText(ST_LineInterpolatePoint(@ls1, .5));\n+----------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoint(@ls1, .5)) |\n+----------------------------------------------+\n| POINT(0 5)                                   |\n+----------------------------------------------+\nmysql> SELECT ST_AsText(ST_LineInterpolatePoint(@ls1, .75));\n+-----------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoint(@ls1, .75)) |\n+-----------------------------------------------+\n| POINT(2.5 5)                                  |\n+-----------------------------------------------+\nmysql> SELECT ST_AsText(ST_LineInterpolatePoint(@ls1, 1));\n+---------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoint(@ls1, 1)) |\n+---------------------------------------------+\n| POINT(5 5)                                  |\n+---------------------------------------------+\nmysql> SELECT ST_AsText(ST_LineInterpolatePoints(@ls1, .25));\n+------------------------------------------------+\n| ST_AsText(ST_LineInterpolatePoints(@ls1, .25)) |\n+------------------------------------------------+\n| MULTIPOINT((0 2.5),(0 5),(2.5 5),(5 5))        |\n+------------------------------------------------+"
    ],
    "Category": [
        "Built-In Functions",
        "Spatial Analysis Functions"
    ],
    "Reference HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/spatial-operator-functions.html#function_st-lineinterpolatepoints"
    ],
    "Feature Type": [
        "Function"
    ]
}