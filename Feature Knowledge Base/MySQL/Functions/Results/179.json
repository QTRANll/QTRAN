{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference"
    ],
    "Name": "JSON_STORAGE_FREE()",
    "Description": [
        "\nJSON_STORAGE_FREE(json_val)\n",
        "\n          For a JSON column value, this\n          function shows how much storage space was freed in its binary\n          representation after it was updated in place using\n          JSON_SET(),\n          JSON_REPLACE(), or\n          JSON_REMOVE(). The argument can\n          also be a valid JSON document or a string which can be parsed\n          as one\u2014either as a literal value or as the value of a\n          user variable\u2014in which case the function returns 0. It\n          returns a positive, nonzero value if the argument is a\n          JSON column value which has been updated as\n          described previously, such that its binary representation\n          takes up less space than it did prior to the update. For a\n          JSON column which has been updated such\n          that its binary representation is the same as or larger than\n          before, or if the update was not able to take advantage of a\n          partial update, it returns 0; it returns\n          NULL if the argument is\n          NULL.\n        ",
        "\n          If json_val is not\n          NULL, and neither is a valid JSON document\n          nor can be successfully parsed as one, an error results.\n        ",
        "\n          In this example, we create a table containing a\n          JSON column, then insert a row containing a\n          JSON object:\n        ",
        "Press CTRL+C to copy mysql> CREATE TABLE jtable (jcol JSON);\nQuery OK, 0 rows affected (0.38 sec)\n\nmysql> INSERT INTO jtable VALUES\n    ->     ('{\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"}');\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT * FROM jtable;\n+----------------------------------------------+\n| jcol                                         |\n+----------------------------------------------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"} |\n+----------------------------------------------+\n1 row in set (0.00 sec)",
        "\n          Now we update the column value using\n          JSON_SET() such that a partial update can\n          be performed; in this case, we replace the value pointed to by\n          the c key (the array [true,\n          false]) with one that takes up less space (the\n          integer 1):\n        ",
        "Press CTRL+C to copy mysql> UPDATE jtable\n    ->     SET jcol = JSON_SET(jcol, \"$.a\", 10, \"$.b\", \"wxyz\", \"$.c\", 1);\nQuery OK, 1 row affected (0.03 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT * FROM jtable;\n+--------------------------------+\n| jcol                           |\n+--------------------------------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": 1} |\n+--------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                      14 |\n+-------------------------+\n1 row in set (0.00 sec)",
        "\n          The effects of successive partial updates on this free space\n          are cumulative, as shown in this example using\n          JSON_SET() to reduce the space taken up by\n          the value having key b (and making no other\n          changes):\n        ",
        "Press CTRL+C to copy mysql> UPDATE jtable\n    ->     SET jcol = JSON_SET(jcol, \"$.a\", 10, \"$.b\", \"wx\", \"$.c\", 1);\nQuery OK, 1 row affected (0.03 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                      16 |\n+-------------------------+\n1 row in set (0.00 sec)",
        "\n          Updating the column without using\n          JSON_SET(),\n          JSON_REPLACE(), or\n          JSON_REMOVE() means that the optimizer\n          cannot perform the update in place; in this case,\n          JSON_STORAGE_FREE() returns 0, as shown\n          here:\n        ",
        "Press CTRL+C to copy mysql> UPDATE jtable SET jcol = '{\"a\": 10, \"b\": 1}';\nQuery OK, 1 row affected (0.05 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                       0 |\n+-------------------------+\n1 row in set (0.00 sec)",
        "\n          Partial updates of JSON documents can be performed only on\n          column values. For a user variable that stores a JSON value,\n          the value is always completely replaced, even when the update\n          is performed using JSON_SET():\n        ",
        "Press CTRL+C to copy mysql> SET @j = '{\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, '$.a', 10, '$.b', 'wxyz', '$.c', '1');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_FREE(@j) AS Free;\n+----------------------------------+------+\n| @j                               | Free |\n+----------------------------------+------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": \"1\"} |    0 |\n+----------------------------------+------+\n1 row in set (0.00 sec)",
        "\n          For a JSON literal, this function always returns 0:\n        ",
        "Press CTRL+C to copy mysql> SELECT JSON_STORAGE_FREE('{\"a\": 10, \"b\": \"wxyz\", \"c\": \"1\"}') AS Free;\n+------+\n| Free |\n+------+\n|    0 |\n+------+\n1 row in set (0.00 sec)"
    ],
    "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/json-utility-functions.html#function_json-storage-free",
    "Feature": [
        "JSON_STORAGE_FREE(json_val)"
    ],
    "Examples": [
        "mysql> CREATE TABLE jtable (jcol JSON);\nQuery OK, 0 rows affected (0.38 sec)\n\nmysql> INSERT INTO jtable VALUES\n    ->     ('{\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"}');\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT * FROM jtable;\n+----------------------------------------------+\n| jcol                                         |\n+----------------------------------------------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"} |\n+----------------------------------------------+\n1 row in set (0.00 sec)",
        "mysql> UPDATE jtable\n    ->     SET jcol = JSON_SET(jcol, \"$.a\", 10, \"$.b\", \"wxyz\", \"$.c\", 1);\nQuery OK, 1 row affected (0.03 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT * FROM jtable;\n+--------------------------------+\n| jcol                           |\n+--------------------------------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": 1} |\n+--------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                      14 |\n+-------------------------+\n1 row in set (0.00 sec)",
        "mysql> UPDATE jtable\n    ->     SET jcol = JSON_SET(jcol, \"$.a\", 10, \"$.b\", \"wx\", \"$.c\", 1);\nQuery OK, 1 row affected (0.03 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                      16 |\n+-------------------------+\n1 row in set (0.00 sec)",
        "mysql> UPDATE jtable SET jcol = '{\"a\": 10, \"b\": 1}';\nQuery OK, 1 row affected (0.05 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT JSON_STORAGE_FREE(jcol) FROM jtable;\n+-------------------------+\n| JSON_STORAGE_FREE(jcol) |\n+-------------------------+\n|                       0 |\n+-------------------------+\n1 row in set (0.00 sec)",
        "mysql> SET @j = '{\"a\": 10, \"b\": \"wxyz\", \"c\": \"[true, false]\"}';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, '$.a', 10, '$.b', 'wxyz', '$.c', '1');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_FREE(@j) AS Free;\n+----------------------------------+------+\n| @j                               | Free |\n+----------------------------------+------+\n| {\"a\": 10, \"b\": \"wxyz\", \"c\": \"1\"} |    0 |\n+----------------------------------+------+\n1 row in set (0.00 sec)",
        "mysql> SELECT JSON_STORAGE_FREE('{\"a\": 10, \"b\": \"wxyz\", \"c\": \"1\"}') AS Free;\n+------+\n| Free |\n+------+\n|    0 |\n+------+\n1 row in set (0.00 sec)"
    ],
    "Category": [
        "Built-In Functions and Operators",
        "JSON Functions"
    ]
}