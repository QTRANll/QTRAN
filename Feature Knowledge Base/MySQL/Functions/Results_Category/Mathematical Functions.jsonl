{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "ABS()", "Description": ["\nABS(X)\n", "\n            Returns the absolute value of X,\n            or NULL if X\n            is NULL.\n          ", "\n            The result type is derived from the argument type. An\n            implication of this is that\n            ABS(-9223372036854775808)\n            produces an error because the result cannot be stored in a\n            signed BIGINT value.\n          ", "Press CTRL+C to copy mysql> SELECT ABS(2);\n        -> 2\nmysql> SELECT ABS(-32);\n        -> 32", "\n            This function is safe to use with\n            BIGINT values.\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_abs", "Category": ["Built-In Functions and Operators", "Mathematical Functions"], "Feature": ["ABS(X)"], "Examples": ["mysql> SELECT ABS(2);\n        -> 2\nmysql> SELECT ABS(-32);\n        -> 32"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "ACOS()", "Description": ["\nACOS(X)\n", "\n            Returns the arc cosine of X, that\n            is, the value whose cosine is X.\n            Returns NULL if\n            X is not in the range\n            -1 to 1, or if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT ACOS(1);\n        -> 0\nmysql> SELECT ACOS(1.0001);\n        -> NULL\nmysql> SELECT ACOS(0);\n        -> 1.5707963267949"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_acos", "Feature": ["ACOS(X)"], "Examples": ["mysql> SELECT ACOS(1);\n        -> 0\nmysql> SELECT ACOS(1.0001);\n        -> NULL\nmysql> SELECT ACOS(0);\n        -> 1.5707963267949"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "ATAN()", "Description": ["\nATAN(X)\n", "\n            Returns the arc tangent of X,\n            that is, the value whose tangent is\n            X. Returns\n            NULL if\n            X is NULL\n", "Press CTRL+C to copy mysql> SELECT ATAN(2);\n        -> 1.1071487177941\nmysql> SELECT ATAN(-2);\n        -> -1.1071487177941"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_atan", "Feature": ["ATAN(X)"], "Examples": ["mysql> SELECT ATAN(2);\n        -> 1.1071487177941\nmysql> SELECT ATAN(-2);\n        -> -1.1071487177941"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "ATAN2(), ATAN()", "Description": ["\nATAN(Y,X),\n            ATAN2(Y,X)\n", "\n            Returns the arc tangent of the two variables\n            X and\n            Y. It is similar to calculating\n            the arc tangent of Y /\n            X, except that the\n            signs of both arguments are used to determine the quadrant\n            of the result. Returns NULL if\n            X or Y\n            is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT ATAN(-2,2);\n        -> -0.78539816339745\nmysql> SELECT ATAN2(PI(),0);\n        -> 1.5707963267949"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_atan2", "Feature": ["ATAN(Y,X)", "ATAN2(Y,X)"], "Examples": ["mysql> SELECT ATAN(-2,2);\n        -> -0.78539816339745\nmysql> SELECT ATAN2(PI(),0);\n        -> 1.5707963267949"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "LN()", "Description": ["\nLN(X)\n", "\n            Returns the natural logarithm of\n            X; that is, the\n            base-e logarithm of\n            X. If\n            X is less than or equal to 0.0E0,\n            the function returns NULL and a warning\n            \u201cInvalid argument for logarithm\u201d is reported.\n            Returns NULL if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT LN(2);\n        -> 0.69314718055995\nmysql> SELECT LN(-2);\n        -> NULL", "\n            This function is synonymous with\n            LOG(X).\n            The inverse of this function is the\n            EXP() function.\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_ln", "Feature": ["LN(X)"], "Examples": ["mysql> SELECT LN(2);\n        -> 0.69314718055995\nmysql> SELECT LN(-2);\n        -> NULL"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "LOG()", "Description": ["\nLOG(X),\n            LOG(B,X)\n", "\n            If called with one parameter, this function returns the\n            natural logarithm of X. If\n            X is less than or equal to 0.0E0,\n            the function returns NULL and a warning\n            \u201cInvalid argument for logarithm\u201d is reported.\n            Returns NULL if\n            X or B\n            is NULL.\n          ", "\n            The inverse of this function (when called with a single\n            argument) is the EXP()\n            function.\n          ", "Press CTRL+C to copy mysql> SELECT LOG(2);\n        -> 0.69314718055995\nmysql> SELECT LOG(-2);\n        -> NULL", "\n            If called with two parameters, this function returns the\n            logarithm of X to the base\n            B. If\n            X is less than or equal to 0, or\n            if B is less than or equal to 1,\n            then NULL is returned.\n          ", "Press CTRL+C to copy mysql> SELECT LOG(2,65536);\n        -> 16\nmysql> SELECT LOG(10,100);\n        -> 2\nmysql> SELECT LOG(1,100);\n        -> NULL", "\nLOG(B,X)\n            is equivalent to\n            LOG(X) /\n            LOG(B).\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log", "Feature": ["LOG(X)", "LOG(B,X)"], "Examples": ["mysql> SELECT LOG(2);\n        -> 0.69314718055995\nmysql> SELECT LOG(-2);\n        -> NULL", "mysql> SELECT LOG(2,65536);\n        -> 16\nmysql> SELECT LOG(10,100);\n        -> 2\nmysql> SELECT LOG(1,100);\n        -> NULL"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "LOG10()", "Description": ["\nLOG10(X)\n", "\n            Returns the base-10 logarithm of\n            X. If\n            X is less than or equal to 0.0E0,\n            the function returns NULL and a warning\n            \u201cInvalid argument for logarithm\u201d is reported.\n            Returns NULL if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT LOG10(2);\n        -> 0.30102999566398\nmysql> SELECT LOG10(100);\n        -> 2\nmysql> SELECT LOG10(-100);\n        -> NULL", "\nLOG10(X)\n            is equivalent to\n            LOG(10,X).\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log10", "Feature": ["LOG10(X)"], "Examples": ["mysql> SELECT LOG10(2);\n        -> 0.30102999566398\nmysql> SELECT LOG10(100);\n        -> 2\nmysql> SELECT LOG10(-100);\n        -> NULL"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "LOG2()", "Description": ["\nLOG2(X)\n", "\n            Returns the base-2 logarithm of\n            X. If\n            X is less than or equal to 0.0E0,\n            the function returns NULL and a warning\n            \u201cInvalid argument for logarithm\u201d is reported.\n            Returns NULL if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT LOG2(65536);\n        -> 16\nmysql> SELECT LOG2(-100);\n        -> NULL", "\nLOG2() is useful for finding\n            out how many bits a number requires for storage. This\n            function is equivalent to the expression\n            LOG(X) /\n            LOG(2).\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_log2", "Feature": ["LOG2(X)"], "Examples": ["mysql> SELECT LOG2(65536);\n        -> 16\nmysql> SELECT LOG2(-100);\n        -> NULL"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "MOD()", "Description": ["\nMOD(N,M),\n            N\n            % M,\n            N\n            MOD M\n", "\n            Modulo operation. Returns the remainder of\n            N divided by\n            M. Returns\n            NULL if M or\n            N is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT MOD(234, 10);\n        -> 4\nmysql> SELECT 253 % 7;\n        -> 1\nmysql> SELECT MOD(29,9);\n        -> 2\nmysql> SELECT 29 MOD 9;\n        -> 2", "\n            This function is safe to use with\n            BIGINT values.\n          ", "\nMOD() also works on values\n            that have a fractional part and returns the exact remainder\n            after division:\n          ", "Press CTRL+C to copy mysql> SELECT MOD(34.5,3);\n        -> 1.5", "\nMOD(N,0)\n            returns NULL.\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_mod", "Feature": ["MOD(N,M)", "N\n            % M", "N\n            MOD M"], "Examples": ["mysql> SELECT MOD(234, 10);\n        -> 4\nmysql> SELECT 253 % 7;\n        -> 1\nmysql> SELECT MOD(29,9);\n        -> 2\nmysql> SELECT 29 MOD 9;\n        -> 2", "mysql> SELECT MOD(34.5,3);\n        -> 1.5"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "PI()", "Description": ["\nPI()\n", "\n            Returns the value of \u03c0 (pi). The default number of\n            decimal places displayed is seven, but MySQL uses the full\n            double-precision value internally.\n          ", "\n            Because the return value of this function is a\n            double-precision value, its exact representation may vary\n            between platforms or implementations. This also applies to\n            any expressions making use of PI(). See\n            Section\u00a013.1.4, \u201cFloating-Point Types (Approximate Value) - FLOAT, DOUBLE\u201d.\n          ", "Press CTRL+C to copy mysql> SELECT PI();\n        -> 3.141593\nmysql> SELECT PI()+0.000000000000000000;\n        -> 3.141592653589793000"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_pi", "Feature": ["PI()"], "Examples": ["mysql> SELECT PI();\n        -> 3.141593\nmysql> SELECT PI()+0.000000000000000000;\n        -> 3.141592653589793000"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "POW()", "Description": ["\nPOW(X,Y)\n", "\n            Returns the value of X raised to\n            the power of Y. Returns\n            NULL if X or\n            Y is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT POW(2,2);\n        -> 4\nmysql> SELECT POW(2,-2);\n        -> 0.25"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_pow", "Feature": ["POW(X,Y)"], "Examples": ["mysql> SELECT POW(2,2);\n        -> 4\nmysql> SELECT POW(2,-2);\n        -> 0.25"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "POWER()", "Description": ["\nPOWER(X,Y)\n", "\n            This is a synonym for POW().\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_power", "Feature": ["POWER(X,Y)"], "Examples": [], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "RADIANS()", "Description": ["\nRADIANS(X)\n", "\n            Returns the argument X, converted\n            from degrees to radians. (Note that \u03c0 radians equals 180\n            degrees.) Returns NULL if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT RADIANS(90);\n        -> 1.5707963267949"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_radians", "Feature": ["RADIANS(X)"], "Examples": ["mysql> SELECT RADIANS(90);\n        -> 1.5707963267949"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "RAND()", "Description": ["\nRAND([N])\n", "\n            Returns a random floating-point value\n            v in the range\n            0 <= v <\n            1.0. To obtain a random integer\n            R in the range\n            i <=\n            R <\n            j, use the expression\n            FLOOR(i\n            + RAND() * (j\n            \u2212 i)).\n            For example, to obtain a random integer in the range the\n            range 7 <=\n            R < 12, use\n            the following statement:\n          ", "Press CTRL+C to copy SELECT FLOOR(7 + (RAND() * 5));", "\n            If an integer argument N is\n            specified, it is used as the seed value:\n", "\n\n                With a constant initializer argument, the seed is\n                initialized once when the statement is prepared, prior\n                to execution.\n              \n                With a nonconstant initializer argument (such as a\n                column name), the seed is initialized with the value for\n                each invocation of\n                RAND().\n\n", "\n            One implication of this behavior is that for equal argument\n            values,\n            RAND(N)\n            returns the same value each time, and thus produces a\n            repeatable sequence of column values. In the following\n            example, the sequence of values produced by\n            RAND(3) is the same both places it\n            occurs.\n          ", "Press CTRL+C to copy mysql> CREATE TABLE t (i INT);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.61914388706828 |\n|    2 | 0.93845168309142 |\n|    3 | 0.83482678498591 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.35877890638893 |\n|    2 | 0.28941420772058 |\n|    3 | 0.37073435016976 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.01 sec)", "\nRAND() in a\n            WHERE clause is evaluated for every row\n            (when selecting from one table) or combination of rows (when\n            selecting from a multiple-table join). Thus, for optimizer\n            purposes, RAND() is not a\n            constant value and cannot be used for index optimizations.\n            For more information, see\n            Section\u00a010.2.1.20, \u201cFunction Call Optimization\u201d.\n          ", "\n            Use of a column with RAND()\n            values in an ORDER BY or GROUP\n            BY clause may yield unexpected results because for\n            either clause a RAND()\n            expression can be evaluated multiple times for the same row,\n            each time returning a different result. If the goal is to\n            retrieve rows in random order, you can use a statement like\n            this:\n          ", "Press CTRL+C to copy SELECT * FROM tbl_name ORDER BY RAND();", "\n            To select a random sample from a set of rows, combine\n            ORDER BY RAND() with\n            LIMIT:\n          ", "Press CTRL+C to copy SELECT * FROM table1, table2 WHERE a=b AND c<d ORDER BY RAND() LIMIT 1000;", "\nRAND() is not meant to be a\n            perfect random generator. It is a fast way to generate\n            random numbers on demand that is portable between platforms\n            for the same MySQL version.\n          ", "\n            This function is unsafe for statement-based replication. A\n            warning is logged if you use this function when\n            binlog_format is set to\n            STATEMENT.\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_rand", "Feature": ["RAND([N])"], "Examples": ["SELECT FLOOR(7 + (RAND() * 5));", "mysql> CREATE TABLE t (i INT);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.61914388706828 |\n|    2 | 0.93845168309142 |\n|    3 | 0.83482678498591 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.35877890638893 |\n|    2 | 0.28941420772058 |\n|    3 | 0.37073435016976 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.01 sec)", "SELECT * FROM tbl_name ORDER BY RAND();", "SELECT * FROM table1, table2 WHERE a=b AND c<d ORDER BY RAND() LIMIT 1000;"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "ROUND()", "Description": ["\nROUND(X),\n            ROUND(X,D)\n", "\n            Rounds the argument X to\n            D decimal places. The rounding\n            algorithm depends on the data type of\n            X. D\n            defaults to 0 if not specified. D\n            can be negative to cause D digits\n            left of the decimal point of the value\n            X to become zero. The maximum\n            absolute value for D is 30; any\n            digits in excess of 30 (or -30) are truncated. If\n            X or D\n            is NULL, the function returns\n            NULL.\n          ", "Press CTRL+C to copy mysql> SELECT ROUND(-1.23);\n        -> -1\nmysql> SELECT ROUND(-1.58);\n        -> -2\nmysql> SELECT ROUND(1.58);\n        -> 2\nmysql> SELECT ROUND(1.298, 1);\n        -> 1.3\nmysql> SELECT ROUND(1.298, 0);\n        -> 1\nmysql> SELECT ROUND(23.298, -1);\n        -> 20\nmysql> SELECT ROUND(.12345678901234567890123456789012345, 35);\n        -> 0.123456789012345678901234567890", "\n            The return value has the same type as the first argument\n            (assuming that it is integer, double, or decimal). This\n            means that for an integer argument, the result is an integer\n            (no decimal places):\n          ", "Press CTRL+C to copy mysql> SELECT ROUND(150.000,2), ROUND(150,2);\n+------------------+--------------+\n| ROUND(150.000,2) | ROUND(150,2) |\n+------------------+--------------+\n|           150.00 |          150 |\n+------------------+--------------+", "\nROUND() uses the following\n            rules depending on the type of the first argument:\n", "\n\n                For exact-value numbers,\n                ROUND() uses the\n                \u201cround half away from zero\u201d or \u201cround\n                toward nearest\u201d rule: A value with a fractional\n                part of .5 or greater is rounded up to the next integer\n                if positive or down to the next integer if negative. (In\n                other words, it is rounded away from zero.) A value with\n                a fractional part less than .5 is rounded down to the\n                next integer if positive or up to the next integer if\n                negative.\n              \n                For approximate-value numbers, the result depends on the\n                C library. On many systems, this means that\n                ROUND() uses the\n                \u201cround to nearest even\u201d rule: A value with\n                a fractional part exactly halfway between two integers\n                is rounded to the nearest even integer.\n\n", "\n            The following example shows how rounding differs for exact\n            and approximate values:\n          ", "Press CTRL+C to copy mysql> SELECT ROUND(2.5), ROUND(25E-1);\n+------------+--------------+\n| ROUND(2.5) | ROUND(25E-1) |\n+------------+--------------+\n| 3          |            2 |\n+------------+--------------+", "\n            For more information, see Section\u00a014.24, \u201cPrecision Math\u201d.\n          ", "\n            In MySQL 8.0.21 and later, the data type returned by\n            ROUND() (and\n            TRUNCATE()) is determined\n            according to the rules listed here:\n", "\n\n                When the first argument is of any integer type, the\n                return type is always\n                BIGINT.\n              \n                When the first argument is of any floating-point type or\n                of any non-numeric type, the return type is always\n                DOUBLE.\n              \n                When the first argument is a\n                DECIMAL value, the return\n                type is also DECIMAL.\n              \n                The type attributes for the return value are also copied\n                from the first argument, except in the case of\n                DECIMAL, when the second argument is\n                a constant value.\n              \n                When the desired number of decimal places is less than\n                the scale of the argument, the scale and the precision\n                of the result are adjusted accordingly.\n              \n                In addition, for ROUND() (but not for\n                the TRUNCATE() function),\n                the precision is extended by one place to accommodate\n                rounding that increases the number of significant\n                digits. If the second argument is negative, the return\n                type is adjusted such that its scale is 0, with a\n                corresponding precision. For example,\n                ROUND(99.999, 2) returns\n                100.00\u2014the first argument is\n                DECIMAL(5, 3), and the return type is\n                DECIMAL(5, 2).\n              \n                If the second argument is negative, the return type has\n                scale 0 and a corresponding precision;\n                ROUND(99.999, -1) returns\n                100, which is DECIMAL(3,\n                0).\n\n"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_round", "Feature": ["ROUND(X)", "ROUND(X,D)"], "Examples": ["mysql> SELECT ROUND(-1.23);\n        -> -1\nmysql> SELECT ROUND(-1.58);\n        -> -2\nmysql> SELECT ROUND(1.58);\n        -> 2\nmysql> SELECT ROUND(1.298, 1);\n        -> 1.3\nmysql> SELECT ROUND(1.298, 0);\n        -> 1\nmysql> SELECT ROUND(23.298, -1);\n        -> 20\nmysql> SELECT ROUND(.12345678901234567890123456789012345, 35);\n        -> 0.123456789012345678901234567890", "mysql> SELECT ROUND(150.000,2), ROUND(150,2);\n+------------------+--------------+\n| ROUND(150.000,2) | ROUND(150,2) |\n+------------------+--------------+\n|           150.00 |          150 |\n+------------------+--------------+", "mysql> SELECT ROUND(2.5), ROUND(25E-1);\n+------------+--------------+\n| ROUND(2.5) | ROUND(25E-1) |\n+------------+--------------+\n| 3          |            2 |\n+------------+--------------+"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "SIGN()", "Description": ["\nSIGN(X)\n", "\n            Returns the sign of the argument as -1,\n            0, or 1, depending on\n            whether X is negative, zero, or\n            positive. Returns NULL if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT SIGN(-32);\n        -> -1\nmysql> SELECT SIGN(0);\n        -> 0\nmysql> SELECT SIGN(234);\n        -> 1"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sign", "Feature": ["SIGN(X)"], "Examples": ["mysql> SELECT SIGN(-32);\n        -> -1\nmysql> SELECT SIGN(0);\n        -> 0\nmysql> SELECT SIGN(234);\n        -> 1"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "SIN()", "Description": ["\nSIN(X)\n", "\n            Returns the sine of X, where\n            X is given in radians. Returns\n            NULL if X is\n            NULL.\n          ", "Press CTRL+C to copy mysql> SELECT SIN(PI());\n        -> 1.2246063538224e-16\nmysql> SELECT ROUND(SIN(PI()));\n        -> 0"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sin", "Feature": ["SIN(X)"], "Examples": ["mysql> SELECT SIN(PI());\n        -> 1.2246063538224e-16\nmysql> SELECT ROUND(SIN(PI()));\n        -> 0"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "SQRT()", "Description": ["\nSQRT(X)\n", "\n            Returns the square root of a nonnegative number\n            X. If\n            X is NULL, the\n            function returns NULL.\n          ", "Press CTRL+C to copy mysql> SELECT SQRT(4);\n        -> 2\nmysql> SELECT SQRT(20);\n        -> 4.4721359549996\nmysql> SELECT SQRT(-16);\n        -> NULL"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_sqrt", "Feature": ["SQRT(X)"], "Examples": ["mysql> SELECT SQRT(4);\n        -> 2\nmysql> SELECT SQRT(20);\n        -> 4.4721359549996\nmysql> SELECT SQRT(-16);\n        -> NULL"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "CEIL()", "Description": ["\nCEIL(X)\n", "\nCEIL() is a synonym for\n            CEILING().\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_ceil", "Feature": ["CEIL(X)"], "Examples": [], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "CEILING()", "Description": ["\nCEILING(X)\n", "\n            Returns the smallest integer value not less than\n            X. Returns\n            NULL if X is\n            NULL.\n          ", "Press CTRL+C to copy mysql> SELECT CEILING(1.23);\n        -> 2\nmysql> SELECT CEILING(-1.23);\n        -> -1", "\n            For exact-value numeric arguments, the return value has an\n            exact-value numeric type. For string or floating-point\n            arguments, the return value has a floating-point type.\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_ceiling", "Feature": ["CEILING(X)"], "Examples": ["mysql> SELECT CEILING(1.23);\n        -> 2\nmysql> SELECT CEILING(-1.23);\n        -> -1"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "TAN()", "Description": ["\nTAN(X)\n", "\n            Returns the tangent of X, where\n            X is given in radians. Returns\n            NULL if X is\n            NULL.\n          ", "Press CTRL+C to copy mysql> SELECT TAN(PI());\n        -> -1.2246063538224e-16\nmysql> SELECT TAN(PI()+1);\n        -> 1.5574077246549"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_tan", "Feature": ["TAN(X)"], "Examples": ["mysql> SELECT TAN(PI());\n        -> -1.2246063538224e-16\nmysql> SELECT TAN(PI()+1);\n        -> 1.5574077246549"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "TRUNCATE()", "Description": ["\nTRUNCATE(X,D)\n", "\n            Returns the number X, truncated\n            to D decimal places. If\n            D is 0, the\n            result has no decimal point or fractional part.\n            D can be negative to cause\n            D digits left of the decimal\n            point of the value X to become\n            zero. If X or\n            D is NULL, the\n            function returns NULL.\n          ", "Press CTRL+C to copy mysql> SELECT TRUNCATE(1.223,1);\n        -> 1.2\nmysql> SELECT TRUNCATE(1.999,1);\n        -> 1.9\nmysql> SELECT TRUNCATE(1.999,0);\n        -> 1\nmysql> SELECT TRUNCATE(-1.999,1);\n        -> -1.9\nmysql> SELECT TRUNCATE(122,-2);\n       -> 100\nmysql> SELECT TRUNCATE(10.28*100,0);\n       -> 1028", "\n            All numbers are rounded toward zero.\n          ", "\n            In MySQL 8.0.21 and later, the data type returned by\n            TRUNCATE() follows the same rules that\n            determine the return type of the ROUND()\n            function; for details, see the description for\n            ROUND().\n"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_truncate", "Feature": ["TRUNCATE(X,D)"], "Examples": ["mysql> SELECT TRUNCATE(1.223,1);\n        -> 1.2\nmysql> SELECT TRUNCATE(1.999,1);\n        -> 1.9\nmysql> SELECT TRUNCATE(1.999,0);\n        -> 1\nmysql> SELECT TRUNCATE(-1.999,1);\n        -> -1.9\nmysql> SELECT TRUNCATE(122,-2);\n       -> 100\nmysql> SELECT TRUNCATE(10.28*100,0);\n       -> 1028"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "CONV()", "Description": ["\nCONV(N,from_base,to_base)\n", "\n            Converts numbers between different number bases. Returns a\n            string representation of the number\n            N, converted from base\n            from_base to base\n            to_base. Returns\n            NULL if any argument is\n            NULL. The argument\n            N is interpreted as an integer,\n            but may be specified as an integer or a string. The minimum\n            base is 2 and the maximum base is\n            36. If\n            from_base is a negative number,\n            N is regarded as a signed number.\n            Otherwise, N is treated as\n            unsigned. CONV() works with\n            64-bit precision.\n          ", "\nCONV() returns NULL if\n            any of its arguments are NULL.\n          ", "Press CTRL+C to copy mysql> SELECT CONV('a',16,2);\n        -> '1010'\nmysql> SELECT CONV('6E',18,8);\n        -> '172'\nmysql> SELECT CONV(-17,10,-18);\n        -> '-H'\nmysql> SELECT CONV(10+'10'+'10'+X'0a',10,10);\n        -> '40'"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_conv", "Feature": ["CONV(N,from_base,to_base)"], "Examples": ["mysql> SELECT CONV('a',16,2);\n        -> '1010'\nmysql> SELECT CONV('6E',18,8);\n        -> '172'\nmysql> SELECT CONV(-17,10,-18);\n        -> '-H'\nmysql> SELECT CONV(10+'10'+'10'+X'0a',10,10);\n        -> '40'"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "COS()", "Description": ["\nCOS(X)\n", "\n            Returns the cosine of X, where\n            X is given in radians. Returns\n            NULL if X is\n            NULL.\n          ", "Press CTRL+C to copy mysql> SELECT COS(PI());\n        -> -1"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_cos", "Feature": ["COS(X)"], "Examples": ["mysql> SELECT COS(PI());\n        -> -1"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "COT()", "Description": ["\nCOT(X)\n", "\n            Returns the cotangent of X.\n            Returns NULL if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT COT(12);\n        -> -1.5726734063977\nmysql> SELECT COT(0);\n        -> out-of-range error"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_cot", "Feature": ["COT(X)"], "Examples": ["mysql> SELECT COT(12);\n        -> -1.5726734063977\nmysql> SELECT COT(0);\n        -> out-of-range error"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "CRC32()", "Description": ["\nCRC32(expr)\n", "\n            Computes a cyclic redundancy check value and returns a\n            32-bit unsigned value. The result is NULL\n            if the argument is NULL. The argument is\n            expected to be a string and (if possible) is treated as one\n            if it is not.\n          ", "Press CTRL+C to copy mysql> SELECT CRC32('MySQL');\n        -> 3259397556\nmysql> SELECT CRC32('mysql');\n        -> 2501908538"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_crc32", "Feature": ["CRC32(expr)"], "Examples": ["mysql> SELECT CRC32('MySQL');\n        -> 3259397556\nmysql> SELECT CRC32('mysql');\n        -> 2501908538"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "DEGREES()", "Description": ["\nDEGREES(X)\n", "\n            Returns the argument X, converted\n            from radians to degrees. Returns NULL if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT DEGREES(PI());\n        -> 180\nmysql> SELECT DEGREES(PI() / 2);\n        -> 90"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_degrees", "Feature": ["DEGREES(X)"], "Examples": ["mysql> SELECT DEGREES(PI());\n        -> 180\nmysql> SELECT DEGREES(PI() / 2);\n        -> 90"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "EXP()", "Description": ["\nEXP(X)\n", "\n            Returns the value of e (the base of\n            natural logarithms) raised to the power of\n            X. The inverse of this function\n            is LOG() (using a single\n            argument only) or LN().\n          ", "\n            If X is NULL,\n            this function returns NULL.\n          ", "Press CTRL+C to copy mysql> SELECT EXP(2);\n        -> 7.3890560989307\nmysql> SELECT EXP(-2);\n        -> 0.13533528323661\nmysql> SELECT EXP(0);\n        -> 1"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_exp", "Feature": ["EXP(X)"], "Examples": ["mysql> SELECT EXP(2);\n        -> 7.3890560989307\nmysql> SELECT EXP(-2);\n        -> 0.13533528323661\nmysql> SELECT EXP(0);\n        -> 1"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "ASIN()", "Description": ["\nASIN(X)\n", "\n            Returns the arc sine of X, that\n            is, the value whose sine is X.\n            Returns NULL if\n            X is not in the range\n            -1 to 1, or if\n            X is NULL.\n          ", "Press CTRL+C to copy mysql> SELECT ASIN(0.2);\n        -> 0.20135792079033\nmysql> SELECT ASIN('foo');\n\n+-------------+\n| ASIN('foo') |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-----------------------------------------+\n| Level   | Code | Message                                 |\n+---------+------+-----------------------------------------+\n| Warning | 1292 | Truncated incorrect DOUBLE value: 'foo' |\n+---------+------+-----------------------------------------+"], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_asin", "Feature": ["ASIN(X)"], "Examples": ["mysql> SELECT ASIN(0.2);\n        -> 0.20135792079033\nmysql> SELECT ASIN('foo');\n\n+-------------+\n| ASIN('foo') |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-----------------------------------------+\n| Level   | Code | Message                                 |\n+---------+------+-----------------------------------------+\n| Warning | 1292 | Truncated incorrect DOUBLE value: 'foo' |\n+---------+------+-----------------------------------------+"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"], "Title": ["14.1 Built-In Function and Operator Reference"], "Name": "FLOOR()", "Description": ["\nFLOOR(X)\n", "\n            Returns the largest integer value not greater than\n            X. Returns\n            NULL if X is\n            NULL.\n          ", "Press CTRL+C to copy mysql> SELECT FLOOR(1.23), FLOOR(-1.23);\n        -> 1, -2", "\n            For exact-value numeric arguments, the return value has an\n            exact-value numeric type. For string or floating-point\n            arguments, the return value has a floating-point type.\n          "], "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_floor", "Feature": ["FLOOR(X)"], "Examples": ["mysql> SELECT FLOOR(1.23), FLOOR(-1.23);\n        -> 1, -2"], "Category": ["Built-In Functions and Operators", "Mathematical Functions"]}
