{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/stop-group-replication.html"
    ],
    "Title": [
        "15.4.3.2 STOP GROUP_REPLICATION Statement"
    ],
    "Feature": [
        "STOP GROUP_REPLICATION"
    ],
    "Description": [
        "\n        Stops Group Replication. This statement requires the\n        GROUP_REPLICATION_ADMIN privilege\n        (or the deprecated SUPER\n        privilege). As soon as you issue STOP\n        GROUP_REPLICATION the member is set to\n        super_read_only=ON, which\n        ensures that no writes can be made to the member while Group\n        Replication stops. Any other asynchronous replication channels\n        running on the member are also stopped. Any user credentials\n        that you specified in the START\n        GROUP_REPLICATION statement when starting Group\n        Replication on this member are removed from memory, and must be\n        supplied when you start Group Replication again.\n",
        "\n\nWarning\n\n\n          Use this statement with extreme caution because it removes the\n          server instance from the group, meaning it is no longer\n          protected by Group Replication's consistency guarantee\n          mechanisms. To be completely safe, ensure that your\n          applications can no longer connect to the instance before\n          issuing this statement to avoid any chance of stale reads.\n\n",
        "\n        The STOP GROUP_REPLICATION\n        statement stops asynchronous replication channels on the group\n        member, but it does not implicitly commit transactions that are\n        in progress on them like STOP\n        REPLICA does. This is because on a Group Replication\n        group member, an additional transaction committed during the\n        shutdown operation would leave the member inconsistent with the\n        group and cause an issue with rejoining. To avoid failed commits\n        for transactions that are in progress while stopping Group\n        Replication, the STOP\n        GROUP_REPLICATION statement cannot be issued while a\n        GTID is assigned as the value of the\n        gtid_next system variable.\n      ",
        "\n        The\n        group_replication_components_stop_timeout\n        system variable specifies the time for which Group Replication\n        waits for each of its modules to complete ongoing processes\n        after this statement is issued. The timeout is used to resolve\n        situations in which Group Replication components cannot be\n        stopped normally, which can happen if the member is expelled\n        from the group while it is in an error state, or while a process\n        such as MySQL Enterprise Backup is holding a global lock on\n        tables on the member. In such situations, the member cannot stop\n        the applier thread or complete the distributed recovery process\n        to rejoin. STOP GROUP_REPLICATION does not\n        complete until either the situation is resolved (for example, by\n        the lock being released), or the component timeout expires and\n        the modules are shut down regardless of their status. The\n        default value is 300 seconds; this means that Group Replication\n        components are stopped after 5 minutes if the situation is not\n        resolved before that time, allowing the member to be restarted\n        and rejoin.\n"
    ],
    "Examples": [],
    "Category": [
        "Replication Statements"
    ]
}