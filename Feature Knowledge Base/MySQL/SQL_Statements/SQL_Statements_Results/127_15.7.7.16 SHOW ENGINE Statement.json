{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/show-engine.html"
    ],
    "Title": [
        "15.7.7.16 SHOW ENGINE Statement"
    ],
    "Feature": [
        "SHOW ENGINE engine_name {STATUS | MUTEX}",
        "SHOW ENGINE INNODB STATUS\nSHOW ENGINE INNODB MUTEX\nSHOW ENGINE PERFORMANCE_SCHEMA STATUS",
        "mysql> SHOW ENGINE PERFORMANCE_SCHEMA STATUS\\G\n...\n*************************** 3. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.size\nStatus: 76\n*************************** 4. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.count\nStatus: 10000\n*************************** 5. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.memory\nStatus: 760000\n...\n*************************** 57. row ***************************\n  Type: performance_schema\n  Name: performance_schema.memory\nStatus: 26459600\n..."
    ],
    "Description": [
        "\nSHOW ENGINE displays operational\n        information about a storage engine. It requires the\n        PROCESS privilege. The statement\n        has these variants:\n      ",
        "\nSHOW ENGINE INNODB STATUS displays extensive\n        information from the standard InnoDB Monitor\n        about the state of the InnoDB storage engine.\n        For information about the standard monitor and other\n        InnoDB Monitors that provide information\n        about InnoDB processing, see\n        Section\u00a017.17, \u201cInnoDB Monitors\u201d.\n      ",
        "\nSHOW ENGINE INNODB MUTEX displays\n        InnoDB\nmutex and\n        rw-lock statistics.\n",
        "\n\nNote\n\n\nInnoDB mutexes and rwlocks can also be\n          monitored using Performance\n          Schema tables. See\n          Section\u00a017.16.2, \u201cMonitoring InnoDB Mutex Waits Using Performance Schema\u201d.\n\n",
        "\n        Mutex statistics collection is configured dynamically using the\n        following options:\n",
        "\n\n            To enable the collection of mutex statistics, run:\n          Press CTRL+C to copy SET GLOBAL innodb_monitor_enable='latch';\n            To reset mutex statistics, run:\n          Press CTRL+C to copy SET GLOBAL innodb_monitor_reset='latch';\n            To disable the collection of mutex statistics, run:\nPress CTRL+C to copy SET GLOBAL innodb_monitor_disable='latch';\n",
        "\n        Collection of mutex statistics for SHOW ENGINE INNODB\n        MUTEX can also be enabled by setting\n        innodb_monitor_enable='all', or\n        disabled by setting\n        innodb_monitor_disable='all'.\n      ",
        "\nSHOW ENGINE INNODB MUTEX output has these\n        columns:\n",
        "\n\nType\n\n            Always InnoDB.\n          \nName\n\n            For mutexes, the Name field reports only\n            the mutex name. For rwlocks, the Name\n            field reports the source file where the rwlock is\n            implemented, and the line number in the file where the\n            rwlock is created. The line number is specific to your\n            version of MySQL.\n          \nStatus\n\n            The mutex status. This field reports the number of spins,\n            waits, and calls. Statistics for low-level operating system\n            mutexes, which are implemented outside of\n            InnoDB, are not reported.\n\n\n\nspins indicates the number of spins.\n              \nwaits indicates the number of mutex\n                waits.\n              \ncalls indicates how many times the\n                mutex was requested.\n\n\n\n",
        "\nSHOW ENGINE INNODB MUTEX does not list\n        mutexes and rw-locks for each buffer pool block, as the amount\n        of output would be overwhelming on systems with a large buffer\n        pool. SHOW ENGINE INNODB MUTEX does, however,\n        print aggregate BUF_BLOCK_MUTEX spin, wait,\n        and call values for buffer pool block mutexes and rw-locks.\n        SHOW ENGINE INNODB MUTEX also does not list\n        any mutexes or rw-locks that have never been waited on\n        (os_waits=0). Thus, SHOW ENGINE\n        INNODB MUTEX only displays information about mutexes\n        and rw-locks outside of the buffer pool that have caused at\n        least one OS-level wait.\n      ",
        "\n        Use SHOW ENGINE PERFORMANCE_SCHEMA STATUS to\n        inspect the internal operation of the Performance Schema code:\n      ",
        "\n        This statement is intended to help the DBA understand the\n        effects that different Performance Schema options have on memory\n        requirements.\n      ",
        "\nName values consist of two parts, which name\n        an internal buffer and a buffer attribute, respectively.\n        Interpret buffer names as follows:\n",
        "\n\n            An internal buffer that is not exposed as a table is named\n            within parentheses. Examples:\n            (pfs_cond_class).size,\n            (pfs_mutex_class).memory.\n          \n            An internal buffer that is exposed as a table in the\n            performance_schema database is named\n            after the table, without parentheses. Examples:\n            events_waits_history.size,\n            mutex_instances.count.\n          \n            A value that applies to the Performance Schema as a whole\n            begins with performance_schema. Example:\n            performance_schema.memory.\n\n",
        "\n        Buffer attributes have these meanings:\n",
        "\n\nsize is the size of the internal record\n            used by the implementation, such as the size of a row in a\n            table. size values cannot be changed.\n          \ncount is the number of internal records,\n            such as the number of rows in a table.\n            count values can be changed using\n            Performance Schema configuration options.\n          \n            For a table,\n            tbl_name.memory\n            is the product of size and\n            count. For the Performance Schema as a\n            whole, performance_schema.memory is the\n            sum of all the memory used (the sum of all other\n            memory values).\n\n",
        "\n        In some cases, there is a direct relationship between a\n        Performance Schema configuration parameter and a SHOW\n        ENGINE value. For example,\n        events_waits_history_long.count corresponds\n        to\n        performance_schema_events_waits_history_long_size.\n        In other cases, the relationship is more complex. For example,\n        events_waits_history.count corresponds to\n        performance_schema_events_waits_history_size\n        (the number of rows per thread) multiplied by\n        performance_schema_max_thread_instances\n        (the number of threads).\n      ",
        "SHOW ENGINE NDB STATUS.\u00a0\n          If the server has the NDB storage\n          engine enabled, SHOW ENGINE NDB STATUS\n          displays cluster status information such as the number of\n          connected data nodes, the cluster connectstring, and cluster\n          binary log epochs, as well as counts of various Cluster API\n          objects created by the MySQL Server when connected to the\n          cluster. Sample output from this statement is shown here:\n        ",
        "Press CTRL+C to copy mysql> SHOW ENGINE NDB STATUS;\n+------------+-----------------------+--------------------------------------------------+\n| Type       | Name                  | Status                                           |\n+------------+-----------------------+--------------------------------------------------+\n| ndbcluster | connection            | cluster_node_id=7,\n  connected_host=198.51.100.103, connected_port=1186, number_of_data_nodes=4,\n  number_of_ready_data_nodes=3, connect_count=0                                         |\n| ndbcluster | NdbTransaction        | created=6, free=0, sizeof=212                    |\n| ndbcluster | NdbOperation          | created=8, free=8, sizeof=660                    |\n| ndbcluster | NdbIndexScanOperation | created=1, free=1, sizeof=744                    |\n| ndbcluster | NdbIndexOperation     | created=0, free=0, sizeof=664                    |\n| ndbcluster | NdbRecAttr            | created=1285, free=1285, sizeof=60               |\n| ndbcluster | NdbApiSignal          | created=16, free=16, sizeof=136                  |\n| ndbcluster | NdbLabel              | created=0, free=0, sizeof=196                    |\n| ndbcluster | NdbBranch             | created=0, free=0, sizeof=24                     |\n| ndbcluster | NdbSubroutine         | created=0, free=0, sizeof=68                     |\n| ndbcluster | NdbCall               | created=0, free=0, sizeof=16                     |\n| ndbcluster | NdbBlob               | created=1, free=1, sizeof=264                    |\n| ndbcluster | NdbReceiver           | created=4, free=0, sizeof=68                     |\n| ndbcluster | binlog                | latest_epoch=155467, latest_trans_epoch=148126,\n  latest_received_binlog_epoch=0, latest_handled_binlog_epoch=0,\n  latest_applied_binlog_epoch=0                                                         |\n+------------+-----------------------+--------------------------------------------------+",
        "\n        The Status column in each of these rows\n        provides information about the MySQL server's connection to\n        the cluster and about the cluster binary log's status,\n        respectively. The Status information is in\n        the form of comma-delimited set of name-value pairs.\n      ",
        "\n        The connection row's\n        Status column contains the name-value pairs\n        described in the following table.\n",
        "\n\nName\nValue\n\ncluster_node_id\nThe node ID of the MySQL server in the cluster\n\nconnected_host\nThe host name or IP address of the cluster management server to which\n              the MySQL server is connected\n\nconnected_port\nThe port used by the MySQL server to connect to the management server\n              (connected_host)\n\nnumber_of_data_nodes\nThe number of data nodes configured for the cluster (that is, the number\n              of [ndbd] sections in the cluster\n              config.ini file)\n\nnumber_of_ready_data_nodes\nThe number of data nodes in the cluster that are actually running\n\nconnect_count\nThe number of times this mysqld has connected or\n              reconnected to cluster data nodes\n\n",
        "\n        The binlog row's\n        Status column contains information relating\n        to NDB Cluster Replication. The name-value pairs it contains are\n        described in the following table.\n",
        "\n\nName\nValue\n\nlatest_epoch\nThe most recent epoch most recently run on this MySQL server (that is,\n              the sequence number of the most recent transaction run on\n              the server)\n\nlatest_trans_epoch\nThe most recent epoch processed by the cluster's data nodes\n\nlatest_received_binlog_epoch\nThe most recent epoch received by the binary log thread\n\nlatest_handled_binlog_epoch\nThe most recent epoch processed by the binary log thread (for writing to\n              the binary log)\n\nlatest_applied_binlog_epoch\nThe most recent epoch actually written to the binary log\n\n",
        "\n        See Section\u00a025.7, \u201cNDB Cluster Replication\u201d, for more\n        information.\n      ",
        "\n        The remaining rows from the output of SHOW ENGINE NDB\n        STATUS which are most likely to prove useful in\n        monitoring the cluster are listed here by\n        Name:\n",
        "\n\nNdbTransaction: The number and size of\n            NdbTransaction objects that have been\n            created. An NdbTransaction is created\n            each time a table schema operation (such as\n            CREATE TABLE or\n            ALTER TABLE) is performed on\n            an NDB table.\n          \nNdbOperation: The number and size of\n            NdbOperation objects that have been\n            created.\n          \nNdbIndexScanOperation: The number and\n            size of NdbIndexScanOperation objects\n            that have been created.\n          \nNdbIndexOperation: The number and size of\n            NdbIndexOperation objects that have been\n            created.\n          \nNdbRecAttr: The number and size of\n            NdbRecAttr objects that have been\n            created. In general, one of these is created each time a\n            data manipulation statement is performed by an SQL node.\n          \nNdbBlob: The number and size of\n            NdbBlob objects that have been created.\n            An NdbBlob is created for each new\n            operation involving a BLOB\n            column in an NDB table.\n          \nNdbReceiver: The number and size of any\n            NdbReceiver object that have been\n            created. The number in the created column\n            is the same as the number of data nodes in the cluster to\n            which the MySQL server has connected.\n\n",
        "\n\nNote\n\n\nSHOW ENGINE NDB STATUS returns an empty\n          result if no operations involving\n          NDB tables have been performed\n          during the current session by the MySQL client accessing the\n          SQL node on which this statement is run.\n\n"
    ],
    "Examples": [
        "SET GLOBAL innodb_monitor_enable='latch';",
        "SET GLOBAL innodb_monitor_reset='latch';",
        "SET GLOBAL innodb_monitor_disable='latch';",
        "mysql> SHOW ENGINE NDB STATUS;\n+------------+-----------------------+--------------------------------------------------+\n| Type       | Name                  | Status                                           |\n+------------+-----------------------+--------------------------------------------------+\n| ndbcluster | connection            | cluster_node_id=7,\n  connected_host=198.51.100.103, connected_port=1186, number_of_data_nodes=4,\n  number_of_ready_data_nodes=3, connect_count=0                                         |\n| ndbcluster | NdbTransaction        | created=6, free=0, sizeof=212                    |\n| ndbcluster | NdbOperation          | created=8, free=8, sizeof=660                    |\n| ndbcluster | NdbIndexScanOperation | created=1, free=1, sizeof=744                    |\n| ndbcluster | NdbIndexOperation     | created=0, free=0, sizeof=664                    |\n| ndbcluster | NdbRecAttr            | created=1285, free=1285, sizeof=60               |\n| ndbcluster | NdbApiSignal          | created=16, free=16, sizeof=136                  |\n| ndbcluster | NdbLabel              | created=0, free=0, sizeof=196                    |\n| ndbcluster | NdbBranch             | created=0, free=0, sizeof=24                     |\n| ndbcluster | NdbSubroutine         | created=0, free=0, sizeof=68                     |\n| ndbcluster | NdbCall               | created=0, free=0, sizeof=16                     |\n| ndbcluster | NdbBlob               | created=1, free=1, sizeof=264                    |\n| ndbcluster | NdbReceiver           | created=4, free=0, sizeof=68                     |\n| ndbcluster | binlog                | latest_epoch=155467, latest_trans_epoch=148126,\n  latest_received_binlog_epoch=0, latest_handled_binlog_epoch=0,\n  latest_applied_binlog_epoch=0                                                         |\n+------------+-----------------------+--------------------------------------------------+"
    ],
    "Category": [
        "Database Administration Statements"
    ]
}