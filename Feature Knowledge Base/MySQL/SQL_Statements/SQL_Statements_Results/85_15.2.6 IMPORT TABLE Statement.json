{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/import-table.html"
    ],
    "Title": [
        "15.2.6 IMPORT TABLE Statement"
    ],
    "Feature": [
        "IMPORT TABLE FROM sdi_file [, sdi_file] ..."
    ],
    "Description": [
        "\n      The IMPORT TABLE statement imports\n      MyISAM tables based on information contained in\n      .sdi (serialized dictionary information)\n      metadata files. IMPORT TABLE\n      requires the FILE privilege to read\n      the .sdi and table content files, and the\n      CREATE privilege for the table to\n      be created.\n    ",
        "\n      Tables can be exported from one server using\n      mysqldump to write a file of SQL statements and\n      imported into another server using mysql to\n      process the dump file. IMPORT TABLE\n      provides a faster alternative using the \u201craw\u201d table\n      files.\n    ",
        "\n      Prior to import, the files that provide the table content must be\n      placed in the appropriate schema directory for the import server,\n      and the .sdi file must be located in a\n      directory accessible to the server. For example, the\n      .sdi file can be placed in the directory\n      named by the secure_file_priv\n      system variable, or (if\n      secure_file_priv is empty) in a\n      directory under the server data directory.\n    ",
        "\n      The following example describes how to export\n      MyISAM tables named\n      employees and managers from\n      the hr schema of one server and import them\n      into the hr schema of another server. The\n      example uses these assumptions (to perform a similar operation on\n      your own system, modify the path names as appropriate):\n",
        "\n\n          For the export server,\n          export_basedir represents its base\n          directory, and its data directory is\n          export_basedir/data.\n        \n          For the import server,\n          import_basedir represents its base\n          directory, and its data directory is\n          import_basedir/data.\n        \n          Table files are exported from the export server into the\n          /tmp/export directory and this directory\n          is secure (not accessible to other users).\n        \n          The import server uses /tmp/mysql-files\n          as the directory named by its\n          secure_file_priv system\n          variable.\n\n",
        "\n      To export tables from the export server, use this procedure:\n",
        "\n\n          Ensure a consistent snapshot by executing this statement to\n          lock the tables so that they cannot be modified during export:\n        Press CTRL+C to copy mysql> FLUSH TABLES hr.employees, hr.managers WITH READ LOCK;\n          While the lock is in effect, the tables can still be used, but\n          only for read access.\n        \n          At the file system level, copy the .sdi\n          and table content files from the hr schema\n          directory to the secure export directory:\n\n\n\n              The .sdi file is located in the\n              hr schema directory, but might not have\n              exactly the same basename as the table name. For example,\n              the .sdi files for the\n              employees and\n              managers tables might be named\n              employees_125.sdi and\n              managers_238.sdi.\n            \n              For a MyISAM table, the content files\n              are its .MYD data file and\n              .MYI index file.\n\n\n\n          Given those file names, the copy commands look like this:\n        Press CTRL+C to copy $> cd export_basedir/data/hr\n$> cp employees_125.sdi /tmp/export\n$> cp managers_238.sdi /tmp/export\n$> cp employees.{MYD,MYI} /tmp/export\n$> cp managers.{MYD,MYI} /tmp/export\n          Unlock the tables:\n        Press CTRL+C to copy mysql> UNLOCK TABLES;\n",
        "\n      To import tables into the import server, use this procedure:\n",
        "\n\n          The import schema must exist. If necessary, execute this\n          statement to create it:\n        Press CTRL+C to copy mysql> CREATE SCHEMA hr;\n          At the file system level, copy the .sdi\n          files to the import server\n          secure_file_priv directory,\n          /tmp/mysql-files. Also, copy the table\n          content files to the hr schema directory:\n        Press CTRL+C to copy $> cd /tmp/export\n$> cp employees_125.sdi /tmp/mysql-files\n$> cp managers_238.sdi /tmp/mysql-files\n$> cp employees.{MYD,MYI} import_basedir/data/hr\n$> cp managers.{MYD,MYI} import_basedir/data/hr\n          Import the tables by executing an IMPORT\n          TABLE statement that names the\n          .sdi files:\n        Press CTRL+C to copy mysql> IMPORT TABLE FROM\n       '/tmp/mysql-files/employees.sdi',\n       '/tmp/mysql-files/managers.sdi';\n",
        "\n      The .sdi file need not be placed in the\n      import server directory named by the\n      secure_file_priv system variable\n      if that variable is empty; it can be in any directory accessible\n      to the server, including the schema directory for the imported\n      table. If the .sdi file is placed in that\n      directory, however, it may be rewritten; the import operation\n      creates a new .sdi file for the table, which\n      overwrites the old .sdi file if the operation\n      uses the same file name for the new file.\n    ",
        "\n      Each sdi_file value must be a string\n      literal that names the .sdi file for a table\n      or is a pattern that matches .sdi files. If\n      the string is a pattern, any leading directory path and the\n      .sdi file name suffix must be given\n      literally. Pattern characters are permitted only in the base name\n      part of the file name:\n",
        "\n\n? matches any single character\n        \n* matches any sequence of characters,\n          including no characters\n\n",
        "\n      Using a pattern, the previous IMPORT\n      TABLE statement could have been written like this\n      (assuming that the /tmp/mysql-files directory\n      contains no other .sdi files matching the\n      pattern):\n    ",
        "Press CTRL+C to copy IMPORT TABLE FROM '/tmp/mysql-files/*.sdi';",
        "\n      To interpret the location of .sdi file path\n      names, the server uses the same rules for\n      IMPORT TABLE as the server-side\n      rules for LOAD DATA (that is, the\n      non-LOCAL rules). See\n      Section\u00a015.2.9, \u201cLOAD DATA Statement\u201d, paying particular attention to the\n      rules used to interpret relative path names.\n    ",
        "\nIMPORT TABLE fails if the\n      .sdi or table files cannot be located. After\n      importing a table, the server attempts to open it and reports as\n      warnings any problems detected. To attempt a repair to correct any\n      reported issues, use REPAIR TABLE.\n    ",
        "\nIMPORT TABLE is not written to the\n      binary log.\n",
        "\n\n\n\nRestrictions and Limitations\n\n\n\n\nIMPORT TABLE applies only to\n        non-TEMPORARY MyISAM\n        tables. It does not apply to tables created with a transactional\n        storage engine, tables created with\n        CREATE TEMPORARY\n        TABLE, or views.\n      \n        An .sdi file used in an import operation\n        must be generated on a server with the same data dictionary\n        version and sdi version as the import server. The version\n        information of the generating server is found in the\n        .sdi file:\n      Press CTRL+C to copy {\n   \"mysqld_version_id\":80019,\n   \"dd_version\":80017,\n   \"sdi_version\":80016,\n   ...\n}\n        To determine the data dictionary and sdi version of the import\n        server, you can check the .sdi file of a\n        recently created table on the import server.\n      \n        The table data and index files must be placed in the schema\n        directory for the import server prior to the import operation,\n        unless the table as defined on the export server uses the\n        DATA DIRECTORY or INDEX\n        DIRECTORY table options. In that case, modify the\n        import procedure using one of these alternatives before\n        executing the IMPORT TABLE\n        statement:\n\n\n\n            Put the data and index files into the same directory on the\n            import server host as on the export server host, and create\n            symlinks in the import server schema directory to those\n            files.\n          \n            Put the data and index files into an import server host\n            directory different from that on the export server host, and\n            create symlinks in the import server schema directory to\n            those files. In addition, modify the\n            .sdi file to reflect the different file\n            locations.\n          \n            Put the data and index files into the schema directory on\n            the import server host, and modify the\n            .sdi file to remove the data and index\n            directory table options.\n\n\n\n        Any collation IDs stored in the .sdi file\n        must refer to the same collations on the export and import\n        servers.\n      \n        Trigger information for a table is not serialized into the table\n        .sdi file, so triggers are not restored by\n        the import operation.\n      \n        Some edits to an .sdi file are permissible\n        prior to executing the IMPORT\n        TABLE statement, whereas others are problematic or may\n        even cause the import operation to fail:\n\n\n\n            Changing the data directory and index directory table\n            options is required if the locations of the data and index\n            files differ between the export and import servers.\n          \n            Changing the schema name is required to import the table\n            into a different schema on the import server than on the\n            export server.\n          \n            Changing schema and table names may be required to\n            accommodate differences between file system case-sensitivity\n            semantics on the export and import servers or differences in\n            lower_case_table_names\n            settings. Changing the table names in the\n            .sdi file may require renaming the\n            table files as well.\n          \n            In some cases, changes to column definitions are permitted.\n            Changing data types is likely to cause problems.\n\n\n"
    ],
    "Examples": [
        "mysql> FLUSH TABLES hr.employees, hr.managers WITH READ LOCK;",
        "mysql> UNLOCK TABLES;",
        "mysql> CREATE SCHEMA hr;",
        "mysql> IMPORT TABLE FROM\n       '/tmp/mysql-files/employees.sdi',\n       '/tmp/mysql-files/managers.sdi';",
        "IMPORT TABLE FROM '/tmp/mysql-files/*.sdi';"
    ],
    "Category": [
        "Data Manipulation Statements"
    ]
}