{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/case.html"
    ],
    "Title": [
        "15.6.5.1 CASE Statement"
    ],
    "Feature": [
        "CASE case_value\n    WHEN when_value THEN statement_list\n    [WHEN when_value THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE",
        "CASE\n    WHEN search_condition THEN statement_list\n    [WHEN search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE"
    ],
    "Description": [
        "\n        Or:\n      ",
        "\n        The CASE statement for stored\n        programs implements a complex conditional construct.\n",
        "\n\nNote\n\n\n          There is also a CASE\noperator, which differs from the\n          CASE\nstatement described here. See\n          Section\u00a014.5, \u201cFlow Control Functions\u201d. The\n          CASE statement cannot have an\n          ELSE NULL clause, and it is terminated with\n          END CASE instead of END.\n\n",
        "\n        For the first syntax, case_value is\n        an expression. This value is compared to the\n        when_value expression in each\n        WHEN clause until one of them is equal. When\n        an equal when_value is found, the\n        corresponding THEN clause\n        statement_list executes. If no\n        when_value is equal, the\n        ELSE clause\n        statement_list executes, if there is\n        one.\n      ",
        "\n        This syntax cannot be used to test for equality with\n        NULL because NULL = NULL\n        is false. See Section\u00a05.3.4.6, \u201cWorking with NULL Values\u201d.\n      ",
        "\n        For the second syntax, each WHEN clause\n        search_condition expression is\n        evaluated until one is true, at which point its corresponding\n        THEN clause\n        statement_list executes. If no\n        search_condition is equal, the\n        ELSE clause\n        statement_list executes, if there is\n        one.\n      ",
        "\n        If no when_value or\n        search_condition matches the value\n        tested and the CASE statement\n        contains no ELSE clause, a Case\n        not found for CASE statement error results.\n      ",
        "\n        Each statement_list consists of one\n        or more SQL statements; an empty\n        statement_list is not permitted.\n      ",
        "\n        To handle situations where no value is matched by any\n        WHEN clause, use an ELSE\n        containing an empty\n        BEGIN ...\n        END block, as shown in this example. (The indentation\n        used here in the ELSE clause is for purposes\n        of clarity only, and is not otherwise significant.)\n      ",
        "Press CTRL+C to copy DELIMITER |\n\nCREATE PROCEDURE p()\n  BEGIN\n    DECLARE v INT DEFAULT 1;\n\n    CASE v\n      WHEN 2 THEN SELECT v;\n      WHEN 3 THEN SELECT 0;\n      ELSE\n        BEGIN\n        END;\n    END CASE;\n  END;\n  |"
    ],
    "Examples": [
        "DELIMITER |\n\nCREATE PROCEDURE p()\n  BEGIN\n    DECLARE v INT DEFAULT 1;\n\n    CASE v\n      WHEN 2 THEN SELECT v;\n      WHEN 3 THEN SELECT 0;\n      ELSE\n        BEGIN\n        END;\n    END CASE;\n  END;\n  |"
    ],
    "Category": [
        "Compound Statement Syntax"
    ]
}