{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/repeat.html"
    ],
    "Title": [
        "15.6.5.6 REPEAT Statement"
    ],
    "Feature": [
        "[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]"
    ],
    "Description": [
        "\n        The statement list within a\n        REPEAT statement is repeated\n        until the search_condition expression\n        is true. Thus, a REPEAT always\n        enters the loop at least once.\n        statement_list consists of one or\n        more statements, each terminated by a semicolon\n        (;) statement delimiter.\n      ",
        "\n        A REPEAT statement can be\n        labeled. For the rules regarding label use, see\n        Section\u00a015.6.2, \u201cStatement Labels\u201d.\n      ",
        "\n        Example:\n      ",
        "Press CTRL+C to copy mysql> delimiter //\n\nmysql> CREATE PROCEDURE dorepeat(p1 INT)\n       BEGIN\n         SET @x = 0;\n         REPEAT\n           SET @x = @x + 1;\n         UNTIL @x > p1 END REPEAT;\n       END\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL dorepeat(1000)//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n+------+\n| @x   |\n+------+\n| 1001 |\n+------+\n1 row in set (0.00 sec)"
    ],
    "Examples": [
        "mysql> delimiter //\n\nmysql> CREATE PROCEDURE dorepeat(p1 INT)\n       BEGIN\n         SET @x = 0;\n         REPEAT\n           SET @x = @x + 1;\n         UNTIL @x > p1 END REPEAT;\n       END\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL dorepeat(1000)//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n+------+\n| @x   |\n+------+\n| 1001 |\n+------+\n1 row in set (0.00 sec)"
    ],
    "Category": [
        "Compound Statement Syntax"
    ]
}