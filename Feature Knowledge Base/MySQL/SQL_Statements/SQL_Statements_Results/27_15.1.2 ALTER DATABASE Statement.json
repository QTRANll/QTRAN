{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/alter-database.html"
    ],
    "Title": [
        "15.1.2 ALTER DATABASE Statement"
    ],
    "Feature": [
        "ALTER {DATABASE | SCHEMA} [db_name]\n    alter_option ...\n\nalter_option: {\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n  | [DEFAULT] ENCRYPTION [=] {'Y' | 'N'}\n  | READ ONLY [=] {DEFAULT | 0 | 1}\n}"
    ],
    "Description": [
        "\nALTER DATABASE enables you to\n      change the overall characteristics of a database. These\n      characteristics are stored in the data dictionary. This statement\n      requires the ALTER privilege on the\n      database. ALTER\n      SCHEMA is a synonym for ALTER\n      DATABASE.\n    ",
        "\n      If the database name is omitted, the statement applies to the\n      default database. In that case, an error occurs if there is no\n      default database.\n    ",
        "\n      For any alter_option omitted from the\n      statement, the database retains its current option value, with the\n      exception that changing the character set may change the collation\n      and vice versa.\n",
        "\nCharacter Set and Collation OptionsEncryption OptionRead Only Option\n",
        {
            "Sub-title": "Character Set and Collation Options",
            "Illustration": [
                "\n      The CHARACTER SET option changes the default\n      database character set. The COLLATE option\n      changes the default database collation. For information about\n      character set and collation names, see Chapter\u00a012, Character Sets, Collations, Unicode.\n    ",
                "\n      To see the available character sets and collations, use the\n      SHOW CHARACTER SET and\n      SHOW COLLATION statements,\n      respectively. See Section\u00a015.7.7.4, \u201cSHOW CHARACTER SET Statement\u201d, and\n      Section\u00a015.7.7.5, \u201cSHOW COLLATION Statement\u201d.\n    ",
                "\n      A stored routine that uses the database defaults when the routine\n      is created includes those defaults as part of its definition. (In\n      a stored routine, variables with character data types use the\n      database defaults if the character set or collation are not\n      specified explicitly. See Section\u00a015.1.17, \u201cCREATE PROCEDURE and CREATE FUNCTION Statements\u201d.) If\n      you change the default character set or collation for a database,\n      any stored routines that are to use the new defaults must be\n      dropped and recreated.\n"
            ]
        },
        {
            "Sub-title": "Encryption Option",
            "Illustration": [
                "\n      The ENCRYPTION option, defines the default\n      database encryption, which is inherited by tables created in the\n      database. The permitted values are 'Y'\n      (encryption enabled) and 'N' (encryption\n      disabled).\n    ",
                "\n      The mysql system schema cannot be set to\n      default encryption. The existing tables within it are part of the\n      general mysql tablespace, which may be\n      encrypted. The information_schema contains only\n      views. It is not possible to create any tables within it. There is\n      nothing on the disk to encrypt. All tables in the\n      performance_schema use the\n      PERFORMANCE_SCHEMA engine, which is\n      purely in-memory. It is not possible to create any other tables in\n      it. There is nothing on the disk to encrypt.\n    ",
                "\n      Only newly created tables inherit the default database encryption.\n      For existing tables associated with the database, their encryption\n      remains unchanged. If the\n      table_encryption_privilege_check\n      system variable is enabled, the\n      TABLE_ENCRYPTION_ADMIN privilege is\n      required to specify a default encryption setting that differs from\n      the value of the\n      default_table_encryption system\n      variable. For more information, see\n      Defining an Encryption Default for Schemas and General Tablespaces.\n"
            ]
        },
        {
            "Sub-title": "Read Only Option",
            "Illustration": [
                "\n      The READ ONLY option controls whether to permit\n      modification of the database and objects within it. The permitted\n      values are DEFAULT or 0 (not\n      read only) and 1 (read only). This option is\n      useful for database migration because a database for which\n      READ ONLY is enabled can be migrated to another\n      MySQL instance without concern that the database might be changed\n      during the operation.\n    ",
                "\n      With NDB Cluster, making a database read only on one\n      mysqld server is synchronized to other\n      mysqld servers in the same cluster, so that the\n      database becomes read only on all mysqld\n      servers.\n    ",
                "\n      The READ ONLY option, if enabled, is displayed\n      in the INFORMATION_SCHEMA\nSCHEMATA_EXTENSIONS table. See\n      Section\u00a028.3.32, \u201cThe INFORMATION_SCHEMA SCHEMATA_EXTENSIONS Table\u201d.\n    ",
                "\n      The READ ONLY option cannot be enabled for\n      these system schemas: mysql,\n      information_schema,\n      performance_schema.\n    ",
                "\n      In ALTER DATABASE statements, the\n      READ ONLY option interacts with other instances\n      of itself and with other options as follows:\n",
                "\n\n          An error occurs if multiple instances of READ\n          ONLY conflict (for example, READ ONLY = 1\n          READ ONLY = 0).\n        \n          An ALTER DATABASE statement\n          that contains only (nonconflicting) READ\n          ONLY options is permitted even for a read-only\n          database.\n        \n          A mix of (nonconflicting) READ ONLY options\n          with other options is permitted if the read-only state of the\n          database either before or after the statement permits\n          modifications. If the read-only state both before and after\n          prohibits changes, an error occurs.\n        \n          This statement succeeds whether or not the database is read\n          only:\n        Press CTRL+C to copy ALTER DATABASE mydb READ ONLY = 0 DEFAULT COLLATE utf8mb4_bin;\n          This statement succeeds if the database is not read only, but\n          fails if it is already read only:\n        Press CTRL+C to copy ALTER DATABASE mydb READ ONLY = 1 DEFAULT COLLATE utf8mb4_bin;\n",
                "\n      Enabling READ ONLY affects all users of the\n      database, with these exceptions that are not subject to read-only\n      checks:\n",
                "\n\n          Statements executed by the server as part of server\n          initialization, restart, upgrade, or replication.\n        \n          Statements in a file named at server startup by the\n          init_file system variable.\n        \nTEMPORARY tables; it is possible to create,\n          alter, drop, and write to TEMPORARY tables\n          in a read-only database.\n        \n          NDB Cluster non-SQL inserts and updates.\n\n",
                "\n      Other than for the excepted operations just listed, enabling\n      READ ONLY prohibits write operations to the\n      database and its objects, including their definitions, data, and\n      metadata. The following list details affected SQL statements and\n      operations:\n",
                "\n\n          The database itself:\n\n\n\nCREATE DATABASE\n\nALTER DATABASE (except to\n              change the READ ONLY option)\n            \nDROP DATABASE\n\n\n\n          Views:\n\n\n\nCREATE VIEW\n\nALTER VIEW\n\nDROP VIEW\n\n              Selecting from views that invoke functions with side\n              effects.\n            \n              Updating updatable views.\n            \n              Statements that create or drop objects in a writable\n              database are rejected if they affect metadata of a view in\n              a read-only database (for example, by making the view\n              valid or invalid).\n\n\n\n          Stored routines:\n\n\n\nCREATE PROCEDURE\n\nDROP PROCEDURE\n\nCALL (of procedures with\n              side effects)\n            \nCREATE FUNCTION\n\nDROP FUNCTION\n\nSELECT (of functions with\n              side effects)\n            \n              For procedures and functions, read-only checks follow\n              prelocking behavior. For\n              CALL statements, read-only\n              checks are done on a per-statement basis, so if some\n              conditionally executed statement writing to a read-only\n              database does not actually execute, the call still\n              succeeds. On the other hand, for a function called within\n              a SELECT, execution of the\n              function body happens in prelocked mode. As long as a some\n              statement within the function writes to a read-only\n              database, execution of the function fails with an error\n              regardless of whether the statement actually executes.\n\n\n\n          Triggers:\n\n\n\nCREATE TRIGGER\n\nDROP TRIGGER\n\n              Trigger invocation.\n\n\n\n          Events:\n\n\n\nCREATE EVENT\n\nALTER EVENT\n\nDROP EVENT\n\n              Event execution:\n\n\n\n                  Executing an event in the database fails because that\n                  would change the last-execution timestamp, which is\n                  event metadata stored in the data dictionary. Failure\n                  of event execution also has the effect of causing the\n                  event scheduler to stop.\n                \n                  If an event writes to an object in a read-only\n                  database, execution of the event fails with an error,\n                  but the event scheduler is not stopped.\n\n\n\n\n\n          Tables:\n\n\n\nCREATE TABLE\n\nALTER TABLE\n\nCREATE INDEX\n\nDROP INDEX\n\nRENAME TABLE\n\nTRUNCATE TABLE\n\nDROP TABLE\n\nDELETE\n\nINSERT\n\nIMPORT TABLE\n\nLOAD DATA\n\nLOAD XML\n\nREPLACE\n\nUPDATE\n\n              For cascading foreign keys where the child table is in a\n              read-only database, updates and deletes on the parent are\n              rejected even if the child table is not directly affected.\n            \n              For a MERGE table such as\n              CREATE TABLE s1.t(i int) ENGINE MERGE UNION\n              (s2.t, s3.t), INSERT_METHOD=..., the following\n              behavior applies:\n\n\n\n                  Inserting into the MERGE table\n                  (INSERT into s1.t) fails if at\n                  least one of s1,\n                  s2, s3 is read\n                  only, regardless of insert method. The insert is\n                  refused even if it would actually end up in a writable\n                  table.\n                \n                  Dropping the MERGE table\n                  (DROP TABLE s1.t) succeeds as long\n                  as s1 is not read only. It is\n                  permitted to drop a MERGE table\n                  that refers to a read-only database.\n\n\n\n\n\n",
                "\n      An ALTER DATABASE statement blocks\n      until all concurrent transactions that have already accessed an\n      object in the database being altered have committed. Conversely, a\n      write transaction accessing an object in a database being altered\n      in a concurrent ALTER DATABASE\n      blocks until the ALTER DATABASE has\n      committed.\n    ",
                "\n      If the Clone plugin is used to clone a local or remote data\n      directory, the databases in the clone retain the read-only state\n      they had in the source data directory. The read-only state does\n      not affect the cloning process itself. If it is not desirable to\n      have the same database read-only state in the clone, the option\n      must be changed explicitly for the clone after the cloning process\n      has finished, using ALTER DATABASE\n      operations on the clone.\n    ",
                "\n      When cloning from a donor to a recipient, if the recipient has a\n      user database that is read only, cloning fails with an error\n      message. Cloning may be retried after making the database\n      writable.\n    ",
                "\nREAD ONLY is permitted for\n      ALTER DATABASE, but not for\n      CREATE DATABASE. However, for a\n      read-only database, the statement produced by\n      SHOW CREATE DATABASE does include\n      READ ONLY=1 within a comment to indicate its\n      read-only status:\n    ",
                "Press CTRL+C to copy mysql> ALTER DATABASE mydb READ ONLY = 1;\nmysql> SHOW CREATE DATABASE mydb\\G\n*************************** 1. row ***************************\n       Database: mydb\nCreate Database: CREATE DATABASE `mydb`\n                 /*!40100 DEFAULT CHARACTER SET utf8mb4\n                          COLLATE utf8mb4_0900_ai_ci */\n                 /*!80016 DEFAULT ENCRYPTION='N' */\n                 /* READ ONLY = 1 */",
                "\n      If the server executes a CREATE\n      DATABASE statement containing such a comment, the server\n      ignores the comment and the READ ONLY option is\n      not processed. This has implications for\n      mysqldump, which uses SHOW\n      CREATE DATABASE to produce CREATE\n      DATABASE statements in dump output:\n",
                "\n\n          In a dump file, the CREATE\n          DATABASE statement for a read-only database contains\n          the commented READ ONLY option.\n        \n          The dump file can be restored as usual, but because the server\n          ignores the commented READ ONLY option, the\n          restored database is not read only. If\n          the database is to be read only after being restored, you must\n          execute ALTER DATABASE manually\n          to make it so.\n\n",
                "\n      Suppose that mydb is read only and you dump it\n      as follows:\n    ",
                "\n      A restore operation later must be followed by\n      ALTER DATABASE if\n      mydb should still be read only:\n    ",
                "Press CTRL+C to copy $> mysql\nmysql> SOURCE mydb.sql;\nmysql> ALTER DATABASE mydb READ ONLY = 1;",
                "\n      MySQL Enterprise Backup is not subject to this issue. It backs up and restores a\n      read-only database like any other, but enables the READ\n      ONLY option at restore time if it was enabled at backup\n      time.\n    ",
                "\nALTER DATABASE is written to the\n      binary log, so a change to the READ ONLY option\n      on a replication source server also affects replicas. To prevent\n      this from happening, binary logging must be disabled prior to\n      execution of the ALTER DATABASE\n      statement. For example, to prepare for migrating a database\n      without affecting replicas, perform these operations:\n",
                "\n\n          Within a single session, disable binary logging and enable\n          READ ONLY for the database:\n        Press CTRL+C to copy mysql> SET sql_log_bin = OFF;\nmysql> ALTER DATABASE mydb READ ONLY = 1;\n          Dump the database, for example, with\n          mysqldump:\n        Press CTRL+C to copy $> mysqldump --databases mydb > mydb.sql\n          Within a single session, disable binary logging and disable\n          READ ONLY for the database:\n        Press CTRL+C to copy mysql> SET sql_log_bin = OFF;\nmysql> ALTER DATABASE mydb READ ONLY = 0;\n"
            ]
        }
    ],
    "Examples": [
        "ALTER DATABASE mydb READ ONLY = 0 DEFAULT COLLATE utf8mb4_bin;",
        "ALTER DATABASE mydb READ ONLY = 1 DEFAULT COLLATE utf8mb4_bin;",
        "mysql> ALTER DATABASE mydb READ ONLY = 1;\nmysql> SHOW CREATE DATABASE mydb\\G\n*************************** 1. row ***************************\n       Database: mydb\nCreate Database: CREATE DATABASE `mydb`\n                 /*!40100 DEFAULT CHARACTER SET utf8mb4\n                          COLLATE utf8mb4_0900_ai_ci */\n                 /*!80016 DEFAULT ENCRYPTION='N' */\n                 /* READ ONLY = 1 */",
        "mysql> SET sql_log_bin = OFF;\nmysql> ALTER DATABASE mydb READ ONLY = 1;",
        "mysql> SET sql_log_bin = OFF;\nmysql> ALTER DATABASE mydb READ ONLY = 0;"
    ],
    "Category": [
        "Data Definition Statements"
    ]
}