{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/show-profile.html"
    ],
    "Title": [
        "15.7.7.31 SHOW PROFILE Statement"
    ],
    "Feature": [
        "SHOW PROFILE [type [, type] ... ]\n    [FOR QUERY n]\n    [LIMIT row_count [OFFSET offset]]\n\ntype: {\n    ALL\n  | BLOCK IO\n  | CONTEXT SWITCHES\n  | CPU\n  | IPC\n  | MEMORY\n  | PAGE FAULTS\n  | SOURCE\n  | SWAPS\n}"
    ],
    "Description": [
        "\n        The SHOW PROFILE and\n        SHOW PROFILES statements display\n        profiling information that indicates resource usage for\n        statements executed during the course of the current session.\n",
        "\n\nNote\n\n\n          The SHOW PROFILE and\n          SHOW PROFILES statements are\n          deprecated; expect them to be removed in a future MySQL\n          release. Use the\n          Performance Schema\n          instead; see\n          Section\u00a029.19.1, \u201cQuery Profiling Using Performance Schema\u201d.\n\n",
        "\n        To control profiling, use the\n        profiling session variable,\n        which has a default value of 0 (OFF). Enable\n        profiling by setting profiling\n        to 1 or ON:\n      ",
        "Press CTRL+C to copy mysql> SET profiling = 1;",
        "\nSHOW PROFILES displays a list of\n        the most recent statements sent to the server. The size of the\n        list is controlled by the\n        profiling_history_size session\n        variable, which has a default value of 15. The maximum value is\n        100. Setting the value to 0 has the practical effect of\n        disabling profiling.\n      ",
        "\n        All statements are profiled except SHOW\n        PROFILE and SHOW\n        PROFILES, so neither of those statements appears in\n        the profile list. Malformed statements are profiled. For\n        example, SHOW PROFILING is an illegal\n        statement, and a syntax error occurs if you try to execute it,\n        but it shows up in the profiling list.\n      ",
        "\nSHOW PROFILE displays detailed\n        information about a single statement. Without the FOR\n        QUERY n clause, the output\n        pertains to the most recently executed statement. If\n        FOR QUERY n is\n        included, SHOW PROFILE displays\n        information for statement n. The\n        values of n correspond to the\n        Query_ID values displayed by\n        SHOW PROFILES.\n      ",
        "\n        The LIMIT\n        row_count clause may be\n        given to limit the output to\n        row_count rows. If\n        LIMIT is given, OFFSET\n        offset may be added to\n        begin the output offset rows into the\n        full set of rows.\n      ",
        "\n        By default, SHOW PROFILE displays\n        Status and Duration\n        columns. The Status values are like the\n        State values displayed by\n        SHOW PROCESSLIST, although there\n        might be some minor differences in interpretation for the two\n        statements for some status values (see\n        Section\u00a010.14, \u201cExamining Server Thread (Process) Information\u201d).\n      ",
        "\n        Optional type values may be specified\n        to display specific additional types of information:\n",
        "\n\nALL displays all information\n          \nBLOCK IO displays counts for block input\n            and output operations\n          \nCONTEXT SWITCHES displays counts for\n            voluntary and involuntary context switches\n          \nCPU displays user and system CPU usage\n            times\n          \nIPC displays counts for messages sent and\n            received\n          \nMEMORY is not currently implemented\n          \nPAGE FAULTS displays counts for major and\n            minor page faults\n          \nSOURCE displays the names of functions\n            from the source code, together with the name and line number\n            of the file in which the function occurs\n          \nSWAPS displays swap counts\n\n",
        "\n        Profiling is enabled per session. When a session ends, its\n        profiling information is lost.\n      ",
        "Press CTRL+C to copy mysql> SELECT @@profiling;\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> SET profiling = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> DROP TABLE IF EXISTS t1;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> CREATE TABLE T1 (id INT);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SHOW PROFILES;\n+----------+----------+--------------------------+\n| Query_ID | Duration | Query                    |\n+----------+----------+--------------------------+\n|        0 | 0.000088 | SET PROFILING = 1        |\n|        1 | 0.000136 | DROP TABLE IF EXISTS t1  |\n|        2 | 0.011947 | CREATE TABLE t1 (id INT) |\n+----------+----------+--------------------------+\n3 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE;\n+----------------------+----------+\n| Status               | Duration |\n+----------------------+----------+\n| checking permissions | 0.000040 |\n| creating table       | 0.000056 |\n| After create         | 0.011363 |\n| query end            | 0.000375 |\n| freeing items        | 0.000089 |\n| logging slow query   | 0.000019 |\n| cleaning up          | 0.000005 |\n+----------------------+----------+\n7 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE FOR QUERY 1;\n+--------------------+----------+\n| Status             | Duration |\n+--------------------+----------+\n| query end          | 0.000107 |\n| freeing items      | 0.000008 |\n| logging slow query | 0.000015 |\n| cleaning up        | 0.000006 |\n+--------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE CPU FOR QUERY 2;\n+----------------------+----------+----------+------------+\n| Status               | Duration | CPU_user | CPU_system |\n+----------------------+----------+----------+------------+\n| checking permissions | 0.000040 | 0.000038 |   0.000002 |\n| creating table       | 0.000056 | 0.000028 |   0.000028 |\n| After create         | 0.011363 | 0.000217 |   0.001571 |\n| query end            | 0.000375 | 0.000013 |   0.000028 |\n| freeing items        | 0.000089 | 0.000010 |   0.000014 |\n| logging slow query   | 0.000019 | 0.000009 |   0.000010 |\n| cleaning up          | 0.000005 | 0.000003 |   0.000002 |\n+----------------------+----------+----------+------------+\n7 rows in set (0.00 sec)",
        "\n\nNote\n\n\n          Profiling is only partially functional on some architectures.\n          For values that depend on the getrusage()\n          system call, NULL is returned on systems\n          such as Windows that do not support the call. In addition,\n          profiling is per process and not per thread. This means that\n          activity on threads within the server other than your own may\n          affect the timing information that you see.\n\n",
        "\n        Profiling information is also available from the\n        INFORMATION_SCHEMA\nPROFILING table. See\n        Section\u00a028.3.24, \u201cThe INFORMATION_SCHEMA PROFILING Table\u201d. For\n        example, the following queries are equivalent:\n      ",
        "Press CTRL+C to copy SHOW PROFILE FOR QUERY 2;\n\nSELECT STATE, FORMAT(DURATION, 6) AS DURATION\nFROM INFORMATION_SCHEMA.PROFILING\nWHERE QUERY_ID = 2 ORDER BY SEQ;"
    ],
    "Examples": [
        "mysql> SET profiling = 1;",
        "mysql> SELECT @@profiling;\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> SET profiling = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> DROP TABLE IF EXISTS t1;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> CREATE TABLE T1 (id INT);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SHOW PROFILES;\n+----------+----------+--------------------------+\n| Query_ID | Duration | Query                    |\n+----------+----------+--------------------------+\n|        0 | 0.000088 | SET PROFILING = 1        |\n|        1 | 0.000136 | DROP TABLE IF EXISTS t1  |\n|        2 | 0.011947 | CREATE TABLE t1 (id INT) |\n+----------+----------+--------------------------+\n3 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE;\n+----------------------+----------+\n| Status               | Duration |\n+----------------------+----------+\n| checking permissions | 0.000040 |\n| creating table       | 0.000056 |\n| After create         | 0.011363 |\n| query end            | 0.000375 |\n| freeing items        | 0.000089 |\n| logging slow query   | 0.000019 |\n| cleaning up          | 0.000005 |\n+----------------------+----------+\n7 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE FOR QUERY 1;\n+--------------------+----------+\n| Status             | Duration |\n+--------------------+----------+\n| query end          | 0.000107 |\n| freeing items      | 0.000008 |\n| logging slow query | 0.000015 |\n| cleaning up        | 0.000006 |\n+--------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE CPU FOR QUERY 2;\n+----------------------+----------+----------+------------+\n| Status               | Duration | CPU_user | CPU_system |\n+----------------------+----------+----------+------------+\n| checking permissions | 0.000040 | 0.000038 |   0.000002 |\n| creating table       | 0.000056 | 0.000028 |   0.000028 |\n| After create         | 0.011363 | 0.000217 |   0.001571 |\n| query end            | 0.000375 | 0.000013 |   0.000028 |\n| freeing items        | 0.000089 | 0.000010 |   0.000014 |\n| logging slow query   | 0.000019 | 0.000009 |   0.000010 |\n| cleaning up          | 0.000005 | 0.000003 |   0.000002 |\n+----------------------+----------+----------+------------+\n7 rows in set (0.00 sec)",
        "SHOW PROFILE FOR QUERY 2;\n\nSELECT STATE, FORMAT(DURATION, 6) AS DURATION\nFROM INFORMATION_SCHEMA.PROFILING\nWHERE QUERY_ID = 2 ORDER BY SEQ;"
    ],
    "Category": [
        "Database Administration Statements"
    ]
}