{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/show-warnings.html"
    ],
    "Title": [
        "15.7.7.41 SHOW WARNINGS Statement"
    ],
    "Feature": [
        "SHOW WARNINGS [LIMIT [offset,] row_count]\nSHOW COUNT(*) WARNINGS"
    ],
    "Description": [
        "\nSHOW WARNINGS is a diagnostic\n        statement that displays information about the conditions\n        (errors, warnings, and notes) resulting from executing a\n        statement in the current session. Warnings are generated for DML\n        statements such as INSERT,\n        UPDATE, and\n        LOAD DATA as well as DDL\n        statements such as CREATE TABLE\n        and ALTER TABLE.\n      ",
        "\n        The LIMIT clause has the same syntax as for\n        the SELECT statement. See\n        Section\u00a015.2.13, \u201cSELECT Statement\u201d.\n      ",
        "\nSHOW WARNINGS is also used\n        following EXPLAIN, to display the\n        extended information generated by\n        EXPLAIN. See\n        Section\u00a010.8.3, \u201cExtended EXPLAIN Output Format\u201d.\n      ",
        "\nSHOW WARNINGS displays\n        information about the conditions resulting from execution of the\n        most recent nondiagnostic statement in the current session. If\n        the most recent statement resulted in an error during parsing,\n        SHOW WARNINGS shows the resulting\n        conditions, regardless of statement type (diagnostic or\n        nondiagnostic).\n      ",
        "\n        The SHOW COUNT(*)\n        WARNINGS diagnostic statement displays the total\n        number of errors, warnings, and notes. You can also retrieve\n        this number from the\n        warning_count system variable:\n      ",
        "Press CTRL+C to copy SHOW COUNT(*) WARNINGS;\nSELECT @@warning_count;",
        "\n        A difference in these statements is that the first is a\n        diagnostic statement that does not clear the message list. The\n        second, because it is a SELECT\n        statement is considered nondiagnostic and does clear the message\n        list.\n      ",
        "\n        A related diagnostic statement, SHOW\n        ERRORS, shows only error conditions (it excludes\n        warnings and notes), and\n        SHOW COUNT(*)\n        ERRORS statement displays the total number of errors.\n        See Section\u00a015.7.7.18, \u201cSHOW ERRORS Statement\u201d. GET\n        DIAGNOSTICS can be used to examine information for\n        individual conditions. See Section\u00a015.6.7.3, \u201cGET DIAGNOSTICS Statement\u201d.\n      ",
        "\n        Here is a simple example that shows data-conversion warnings for\n        INSERT. The example assumes that\n        strict SQL mode is disabled. With strict mode enabled, the\n        warnings would become errors and terminate the\n        INSERT.\n      ",
        "Press CTRL+C to copy mysql> CREATE TABLE t1 (a TINYINT NOT NULL, b CHAR(4));\nQuery OK, 0 rows affected (0.05 sec)\n\nmysql> INSERT INTO t1 VALUES(10,'mysql'), (NULL,'test'), (300,'xyz');\nQuery OK, 3 rows affected, 3 warnings (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 3\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 1265\nMessage: Data truncated for column 'b' at row 1\n*************************** 2. row ***************************\n  Level: Warning\n   Code: 1048\nMessage: Column 'a' cannot be null\n*************************** 3. row ***************************\n  Level: Warning\n   Code: 1264\nMessage: Out of range value for column 'a' at row 3\n3 rows in set (0.00 sec)",
        "\n        The max_error_count system\n        variable controls the maximum number of error, warning, and note\n        messages for which the server stores information, and thus the\n        number of messages that SHOW\n        WARNINGS displays. To change the number of messages\n        the server can store, change the value of\n        max_error_count.\n      ",
        "\nmax_error_count controls only\n        how many messages are stored, not how many are counted. The\n        value of warning_count is not\n        limited by max_error_count,\n        even if the number of messages generated exceeds\n        max_error_count. The following\n        example demonstrates this. The ALTER\n        TABLE statement produces three warning messages\n        (strict SQL mode is disabled for the example to prevent an error\n        from occurring after a single conversion issue). Only one\n        message is stored and displayed because\n        max_error_count has been set to\n        1, but all three are counted (as shown by the value of\n        warning_count):\n      ",
        "Press CTRL+C to copy mysql> SHOW VARIABLES LIKE 'max_error_count';\n+-----------------+-------+\n| Variable_name   | Value |\n+-----------------+-------+\n| max_error_count | 1024  |\n+-----------------+-------+\n1 row in set (0.00 sec)\n\nmysql> SET max_error_count=1, sql_mode = '';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> ALTER TABLE t1 MODIFY b CHAR;\nQuery OK, 3 rows affected, 3 warnings (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 3\n\nmysql> SHOW WARNINGS;\n+---------+------+----------------------------------------+\n| Level   | Code | Message                                |\n+---------+------+----------------------------------------+\n| Warning | 1263 | Data truncated for column 'b' at row 1 |\n+---------+------+----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT @@warning_count;\n+-----------------+\n| @@warning_count |\n+-----------------+\n|               3 |\n+-----------------+\n1 row in set (0.01 sec)",
        "\n        To disable message storage, set\n        max_error_count to 0. In this\n        case, warning_count still\n        indicates how many warnings occurred, but messages are not\n        stored and cannot be displayed.\n      ",
        "\n        The sql_notes system variable\n        controls whether note messages increment\n        warning_count and whether the\n        server stores them. By default,\n        sql_notes is 1, but if set to\n        0, notes do not increment\n        warning_count and the server\n        does not store them:\n      ",
        "Press CTRL+C to copy mysql> SET sql_notes = 1;\nmysql> DROP TABLE IF EXISTS test.no_such_table;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\nmysql> SHOW WARNINGS;\n+-------+------+------------------------------------+\n| Level | Code | Message                            |\n+-------+------+------------------------------------+\n| Note  | 1051 | Unknown table 'test.no_such_table' |\n+-------+------+------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SET sql_notes = 0;\nmysql> DROP TABLE IF EXISTS test.no_such_table;\nQuery OK, 0 rows affected (0.00 sec)\nmysql> SHOW WARNINGS;\nEmpty set (0.00 sec)",
        "\n        The MySQL server sends to each client a count indicating the\n        total number of errors, warnings, and notes resulting from the\n        most recent statement executed by that client. From the C API,\n        this value can be obtained by calling\n        mysql_warning_count(). See\n        mysql_warning_count().\n      ",
        "\n        In the mysql client, you can enable and\n        disable automatic warnings display using the\n        warnings and nowarning\n        commands, respectively, or their shortcuts,\n        \\W and \\w (see\n        Section\u00a06.5.1.2, \u201cmysql Client Commands\u201d). For example:\n      ",
        "Press CTRL+C to copy mysql> \\W\nShow warnings enabled.\nmysql> SELECT 1/0;\n+------+\n| 1/0  |\n+------+\n| NULL |\n+------+\n1 row in set, 1 warning (0.03 sec)\n\nWarning (Code 1365): Division by 0\nmysql> \\w\nShow warnings disabled."
    ],
    "Examples": [
        "SHOW COUNT(*) WARNINGS;\nSELECT @@warning_count;",
        "mysql> CREATE TABLE t1 (a TINYINT NOT NULL, b CHAR(4));\nQuery OK, 0 rows affected (0.05 sec)\n\nmysql> INSERT INTO t1 VALUES(10,'mysql'), (NULL,'test'), (300,'xyz');\nQuery OK, 3 rows affected, 3 warnings (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 3\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 1265\nMessage: Data truncated for column 'b' at row 1\n*************************** 2. row ***************************\n  Level: Warning\n   Code: 1048\nMessage: Column 'a' cannot be null\n*************************** 3. row ***************************\n  Level: Warning\n   Code: 1264\nMessage: Out of range value for column 'a' at row 3\n3 rows in set (0.00 sec)",
        "mysql> SHOW VARIABLES LIKE 'max_error_count';\n+-----------------+-------+\n| Variable_name   | Value |\n+-----------------+-------+\n| max_error_count | 1024  |\n+-----------------+-------+\n1 row in set (0.00 sec)\n\nmysql> SET max_error_count=1, sql_mode = '';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> ALTER TABLE t1 MODIFY b CHAR;\nQuery OK, 3 rows affected, 3 warnings (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 3\n\nmysql> SHOW WARNINGS;\n+---------+------+----------------------------------------+\n| Level   | Code | Message                                |\n+---------+------+----------------------------------------+\n| Warning | 1263 | Data truncated for column 'b' at row 1 |\n+---------+------+----------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT @@warning_count;\n+-----------------+\n| @@warning_count |\n+-----------------+\n|               3 |\n+-----------------+\n1 row in set (0.01 sec)",
        "mysql> SET sql_notes = 1;\nmysql> DROP TABLE IF EXISTS test.no_such_table;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\nmysql> SHOW WARNINGS;\n+-------+------+------------------------------------+\n| Level | Code | Message                            |\n+-------+------+------------------------------------+\n| Note  | 1051 | Unknown table 'test.no_such_table' |\n+-------+------+------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SET sql_notes = 0;\nmysql> DROP TABLE IF EXISTS test.no_such_table;\nQuery OK, 0 rows affected (0.00 sec)\nmysql> SHOW WARNINGS;\nEmpty set (0.00 sec)",
        "mysql> \\W\nShow warnings enabled.\nmysql> SELECT 1/0;\n+------+\n| 1/0  |\n+------+\n| NULL |\n+------+\n1 row in set, 1 warning (0.03 sec)\n\nWarning (Code 1365): Division by 0\nmysql> \\w\nShow warnings disabled."
    ],
    "Category": [
        "Database Administration Statements"
    ]
}