{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/set-transaction.html"
    ],
    "Title": [
        "15.3.7 SET TRANSACTION Statement"
    ],
    "Feature": [
        "SET [GLOBAL | SESSION] TRANSACTION\n    transaction_characteristic [, transaction_characteristic] ...\n\ntransaction_characteristic: {\n    ISOLATION LEVEL level\n  | access_mode\n}\n\nlevel: {\n     REPEATABLE READ\n   | READ COMMITTED\n   | READ UNCOMMITTED\n   | SERIALIZABLE\n}\n\naccess_mode: {\n     READ WRITE\n   | READ ONLY\n}"
    ],
    "Description": [
        "\n      This statement specifies\n      transaction\n      characteristics. It takes a list of one or more characteristic\n      values separated by commas. Each characteristic value sets the\n      transaction isolation\n      level or access mode. The isolation level is used for\n      operations on InnoDB tables. The\n      access mode specifies whether transactions operate in read/write\n      or read-only mode.\n    ",
        "\n      In addition, SET TRANSACTION can\n      include an optional GLOBAL or\n      SESSION keyword to indicate the scope of the\n      statement.\n",
        "\nTransaction Isolation LevelsTransaction Access ModeTransaction Characteristic Scope\n",
        "\n\n\n\nTransaction Isolation Levels\n\n\n\n\n        To set the transaction isolation level, use an\n        ISOLATION LEVEL\n        level clause. It is not\n        permitted to specify multiple ISOLATION LEVEL\n        clauses in the same SET\n        TRANSACTION statement.\n      \n        The default isolation level is\n        REPEATABLE READ. Other\n        permitted values are READ\n        COMMITTED, READ\n        UNCOMMITTED, and\n        SERIALIZABLE. For information\n        about these isolation levels, see\n        Section\u00a017.7.2.1, \u201cTransaction Isolation Levels\u201d.\n\n",
        "\n\n\n\nTransaction Access Mode\n\n\n\n\n        To set the transaction access mode, use a READ\n        WRITE or READ ONLY clause. It is\n        not permitted to specify multiple access-mode clauses in the\n        same SET TRANSACTION statement.\n      \n        By default, a transaction takes place in read/write mode, with\n        both reads and writes permitted to tables used in the\n        transaction. This mode may be specified explicitly using\n        SET TRANSACTION with an access\n        mode of READ WRITE.\n      \n        If the transaction access mode is set to READ\n        ONLY, changes to tables are prohibited. This may\n        enable storage engines to make performance improvements that are\n        possible when writes are not permitted.\n      \n        In read-only mode, it remains possible to change tables created\n        with the TEMPORARY keyword using DML\n        statements. Changes made with DDL statements are not permitted,\n        just as with permanent tables.\n      \n        The READ WRITE and READ\n        ONLY access modes also may be specified for an\n        individual transaction using the\n        START\n        TRANSACTION statement.\n\n",
        "\n\n\n\nTransaction Characteristic Scope\n\n\n\n\n        You can set transaction characteristics globally, for the\n        current session, or for the next transaction only:\n\n\n\n            With the GLOBAL keyword:\n\n\n\n                The statement applies globally for all subsequent\n                sessions.\n              \n                Existing sessions are unaffected.\n\n\n\n            With the SESSION keyword:\n\n\n\n                The statement applies to all subsequent transactions\n                performed within the current session.\n              \n                The statement is permitted within transactions, but does\n                not affect the current ongoing transaction.\n              \n                If executed between transactions, the statement\n                overrides any preceding statement that sets the\n                next-transaction value of the named characteristics.\n\n\n\n            Without any SESSION or\n            GLOBAL keyword:\n\n\n\n                The statement applies only to the next single\n                transaction performed within the session.\n              \n                Subsequent transactions revert to using the session\n                value of the named characteristics.\n              \n                The statement is not permitted within transactions:\n              Press CTRL+C to copy mysql> START TRANSACTION;\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;\nERROR 1568 (25001): Transaction characteristics can't be changed\nwhile a transaction is in progress\n\n\n\n\n        A change to global transaction characteristics requires the\n        CONNECTION_ADMIN privilege (or\n        the deprecated SUPER privilege).\n        Any session is free to change its session characteristics (even\n        in the middle of a transaction), or the characteristics for its\n        next transaction (prior to the start of that transaction).\n      \n        To set the global isolation level at server startup, use the\n        --transaction-isolation=level\n        option on the command line or in an option file. Values of\n        level for this option use dashes\n        rather than spaces, so the permissible values are\n        READ-UNCOMMITTED,\n        READ-COMMITTED,\n        REPEATABLE-READ, or\n        SERIALIZABLE.\n      \n        Similarly, to set the global transaction access mode at server\n        startup, use the\n        --transaction-read-only option.\n        The default is OFF (read/write mode) but the\n        value can be set to ON for a mode of read\n        only.\n      \n        For example, to set the isolation level to\n        REPEATABLE READ and the\n        access mode to READ WRITE, use these lines in\n        the [mysqld] section of an option file:\n      Press CTRL+C to copy [mysqld]\ntransaction-isolation = REPEATABLE-READ\ntransaction-read-only = OFF\n        At runtime, characteristics at the global, session, and\n        next-transaction scope levels can be set indirectly using the\n        SET TRANSACTION statement, as\n        described previously. They can also be set directly using the\n        SET\n        statement to assign values to the\n        transaction_isolation and\n        transaction_read_only system\n        variables:\n\n\n\nSET TRANSACTION permits\n            optional GLOBAL and\n            SESSION keywords for setting transaction\n            characteristics at different scope levels.\n          \n            The\n            SET\n            statement for assigning values to the\n            transaction_isolation and\n            transaction_read_only\n            system variables has syntaxes for setting these variables at\n            different scope levels.\n\n\n\n        The following tables show the characteristic scope level set by\n        each SET TRANSACTION and\n        variable-assignment syntax.\n\n\nTable\u00a015.9\u00a0SET TRANSACTION Syntax for Transaction Characteristics\n\n\nSyntax\nAffected Characteristic Scope\n\nSET GLOBAL TRANSACTION\n              transaction_characteristic\nGlobal\n\nSET SESSION TRANSACTION\n              transaction_characteristic\nSession\n\nSET TRANSACTION\n              transaction_characteristic\nNext transaction only\n\n\n\n\n\nTable\u00a015.10\u00a0SET Syntax for Transaction Characteristics\n\n\nSyntax\nAffected Characteristic Scope\n\nSET GLOBAL var_name =\n              value\nGlobal\n\nSET @@GLOBAL.var_name =\n              value\nGlobal\n\nSET PERSIST var_name =\n              value\nGlobal\n\nSET @@PERSIST.var_name =\n              value\nGlobal\n\nSET PERSIST_ONLY var_name =\n              value\nNo runtime effect\n\nSET @@PERSIST_ONLY.var_name =\n              value\nNo runtime effect\n\nSET SESSION var_name =\n              value\nSession\n\nSET @@SESSION.var_name =\n              value\nSession\n\nSET var_name =\n              value\nSession\n\nSET @@var_name =\n              value\nNext transaction only\n\n\nSyntax\nAffected Characteristic Scope\n\n\n\n        It is possible to check the global and session values of\n        transaction characteristics at runtime:\n      Press CTRL+C to copy SELECT @@GLOBAL.transaction_isolation, @@GLOBAL.transaction_read_only;\nSELECT @@SESSION.transaction_isolation, @@SESSION.transaction_read_only;\n"
    ],
    "Examples": [
        "mysql> START TRANSACTION;\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;\nERROR 1568 (25001): Transaction characteristics can't be changed\nwhile a transaction is in progress",
        "SELECT @@GLOBAL.transaction_isolation, @@GLOBAL.transaction_read_only;\nSELECT @@SESSION.transaction_isolation, @@SESSION.transaction_read_only;"
    ],
    "Category": [
        "Transactional and Locking Statements"
    ]
}