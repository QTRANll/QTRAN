{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/restart.html"
    ],
    "Title": [
        "15.7.8.8 RESTART Statement"
    ],
    "Feature": [
        "RESTART"
    ],
    "Description": [
        "\n        This statement stops and restarts the MySQL server. It requires\n        the SHUTDOWN privilege.\n      ",
        "\n        One use for RESTART is when it is\n        not possible or convenient to gain command-line access to the\n        MySQL server on the server host to restart it. For example,\n        SET\n        PERSIST_ONLY can be used at runtime to make\n        configuration changes to system variables that can be set only\n        at server startup, but the server must still be restarted for\n        those changes to take effect. The\n        RESTART statement provides a way\n        to do so from within client sessions, without requiring\n        command-line access on the server host.\n",
        "\n\nNote\n\n\n          After executing a RESTART\n          statement, the client can expect the current connection to be\n          lost. If auto-reconnect is enabled, the connection is\n          reestablished after the server restarts. Otherwise, the\n          connection must be reestablished manually.\n\n",
        "\n        A successful RESTART operation\n        requires mysqld to be running in an\n        environment that has a monitoring process available to detect a\n        server shutdown performed for restart purposes:\n",
        "\n\n            In the presence of a monitoring process,\n            RESTART causes\n            mysqld to terminate such that the\n            monitoring process can determine that it should start a new\n            mysqld instance.\n          \n            If no monitoring process is present,\n            RESTART fails with an error.\n\n",
        "\n        These platforms provide the necessary monitoring support for the\n        RESTART statement:\n",
        "\n\n            Windows, when mysqld is started as a\n            Windows service or standalone. (mysqld\n            forks, and one process acts as a monitor to the other, which\n            acts as the server.)\n          \n            Unix and Unix-like systems that use systemd or\n            mysqld_safe to manage\n            mysqld.\n\n",
        "\n        To configure a monitoring environment such that\n        mysqld enables the\n        RESTART statement:\n",
        "\n\n            Set the MYSQLD_PARENT_PID environment\n            variable to the value of the process ID of the process that\n            starts mysqld, before starting\n            mysqld.\n          \n            When mysqld performs a shutdown due to\n            use of the RESTART statement,\n            it returns exit code 16.\n          \n            When the monitoring process detects an exit code of 16, it\n            starts mysqld again. Otherwise, it exits.\n\n",
        "\n        Here is a minimal example as implemented in the\n        bash shell:\n      ",
        "Press CTRL+C to copy #!/bin/bash\n\nexport MYSQLD_PARENT_PID=$$\n\nexport MYSQLD_RESTART_EXIT=16\n\nwhile true ; do\n  bin/mysqld mysqld options here\n  if [ $? -ne $MYSQLD_RESTART_EXIT ]; then\n    break\n  fi\ndone",
        "\n        On Windows, the forking used to implement\n        RESTART makes determining the\n        server process to attach to for debugging more difficult. To\n        alleviate this, starting the server with\n        --gdb suppresses forking, in\n        addition to its other actions done to set up a debugging\n        environment. In non-debug settings,\n        --no-monitor may be used for the\n        sole purpose of suppressing forking the monitor process. For a\n        server started with either --gdb\n        or --no-monitor, executing\n        RESTART causes the server to\n        simply exit without restarting.\n      ",
        "\n        The\n        Com_restart\n        status variable tracks the number of\n        RESTART statements. Because\n        status variables are initialized for each server startup and do\n        not persist across restarts, Com_restart\n        normally has a value of zero, but can be nonzero if\n        RESTART statements were executed\n        but failed.\n"
    ],
    "Examples": [],
    "Category": [
        "Database Administration Statements"
    ]
}