{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/set-password.html"
    ],
    "Title": [
        "15.7.1.10 SET PASSWORD Statement"
    ],
    "Feature": [
        "SET PASSWORD [FOR user] auth_option\n    [REPLACE 'current_auth_string']\n    [RETAIN CURRENT PASSWORD]\n\nauth_option: {\n    = 'auth_string'\n  | TO RANDOM\n}"
    ],
    "Description": [
        "\n        The SET PASSWORD statement\n        assigns a password to a MySQL user account. The password may be\n        either explicitly specified in the statement or randomly\n        generated by MySQL. The statement may also include a\n        password-verification clause that specifies the account current\n        password to be replaced, and a clause that manages whether an\n        account has a secondary password.\n        'auth_string' and\n        'current_auth_string'\n        each represent a cleartext (unencrypted) password.\n",
        "\n\nNote\n\n\n          Rather than using SET PASSWORD\n          to assign passwords, ALTER USER\n          is the preferred statement for account alterations, including\n          assigning passwords. For example:\n        Press CTRL+C to copy ALTER USER user IDENTIFIED BY 'auth_string';\n",
        "\n\nNote\n\n\n          Clauses for random password generation, password verification,\n          and secondary passwords apply only to accounts that use an\n          authentication plugin that stores credentials internally to\n          MySQL. For accounts that use a plugin that performs\n          authentication against a credentials system that is external\n          to MySQL, password management must be handled externally\n          against that system as well. For more information about\n          internal credentials storage, see\n          Section\u00a08.2.15, \u201cPassword Management\u201d.\n\n",
        "\n        The REPLACE\n        'current_auth_string'\n        clause performs password verification. If given:\n",
        "\n\nREPLACE specifies the account current\n            password to be replaced, as a cleartext (unencrypted)\n            string.\n          \n            The clause must be given if password changes for the account\n            are required to specify the current password, as\n            verification that the user attempting to make the change\n            actually knows the current password.\n          \n            The clause is optional if password changes for the account\n            may but need not specify the current password.\n          \n            The statement fails if the clause is given but does not\n            match the current password, even if the clause is optional.\n          \nREPLACE can be specified only when\n            changing the account password for the current user.\n\n",
        "\n        For more information about password verification by specifying\n        the current password, see Section\u00a08.2.15, \u201cPassword Management\u201d.\n      ",
        "\n        The RETAIN CURRENT PASSWORD clause implements\n        dual-password capability. If given:\n",
        "\n\nRETAIN CURRENT PASSWORD retains an\n            account current password as its secondary password,\n            replacing any existing secondary password. The new password\n            becomes the primary password, but clients can use the\n            account to connect to the server using either the primary or\n            secondary password. (Exception: If the new password\n            specified by the SET PASSWORD\n            statement is empty, the secondary password becomes empty as\n            well, even if RETAIN CURRENT PASSWORD is\n            given.)\n          \n            If you specify RETAIN CURRENT PASSWORD\n            for an account that has an empty primary password, the\n            statement fails.\n          \n            If an account has a secondary password and you change its\n            primary password without specifying RETAIN CURRENT\n            PASSWORD, the secondary password remains\n            unchanged.\n\n",
        "\n        For more information about use of dual passwords, see\n        Section\u00a08.2.15, \u201cPassword Management\u201d.\n      ",
        "\nSET PASSWORD permits these\n        auth_option syntaxes:\n",
        "\n\n=\n            'auth_string'\n\n            Assigns the account the given literal password.\n          \nTO RANDOM\n\n            Assigns the account a password randomly generated by MySQL.\n            The statement also returns the cleartext password in a\n            result set to make it available to the user or application\n            executing the statement.\n          \n            For details about the result set and characteristics of\n            randomly generated passwords, see\n            Random Password Generation.\n\n",
        "\n\nImportant\n\n\n          Under some circumstances, SET\n          PASSWORD may be recorded in server logs or on the\n          client side in a history file such as\n          ~/.mysql_history, which means that\n          cleartext passwords may be read by anyone having read access\n          to that information. For information about the conditions\n          under which this occurs for the server logs and how to control\n          it, see Section\u00a08.1.2.3, \u201cPasswords and Logging\u201d. For similar\n          information about client-side logging, see\n          Section\u00a06.5.1.3, \u201cmysql Client Logging\u201d.\n\n",
        "\nSET PASSWORD can be used with or\n        without a FOR clause that explicitly names a\n        user account:\n",
        "\n\n            With a FOR\n            user clause, the\n            statement sets the password for the named account, which\n            must exist:\n          Press CTRL+C to copy SET PASSWORD FOR 'jeffrey'@'localhost' = 'auth_string';\n            With no FOR\n            user clause, the\n            statement sets the password for the current user:\n          Press CTRL+C to copy SET PASSWORD = 'auth_string';\n            Any client who connects to the server using a nonanonymous\n            account can change the password for that account. (In\n            particular, you can change your own password.) To see which\n            account the server authenticated you as, invoke the\n            CURRENT_USER() function:\n          Press CTRL+C to copy SELECT CURRENT_USER();\n",
        "\n        If a FOR user\n        clause is given, the account name uses the format described in\n        Section\u00a08.2.4, \u201cSpecifying Account Names\u201d. For example:\n      ",
        "Press CTRL+C to copy SET PASSWORD FOR 'bob'@'%.example.org' = 'auth_string';",
        "\n        The host name part of the account name, if omitted, defaults to\n        '%'.\n      ",
        "\nSET PASSWORD interprets the\n        string as a cleartext string, passes it to the authentication\n        plugin associated with the account, and stores the result\n        returned by the plugin in the account row in the\n        mysql.user system table. (The plugin is given\n        the opportunity to hash the value into the encryption format it\n        expects. The plugin may use the value as specified, in which\n        case no hashing occurs.)\n      ",
        "\n        Setting the password for a named account (with a\n        FOR clause) requires the\n        UPDATE privilege for the\n        mysql system schema. Setting the password for\n        yourself (for a nonanonymous account with no\n        FOR clause) requires no special privileges.\n      ",
        "\n        Statements that modify secondary passwords require these\n        privileges:\n",
        "\n\n            The\n            APPLICATION_PASSWORD_ADMIN\n            privilege is required to use the RETAIN CURRENT\n            PASSWORD clause for SET\n            PASSWORD statements that apply to your own\n            account. The privilege is required to manipulate your own\n            secondary password because most users require only one\n            password.\n          \n            If an account is to be permitted to manipulate secondary\n            passwords for all accounts, it should be granted the\n            CREATE USER privilege rather\n            than\n            APPLICATION_PASSWORD_ADMIN.\n\n",
        "\n        When the read_only system\n        variable is enabled, SET PASSWORD\n        requires the CONNECTION_ADMIN\n        privilege (or the deprecated\n        SUPER privilege), in addition to\n        any other required privileges.\n      ",
        "\n        For additional information about setting passwords and\n        authentication plugins, see\n        Section\u00a08.2.14, \u201cAssigning Account Passwords\u201d, and\n        Section\u00a08.2.17, \u201cPluggable Authentication\u201d.\n"
    ],
    "Examples": [
        "ALTER USER user IDENTIFIED BY 'auth_string';",
        "SET PASSWORD FOR 'jeffrey'@'localhost' = 'auth_string';",
        "SET PASSWORD = 'auth_string';",
        "SELECT CURRENT_USER();",
        "SET PASSWORD FOR 'bob'@'%.example.org' = 'auth_string';"
    ],
    "Category": [
        "Database Administration Statements"
    ]
}