{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/revoke.html"
    ],
    "Title": [
        "15.7.1.8 REVOKE Statement"
    ],
    "Feature": [
        "REVOKE [IF EXISTS]\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    FROM user_or_role [, user_or_role] ...\n    [IGNORE UNKNOWN USER]\n\nREVOKE [IF EXISTS] ALL [PRIVILEGES], GRANT OPTION\n    FROM user_or_role [, user_or_role] ...\n    [IGNORE UNKNOWN USER]\n\nREVOKE [IF EXISTS] PROXY ON user_or_role\n    FROM user_or_role [, user_or_role] ...\n    [IGNORE UNKNOWN USER]\n\nREVOKE [IF EXISTS] role [, role ] ...\n    FROM user_or_role [, user_or_role ] ...\n    [IGNORE UNKNOWN USER]\n\nuser_or_role: {\n    user (see Section 8.2.4, \u201cSpecifying Account Names\u201d)\n  | role (see Section 8.2.5, \u201cSpecifying Role Names\u201d\n}",
        "REVOKE ALL PRIVILEGES, GRANT OPTION\n  FROM user_or_role [, user_or_role] ..."
    ],
    "Description": [
        "\n        The REVOKE statement enables\n        system administrators to revoke privileges and roles, which can\n        be revoked from user accounts and roles.\n      ",
        "\n        For details on the levels at which privileges exist, the\n        permissible priv_type,\n        priv_level, and\n        object_type values, and the syntax\n        for specifying users and passwords, see Section\u00a015.7.1.6, \u201cGRANT Statement\u201d.\n      ",
        "\n        For information about roles, see Section\u00a08.2.10, \u201cUsing Roles\u201d.\n      ",
        "\n        When the read_only system\n        variable is enabled, REVOKE\n        requires the CONNECTION_ADMIN or\n        privilege (or the deprecated\n        SUPER privilege), in addition to\n        any other required privileges described in the following\n        discussion.\n      ",
        "\n        All the forms shown for REVOKE support an\n        IF EXISTS option as well as an\n        IGNORE UNKNOWN USER option. With neither of\n        these modifications, REVOKE\n        either succeeds for all named users and roles, or rolls back and\n        has no effect if any error occurs; the statement is written to\n        the binary log only if it succeeds for all named users and\n        roles. The precise effects of IF EXISTS and\n        IGNORE UNKNOWN USER are discussed later in\n        this section.\n      ",
        "\n        Each account name uses the format described in\n        Section\u00a08.2.4, \u201cSpecifying Account Names\u201d. Each role name uses the format\n        described in Section\u00a08.2.5, \u201cSpecifying Role Names\u201d. For example:\n      ",
        "Press CTRL+C to copy REVOKE INSERT ON *.* FROM 'jeffrey'@'localhost';\nREVOKE 'role1', 'role2' FROM 'user1'@'localhost', 'user2'@'localhost';\nREVOKE SELECT ON world.* FROM 'role3';",
        "\n        The host name part of the account or role name, if omitted,\n        defaults to '%'.\n      ",
        "\n        To use the first REVOKE syntax,\n        you must have the GRANT OPTION\n        privilege, and you must have the privileges that you are\n        revoking.\n      ",
        "\n        To revoke all privileges, use the second syntax, which drops all\n        global, database, table, column, and routine privileges for the\n        named users or roles:\n      ",
        "\nREVOKE ALL PRIVILEGES, GRANT OPTION does not\n        revoke any roles.\n      ",
        "\n        To use this REVOKE syntax, you\n        must have the global CREATE USER\n        privilege, or the UPDATE\n        privilege for the mysql system schema.\n      ",
        "\n        The syntax for which the REVOKE\n        keyword is followed by one or more role names takes a\n        FROM clause indicating one or more users or\n        roles from which to revoke the roles.\n      ",
        "\n        The IF EXISTS and IGNORE UNKNOWN\n        USER options have the effects listed here:\n",
        "\n\nIF EXISTS means that, if the target user\n            or role exists but no such privilege or role is found\n            assigned to the target for any reason, a warning is raised,\n            instead of an error; if no privilege or role named by the\n            statement is assigned to the target, the statement has no\n            (other) effect. Otherwise, REVOKE\n            executes normally; if the user does not exist, the statement\n            raises an error.\n          \nExample: Given table\n            t1 in database test,\n            we execute the following statements, with the results shown.\n          Press CTRL+C to copy mysql> CREATE USER jerry@localhost;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> REVOKE SELECT ON test.t1 FROM jerry@localhost;\nERROR 1147 (42000): There is no such grant defined for user 'jerry' on host\n'localhost' on table 't1' \nmysql> REVOKE IF EXISTS SELECT ON test.t1 FROM jerry@localhost;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 1147\nMessage: There is no such grant defined for user 'jerry' on host 'localhost' on\ntable 't1' \n1 row in set (0.00 sec)\nIF EXISTS causes an error to be demoted\n            to a warning even if the privilege or role named does not\n            exist, or the statement attempts to assign it at the wrong\n            level.\n          \n            If the REVOKE statement includes\n            IGNORE UNKNOWN USER, the statement raises\n            a warning for any target user or role named in the statement\n            but not found; if no target named by the statement exists,\n            REVOKE succeeds but has no actual effect.\n            Otherwise, the statement executes as usual, and attempting\n            to revoke a privilege not assigned to the target for\n            whatever reason raises an error, as expected.\n          \nExample (continuing from the previous\n            example):\n          Press CTRL+C to copy mysql> DROP USER IF EXISTS jerry@localhost;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> REVOKE SELECT ON test.t1 FROM jerry@localhost;\nERROR 1147 (42000): There is no such grant defined for user 'jerry' on host\n'localhost' on table 't1' \nmysql> REVOKE SELECT ON test.t1 FROM jerry@localhost IGNORE UNKNOWN USER;\nQuery OK, 0 rows affected, 1 warning (0.01 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 3162\nMessage: Authorization ID jerry does not exist.\n1 row in set (0.00 sec)\n            The combination of IF EXISTS and\n            IGNORE UNKNOWN USER means that\n            REVOKE never raises an error for an\n            unknown target user or role or for an unassigned or\n            unavailable privilege, and the statement as whole in such\n            cases succeeds; roles or privileges are removed from\n            existing target users or roles whenever possible, and any\n            revocation which is not possible raises a warning and\n            executes as a NOOP.\n          \nExample (again continuing from example\n            in the previous item):\n          Press CTRL+C to copy # No such user, no such role\nmysql> DROP ROLE IF EXISTS Bogus;\nQuery OK, 0 rows affected, 1 warning (0.02 sec)\n\nmysql> SHOW WARNINGS;\n+-------+------+----------------------------------------------+\n| Level | Code | Message                                      |\n+-------+------+----------------------------------------------+\n| Note  | 3162 | Authorization ID 'Bogus'@'%' does not exist. |\n+-------+------+----------------------------------------------+\n1 row in set (0.00 sec)\n\n# This statement attempts to revoke a nonexistent role from a nonexistent user\nmysql> REVOKE Bogus ON test FROM jerry@localhost;\nERROR 3619 (HY000): Illegal privilege level specified for test\n\n# The same, with IF EXISTS\nmysql> REVOKE IF EXISTS Bogus ON test FROM jerry@localhost;\nERROR 1147 (42000): There is no such grant defined for user 'jerry' on host\n'localhost' on table 'test' \n\n# The same, with IGNORE UNKNOWN USER\nmysql> REVOKE Bogus ON test FROM jerry@localhost IGNORE UNKNOWN USER;\nERROR 3619 (HY000): Illegal privilege level specified for test\n\n# The same, with both options\nmysql> REVOKE IF EXISTS Bogus ON test FROM jerry@localhost IGNORE UNKNOWN USER;\nQuery OK, 0 rows affected, 2 warnings (0.01 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+--------------------------------------------+\n| Level   | Code | Message                                    |\n+---------+------+--------------------------------------------+\n| Warning | 3619 | Illegal privilege level specified for test |\n| Warning | 3162 | Authorization ID jerry does not exist.     |\n+---------+------+--------------------------------------------+\n2 rows in set (0.00 sec)\n",
        "\n        Roles named in the\n        mandatory_roles system variable\n        value cannot be revoked. When IF EXISTS and\n        IGNORE UNKNOWN USER are used together in a\n        statement that tries to remove a mandatory privilege, the error\n        normally raised by attempting to do this is demoted to a\n        warning; the statement executes successfully, but does not make\n        any changes.\n      ",
        "\n        A revoked role immediately affects any user account from which\n        it was revoked, such that within any current session for the\n        account, its privileges are adjusted for the next statement\n        executed.\n      ",
        "\n        Revoking a role revokes the role itself, not the privileges that\n        it represents. Suppose that an account is granted a role that\n        includes a given privilege, and is also granted the privilege\n        explicitly or another role that includes the privilege. In this\n        case, the account still possesses that privilege if the first\n        role is revoked. For example, if an account is granted two roles\n        that each include SELECT, the\n        account still can select after either role is revoked.\n      ",
        "\nREVOKE ALL ON *.* (at the global level)\n        revokes all granted static global privileges and all granted\n        dynamic privileges.\n      ",
        "\n        A revoked privilege that is granted but not known to the server\n        is revoked with a warning. This situation can occur for dynamic\n        privileges. For example, a dynamic privilege can be granted\n        while the component that registers it is installed, but if that\n        component is subsequently uninstalled, the privilege becomes\n        unregistered, although accounts that possess the privilege still\n        possess it and it can be revoked from them.\n      ",
        "\nREVOKE removes privileges, but\n        does not remove rows from the mysql.user\n        system table. To remove a user account entirely, use\n        DROP USER. See\n        Section\u00a015.7.1.5, \u201cDROP USER Statement\u201d.\n      ",
        "\n        If the grant tables hold privilege rows that contain mixed-case\n        database or table names and the\n        lower_case_table_names system\n        variable is set to a nonzero value,\n        REVOKE cannot be used to revoke\n        these privileges. It is necessary in such cases to manipulate\n        the grant tables directly. (GRANT\n        does not create such rows when\n        lower_case_table_names is set,\n        but such rows might have been created prior to setting the\n        variable. The\n        lower_case_table_names setting\n        can only be configured when initializing the server.)\n      ",
        "\n        When successfully executed from the mysql\n        program, REVOKE responds with\n        Query OK, 0 rows affected. To determine what\n        privileges remain after the operation, use\n        SHOW GRANTS. See\n        Section\u00a015.7.7.22, \u201cSHOW GRANTS Statement\u201d.\n"
    ],
    "Examples": [
        "REVOKE INSERT ON *.* FROM 'jeffrey'@'localhost';\nREVOKE 'role1', 'role2' FROM 'user1'@'localhost', 'user2'@'localhost';\nREVOKE SELECT ON world.* FROM 'role3';",
        "mysql> CREATE USER jerry@localhost;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> REVOKE SELECT ON test.t1 FROM jerry@localhost;\nERROR 1147 (42000): There is no such grant defined for user 'jerry' on host\n'localhost' on table 't1' \nmysql> REVOKE IF EXISTS SELECT ON test.t1 FROM jerry@localhost;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 1147\nMessage: There is no such grant defined for user 'jerry' on host 'localhost' on\ntable 't1' \n1 row in set (0.00 sec)",
        "mysql> DROP USER IF EXISTS jerry@localhost;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> REVOKE SELECT ON test.t1 FROM jerry@localhost;\nERROR 1147 (42000): There is no such grant defined for user 'jerry' on host\n'localhost' on table 't1' \nmysql> REVOKE SELECT ON test.t1 FROM jerry@localhost IGNORE UNKNOWN USER;\nQuery OK, 0 rows affected, 1 warning (0.01 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 3162\nMessage: Authorization ID jerry does not exist.\n1 row in set (0.00 sec)",
        "# No such user, no such role\nmysql> DROP ROLE IF EXISTS Bogus;\nQuery OK, 0 rows affected, 1 warning (0.02 sec)\n\nmysql> SHOW WARNINGS;\n+-------+------+----------------------------------------------+\n| Level | Code | Message                                      |\n+-------+------+----------------------------------------------+\n| Note  | 3162 | Authorization ID 'Bogus'@'%' does not exist. |\n+-------+------+----------------------------------------------+\n1 row in set (0.00 sec)\n\n# This statement attempts to revoke a nonexistent role from a nonexistent user\nmysql> REVOKE Bogus ON test FROM jerry@localhost;\nERROR 3619 (HY000): Illegal privilege level specified for test\n\n# The same, with IF EXISTS\nmysql> REVOKE IF EXISTS Bogus ON test FROM jerry@localhost;\nERROR 1147 (42000): There is no such grant defined for user 'jerry' on host\n'localhost' on table 'test' \n\n# The same, with IGNORE UNKNOWN USER\nmysql> REVOKE Bogus ON test FROM jerry@localhost IGNORE UNKNOWN USER;\nERROR 3619 (HY000): Illegal privilege level specified for test\n\n# The same, with both options\nmysql> REVOKE IF EXISTS Bogus ON test FROM jerry@localhost IGNORE UNKNOWN USER;\nQuery OK, 0 rows affected, 2 warnings (0.01 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+--------------------------------------------+\n| Level   | Code | Message                                    |\n+---------+------+--------------------------------------------+\n| Warning | 3619 | Illegal privilege level specified for test |\n| Warning | 3162 | Authorization ID jerry does not exist.     |\n+---------+------+--------------------------------------------+\n2 rows in set (0.00 sec)"
    ],
    "Category": [
        "Database Administration Statements"
    ]
}