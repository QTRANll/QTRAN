{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/show-replica-status.html"
    ],
    "Title": [
        "15.7.7.34 SHOW REPLICA STATUS Statement"
    ],
    "Feature": [
        "SHOW REPLICA STATUS [FOR CHANNEL channel]"
    ],
    "Description": [
        "\n        This statement provides status information on essential\n        parameters of the replica threads. The statement requires the\n        REPLICATION CLIENT privilege (or\n        the deprecated SUPER privilege).\n      ",
        "\nSHOW REPLICA STATUS is nonblocking. When run\n        concurrently with\n        STOP\n        REPLICA, SHOW REPLICA STATUS\n        returns without waiting for STOP\n        REPLICA to finish shutting down the replication SQL\n        (applier) thread or replication I/O (receiver) thread (or both).\n        This permits use in monitoring and other applications where\n        getting an immediate response from SHOW REPLICA\n        STATUS is more important than ensuring that it\n        returned the latest data.\n      ",
        "\n        If you issue this statement using the mysql\n        client, you can use a \\G statement terminator\n        rather than a semicolon to obtain a more readable vertical\n        layout:\n      ",
        "Press CTRL+C to copy mysql> SHOW REPLICA STATUS\\G\n*************************** 1. row ***************************\n             Replica_IO_State: Waiting for source to send event\n                  Source_Host: 127.0.0.1\n                  Source_User: root\n                  Source_Port: 13000\n                Connect_Retry: 1\n              Source_Log_File: master-bin.000001\n          Read_Source_Log_Pos: 927\n               Relay_Log_File: slave-relay-bin.000002\n                Relay_Log_Pos: 1145\n        Relay_Source_Log_File: master-bin.000001\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n  Replicate_Wild_Ignore_Table:\n                   Last_Errno: 0\n                   Last_Error:\n                 Skip_Counter: 0\n          Exec_Source_Log_Pos: 927\n              Relay_Log_Space: 1355\n              Until_Condition: None\n               Until_Log_File:\n                Until_Log_Pos: 0\n           Source_SSL_Allowed: No\n           Source_SSL_CA_File:\n           Source_SSL_CA_Path:\n              Source_SSL_Cert:\n            Source_SSL_Cipher:\n               Source_SSL_Key:\n        Seconds_Behind_Source: 0\nSource_SSL_Verify_Server_Cert: No\n                Last_IO_Errno: 0\n                Last_IO_Error:\n               Last_SQL_Errno: 0\n               Last_SQL_Error:\n  Replicate_Ignore_Server_Ids:\n             Source_Server_Id: 1\n                  Source_UUID: 73f86016-978b-11ee-ade5-8d2a2a562feb\n             Source_Info_File: mysql.slave_master_info\n                    SQL_Delay: 0\n          SQL_Remaining_Delay: NULL\n    Replica_SQL_Running_State: Replica has read all relay log; waiting for more updates\n           Source_Retry_Count: 10\n                  Source_Bind:\n      Last_IO_Error_Timestamp:\n     Last_SQL_Error_Timestamp:\n               Source_SSL_Crl:\n           Source_SSL_Crlpath:\n           Retrieved_Gtid_Set: 73f86016-978b-11ee-ade5-8d2a2a562feb:1-3\n            Executed_Gtid_Set: 73f86016-978b-11ee-ade5-8d2a2a562feb:1-3\n                Auto_Position: 1\n         Replicate_Rewrite_DB:\n                 Channel_Name:\n           Source_TLS_Version:\n       Source_public_key_path:\n        Get_Source_public_key: 0\n            Network_Namespace:",
        "\n        The Performance Schema provides tables that expose replication\n        information. This is similar to the information available from\n        the SHOW REPLICA STATUS\n        statement, but represented in table form. For details, see\n        Section\u00a029.12.11, \u201cPerformance Schema Replication Tables\u201d.\n      ",
        "\n        You can set the GTID_ONLY option for the\n        CHANGE REPLICATION SOURCE TO\n        statement to stop a replication channel from persisting file\n        names and file positions in the replication metadata\n        repositories. With this setting, file positions for the source\n        binary log file and the relay log file are tracked in memory.\n        The SHOW REPLICA STATUS statement\n        still displays file positions in normal use. However, because\n        the file positions are not being regularly updated in the\n        connection metadata repository and the applier metadata\n        repository except in a few situations, they are likely to be out\n        of date if the server is restarted.\n      ",
        "\n        For a replication channel with the GTID_ONLY\n        setting after a server start, the read and applied file\n        positions for the source binary log file\n        (Read_Source_Log_Pos and\n        Exec_Source_Log_Pos) are set to zero, and the\n        file names (Source_Log_File and\n        Relay_Source_Log_File) are set to\n        INVALID. The relay log file name\n        (Relay_Log_File) is set according to the\n        relay_log_recovery setting, either a new file that was created\n        at server start or the first relay log file present. The file\n        position (Relay_Log_Pos) is set to position\n        4, and GTID auto-skip is used to skip any transactions in the\n        file that were already applied.\n      ",
        "\n        When the receiver thread contacts the source and gets valid\n        position information, the read position\n        (Read_Source_Log_Pos) and file name\n        (Source_Log_File) are updated with the\n        correct data and become valid. When the applier thread applies a\n        transaction from the source, or skips an already executed\n        transaction, the executed position\n        (Exec_Source_Log_Pos) and file name\n        (Relay_Source_Log_File) are updated with the\n        correct data and become valid. The relay log file position\n        (Relay_Log_Pos) is also updated at that time.\n      ",
        "\n        The following list describes the fields returned by\n        SHOW\n        REPLICA STATUS. For additional information about\n        interpreting their meanings, see\n        Section\u00a019.1.7.1, \u201cChecking Replication Status\u201d.\n",
        "\n\nReplica_IO_State\n\n            A copy of the State field of the\n            SHOW PROCESSLIST output for\n            the replica I/O (receiver) thread. This tells you what the\n            thread is doing: trying to connect to the source, waiting\n            for events from the source, reconnecting to the source, and\n            so on. For a listing of possible states, see\n            Section\u00a010.14.5, \u201cReplication I/O (Receiver) Thread States\u201d.\n          \nSource_Host\n\n            The source host that the replica is connected to.\n          \nSource_User\n\n            The user name of the account used to connect to the source.\n          \nSource_Port\n\n            The port used to connect to the source.\n          \nConnect_Retry\n\n            The number of seconds between connect retries (default 60).\n            This can be set with a CHANGE\n            REPLICATION SOURCE TO statement.\n          \nSource_Log_File\n\n            The name of the source binary log file from which the I/O\n            (receiver) thread is currently reading. This is set to\n            INVALID for a replication channel with\n            the GTID_ONLY setting after a server\n            start. It will be updated when the replica contacts the\n            source.\n          \nRead_Source_Log_Pos\n\n            The position in the current source binary log file up to\n            which the I/O (receiver) thread has read. This is set to\n            zero for a replication channel with the\n            GTID_ONLY setting after a server start.\n            It will be updated when the replica contacts the source.\n          \nRelay_Log_File\n\n            The name of the relay log file from which the SQL (applier)\n            thread is currently reading and executing.\n          \nRelay_Log_Pos\n\n            The position in the current relay log file up to which the\n            SQL (applier) thread has read and executed.\n          \nRelay_Source_Log_File\n\n            The name of the source binary log file containing the most\n            recent event executed by the SQL (applier) thread. This is\n            set to INVALID for a replication channel\n            with the GTID_ONLY setting after a server\n            start. It will be updated when a transaction is executed or\n            skipped.\n          \nReplica_IO_Running\n\n            Whether the replication I/O (receiver) thread is started and\n            has connected successfully to the source. Internally, the\n            state of this thread is represented by one of the following\n            three values:\n\n\nMYSQL_REPLICA_NOT_RUN.\u00a0\n                  The replication I/O (receiver) thread is not running.\n                  For this state, Replica_IO_Running\n                  is No.\n                MYSQL_REPLICA_RUN_NOT_CONNECT.\u00a0\n                  The replication I/O (receiver) thread is running, but\n                  is not connected to a replication source. For this\n                  state, Replica_IO_Running is\n                  Connecting.\n                MYSQL_REPLICA_RUN_CONNECT.\u00a0\n                  The replication I/O (receiver) thread is running, and\n                  is connected to a replication source. For this state,\n                  Replica_IO_Running is\n                  Yes.\n\n\n\nReplica_SQL_Running\n\n            Whether the replication SQL (applier) thread is started.\n          \nReplicate_Do_DB,\n            Replicate_Ignore_DB\n\n            The names of any databases that were specified with the\n            --replicate-do-db and\n            --replicate-ignore-db\n            options, or the CHANGE REPLICATION\n            FILTER statement. If the FOR\n            CHANNEL clause was used, the channel specific\n            replication filters are shown. Otherwise, the replication\n            filters for every replication channel are shown.\n          \nReplicate_Do_Table,\n            Replicate_Ignore_Table,\n            Replicate_Wild_Do_Table,\n            Replicate_Wild_Ignore_Table\n\n            The names of any tables that were specified with the\n            --replicate-do-table,\n            --replicate-ignore-table,\n            --replicate-wild-do-table,\n            and\n            --replicate-wild-ignore-table\n            options, or the CHANGE REPLICATION\n            FILTER statement. If the FOR\n            CHANNEL clause was used, the channel specific\n            replication filters are shown. Otherwise, the replication\n            filters for every replication channel are shown.\n          \nLast_Errno, Last_Error\n\n            These columns are aliases for\n            Last_SQL_Errno and\n            Last_SQL_Error.\n          \n            Issuing RESET BINARY LOGS AND\n            GTIDS or\n            RESET\n            REPLICA resets the values shown in these columns.\n\n\n\nNote\n\n\n              When the replication SQL thread receives an error, it\n              reports the error first, then stops the SQL thread. This\n              means that there is a small window of time during which\n              SHOW REPLICA STATUS shows a nonzero\n              value for Last_SQL_Errno even though\n              Replica_SQL_Running still displays\n              Yes.\n\n\n\nSkip_Counter\n\n            The current value of the\n            sql_replica_skip_counter\n            system variable.\n          \nExec_Source_Log_Pos\n\n            The position in the current source binary log file to which\n            the replication SQL thread has read and executed, marking\n            the start of the next transaction or event to be processed.\n            This is set to zero for a replication channel with the\n            GTID_ONLY setting after a server start.\n            It will be updated when a transaction is executed or\n            skipped.\n          \n            You can use this value with the CHANGE\n            REPLICATION SOURCE TO statement's\n            SOURCE_LOG_POS option when starting a new\n            replica from an existing replica, so that the new replica\n            reads from this point. The coordinates given by\n            (Relay_Source_Log_File,\n            Exec_Source_Log_Pos) in the source's\n            binary log correspond to the coordinates given by\n            (Relay_Log_File,\n            Relay_Log_Pos) in the relay log.\n          \n            Inconsistencies in the sequence of transactions from the\n            relay log which have been executed can cause this value to\n            be a \u201clow-water mark\u201d. In other words,\n            transactions appearing before the position are guaranteed to\n            have committed, but transactions after the position may have\n            committed or not. If these gaps need to be corrected, use\n            START REPLICA\n            UNTIL SQL_AFTER_MTS_GAPS. See\n            Section\u00a019.5.1.34, \u201cReplication and Transaction Inconsistencies\u201d\n            for more information.\n          \nRelay_Log_Space\n\n            The total combined size of all existing relay log files.\n          \nUntil_Condition,\n            Until_Log_File,\n            Until_Log_Pos\n\n            The values specified in the UNTIL clause\n            of the START\n            REPLICA statement.\n          \nUntil_Condition has these values:\n\n\n\nNone if no UNTIL\n                clause was specified.\n              \nSource if the replica is reading\n                until a given position in the source's binary log.\n              \nRelay if the replica is reading until\n                a given position in its relay log.\n              \nSQL_BEFORE_GTIDS if the replication\n                SQL thread is processing transactions until it has\n                reached the first transaction whose GTID is listed in\n                the gtid_set.\n              \nSQL_AFTER_GTIDS if the replication\n                threads are processing all transactions until the last\n                transaction in the gtid_set has been\n                processed by both threads.\n              \nSQL_AFTER_MTS_GAPS if a multithreaded\n                replica's SQL threads are running until no more gaps are\n                found in the relay log.\n\n\n\nUntil_Log_File and\n            Until_Log_Pos indicate the log file name\n            and position that define the coordinates at which the\n            replication SQL thread stops executing.\n          \n            For more information on UNTIL clauses,\n            see Section\u00a015.4.2.4, \u201cSTART REPLICA Statement\u201d.\n          \nSource_SSL_Allowed,\n            Source_SSL_CA_File,\n            Source_SSL_CA_Path,\n            Source_SSL_Cert,\n            Source_SSL_Cipher,\n            Source_SSL_CRL_File,\n            Source_SSL_CRL_Path,\n            Source_SSL_Key,\n            Source_SSL_Verify_Server_Cert\n\n            These fields show the SSL parameters used by the replica to\n            connect to the source, if any.\n          \nSource_SSL_Allowed has these values:\n\n\n\nYes if an SSL connection to the\n                source is permitted.\n              \nNo if an SSL connection to the source\n                is not permitted.\n              \nIgnored if an SSL connection is\n                permitted but the replica server does not have SSL\n                support enabled.\n\n\n\n            The values of the other SSL-related fields correspond to the\n            values of the SOURCE_SSL_* options of the\n            CHANGE REPLICATION SOURCE TO\n            statement.\n          \nSeconds_Behind_Source\n\n            This field is an indication of how \u201clate\u201d the\n            replica is:\n\n\n\n                When the replica is actively processing updates, this\n                field shows the difference between the current timestamp\n                on the replica and the original timestamp logged on the\n                source for the event currently being processed on the\n                replica.\n              \n                When no event is currently being processed on the\n                replica, this value is 0.\n\n\n\n            In essence, this field measures the time difference in\n            seconds between the replication SQL (applier) thread and the\n            replication I/O (receiver) thread. If the network connection\n            between source and replica is fast, the replication receiver\n            thread is very close to the source, so this field is a good\n            approximation of how late the replication applier thread is\n            compared to the source. If the network is slow, this is\n            not a good approximation; the\n            replication applier thread may quite often be caught up with\n            the slow-reading replication receiver thread, so\n            Seconds_Behind_Source often shows a value\n            of 0, even if the replication receiver thread is late\n            compared to the source. In other words, this\n            column is useful only for fast networks.\n          \n            This time difference computation works even if the source\n            and replica do not have identical clock times, provided that\n            the difference, computed when the replica receiver thread\n            starts, remains constant from then on. Any changes,\n            including NTP updates, can lead to clock skews that can make\n            calculation of Seconds_Behind_Source less\n            reliable.\n          \n            In MySQL 8.4, this field is\n            NULL (undefined or unknown) if the\n            replication applier thread is not running, or if the applier\n            thread has consumed all of the relay log and the replication\n            receiver thread is not running. (In older versions of MySQL,\n            this field was NULL if the replication\n            applier thread or the replication receiver thread was not\n            running or was not connected to the source.) If the\n            replication receiver thread is running but the relay log is\n            exhausted, Seconds_Behind_Source is set\n            to 0.\n          \n            The value of Seconds_Behind_Source is\n            based on the timestamps stored in events, which are\n            preserved through replication. This means that if a source\n            M1 is itself a replica of M0, any event from M1's binary log\n            that originates from M0's binary log has M0's timestamp for\n            that event. This enables MySQL to replicate\n            TIMESTAMP successfully.\n            However, the problem for\n            Seconds_Behind_Source is that if M1 also\n            receives direct updates from clients, the\n            Seconds_Behind_Source value randomly\n            fluctuates because sometimes the last event from M1\n            originates from M0 and sometimes is the result of a direct\n            update on M1.\n          \n            When using a multithreaded replica, you should keep in mind\n            that this value is based on\n            Exec_Source_Log_Pos, and so may not\n            reflect the position of the most recently committed\n            transaction.\n          \nLast_IO_Errno,\n            Last_IO_Error\n\n            The error number and error message of the most recent error\n            that caused the replication I/O (receiver) thread to stop.\n            An error number of 0 and message of the empty string mean\n            \u201cno error.\u201d If the\n            Last_IO_Error value is not empty, the\n            error values also appear in the replica's error log.\n          \n            I/O error information includes a timestamp showing when the\n            most recent I/O (receiver)thread error occurred. This\n            timestamp uses the format YYMMDD\n            hh:mm:ss, and appears in the\n            Last_IO_Error_Timestamp column.\n          \n            Issuing RESET BINARY LOGS AND\n            GTIDS or\n            RESET\n            REPLICA resets the values shown in these columns.\n          \nLast_SQL_Errno,\n            Last_SQL_Error\n\n            The error number and error message of the most recent error\n            that caused the replication SQL (applier) thread to stop. An\n            error number of 0 and message of the empty string mean\n            \u201cno error.\u201d If the\n            Last_SQL_Error value is not empty, the\n            error values also appear in the replica's error log.\n          \n            If the replica is multithreaded, the replication SQL thread\n            is the coordinator for worker threads. In this case, the\n            Last_SQL_Error field shows exactly what\n            the Last_Error_Message column in the\n            Performance Schema\n            replication_applier_status_by_coordinator\n            table shows. The field value is modified to suggest that\n            there may be more failures in the other worker threads which\n            can be seen in the\n            replication_applier_status_by_worker\n            table that shows each worker thread's status. If that table\n            is not available, the replica error log can be used. The log\n            or the\n            replication_applier_status_by_worker\n            table should also be used to learn more about the failure\n            shown by\n            SHOW\n            REPLICA STATUS or the coordinator table.\n          \n            SQL error information includes a timestamp showing when the\n            most recent SQL (applier) thread error occurred. This\n            timestamp uses the format YYMMDD\n            hh:mm:ss, and appears in the\n            Last_SQL_Error_Timestamp column.\n          \n            Issuing RESET BINARY LOGS AND\n            GTIDS or\n            RESET\n            REPLICA resets the values shown in these columns.\n          \n            In MySQL 8.4, all error codes and messages\n            displayed in the Last_SQL_Errno and\n            Last_SQL_Error columns correspond to\n            error values listed in\n            Server Error Message Reference. This was not\n            always true in previous versions. (Bug #11760365, Bug\n            #52768)\n          \nReplicate_Ignore_Server_Ids\n\n            Any server IDs that have been specified using the\n            IGNORE_SERVER_IDS option of the\n            CHANGE REPLICATION SOURCE TO\n            statement, so that the replica ignores events from these\n            servers. This option is used in a circular or other\n            multi-source replication setup when one of the servers is\n            removed. If any server IDs have been set in this way, a\n            comma-delimited list of one or more numbers is shown. If no\n            server IDs have been set, the field is blank.\n\n\n\nNote\n\n\n              The Ignored_server_ids value in the\n              slave_master_info table also shows the\n              server IDs to be ignored, but as a space-delimited list,\n              preceded by the total number of server IDs to be ignored.\n              For example, if a CHANGE REPLICATION\n              SOURCE TO statement containing the\n              IGNORE_SERVER_IDS = (2,6,9) option has\n              been issued to tell a replica to ignore sources having the\n              server ID 2, 6, or 9, that information appears as shown\n              here:\n            Press CTRL+C to copy \tReplicate_Ignore_Server_Ids: 2, 6, 9Press CTRL+C to copy \tIgnored_server_ids: 3, 2, 6, 9\n\n\nReplicate_Ignore_Server_Ids filtering is\n            performed by the I/O (receiver) thread, rather than by the\n            SQL (applier) thread, which means that events which are\n            filtered out are not written to the relay log. This differs\n            from the filtering actions taken by server options such\n            --replicate-do-table, which\n            apply to the applier thread.\n          \n            If SET gtid_mode=ON is issued when any\n            channel has existing server IDs set with\n            IGNORE_SERVER_IDS, the\n            statement is rejected with an error. Before starting\n            GTID-based replication, use SHOW\n            REPLICA STATUS to check for and clear all ignored\n            server ID lists on the servers involved. You can clear a\n            list by issuing a CHANGE REPLICATION\n            SOURCE TO statement using\n            IGNORE_SERVER_IDS=()\u2014that is, with\n            an empty list of server IDs.\n          \nSource_Server_Id\n\n            The server_id value from\n            the source.\n          \nSource_UUID\n\n            The server_uuid value from\n            the source.\n          \nSource_Info_File\n\n            The location of the master.info file,\n            the use of which is now deprecated. By default, a table is\n            used instead for the replica's connection metadata\n            repository.\n          \nSQL_Delay\n\n            The number of seconds that the replica must lag the source.\n          \nSQL_Remaining_Delay\n\n            When Replica_SQL_Running_State is\n            Waiting until SOURCE_DELAY seconds after source\n            executed event, this field contains the number of\n            delay seconds remaining. At other times, this field is\n            NULL.\n          \nReplica_SQL_Running_State\n\n            The state of the SQL thread (analogous to\n            Replica_IO_State). The value is identical\n            to the State value of the SQL thread as\n            displayed by SHOW\n            PROCESSLIST.\n            Section\u00a010.14.6, \u201cReplication SQL Thread States\u201d, provides a\n            listing of possible states.\n          \nSource_Retry_Count\n\n            The number of times the replica can attempt to reconnect to\n            the source in the event of a lost connection. This value can\n            be set using the SOURCE_RETRY_COUNT\n            option of the CHANGE REPLICATION SOURCE\n            TO statement.\n          \nSource_Bind\n\n            The network interface that the replica is bound to, if any.\n            This is set using the SOURCE_BIND option\n            for the CHANGE REPLICATION SOURCE\n            TO statement.\n          \nLast_IO_Error_Timestamp\n\n            A timestamp in YYMMDD hh:mm:ss\n            format that shows when the most recent I/O error took place.\n          \nLast_SQL_Error_Timestamp\n\n            A timestamp in YYMMDD hh:mm:ss\n            format that shows when the most recent SQL error occurred.\n          \nRetrieved_Gtid_Set\n\n            The set of global transaction IDs corresponding to all\n            transactions received by this replica. Empty if GTIDs are\n            not in use. See\n            GTID Sets for\n            more information.\n          \n            This is the set of all GTIDs that exist or have existed in\n            the relay logs. Each GTID is added as soon as the\n            Gtid_log_event is received. This can\n            cause partially transmitted transactions to have their GTIDs\n            included in the set.\n          \n            When all relay logs are lost due to executing\n            RESET REPLICA or\n            CHANGE REPLICATION SOURCE TO,\n            or due to the effects of the\n            --relay-log-recovery option,\n            the set is cleared. When\n            relay_log_purge = 1, the\n            newest relay log is always kept, and the set is not cleared.\n          \nExecuted_Gtid_Set\n\n            The set of global transaction IDs written in the binary log.\n            This is the same as the value for the global\n            gtid_executed system\n            variable on this server, as well as the value for\n            Executed_Gtid_Set in the output of\n            SHOW BINARY LOG STATUS on\n            this server. Empty if GTIDs are not in use. See\n            GTID Sets for\n            more information.\n          \nAuto_Position\n\n            1 if GTID auto-positioning is in use for the channel,\n            otherwise 0.\n          \nReplicate_Rewrite_DB\n\n            The Replicate_Rewrite_DB value displays\n            any replication filtering rules that were specified. For\n            example, if the following replication filter rule was set:\n          Press CTRL+C to copy CHANGE REPLICATION FILTER REPLICATE_REWRITE_DB=((db1,db2), (db3,db4));\n            the Replicate_Rewrite_DB value displays:\n          Press CTRL+C to copy Replicate_Rewrite_DB: (db1,db2),(db3,db4)\n            For more information, see\n            Section\u00a015.4.2.1, \u201cCHANGE REPLICATION FILTER Statement\u201d.\n          \nChannel_name\n\n            The replication channel which is being displayed. There is\n            always a default replication channel, and more replication\n            channels can be added. See\n            Section\u00a019.2.2, \u201cReplication Channels\u201d for more information.\n          \nMaster_TLS_Version\n\n            The TLS version used on the source. For TLS version\n            information, see\n            Section\u00a08.3.2, \u201cEncrypted Connection TLS Protocols and Ciphers\u201d.\n          \nSource_public_key_path\n\n            The path name to a file containing a replica-side copy of\n            the public key required by the source for RSA key pair-based\n            password exchange. The file must be in PEM format. This\n            column applies to replicas that authenticate with the\n            sha256_password (deprecated) or\n            caching_sha2_password authentication\n            plugin.\n          \n            If Source_public_key_path is given and\n            specifies a valid public key file, it takes precedence over\n            Get_source_public_key.\n          \nGet_source_public_key\n\n            Whether to request from the source the public key required\n            for RSA key pair-based password exchange. This column\n            applies to replicas that authenticate with the\n            caching_sha2_password authentication\n            plugin. For that plugin, the source does not send the public\n            key unless requested.\n          \n            If Source_public_key_path is given and\n            specifies a valid public key file, it takes precedence over\n            Get_source_public_key.\n          \nNetwork_Namespace\n\n            The network namespace name; empty if the connection uses the\n            default (global) namespace. For information about network\n            namespaces, see Section\u00a07.1.14, \u201cNetwork Namespace Support\u201d.\n\n"
    ],
    "Examples": [
        "mysql> SHOW REPLICA STATUS\\G\n*************************** 1. row ***************************\n             Replica_IO_State: Waiting for source to send event\n                  Source_Host: 127.0.0.1\n                  Source_User: root\n                  Source_Port: 13000\n                Connect_Retry: 1\n              Source_Log_File: master-bin.000001\n          Read_Source_Log_Pos: 927\n               Relay_Log_File: slave-relay-bin.000002\n                Relay_Log_Pos: 1145\n        Relay_Source_Log_File: master-bin.000001\n           Replica_IO_Running: Yes\n          Replica_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n  Replicate_Wild_Ignore_Table:\n                   Last_Errno: 0\n                   Last_Error:\n                 Skip_Counter: 0\n          Exec_Source_Log_Pos: 927\n              Relay_Log_Space: 1355\n              Until_Condition: None\n               Until_Log_File:\n                Until_Log_Pos: 0\n           Source_SSL_Allowed: No\n           Source_SSL_CA_File:\n           Source_SSL_CA_Path:\n              Source_SSL_Cert:\n            Source_SSL_Cipher:\n               Source_SSL_Key:\n        Seconds_Behind_Source: 0\nSource_SSL_Verify_Server_Cert: No\n                Last_IO_Errno: 0\n                Last_IO_Error:\n               Last_SQL_Errno: 0\n               Last_SQL_Error:\n  Replicate_Ignore_Server_Ids:\n             Source_Server_Id: 1\n                  Source_UUID: 73f86016-978b-11ee-ade5-8d2a2a562feb\n             Source_Info_File: mysql.slave_master_info\n                    SQL_Delay: 0\n          SQL_Remaining_Delay: NULL\n    Replica_SQL_Running_State: Replica has read all relay log; waiting for more updates\n           Source_Retry_Count: 10\n                  Source_Bind:\n      Last_IO_Error_Timestamp:\n     Last_SQL_Error_Timestamp:\n               Source_SSL_Crl:\n           Source_SSL_Crlpath:\n           Retrieved_Gtid_Set: 73f86016-978b-11ee-ade5-8d2a2a562feb:1-3\n            Executed_Gtid_Set: 73f86016-978b-11ee-ade5-8d2a2a562feb:1-3\n                Auto_Position: 1\n         Replicate_Rewrite_DB:\n                 Channel_Name:\n           Source_TLS_Version:\n       Source_public_key_path:\n        Get_Source_public_key: 0\n            Network_Namespace:",
        "CHANGE REPLICATION FILTER REPLICATE_REWRITE_DB=((db1,db2), (db3,db4));"
    ],
    "Category": [
        "Database Administration Statements"
    ]
}