{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/purge-binary-logs.html"
    ],
    "Title": [
        "15.4.1.1 PURGE BINARY LOGS Statement"
    ],
    "Feature": [
        "PURGE BINARY LOGS {\n    TO 'log_name'\n  | BEFORE datetime_expr\n}"
    ],
    "Description": [
        "\n        The binary log is a set of files that contain information about\n        data modifications made by the MySQL server. The log consists of\n        a set of binary log files, plus an index file (see\n        Section\u00a07.4.4, \u201cThe Binary Log\u201d).\n      ",
        "\n        The PURGE BINARY LOGS statement\n        deletes all the binary log files listed in the log index file\n        prior to the specified log file name or date. Deleted log files\n        also are removed from the list recorded in the index file, so\n        that the given log file becomes the first in the list.\n      ",
        "\nPURGE BINARY LOGS requires the\n        BINLOG_ADMIN privilege. This\n        statement has no effect if the server was not started with the\n        --log-bin option to enable binary\n        logging.\n      ",
        "\n        Examples:\n      ",
        "Press CTRL+C to copy PURGE BINARY LOGS TO 'mysql-bin.010';\nPURGE BINARY LOGS BEFORE '2019-04-02 22:46:26';",
        "\n        The BEFORE variant's\n        datetime_expr argument should\n        evaluate to a DATETIME value (a\n        value in 'YYYY-MM-DD\n        hh:mm:ss' format).\n      ",
        "\nPURGE BINARY LOGS is safe to run\n        while replicas are replicating. You need not stop them. If you\n        have an active replica that currently is reading one of the log\n        files you are trying to delete, this statement does not delete\n        the log file that is in use or any log files later than that\n        one, but it deletes any earlier log files. A warning message is\n        issued in this situation. However, if a replica is not connected\n        and you happen to purge one of the log files it has yet to read,\n        the replica cannot replicate after it reconnects.\n      ",
        "\nPURGE BINARY LOGS cannot be\n        issued while a LOCK INSTANCE FOR\n        BACKUP statement is in effect for the instance,\n        because it contravenes the rules of the backup lock by removing\n        files from the server.\n      ",
        "\n        To safely purge binary log files, follow this procedure:\n",
        "\n\n            On each replica, use\n            SHOW\n            REPLICA STATUS to check which log file it is\n            reading.\n          \n            Obtain a listing of the binary log files on the source with\n            SHOW BINARY LOGS.\n          \n            Determine the earliest log file among all the replicas. This\n            is the target file. If all the replicas are up to date, this\n            is the last log file on the list.\n          \n            Make a backup of all the log files you are about to delete.\n            (This step is optional, but always advisable.)\n          \n            Purge all log files up to but not including the target file.\n\n",
        "\nPURGE BINARY LOGS TO and PURGE\n        BINARY LOGS BEFORE both fail with an error when binary\n        log files listed in the .index file had\n        been removed from the system by some other means (such as using\n        rm on Linux). (Bug #18199, Bug #18453) To\n        handle such errors, edit the .index file\n        (which is a simple text file) manually to ensure that it lists\n        only the binary log files that are actually present, then run\n        again the PURGE BINARY LOGS\n        statement that failed.\n      ",
        "\n        Binary log files are automatically removed after the server's\n        binary log expiration period. Removal of the files can take\n        place at startup and when the binary log is flushed. The default\n        binary log expiration period is 30 days. You can specify an\n        alternative expiration period using the\n        binlog_expire_logs_seconds\n        system variable. If you are using replication, you should\n        specify an expiration period that is no lower than the maximum\n        amount of time your replicas might lag behind the source.\n"
    ],
    "Examples": [
        "PURGE BINARY LOGS TO 'mysql-bin.010';\nPURGE BINARY LOGS BEFORE '2019-04-02 22:46:26';"
    ],
    "Category": [
        "Replication Statements"
    ]
}