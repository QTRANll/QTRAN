{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.4/en/any-in-some-subqueries.html"
    ],
    "Title": [
        "15.2.15.3 Subqueries with ANY, IN, or SOME"
    ],
    "Feature": [
        "operand comparison_operator ANY (subquery)\noperand IN (subquery)\noperand comparison_operator SOME (subquery)",
        "=  >  <  >=  <=  <>  !="
    ],
    "Description": [
        "\n        Syntax:\n      ",
        "\n        Where comparison_operator is one of\n        these operators:\n      ",
        "\n        The ANY keyword, which must follow a\n        comparison operator, means \u201creturn TRUE\n        if the comparison is TRUE for\n        ANY of the values in the column that the\n        subquery returns.\u201d For example:\n      ",
        "Press CTRL+C to copy SELECT s1 FROM t1 WHERE s1 > ANY (SELECT s1 FROM t2);",
        "\n        Suppose that there is a row in table t1\n        containing (10). The expression is\n        TRUE if table t2 contains\n        (21,14,7) because there is a value\n        7 in t2 that is less than\n        10. The expression is\n        FALSE if table t2 contains\n        (20,10), or if table t2 is\n        empty. The expression is unknown (that is,\n        NULL) if table t2 contains\n        (NULL,NULL,NULL).\n      ",
        "\n        When used with a subquery, the word IN is an\n        alias for = ANY. Thus, these two statements\n        are the same:\n      ",
        "Press CTRL+C to copy SELECT s1 FROM t1 WHERE s1 = ANY (SELECT s1 FROM t2);\nSELECT s1 FROM t1 WHERE s1 IN    (SELECT s1 FROM t2);",
        "\nIN and = ANY are not\n        synonyms when used with an expression list.\n        IN can take an expression list, but\n        = ANY cannot. See\n        Section\u00a014.4.2, \u201cComparison Functions and Operators\u201d.\n      ",
        "\nNOT IN is not an alias for <>\n        ANY, but for <> ALL. See\n        Section\u00a015.2.15.4, \u201cSubqueries with ALL\u201d.\n      ",
        "\n        The word SOME is an alias for\n        ANY. Thus, these two statements are the same:\n      ",
        "Press CTRL+C to copy SELECT s1 FROM t1 WHERE s1 <> ANY  (SELECT s1 FROM t2);\nSELECT s1 FROM t1 WHERE s1 <> SOME (SELECT s1 FROM t2);",
        "\n        Use of the word SOME is rare, but this\n        example shows why it might be useful. To most people, the\n        English phrase \u201ca is not equal to any b\u201d means\n        \u201cthere is no b which is equal to a,\u201d but that is\n        not what is meant by the SQL syntax. The syntax means\n        \u201cthere is some b to which a is not equal.\u201d Using\n        <> SOME instead helps ensure that\n        everyone understands the true meaning of the query.\n      ",
        "\n        You can use TABLE in a scalar\n        IN, ANY, or\n        SOME subquery provided the table contains\n        only a single column. If t2 has only one\n        column, the statements shown previously in this section can be\n        written as shown here, in each case substituting TABLE\n        t2 for SELECT s1 FROM t2:\n      ",
        "Press CTRL+C to copy SELECT s1 FROM t1 WHERE s1 > ANY (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 = ANY (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 IN (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 <> ANY  (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 <> SOME (TABLE t2);"
    ],
    "Examples": [
        "SELECT s1 FROM t1 WHERE s1 > ANY (SELECT s1 FROM t2);",
        "SELECT s1 FROM t1 WHERE s1 = ANY (SELECT s1 FROM t2);\nSELECT s1 FROM t1 WHERE s1 IN    (SELECT s1 FROM t2);",
        "SELECT s1 FROM t1 WHERE s1 <> ANY  (SELECT s1 FROM t2);\nSELECT s1 FROM t1 WHERE s1 <> SOME (SELECT s1 FROM t2);",
        "SELECT s1 FROM t1 WHERE s1 > ANY (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 = ANY (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 IN (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 <> ANY  (TABLE t2);\n\nSELECT s1 FROM t1 WHERE s1 <> SOME (TABLE t2);"
    ],
    "Category": [
        "Transactional and Locking Statements"
    ]
}