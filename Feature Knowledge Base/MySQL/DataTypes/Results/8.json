{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-conversion.html"
    ],
    "Title": [
        "13.2.8 Conversion Between Date and Time Types"
    ],
    "Feature": [
        "13.2.8 Conversion Between Date and Time Types"
    ],
    "Description": [
        "\n\n\n\n13.2.8\u00a0Conversion Between Date and Time Types\n\n\n\n\n        To some extent, you can convert a value from one temporal type\n        to another. However, there may be some alteration of the value\n        or loss of information. In all cases, conversion between\n        temporal types is subject to the range of valid values for the\n        resulting type. For example, although\n        DATE,\n        DATETIME, and\n        TIMESTAMP values all can be\n        specified using the same set of formats, the types do not all\n        have the same range of values.\n        TIMESTAMP values cannot be\n        earlier than 1970 UTC or later than\n        '2038-01-19 03:14:07' UTC. This means that a\n        date such as '1968-01-01', while valid as a\n        DATE or\n        DATETIME value, is not valid as a\n        TIMESTAMP value and is converted\n        to 0.\n      \n        Conversion of DATE values:\n\n\n\n            Conversion to a DATETIME or\n            TIMESTAMP value adds a time\n            part of '00:00:00' because the\n            DATE value contains no time\n            information.\n          \n            Conversion to a TIME value is\n            not useful; the result is '00:00:00'.\n\n\n\n        Conversion of DATETIME and\n        TIMESTAMP values:\n\n\n\n            Conversion to a DATE value\n            takes fractional seconds into account and rounds the time\n            part. For example, '1999-12-31\n            23:59:59.499' becomes\n            '1999-12-31', whereas\n            '1999-12-31 23:59:59.500' becomes\n            '2000-01-01'.\n          \n            Conversion to a TIME value\n            discards the date part because the\n            TIME type contains no date\n            information.\n\n\n\n        For conversion of TIME values to\n        other temporal types, the value of\n        CURRENT_DATE() is used for the\n        date part. The TIME is\n        interpreted as elapsed time (not time of day) and added to the\n        date. This means that the date part of the result differs from\n        the current date if the time value is outside the range from\n        '00:00:00' to '23:59:59'.\n      \n        Suppose that the current date is\n        '2012-01-01'.\n        TIME values of\n        '12:00:00', '24:00:00',\n        and '-12:00:00', when converted to\n        DATETIME or\n        TIMESTAMP values, result in\n        '2012-01-01 12:00:00', '2012-01-02\n        00:00:00', and '2011-12-31\n        12:00:00', respectively.\n      \n        Conversion of TIME to\n        DATE is similar but discards the\n        time part from the result: '2012-01-01',\n        '2012-01-02', and\n        '2011-12-31', respectively.\n      \n        Explicit conversion can be used to override implicit conversion.\n        For example, in comparison of\n        DATE and\n        DATETIME values, the\n        DATE value is coerced to the\n        DATETIME type by adding a time\n        part of '00:00:00'. To perform the comparison\n        by ignoring the time part of the\n        DATETIME value instead, use the\n        CAST() function in the following\n        way:\n      Press CTRL+C to copy date_col = CAST(datetime_col AS DATE)\n        Conversion of TIME and\n        DATETIME values to numeric form\n        (for example, by adding +0) depends on\n        whether the value contains a fractional seconds part.\n        TIME(N)\n        or\n        DATETIME(N)\n        is converted to integer when N is 0\n        (or omitted) and to a DECIMAL value with\n        N decimal digits when\n        N is greater than 0:\n      Press CTRL+C to copy mysql> SELECT CURTIME(), CURTIME()+0, CURTIME(3)+0;\n+-----------+-------------+--------------+\n| CURTIME() | CURTIME()+0 | CURTIME(3)+0 |\n+-----------+-------------+--------------+\n| 09:28:00  |       92800 |    92800.887 |\n+-----------+-------------+--------------+\nmysql> SELECT NOW(), NOW()+0, NOW(3)+0;\n+---------------------+----------------+--------------------+\n| NOW()               | NOW()+0        | NOW(3)+0           |\n+---------------------+----------------+--------------------+\n| 2012-08-15 09:28:00 | 20120815092800 | 20120815092800.889 |\n+---------------------+----------------+--------------------+\n"
    ],
    "Examples": [
        "date_col = CAST(datetime_col AS DATE)",
        "mysql> SELECT CURTIME(), CURTIME()+0, CURTIME(3)+0;\n+-----------+-------------+--------------+\n| CURTIME() | CURTIME()+0 | CURTIME(3)+0 |\n+-----------+-------------+--------------+\n| 09:28:00  |       92800 |    92800.887 |\n+-----------+-------------+--------------+\nmysql> SELECT NOW(), NOW()+0, NOW(3)+0;\n+---------------------+----------------+--------------------+\n| NOW()               | NOW()+0        | NOW(3)+0           |\n+---------------------+----------------+--------------------+\n| 2012-08-15 09:28:00 | 20120815092800 | 20120815092800.889 |\n+---------------------+----------------+--------------------+"
    ],
    "Category": [
        "Conversion Between Date and Time Types"
    ]
}