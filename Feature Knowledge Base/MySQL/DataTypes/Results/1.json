{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/fixed-point-types.html"
    ],
    "Title": [
        "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC"
    ],
    "Feature": [
        "13.1.3 Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC"
    ],
    "Description": [
        "\n\n\n\n13.1.3\u00a0Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC\n\n\n\n\n        The DECIMAL and NUMERIC\n        types store exact numeric data values. These types are used when\n        it is important to preserve exact precision, for example with\n        monetary data. In MySQL, NUMERIC is\n        implemented as DECIMAL, so the following\n        remarks about DECIMAL apply equally to\n        NUMERIC.\n      \n        MySQL stores DECIMAL values in binary format.\n        See Section\u00a014.24, \u201cPrecision Math\u201d.\n      \n        In a DECIMAL column declaration, the\n        precision and scale can be (and usually is) specified. For\n        example:\n      Press CTRL+C to copy salary DECIMAL(5,2)\n        In this example, 5 is the precision and\n        2 is the scale. The precision represents the\n        number of significant digits that are stored for values, and the\n        scale represents the number of digits that can be stored\n        following the decimal point.\n      \n        Standard SQL requires that DECIMAL(5,2) be\n        able to store any value with five digits and two decimals, so\n        values that can be stored in the salary\n        column range from -999.99 to\n        999.99.\n      \n        In standard SQL, the syntax\n        DECIMAL(M) is\n        equivalent to\n        DECIMAL(M,0).\n        Similarly, the syntax DECIMAL is equivalent\n        to DECIMAL(M,0),\n        where the implementation is permitted to decide the value of\n        M. MySQL supports both of these\n        variant forms of DECIMAL syntax. The default\n        value of M is 10.\n      \n        If the scale is 0, DECIMAL values contain no\n        decimal point or fractional part.\n      \n        The maximum number of digits for DECIMAL is\n        65, but the actual range for a given DECIMAL\n        column can be constrained by the precision or scale for a given\n        column. When such a column is assigned a value with more digits\n        following the decimal point than are permitted by the specified\n        scale, the value is converted to that scale. (The precise\n        behavior is operating system-specific, but generally the effect\n        is truncation to the permissible number of digits.)\n\n"
    ],
    "Examples": [
        "salary DECIMAL(5,2)"
    ],
    "Category": [
        "Fixed-Point Types (Exact Value) - DECIMAL, NUMERIC"
    ]
}