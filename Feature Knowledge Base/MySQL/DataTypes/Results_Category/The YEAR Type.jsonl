{"HTML": ["https://dev.mysql.com/doc/refman/8.0/en/year.html"], "Title": ["13.2.4 The YEAR Type"], "Feature": ["13.2.4 The YEAR Type"], "Description": ["\n\n\n\n13.2.4\u00a0The YEAR Type\n\n\n\n\n        The YEAR type is a 1-byte type used to\n        represent year values. It can be declared as\n        YEAR with an implicit display width of 4\n        characters, or equivalently as YEAR(4) with\n        an explicit display width.\n\n\n\nNote\n\n\n          As of MySQL 8.0.19, the YEAR(4)\n          data type with an explicit display width is deprecated and you\n          should expect support for it to be removed in a future version\n          of MySQL. Instead, use YEAR\n          without a display width, which has the same meaning.\n        \n          MySQL 8.0 does not support the 2-digit\n          YEAR(2) data type permitted in\n          older versions of MySQL. For instructions on converting to\n          4-digit YEAR, see\n          2-Digit YEAR(2) Limitations and Migrating to 4-Digit YEAR, in\n          MySQL 5.7 Reference Manual.\n\n\n\n        MySQL displays YEAR values in\n        YYYY format, with a range of\n        1901 to 2155, and\n        0000.\n      \nYEAR accepts input values in a variety of\n        formats:\n\n\n\n            As 4-digit strings in the range '1901' to\n            '2155'.\n          \n            As 4-digit numbers in the range 1901 to\n            2155.\n          \n            As 1- or 2-digit strings in the range '0'\n            to '99'. MySQL converts values in the\n            ranges '0' to '69' and\n            '70' to '99' to\n            YEAR values in the ranges\n            2000 to 2069 and\n            1970 to 1999.\n          \n            As 1- or 2-digit numbers in the range 0\n            to 99. MySQL converts values in the\n            ranges 1 to 69 and\n            70 to 99 to\n            YEAR values in the ranges\n            2001 to 2069 and\n            1970 to 1999.\n          \n            The result of inserting a numeric 0 has a\n            display value of 0000 and an internal\n            value of 0000. To insert zero and have it\n            be interpreted as 2000, specify it as a\n            string '0' or '00'.\n          \n            As the result of functions that return a value that is\n            acceptable in YEAR context, such as\n            NOW().\n\n\n\n        If strict SQL mode is not enabled, MySQL converts invalid\n        YEAR values to 0000. In\n        strict SQL mode, attempting to insert an invalid\n        YEAR value produces an error.\n      \n        See also Section\u00a013.2.9, \u201c2-Digit Years in Dates\u201d.\n\n"], "Examples": [], "Category": ["The YEAR Type"]}
