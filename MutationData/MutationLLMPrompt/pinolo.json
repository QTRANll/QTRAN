{
  "FixMDistinctU": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMDistinctU\":\"Distinct true -> false\".This mutate strategy will change \"DISTINCT\" in SELECT statement from true to false.",
  "FixMDistinctL": "Mutate the seed SQL given by user into the mutated SQLs according to the mutate strategy \"FixMDistinctL\" :\"Distinct false -> true\".This mutate strategy will mutate all SELECT clauses in the seed SQL once a time and give the positive \"flag\" of each clause (such as NOT,NOT IN,IS FALSE, <>, etc. which represent \"flag\"=False). For each SELECT clause, it will change \"DISTINCT\" from false to true, and provide the positive \"flag\" for the clause.",
  "FixMCmpOpU":"Mutate the seed SQL given by user into the mutated SQLs according to the mutate strategy \"FixMCmpOpU\": \"a {>|<|=} b -> a {>=|<=|>=} b\".This mutate strategy will mutate all Binary operation expressions and Comparison subquery expressions in the seed SQL once a time and give the positive \"flag\" of each expression (such as NOT,NOT IN,IS FALSE, <>, etc. which represent \"flag\"=False). For each Binary operation expression or Comparison subquery expression, it will change \">\" to \">=\",\"<\" to \"<=\",\"=\" to \">=\", and provide the positive \"flag\" for the expression.",
  "FixMCmpOpL": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMCmpOpL\" : \"a {>=|<=} b -> a {>|<} b\".This mutate strategy will change \">=\" to \">\",\"<=\" to \"<\" in Binary operation expression and Comparison subquery expression.",
  "FixMUnionAllU": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMUnionAllU\" :\"UNION -> UNION ALL\".This mutate strategy will change the set operator \"UNION\" to \"UNION ALL\" between SELECT statements.",
  "FixMUnionAllL": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMUnionAllL\": \"UNION ALL -> UNION\".This mutate strategy will change the set operator \"UNION ALL\" to \"UNION\" between SELECT statements.",
  "FixMInNullU": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMInNullU\":\"in(x,x,x) -> in(x,x,x,null)\".This mutate strategy will include null value in IN List Expression to increase the scope of the query result set.",
  "FixMWhere1U": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMWhere1U\":\"WHERE xxx -> WHERE 1\".This mutate strategy will change the condition of WHERE clause to \"1\" in SELECT statement. ",
  "FixMWhere0L": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMWhere0L\" : \"WHERE xxx -> WHERE 0\".This mutate strategy will change the condition of WHERE clause to \"0\" in SELECT statement. ",
  "FixMHaving1U":"Mutate the seed SQL given by user into the mutated SQLs according to the mutate strategy \"FixMHaving1U\" : \"HAVING xxx -> HAVING 1\".This mutate strategy will mutate all HAVING clauses in the seed SQL once a time and give the positive \"flag\" of each HAVING clause (such as NOT,NOT IN,IS FALSE, <>, etc. which represent \"flag\"=False). For each HAVING clause, it will change the condition of HAVING clause to \"1\", and provide the positive \"flag\" for the HAVING clause.",
  "FixMHaving0L": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMHaving0L\" : \"HAVING xxx -> HAVING 0\".This mutate strategy will change the condition of HAVING clause to \"0\" in SELECT statement. ",
  "FixMOn1U": "Mutate the seed SQL given by user into the mutated SQLs according to the mutate strategy \"FixMOn1U\":\"ON xxx -> ON 1\".This mutate strategy will mutate all ON clauses in the seed SQL once a time and give the positive \"flag\" of each ON clause (such as NOT,NOT IN,IS FALSE, <>, etc. which represent \"flag\"=False). For each ON clause, it will change the condition of ON clause to \"1\", and provide the positive \"flag\" for the ON clause.",
  "FixMOn0L": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMOn0L\":\"ON xxx -> ON 0\".This mutate strategy will change the condition of ON clause to \"0\" in JOIN statement. ",
  "FixMRmUnionAllL": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"FixMRmUnionAllL\":\"remove Selects[1:] for UNION ALL\".This mutate strategy will keep only the first SELECT statement and remove all subsequent SELECT statements connected by \"UNION ALL\".",
  "RdMLikeU": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"RdMLikeU\":\"normal char -> '_'|'%',  '_' -> '%'\".This mutate strategy will modify the LIKE expression such that for each character, if it is not '%', there is a 50% probability of replacing it with '%'.",
  "RdMLikeL": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"RdMLikeL\":\"'%' -> '_'\". This mutate strategy will modify the LIKE expression such that for each character, if it is '%', there is a 50% probability of replacing it with '_'.",
  "RdMRegExpU": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"RdMRegExpU\":\"'^'|'$' -> '', '+'|'?' -> '*'\".This mutate strategy will modify the  regular expression REGEXP such that for each character, if it is '^' or '$', there is a 50% probability of deleting it;and if it is '+' or '?', there is a 50% probability of replacing it with '*'.",
  "RdMRegExpL": "Mutate the seed sql given by user into the mutated sql according to the mutate strategy \"RdMRegExpL\":\"'*' -> '+'|'?'\".This mutate strategy will modify the  regular expression REGEXP such that for each character, if it is '*',there is a 50% probability of replacing it with '+' or '?'."
}