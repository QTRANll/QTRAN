{
    "HTML": "https://mariadb.com//kb/en/coalesce/",
    "Title": "COALESCE",
    "Feature": [
        "COALESCE(value,...)\n"
    ],
    "Description": [
        "Returns the first non-NULL value in the list, or NULL if there are no\nnon-NULL values. At least one parameter must be passed.",
        "The function is useful when substituting a default value for null values when displaying data.",
        "See also NULL Values in MariaDB."
    ],
    "Examples": [
        "SELECT COALESCE(NULL,1);\n+------------------+\n| COALESCE(NULL,1) |\n+------------------+\n|                1 |\n+------------------+\n",
        "SELECT COALESCE(NULL,NULL,NULL);\n+--------------------------+\n| COALESCE(NULL,NULL,NULL) |\n+--------------------------+\n|                     NULL |\n+--------------------------+\n",
        "SET @a=NULL, @b=1;\n\nSELECT COALESCE(@a, @b), IFNULL(@a, @b);\n+------------------+----------------+\n| COALESCE(@a, @b) | IFNULL(@a, @b) |\n+------------------+----------------+\n|                1 |              1 |\n+------------------+----------------+\n",
        "CREATE TABLE t1 (a INT, b VARCHAR(10));\nINSERT INTO t1 VALUES (0x31, 0x61),(COALESCE(0x31), COALESCE(0x61));\n\nSELECT * FROM t1;\n+------+------+\n| a    | b    |\n+------+------+\n|   49 | a    |\n|    1 | a    |\n+------+------+\n",
        "SELECT SUM(score) FROM student;\n+------------+\n| SUM(score) |\n+------------+\n|       NULL |\n+------------+\n\nSELECT COALESCE(SUM(score),0) FROM student;\n+------------------------+\n| COALESCE(SUM(score),0) |\n+------------------------+\n|                      0 |\n+------------------------+\n"
    ],
    "Category": [
        "Comparison Operators"
    ],
    "Effective SQLs Refined": [
        "SELECT COALESCE(NULL,1);",
        "SELECT COALESCE(NULL,NULL,NULL);",
        "SELECT COALESCE(@a, @b), IFNULL(@a, @b);",
        "SELECT * FROM t1;",
        "SELECT SUM(score) FROM student;",
        "SELECT COALESCE(SUM(score),0) FROM student;"
    ],
    "Ineffective SQLs Refined": [
        "SET @a=NULL, @b=1;",
        "CREATE TABLE t1 (a INT, b VARCHAR(10));",
        "INSERT INTO t1 VALUES (0x31, 0x61),(COALESCE(0x31), COALESCE(0x61));"
    ],
    "Wrong Messages from Ineffective SQLs Refined": [
        "This result object does not return rows. It has been closed automatically.",
        "(pymysql.err.OperationalError) (1050, \"Table 't1' already exists\")\n[SQL: CREATE TABLE t1 (a INT, b VARCHAR(10));]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1906, \"The value specified for generated column 'jnorm' in table 't1' has been ignored\")\n[SQL: INSERT INTO t1 VALUES (0x31, 0x61),(COALESCE(0x31), COALESCE(0x61));]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"
    ],
    "SQLs Generated1": [],
    "SQLs Generated Costs1": [],
    "SQLs Generated ExecResults1": [],
    "SQLs Generated ExecTimes1": [],
    "SQLs Generated ErrorMessages1": [],
    "Effective SQLs Generated1": [],
    "SQLs Generated2": [],
    "SQLs Generated Costs2": [],
    "SQLs Generated ExecResults2": [],
    "SQLs Generated ExecTimes2": [],
    "SQLs Generated ErrorMessages2": [],
    "Effective SQLs Generated2": []
}