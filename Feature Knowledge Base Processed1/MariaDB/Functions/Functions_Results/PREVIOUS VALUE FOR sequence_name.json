{
    "HTML": "https://mariadb.com//kb/en/previous-value-for-sequence_name/",
    "Title": "PREVIOUS VALUE FOR sequence_name",
    "Feature": [
        "PREVIOUS VALUE FOR sequence_name\n",
        "or",
        "LASTVAL(sequence_name)\n",
        "or in Oracle mode (SQL_MODE=ORACLE)",
        "sequence_name.currval\n",
        "PREVIOUS VALUE FOR is IBM DB2 syntax while LASTVAL() is PostgreSQL syntax."
    ],
    "Description": [
        "Gets the most recent value in the current connection generated from a sequence.",
        "If the sequence has not yet been used by the connection, PREVIOUS VALUE FOR returns NULL (the same thing applies with a new connection which doesn't see a last value for an existing sequence).\nIf a SEQUENCE has been dropped and re-created then it's treated as a new SEQUENCE and PREVIOUS VALUE FOR will return NULL.\nReturns NULL if the sequence is complete\nFLUSH TABLES has no effect on PREVIOUS VALUE FOR.\nPrevious values for all used sequences are stored per connection until connection ends.\nPREVIOUS VALUE FOR requires the SELECT privilege.\n"
    ],
    "Examples": [
        "CREATE SEQUENCE s START WITH 100 INCREMENT BY 10;\n\nSELECT PREVIOUS VALUE FOR s;\n+----------------------+\n| PREVIOUS VALUE FOR s |\n+----------------------+\n|                 NULL |\n+----------------------+\n\n# The function works for sequences only, if the table is used an error is generated\nSELECT PREVIOUS VALUE FOR t;\nERROR 4089 (42S02): 'test.t' is not a SEQUENCE\n\n# Call the NEXT VALUE FOR s:\nSELECT NEXT VALUE FOR s;\n+------------------+\n| NEXT VALUE FOR s |\n+------------------+\n|              100 |\n+------------------+\n\nSELECT PREVIOUS VALUE FOR s;\n+----------------------+\n| PREVIOUS VALUE FOR s |\n+----------------------+\n|                  100 |\n+----------------------+\n",
        "CREATE OR REPLACE SEQUENCE s MAXVALUE=2;\n\nSELECT NEXTVAL(s), LASTVAL(s);\n+------------+------------+\n| NEXTVAL(s) | LASTVAL(s) |\n+------------+------------+\n|          1 |          1 |\n+------------+------------+\n\nSELECT NEXTVAL(s), LASTVAL(s);\n+------------+------------+\n| NEXTVAL(s) | LASTVAL(s) |\n+------------+------------+\n|          2 |          2 |\n+------------+------------+\n\nSELECT NEXTVAL(s), LASTVAL(s);\nERROR 4084 (HY000): Sequence 'test.s' has run out\n\nSELECT LASTVAL(s);\n+------------+\n| LASTVAL(s) |\n+------------+\n|       NULL |\n+------------+\n"
    ],
    "Category": [
        "SEQUENCE Functions"
    ],
    "Effective SQLs Refined": [],
    "Ineffective SQLs Refined": [
        "SELECT PREVIOUS VALUE FOR s;",
        "SELECT PREVIOUS VALUE FOR t;",
        "SELECT PREVIOUS VALUE FOR s;"
    ],
    "Wrong Messages from Ineffective SQLs Refined": [
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 's'\")\n[SQL: SELECT PREVIOUS VALUE FOR s;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (4089, \"'PINOLO_MariaDB.t' is not a SEQUENCE\")\n[SQL: SELECT PREVIOUS VALUE FOR t;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 's'\")\n[SQL: SELECT PREVIOUS VALUE FOR s;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"
    ],
    "SQLs Generated1": [
        {
            "Example SQL": "SELECT PREVIOUS VALUE FOR sequence_name;"
        },
        {
            "Example SQL": "SELECT PREVIOUS VALUE FOR valid_sequence_name;"
        },
        {
            "Example SQL": "SELECT PREVIOUS VALUE FOR another_valid_sequence_name;"
        },
        {
            "Example SQL": "SELECT PREVIOUS VALUE FOR existing_sequence_name;"
        },
        {
            "Example SQL": "SELECT PREVIOUS VALUE FOR some_valid_sequence_name;"
        }
    ],
    "SQLs Generated Costs1": [
        {
            "Total Tokens": 446,
            "Prompt Tokens": 426,
            "Completion Tokens": 20,
            "Total Cost (USD)": 7.589999999999999e-05
        },
        {
            "Total Tokens": 596,
            "Prompt Tokens": 575,
            "Completion Tokens": 21,
            "Total Cost (USD)": 9.884999999999998e-05
        },
        {
            "Total Tokens": 748,
            "Prompt Tokens": 726,
            "Completion Tokens": 22,
            "Total Cost (USD)": 0.00012209999999999999
        },
        {
            "Total Tokens": 900,
            "Prompt Tokens": 879,
            "Completion Tokens": 21,
            "Total Cost (USD)": 0.00014445
        },
        {
            "Total Tokens": 1052,
            "Prompt Tokens": 1030,
            "Completion Tokens": 22,
            "Total Cost (USD)": 0.00016769999999999998
        }
    ],
    "SQLs Generated ExecResults1": [
        "None",
        "None",
        "None",
        "None",
        "None"
    ],
    "SQLs Generated ExecTimes1": [
        "0",
        "0",
        "0",
        "0",
        "0"
    ],
    "SQLs Generated ErrorMessages1": [
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 'sequence_name'\")\n",
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 'valid_sequence_name'\")\n",
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 'another_valid_sequence_name'\")\n",
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 'existing_sequence_name'\")\n",
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 'some_valid_sequence_name'\")\n"
    ],
    "Effective SQLs Generated1": [],
    "SQLs Generated2": [
        {
            "Example SQL": "SELECT PREVIOUS VALUE FOR sequence_name;"
        },
        {
            "Example SQL": "SELECT LASTVAL('sequence_name');"
        },
        {
            "Example SQL": "SELECT LASTVAL();"
        },
        {
            "Example SQL": "SELECT LAST_INSERT_ID();"
        }
    ],
    "SQLs Generated Costs2": [
        {
            "Total Tokens": 896,
            "Prompt Tokens": 876,
            "Completion Tokens": 20,
            "Total Cost (USD)": 0.0001434
        },
        {
            "Total Tokens": 1045,
            "Prompt Tokens": 1025,
            "Completion Tokens": 20,
            "Total Cost (USD)": 0.00016574999999999996
        },
        {
            "Total Tokens": 1220,
            "Prompt Tokens": 1203,
            "Completion Tokens": 17,
            "Total Cost (USD)": 0.00019065
        },
        {
            "Total Tokens": 1392,
            "Prompt Tokens": 1374,
            "Completion Tokens": 18,
            "Total Cost (USD)": 0.0002169
        }
    ],
    "SQLs Generated ExecResults2": [
        "None",
        "None",
        "None",
        "[(0,)]"
    ],
    "SQLs Generated ExecTimes2": [
        "0",
        "0",
        "0",
        "0.026805639266967773"
    ],
    "SQLs Generated ErrorMessages2": [
        "(pymysql.err.OperationalError) (4091, \"Unknown SEQUENCE: 'sequence_name'\")\n",
        "(pymysql.err.ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''sequence_name')' at line 1\")\n",
        "(pymysql.err.ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ')' at line 1\")\n",
        "None"
    ],
    "Effective SQLs Generated2": [
        "SELECT LAST_INSERT_ID();"
    ]
}