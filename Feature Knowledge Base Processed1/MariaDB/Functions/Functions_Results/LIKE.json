{
    "HTML": "https://mariadb.com//kb/en/like/",
    "Title": "LIKE",
    "Feature": [
        "expr LIKE pat [ESCAPE 'escape_char']\nexpr NOT LIKE pat [ESCAPE 'escape_char']\n"
    ],
    "Description": [
        "Tests whether expr matches the pattern pat. Returns either 1 (TRUE) or 0 (FALSE).\nBoth expr and pat may be any valid expression and are evaluated to strings.\nPatterns may use the following wildcard characters:",
        "% matches any number of characters, including zero.\n_ matches any single character.\n",
        "Use NOT LIKE to test if a string does not match a pattern. This is equivalent to using\nthe NOT operator on the entire LIKE expression.",
        "If either the expression or the pattern is NULL, the result is NULL.",
        "LIKE performs case-insensitive substring matches if the collation for the\nexpression and pattern is case-insensitive. For case-sensitive matches, declare either argument\nto use a binary collation using COLLATE, or coerce either of them to a BINARY\nstring using CAST. Use SHOW COLLATION to get a list of\navailable collations. Collations ending in _bin are case-sensitive.",
        "Numeric arguments are coerced to binary strings.",
        "The _ wildcard matches a single character, not byte. It will only match a multi-byte character\nif it is valid in the expression's character set. For example, _ will match _utf8\"\u20ac\", but it\nwill not match _latin1\"\u20ac\" because the Euro sign is not a valid latin1 character. If necessary,\nuse CONVERT to use the expression in a different character set.",
        "If you need to match the characters _ or %, you must escape them. By default,\nyou can prefix the wildcard characters the backslash character \\ to escape them.\nThe backslash is used both to encode special characters like newlines when a string is\nparsed as well as to escape wildcards in a pattern after parsing. Thus, to match an\nactual backslash, you sometimes need to double-escape it as \"\\\\\\\\\".",
        "To avoid difficulties with the backslash character, you can change the wildcard escape\ncharacter using ESCAPE in a LIKE expression. The argument to ESCAPE\nmust be a single-character string."
    ],
    "Examples": [
        "CREATE TABLE t1 (d VARCHAR(16));\nINSERT INTO t1 VALUES \n  (\"Monday\"), (\"Tuesday\"), (\"Wednesday\"), \n  (\"Thursday\"), (\"Friday\"), (\"Saturday\"), (\"Sunday\");\nSELECT * FROM t1 WHERE d LIKE \"T%\";\n",
        "SELECT * FROM t1 WHERE d LIKE \"T%\";\n+----------+\n| d        |\n+----------+\n| Tuesday  |\n| Thursday |\n+----------+\n",
        "SELECT * FROM t1 WHERE d LIKE \"%es%\";\n",
        "SELECT * FROM t1 WHERE d LIKE \"%es%\";\n+-----------+\n| d         |\n+-----------+\n| Tuesday   |\n| Wednesday |\n+-----------+\n",
        "SELECT * FROM t1 WHERE d like \"___day\";\n",
        "SELECT * FROM t1 WHERE d like \"___day\";\n+---------+\n| d       |\n+---------+\n| Monday  |\n| Friday  |\n| Sunday  |\n+---------+\n",
        "SELECT * FROM t1 where d like \"t%\";\n",
        "SELECT * FROM t1 where d like \"t%\";\n+----------+\n| d        |\n+----------+\n| Tuesday  |\n| Thursday |\n+----------+\n",
        "SELECT * FROM t1 WHERE d like \"t%\" COLLATE latin1_bin;\n",
        "SELECT * FROM t1 WHERE d like \"t%\" COLLATE latin1_bin;\nEmpty set (0.00 sec)\n",
        "CREATE TABLE t2 (d DATETIME);\nINSERT INTO t2 VALUES\n    (\"2007-01-30 21:31:07\"),\n    (\"1983-10-15 06:42:51\"),\n    (\"2011-04-21 12:34:56\"),\n    (\"2011-10-30 06:31:41\"),\n    (\"2011-01-30 14:03:25\"),\n    (\"2004-10-07 11:19:34\");\nSELECT * FROM t2 WHERE DAYNAME(d) LIKE \"T%\";\n",
        "SELECT * FROM t2 WHERE DAYNAME(d) LIKE \"T%\";\n+------------------+\n| d                |\n+------------------+\n| 2007-01-30 21:31 |\n| 2011-04-21 12:34 |\n| 2004-10-07 11:19 |\n+------------------+\n3 rows in set, 7 warnings (0.00 sec)\n"
    ],
    "Category": [
        "String Functions"
    ],
    "Effective SQLs Refined": [],
    "Ineffective SQLs Refined": [
        "SELECT * FROM t1 WHERE d LIKE \"T%\";",
        "SELECT * FROM t1 WHERE d LIKE \"T%\";",
        "SELECT * FROM t1 WHERE d LIKE \"%es%\";",
        "SELECT * FROM t1 WHERE d LIKE \"%es%\";",
        "SELECT * FROM t1 WHERE d like \"___day\";",
        "SELECT * FROM t1 WHERE d like \"___day\";",
        "SELECT * FROM t1 where d like \"t%\";",
        "SELECT * FROM t1 where d like \"t%\";",
        "SELECT * FROM t1 WHERE d like \"t%\" COLLATE latin1_bin;",
        "SELECT * FROM t1 WHERE d like \"t%\" COLLATE latin1_bin;",
        "SELECT * FROM t2 WHERE DAYNAME(d) LIKE \"T%\";",
        "SELECT * FROM t2 WHERE DAYNAME(d) LIKE \"T%\";"
    ],
    "Wrong Messages from Ineffective SQLs Refined": [
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d LIKE \"T%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d LIKE \"T%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d LIKE \"%%es%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d LIKE \"%%es%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d like \"___day\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d like \"___day\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 where d like \"t%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 where d like \"t%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d like \"t%%\" COLLATE latin1_bin;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t1 WHERE d like \"t%%\" COLLATE latin1_bin;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t2 WHERE DAYNAME(d) LIKE \"T%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'd' in 'where clause'\")\n[SQL: SELECT * FROM t2 WHERE DAYNAME(d) LIKE \"T%%\";]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"
    ],
    "SQLs Generated1": [
        {
            "Example SQL": "SELECT * FROM table_name WHERE column_name LIKE 'pattern%'"
        },
        {
            "Example SQL": "SELECT * FROM existing_table WHERE column_name LIKE 'pattern%'"
        },
        {
            "Example SQL": "SELECT * FROM another_table WHERE column_name LIKE 'pattern%'"
        },
        {
            "Example SQL": "SELECT * FROM any_table WHERE column_name LIKE 'pattern%'"
        },
        {
            "Example SQL": "SELECT * FROM some_table WHERE column_name LIKE 'pattern%'"
        }
    ],
    "SQLs Generated Costs1": [
        {
            "Total Tokens": 695,
            "Prompt Tokens": 670,
            "Completion Tokens": 25,
            "Total Cost (USD)": 0.0001155
        },
        {
            "Total Tokens": 850,
            "Prompt Tokens": 825,
            "Completion Tokens": 25,
            "Total Cost (USD)": 0.00013874999999999998
        },
        {
            "Total Tokens": 1006,
            "Prompt Tokens": 981,
            "Completion Tokens": 25,
            "Total Cost (USD)": 0.00016214999999999996
        },
        {
            "Total Tokens": 1162,
            "Prompt Tokens": 1137,
            "Completion Tokens": 25,
            "Total Cost (USD)": 0.00018554999999999998
        },
        {
            "Total Tokens": 1317,
            "Prompt Tokens": 1292,
            "Completion Tokens": 25,
            "Total Cost (USD)": 0.00020879999999999998
        }
    ],
    "SQLs Generated ExecResults1": [
        "None",
        "None",
        "None",
        "None",
        "None"
    ],
    "SQLs Generated ExecTimes1": [
        "0",
        "0",
        "0",
        "0",
        "0"
    ],
    "SQLs Generated ErrorMessages1": [
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.table_name' doesn't exist\")\n",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.existing_table' doesn't exist\")\n",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.another_table' doesn't exist\")\n",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.any_table' doesn't exist\")\n",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.some_table' doesn't exist\")\n"
    ],
    "Effective SQLs Generated1": [],
    "SQLs Generated2": [
        {
            "Example SQL": "SELECT * FROM dialect_recognize_table WHERE dialect_name LIKE 'Canto%';"
        }
    ],
    "SQLs Generated Costs2": [
        {
            "Total Tokens": 1150,
            "Prompt Tokens": 1120,
            "Completion Tokens": 30,
            "Total Cost (USD)": 0.000186
        }
    ],
    "SQLs Generated ExecResults2": [
        "[(2, 'Cantonese', 'China', 87000000, 'A dialect spoken in Guangdong province and Hong Kong.', 1)]"
    ],
    "SQLs Generated ExecTimes2": [
        "0.005831003189086914"
    ],
    "SQLs Generated ErrorMessages2": [
        "None"
    ],
    "Effective SQLs Generated2": [
        "SELECT * FROM dialect_recognize_table WHERE dialect_name LIKE 'Canto%';"
    ]
}