{
    "HTML": "https://mariadb.com//kb/en/cast/",
    "Title": "CAST",
    "Feature": [
        "CAST(expr AS type)\n"
    ],
    "Description": [
        "The CAST() function takes a value of one type and produces a value of another type, similar to the CONVERT() function. ",
        "The type can be one of the following values:",
        "BINARY\nCHAR\nDATE\nDATETIME\nDECIMAL[(M[,D])]\nDOUBLE\nFLOAT (from MariaDB 10.4.5)\nINTEGER\nShort for SIGNED INTEGER\n\nSIGNED [INTEGER]\nUNSIGNED [INTEGER]\nTIME\nVARCHAR (in Oracle mode, from MariaDB 10.3)\n",
        "The main difference between CAST and CONVERT() is that CONVERT(expr,type) is ODBC syntax while CAST(expr as type) and CONVERT(... USING ...) are SQL92 syntax.",
        "In MariaDB 10.4 and later, you can use the CAST() function with the INTERVAL keyword.",
        "Until MariaDB 5.5.31, X'HHHH', the standard SQL syntax for binary string literals, erroneously worked in the same way as 0xHHHH. In 5.5.31 it was intentionally changed to behave as a string in all contexts (and never as a number).",
        "This introduced an incompatibility with previous versions of MariaDB, and all versions of MySQL (see the example below). "
    ],
    "Examples": [
        "SELECT CAST(\"abc\" AS BINARY);\nSELECT CAST(\"1\" AS UNSIGNED INTEGER);\nSELECT CAST(123 AS CHAR CHARACTER SET utf8)\n",
        "SELECT COLLATION(CAST(123 AS CHAR));\n+------------------------------+\n| COLLATION(CAST(123 AS CHAR)) |\n+------------------------------+\n| latin1_swedish_ci            |\n+------------------------------+\n\nSELECT COLLATION(CAST(123 AS CHAR CHARACTER SET utf8));\n+-------------------------------------------------+\n| COLLATION(CAST(123 AS CHAR CHARACTER SET utf8)) |\n+-------------------------------------------------+\n| utf8_general_ci                                 |\n+-------------------------------------------------+\n",
        "SELECT COLLATION(CAST(123 AS CHAR CHARACTER SET utf8) \n  COLLATE utf8_unicode_ci);\n+-------------------------------------------------------------------------+\n| COLLATION(CAST(123 AS CHAR CHARACTER SET utf8) COLLATE utf8_unicode_ci) |\n+-------------------------------------------------------------------------+\n| utf8_unicode_ci                                                         |\n+-------------------------------------------------------------------------+\n",
        "CREATE TABLE enum_list (enum_field enum('c','a','b'));\n\nINSERT INTO enum_list (enum_field) \nVALUES('c'),('a'),('c'),('b');\n\nSELECT * FROM enum_list \nORDER BY enum_field;\n+------------+\n| enum_field |\n+------------+\n| c          |\n| c          |\n| a          |\n| b          |\n+------------+\n\nSELECT * FROM enum_list \nORDER BY CAST(enum_field AS CHAR);\n+------------+\n| enum_field |\n+------------+\n| a          |\n| b          |\n| c          |\n| c          |\n+------------+\n",
        "SELECT CAST(0xAA AS UNSIGNED), CAST(x'aa' AS UNSIGNED), CAST(X'aa' AS UNSIGNED);\n+------------------------+-------------------------+-------------------------+\n| CAST(0xAA AS UNSIGNED) | CAST(x'aa' AS UNSIGNED) | CAST(X'aa' AS UNSIGNED) |\n+------------------------+-------------------------+-------------------------+\n|                    170 |                       0 |                       0 |\n+------------------------+-------------------------+-------------------------+\n1 row in set, 2 warnings (0.00 sec)\n\nWarning (Code 1292): Truncated incorrect INTEGER value: '\\xAA'\nWarning (Code 1292): Truncated incorrect INTEGER value: '\\xAA'\n",
        "SELECT CAST(2019-01-04 INTERVAL AS DAY_SECOND(2)) AS \"Cast\";\n\n+-------------+\n| Cast        |\n+-------------+\n| 00:20:17.00 |\n+-------------+\n"
    ],
    "Category": [
        "String Functions"
    ],
    "Effective SQLs Refined": [
        "SELECT CAST(\"abc\" AS BINARY);",
        "SELECT CAST(\"1\" AS UNSIGNED INTEGER);",
        "SELECT COLLATION(CAST(123 AS CHAR));",
        "SELECT COLLATION(CAST(123 AS CHAR CHARACTER SET utf8));",
        "SELECT COLLATION(CAST(123 AS CHAR CHARACTER SET utf8) \n  COLLATE utf8_unicode_ci);",
        "SELECT CAST(0xAA AS UNSIGNED), CAST(x'aa' AS UNSIGNED), CAST(X'aa' AS UNSIGNED);"
    ],
    "Ineffective SQLs Refined": [
        "SELECT * FROM enum_list \nORDER BY CAST(enum_field AS CHAR);",
        "SELECT CAST(2019-01-04 INTERVAL AS DAY_SECOND(2)) AS \"Cast\";"
    ],
    "Wrong Messages from Ineffective SQLs Refined": [
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.enum_list' doesn't exist\")\n[SQL: SELECT * FROM enum_list \nORDER BY CAST(enum_field AS CHAR);]\n(Background on this error at: https://sqlalche.me/e/20/f405)",
        "(pymysql.err.ProgrammingError) (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \\'INTERVAL AS DAY_SECOND(2)) AS \"Cast\"\\' at line 1')\n[SQL: SELECT CAST(2019-01-04 INTERVAL AS DAY_SECOND(2)) AS \"Cast\";]\n(Background on this error at: https://sqlalche.me/e/20/f405)"
    ],
    "SQLs Generated1": [],
    "SQLs Generated Costs1": [],
    "SQLs Generated ExecResults1": [],
    "SQLs Generated ExecTimes1": [],
    "SQLs Generated ErrorMessages1": [],
    "Effective SQLs Generated1": [],
    "SQLs Generated2": [],
    "SQLs Generated Costs2": [],
    "SQLs Generated ExecResults2": [],
    "SQLs Generated ExecTimes2": [],
    "SQLs Generated ErrorMessages2": [],
    "Effective SQLs Generated2": []
}