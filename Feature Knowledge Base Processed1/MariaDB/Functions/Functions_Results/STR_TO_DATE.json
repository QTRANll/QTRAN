{
    "HTML": "https://mariadb.com//kb/en/str_to_date/",
    "Title": "STR_TO_DATE",
    "Feature": [
        "STR_TO_DATE(str,format)\n"
    ],
    "Description": [
        "This is the inverse of the DATE_FORMAT() function. It takes\na string str and a format string format. STR_TO_DATE() returns a\nDATETIME value if the format string contains both date and time parts, or a\nDATE or TIME value if the string contains only date or time parts.",
        "The date, time, or datetime values contained in str should be given in the format indicated by format. If str contains an illegal date, time, or datetime value, STR_TO_DATE() returns NULL. An illegal value also produces a warning.",
        "Under specific SQL_MODE settings an error may also be generated if the str isn't a valid date:",
        "ALLOW_INVALID_DATES\nNO_ZERO_DATE\nNO_ZERO_IN_DATE\n",
        "The options that can be used by STR_TO_DATE(), as well as its inverse DATE_FORMAT() and the FROM_UNIXTIME() function, are:",
        "OptionDescription\n%aShort weekday name in current locale (Variable lc_time_names).\n%bShort form month name in current locale. For locale en_US this is one of: Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov or Dec.\n%cMonth with 1 or 2 digits.\n%DDay with English suffix 'th', 'nd', 'st' or 'rd''. (1st, 2nd, 3rd...).\n%dDay with 2 digits.\n%eDay with 1 or 2 digits.\n%fMicroseconds 6 digits.\n%HHour with 2 digits between 00-23.\n%hHour with 2 digits between 01-12.\n%IHour with 2 digits between 01-12.\n%iMinute with 2 digits.\n%jDay of the year (001-366)\n%kHour with 1 digits between 0-23.\n%lHour with 1 digits between 1-12.\n%MFull month name in current locale (Variable lc_time_names).\n%mMonth with 2 digits.\n%pAM/PM according to current locale (Variable lc_time_names).\n%rTime in 12 hour format, followed by AM/PM. Short for '%I:%i:%S %p'.\n%SSeconds with 2 digits.\n%sSeconds with 2 digits.\n%TTime in 24 hour format. Short for '%H:%i:%S'.\n%UWeek number (00-53), when first day of the week is Sunday.\n%uWeek number (00-53), when first day of the week is Monday.\n%VWeek number (01-53), when first day of the week is Sunday. Used with %X.\n%vWeek number (01-53), when first day of the week is Monday. Used with %x.\n%WFull weekday name in current locale (Variable lc_time_names).\n%wDay of the week. 0 = Sunday, 6 = Saturday.\n%XYear with 4 digits when first day of the week is Sunday. Used with %V.\n%xYear with 4 digits when first day of the week is Monday. Used with %v.\n%YYear with 4 digits.\n%yYear with 2 digits.\n%#For str_to_date(), skip all numbers.\n%.For str_to_date(), skip all punctation characters.\n%@For str_to_date(), skip all alpha characters.\n%%A literal % character.\n\n"
    ],
    "Examples": [
        "SELECT STR_TO_DATE('Wednesday, June 2, 2014', '%W, %M %e, %Y');\n+---------------------------------------------------------+\n| STR_TO_DATE('Wednesday, June 2, 2014', '%W, %M %e, %Y') |\n+---------------------------------------------------------+\n| 2014-06-02                                              |\n+---------------------------------------------------------+\n\n\nSELECT STR_TO_DATE('Wednesday23423, June 2, 2014', '%W, %M %e, %Y');\n+--------------------------------------------------------------+\n| STR_TO_DATE('Wednesday23423, June 2, 2014', '%W, %M %e, %Y') |\n+--------------------------------------------------------------+\n| NULL                                                         |\n+--------------------------------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n\nSHOW WARNINGS;\n+---------+------+-----------------------------------------------------------------------------------+\n| Level   | Code | Message                                                                           |\n+---------+------+-----------------------------------------------------------------------------------+\n| Warning | 1411 | Incorrect datetime value: 'Wednesday23423, June 2, 2014' for function str_to_date |\n+---------+------+-----------------------------------------------------------------------------------+\n\nSELECT STR_TO_DATE('Wednesday23423, June 2, 2014', '%W%#, %M %e, %Y');\n+----------------------------------------------------------------+\n| STR_TO_DATE('Wednesday23423, June 2, 2014', '%W%#, %M %e, %Y') |\n+----------------------------------------------------------------+\n| 2014-06-02                                                     |\n+----------------------------------------------------------------+\n"
    ],
    "Category": [
        "Date & Time Functions"
    ],
    "Effective SQLs Refined": [
        "SELECT STR_TO_DATE('Wednesday, June 2, 2014', '%W, %M %e, %Y');",
        "SELECT STR_TO_DATE('Wednesday23423, June 2, 2014', '%W, %M %e, %Y');",
        "SELECT STR_TO_DATE('Wednesday23423, June 2, 2014', '%W%#, %M %e, %Y');"
    ],
    "Ineffective SQLs Refined": [],
    "Wrong Messages from Ineffective SQLs Refined": [],
    "SQLs Generated1": [],
    "SQLs Generated Costs1": [],
    "SQLs Generated ExecResults1": [],
    "SQLs Generated ExecTimes1": [],
    "SQLs Generated ErrorMessages1": [],
    "Effective SQLs Generated1": [],
    "SQLs Generated2": [],
    "SQLs Generated Costs2": [],
    "SQLs Generated ExecResults2": [],
    "SQLs Generated ExecTimes2": [],
    "SQLs Generated ErrorMessages2": [],
    "Effective SQLs Generated2": []
}