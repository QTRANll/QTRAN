{
    "HTML": "https://mariadb.com//kb/en/crosses/",
    "Title": "CROSSES",
    "Feature": [
        "Crosses(g1,g2)\n"
    ],
    "Description": [
        "Returns 1 if g1 spatially crosses g2. Returns NULL if g1 is\na Polygon or a MultiPolygon, or if g2 is a\nPoint or a MultiPoint. Otherwise, returns 0.",
        "The term spatially crosses denotes a spatial relation between two\ngiven geometries that has the following properties:",
        "The two geometries intersect\nTheir intersection results in a geometry that has a dimension that is one\n  less than the maximum dimension of the two given geometries\nTheir intersection is not equal to either of the two given geometries\n",
        "CROSSES() is based on the original MySQL implementation, and uses object bounding rectangles, while ST_CROSSES() uses object shapes."
    ],
    "Examples": [],
    "Category": [
        "Geographic Functions"
    ],
    "Effective SQLs Refined": [],
    "Ineffective SQLs Refined": [],
    "Wrong Messages from Ineffective SQLs Refined": [],
    "SQLs Generated1": [
        {
            "Example SQL": "SELECT Crosses(g1, g2);"
        },
        {
            "Example SQL": "SELECT Crosses(geometry1, geometry2);"
        },
        {
            "Example SQL": "SELECT Crosses(geom_a, geom_b);"
        },
        {
            "Example SQL": "SELECT Crosses(geometry1, geometry2) FROM your_table_name;"
        },
        {
            "Example SQL": "SELECT Crosses(geom1, geom2);"
        }
    ],
    "SQLs Generated Costs1": [
        {
            "Total Tokens": 408,
            "Prompt Tokens": 386,
            "Completion Tokens": 22,
            "Total Cost (USD)": 7.11e-05
        },
        {
            "Total Tokens": 560,
            "Prompt Tokens": 537,
            "Completion Tokens": 23,
            "Total Cost (USD)": 9.434999999999999e-05
        },
        {
            "Total Tokens": 712,
            "Prompt Tokens": 689,
            "Completion Tokens": 23,
            "Total Cost (USD)": 0.00011714999999999997
        },
        {
            "Total Tokens": 868,
            "Prompt Tokens": 841,
            "Completion Tokens": 27,
            "Total Cost (USD)": 0.00014234999999999996
        },
        {
            "Total Tokens": 1025,
            "Prompt Tokens": 1002,
            "Completion Tokens": 23,
            "Total Cost (USD)": 0.0001641
        }
    ],
    "SQLs Generated ExecResults1": [
        "None",
        "None",
        "None",
        "None",
        "None"
    ],
    "SQLs Generated ExecTimes1": [
        "0",
        "0",
        "0",
        "0",
        "0"
    ],
    "SQLs Generated ErrorMessages1": [
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'g1' in 'field list'\")\n",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'geometry1' in 'field list'\")\n",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'geom_a' in 'field list'\")\n",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.your_table_name' doesn't exist\")\n",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'geom1' in 'field list'\")\n"
    ],
    "Effective SQLs Generated1": [],
    "SQLs Generated2": [
        {
            "Example SQL": "SELECT * FROM dialect_recognize_table WHERE CROSSES(region, 'China');"
        },
        {
            "Example SQL": "SELECT * FROM dialect_recognize_table WHERE CROSSES(region, 'Polygon');"
        },
        {
            "Example SQL": "SELECT * FROM dialect_recognize_table WHERE CROSSES(id, 1);"
        },
        {
            "Example SQL": "SELECT * FROM dialect_recognize_table WHERE CROSSES(description, 'Celtic language native to Scotland');"
        },
        {
            "Example SQL": "SELECT * FROM dialect_recognize_table WHERE CROSSES(dialect_name, 'Mandarin');"
        }
    ],
    "SQLs Generated Costs2": [
        {
            "Total Tokens": 866,
            "Prompt Tokens": 836,
            "Completion Tokens": 30,
            "Total Cost (USD)": 0.0001434
        },
        {
            "Total Tokens": 1026,
            "Prompt Tokens": 996,
            "Completion Tokens": 30,
            "Total Cost (USD)": 0.0001674
        },
        {
            "Total Tokens": 1186,
            "Prompt Tokens": 1156,
            "Completion Tokens": 30,
            "Total Cost (USD)": 0.00019139999999999996
        },
        {
            "Total Tokens": 1352,
            "Prompt Tokens": 1316,
            "Completion Tokens": 36,
            "Total Cost (USD)": 0.000219
        },
        {
            "Total Tokens": 1515,
            "Prompt Tokens": 1482,
            "Completion Tokens": 33,
            "Total Cost (USD)": 0.00024209999999999998
        }
    ],
    "SQLs Generated ExecResults2": [
        "None",
        "None",
        "None",
        "None",
        "None"
    ],
    "SQLs Generated ExecTimes2": [
        "0",
        "0",
        "0",
        "0",
        "0"
    ],
    "SQLs Generated ErrorMessages2": [
        "(pymysql.err.OperationalError) (4079, \"Illegal parameter data type varchar for operation 'st_crosses'\")\n",
        "(pymysql.err.OperationalError) (4079, \"Illegal parameter data type varchar for operation 'st_crosses'\")\n",
        "(pymysql.err.OperationalError) (4079, \"Illegal parameter data type int for operation 'st_crosses'\")\n",
        "(pymysql.err.OperationalError) (4079, \"Illegal parameter data type blob for operation 'st_crosses'\")\n",
        "(pymysql.err.OperationalError) (4079, \"Illegal parameter data type varchar for operation 'st_crosses'\")\n"
    ],
    "Effective SQLs Generated2": []
}