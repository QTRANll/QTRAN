{"HTML": ["https://mariadb.com//kb/en/next-value-for-sequence_name/"], "Title": ["NEXT VALUE for sequence_name"], "Feature": ["NEXT VALUE FOR sequence\n", "or", "NEXTVAL(sequence_name)\n", "or in Oracle mode (SQL_MODE=ORACLE)", "sequence_name.nextval\n", "NEXT VALUE FOR is ANSI SQL syntax while NEXTVAL() is PostgreSQL syntax."], "Description": ["Generate next value for a SEQUENCE.", "You can greatly speed up NEXT VALUE by creating the sequence with the CACHE option. If not, every NEXT VALUE usage will cause changes in the stored SEQUENCE table.\nWhen using NEXT VALUE the value will be reserved at once and will not be reused, except if the SEQUENCE was created with CYCLE. This means that when you are using SEQUENCEs you have to expect gaps in the generated sequence numbers.\nIf one updates the SEQUENCE with SETVAL() or ALTER SEQUENCE ... RESTART, NEXT VALUE FOR will notice this and start from the next requested value.\nFLUSH TABLES will close the sequence and the next sequence number generated will be according to what's stored in the SEQUENCE object. In effect, this will discard the cached values.\nA server restart (or closing the current connection) also causes a drop of all cached values. The cached sequence numbers are reserved only for the current connection.\nNEXT VALUE requires the INSERT privilege.\nYou can also use NEXT VALUE FOR sequence for column DEFAULT.\n", "Once the sequence is complete, unless the sequence has been created with the CYCLE attribute (not the default), calling the function will result in Error 4084: Sequence has run out."], "Examples": ["SELECT AUTO_INCREMENT FROM information_schema.tables WHERE table_name = 'dialect_recognize_table'"], "Category": ["SEQUENCE Functions"]}
{"HTML": ["https://mariadb.com//kb/en/previous-value-for-sequence_name/"], "Title": ["PREVIOUS VALUE FOR sequence_name"], "Feature": ["PREVIOUS VALUE FOR sequence_name\n", "or", "LASTVAL(sequence_name)\n", "or in Oracle mode (SQL_MODE=ORACLE)", "sequence_name.currval\n", "PREVIOUS VALUE FOR is IBM DB2 syntax while LASTVAL() is PostgreSQL syntax."], "Description": ["Gets the most recent value in the current connection generated from a sequence.", "If the sequence has not yet been used by the connection, PREVIOUS VALUE FOR returns NULL (the same thing applies with a new connection which doesn't see a last value for an existing sequence).\nIf a SEQUENCE has been dropped and re-created then it's treated as a new SEQUENCE and PREVIOUS VALUE FOR will return NULL.\nReturns NULL if the sequence is complete\nFLUSH TABLES has no effect on PREVIOUS VALUE FOR.\nPrevious values for all used sequences are stored per connection until connection ends.\nPREVIOUS VALUE FOR requires the SELECT privilege.\n"], "Examples": ["SELECT LAST_INSERT_ID();"], "Category": ["SEQUENCE Functions"]}
{"HTML": ["https://mariadb.com//kb/en/setval/"], "Title": ["SETVAL"], "Feature": ["SETVAL(sequence_name, next_value, [is_used, [round]])\n"], "Description": ["Set the next value to be returned for a SEQUENCE.", "This function is compatible with PostgreSQL syntax, extended\nwith the round argument.", "If the is_used argument is not given or is 1 or true, then the next used value will\none after the given value. If is_used is 0 or false then the next generated value\nwill be the given value.", "If round is used then it will set the round value (or the internal cycle count, starting at zero) for the sequence.\nIf round is not used, it's assumed to be 0.", "next_value must be an integer literal.", "For SEQUENCE tables defined with CYCLE (see CREATE SEQUENCE) one should use both next_value and round to define the next value. In this case the\ncurrent sequence value is defined to be round, next_value.", "The result returned by SETVAL() is next_value or NULL if the given next_value and round  is smaller than the current value.", "SETVAL() will not set the SEQUENCE value to a something that is less than\nits current value. This is needed to ensure that SETVAL()\nis replication safe.  If you want to set the SEQUENCE to a smaller number\nuse ALTER SEQUENCE.", "If CYCLE is used, first round and then next_value are compared\nto see if the value is bigger than the current value.", "Internally, in the MariaDB server, SETVAL() is used to inform\nreplicas that a SEQUENCE has changed value.  The replica may get\nSETVAL() statements out of order, but this is ok as only the\nbiggest one will have an effect.", "SETVAL requires the INSERT privilege."], "Examples": [], "Category": ["SEQUENCE Functions"]}
