{"HTML": ["https://mariadb.com//kb/en/abs/"], "Title": ["ABS"], "Feature": ["ABS(X)\n"], "Description": ["Returns the absolute (non-negative) value of X. If X is not a number, it is converted to a numeric type."], "Examples": ["SELECT ABS(42);", "SELECT ABS(-42);", "SELECT ABS(DATE '1994-01-01');"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/atan2/"], "Title": ["ATAN2"], "Feature": ["ATAN(Y,X), ATAN2(Y,X)\n"], "Description": ["Returns the arc tangent of the two variables X and Y. It is similar to\ncalculating the arc tangent of Y / X, except that the signs of both\narguments are used to determine the quadrant of the result."], "Examples": ["SELECT ATAN2(PI(),0);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/ln/"], "Title": ["LN"], "Feature": ["LN(X)\n"], "Description": ["Returns the natural logarithm of X; that is, the base-e logarithm of X.\nIf X is less than or equal to 0, or NULL, then NULL is returned.", "The inverse of this function is EXP()."], "Examples": ["SELECT LN(2);", "SELECT LN(-2);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/log/"], "Title": ["LOG"], "Feature": ["LOG(X), LOG(B,X)\n"], "Description": ["If called with one parameter, this function returns the natural\nlogarithm of X. If X is less than or equal to 0, then NULL is\nreturned.", "If called with two parameters, it returns the logarithm of X to the base B. If  B is <= 1 or X <= 0, the function returns NULL.", "If any argument is NULL, the function returns NULL.", "The inverse of this function (when called with a single argument) is\nthe EXP() function."], "Examples": ["SELECT LOG(2);", "SELECT LOG(-2);", "SELECT LOG(2,16);", "SELECT LOG(3,27);", "SELECT LOG(3,1);", "SELECT LOG(3,0);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/log10/"], "Title": ["LOG10"], "Feature": ["LOG10(X)\n"], "Description": ["Returns the base-10 logarithm of X."], "Examples": ["SELECT LOG10(2);", "SELECT LOG10(100);", "SELECT LOG10(-100);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/log2/"], "Title": ["LOG2"], "Feature": ["LOG2(X)\n"], "Description": ["Returns the base-2 logarithm of X."], "Examples": ["SELECT LOG2(4398046511104);", "SELECT LOG2(65536);", "SELECT LOG2(-100);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/acos/"], "Title": ["ACOS"], "Feature": ["ACOS(X)\n"], "Description": ["Returns the arc cosine of X, that is, the value whose cosine is X.\nReturns NULL if X is not in the range -1 to 1."], "Examples": ["SELECT ACOS(1);", "SELECT ACOS(1.0001);", "SELECT ACOS(0);", "SELECT ACOS(0.234);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/oct/"], "Title": ["OCT"], "Feature": ["OCT(N)\n"], "Description": ["Returns a string representation of the octal value of N, where N is a longlong (BIGINT) number. This is equivalent to CONV(N,10,8). Returns NULL if N is NULL."], "Examples": ["SELECT OCT(34);", "SELECT OCT(12);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/pi/"], "Title": ["PI"], "Feature": ["PI()\n"], "Description": ["Returns the value of \u03c0 (pi). The default number of decimal places\ndisplayed is six, but MariaDB uses the full double-precision value\ninternally."], "Examples": ["SELECT PI();", "SELECT PI()+0.0000000000000000000000;"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/ceil/"], "Title": ["CEIL"], "Feature": ["CEIL(X)\n"], "Description": ["CEIL() is a synonym for CEILING()."], "Examples": ["SELECT CEIL(3.14);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/pow/"], "Title": ["POW"], "Feature": ["POW(X,Y)\n"], "Description": ["Returns the value of X raised to the power of Y.", "POWER() is a synonym."], "Examples": ["SELECT POW(2,3);", "SELECT POW(2,-2);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/power/"], "Title": ["POWER"], "Feature": ["POWER(X,Y)\n"], "Description": ["This is a synonym for POW(), which returns the value of X raised to the power of Y."], "Examples": ["SELECT POWER(2, 3);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/ceiling/"], "Title": ["CEILING"], "Feature": ["CEILING(X)\n"], "Description": ["Returns the smallest integer value not less than X."], "Examples": ["SELECT CEILING(1.23);", "SELECT CEILING(-1.23);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/radians/"], "Title": ["RADIANS"], "Feature": ["RADIANS(X)\n"], "Description": ["Returns the argument X, converted from degrees to radians. Note that\n\u03c0 radians equals 180 degrees. ", "This is the converse of the DEGREES() function."], "Examples": ["SELECT RADIANS(45);", "SELECT RADIANS(90);", "SELECT RADIANS(PI());", "SELECT RADIANS(180);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/rand/"], "Title": ["RAND"], "Feature": ["RAND(), RAND(N)\n"], "Description": ["Returns a random DOUBLE precision floating point value v in the range 0 <= v < 1.0. If\na constant integer argument N is specified, it is used as the seed\nvalue, which produces a repeatable sequence of column values. In the example below, note that the sequences of values produced by\nRAND(3) is the same both places where it occurs.", "In a WHERE clause, RAND() is evaluated each time the WHERE is executed.", "Statements using the RAND() function are not safe for statement-based replication."], "Examples": ["SELECT i, RAND() FROM t;", "SELECT i, RAND(3) FROM t;", "SELECT i, RAND() FROM t;", "SELECT i, RAND(3) FROM t;", "SELECT FLOOR(5 + (RAND() * 11));"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/round/"], "Title": ["ROUND"], "Feature": ["ROUND(X), ROUND(X,D)\n"], "Description": ["Rounds the argument X to D decimal places.  D defaults to 0 if not specified.\nD can be negative to cause D digits left of the decimal point of the\nvalue X to become zero.", "The rounding algorithm depends on the data type of X:", "for floating point types (FLOAT, DOUBLE) the C libraries rounding function is used, so the behavior *may* differ between operating systems\nfor fixed point types (DECIMAL, DEC/NUMBER/FIXED) the \"round half up\" rule is used, meaning that e.g. a value ending in exactly .5 is always rounded up.\n"], "Examples": ["SELECT ROUND(-1.23);", "SELECT ROUND(-1.58);", "SELECT ROUND(1.58);", "SELECT ROUND(1.298, 1);", "SELECT ROUND(1.298, 0);", "SELECT ROUND(23.298, -1);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/sign/"], "Title": ["SIGN"], "Feature": ["SIGN(X)\n"], "Description": ["Returns the sign of the argument as -1, 0, or 1, depending on whether\nX is negative, zero, or positive."], "Examples": ["SELECT SIGN(-32);", "SELECT SIGN(0);", "SELECT SIGN(234);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/sin/"], "Title": ["SIN"], "Feature": ["SIN(X)\n"], "Description": ["Returns the sine of X, where X is given in radians."], "Examples": ["SELECT SIN(1.5707963267948966);", "SELECT SIN(PI());", "SELECT ROUND(SIN(PI()));"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/sqrt/"], "Title": ["SQRT"], "Feature": ["SQRT(X)\n"], "Description": ["Returns the square root of X. If X is negative, NULL is returned."], "Examples": ["SELECT SQRT(4);", "SELECT SQRT(20);", "SELECT SQRT(-16);", "SELECT SQRT(1764);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/tan/"], "Title": ["TAN"], "Feature": ["TAN(X)\n"], "Description": ["Returns the tangent of X, where X is given in radians."], "Examples": ["SELECT TAN(0.7853981633974483);", "SELECT TAN(PI());", "SELECT TAN(PI()+1);", "SELECT TAN(RADIANS(PI()));"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/truncate/"], "Title": ["TRUNCATE"], "Feature": ["TRUNCATE(X,D)\n"], "Description": ["Returns the number X, truncated to D decimal places. If D is 0, the\nresult has no decimal point or fractional part. D can be negative to\ncause D digits left of the decimal point of the value X to become\nzero."], "Examples": ["SELECT TRUNCATE(1.223,1);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/conv/"], "Title": ["CONV"], "Feature": ["CONV(N,from_base,to_base)\n"], "Description": ["Converts numbers between different number bases. Returns a string\nrepresentation of the number N, converted from base from_base\nto base to_base.", "Returns NULL if any argument is NULL, or if the second or third argument are not in the allowed range.", "The argument N is interpreted as an integer, but may be specified as an\ninteger or a string. The minimum base is 2 and the maximum base is 36 (prior to MariaDB 11.4.0) or 62 (from MariaDB 11.4.0). If to_base is a negative number, N is regarded as a signed number.\nOtherwise, N is treated as unsigned. CONV() works with 64-bit\nprecision.", "Some shortcuts for this function are also available: BIN(), OCT(), HEX(), UNHEX(). Also, MariaDB allows binary literal values and hexadecimal literal values."], "Examples": ["SELECT CONV('a',16,2);", "SELECT CONV('6E',18,8);", "SELECT CONV(-17,10,-18);", "SELECT CONV(12+'10'+'10'+0xa,10,10);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/cos/"], "Title": ["COS"], "Feature": ["COS(X)\n"], "Description": ["Returns the cosine of X, where X is given in radians."], "Examples": ["SELECT COS(PI());"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/cot/"], "Title": ["COT"], "Feature": ["COT(X)\n"], "Description": ["Returns the cotangent of X."], "Examples": ["SELECT COT(42);", "SELECT COT(12);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/crc32/"], "Title": ["CRC32"], "Feature": ["<= MariaDB 10.7", "CRC32(expr)\n", "From MariaDB 10.8", "CRC32([par,]expr)\n"], "Description": ["Computes a cyclic redundancy check (CRC) value and returns a 32-bit unsigned\nvalue. The result is NULL if the argument is NULL. The argument is\nexpected to be a string and (if possible) is treated as one if it is\nnot.", "Uses the ISO 3309 polynomial that used by zlib and many others. MariaDB 10.8 introduced the CRC32C() function, which uses the alternate Castagnoli polynomia.\n", "MariaDB starting with 10.8Often, CRC is computed in pieces. To facilitate this, MariaDB 10.8.0 introduced an\noptional parameter: CRC32('MariaDB')=CRC32(CRC32('Maria'),'DB'). \n"], "Examples": ["SELECT CRC32('MariaDB');", "SELECT CRC32('mariadb');", "SELECT CRC32(CRC32('Maria'),'DB');"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/crc32c/"], "Title": ["CRC32C"], "Feature": ["CRC32C([par,]expr)\n"], "Description": ["MariaDB has always included a native unary function CRC32() that computes the CRC-32 of a string using the ISO 3309 polynomial that used by zlib and many others.", "InnoDB and MyRocks use a different polynomial, which was implemented in SSE4.2 instructions that were introduced in the Intel Nehalem microarchitecture. This is commonly called CRC-32C (Castagnoli).", "The CRC32C function uses the Castagnoli polynomial.", "This allows SELECT\u2026INTO DUMPFILE to be used for the creation of files with\nvalid checksums, such as a logically empty InnoDB redo log file\nib_logfile0 corresponding to a particular log sequence number.", "The optional parameter allows the checksum to be computed in pieces:\nCRC32C('MariaDB')=CRC32C(CRC32C('Maria'),'DB')."], "Examples": ["SELECT CRC32C('MariaDB');", "SELECT CRC32C(CRC32C('Maria'),'DB');"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/degrees/"], "Title": ["DEGREES"], "Feature": ["DEGREES(X)\n"], "Description": ["Returns the argument X, converted from radians to degrees.", "This is the converse of the RADIANS() function."], "Examples": ["SELECT DEGREES(PI());", "SELECT DEGREES(PI() / 2);", "SELECT DEGREES(45);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/exp/"], "Title": ["EXP"], "Feature": ["EXP(X)\n"], "Description": ["Returns the value of e (the base of natural logarithms) raised to the\npower of X. The inverse of this function is LOG() (using a single\nargument only) or LN().", "If X is NULL, this function returns NULL."], "Examples": ["SELECT EXP(2);", "SELECT EXP(-2);", "SELECT EXP(0);", "SELECT EXP(NULL);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/asin/"], "Title": ["ASIN"], "Feature": ["ASIN(X)\n"], "Description": ["Returns the arc sine of X, that is, the value whose sine is X. Returns\nNULL if X is not in the range -1 to 1."], "Examples": ["SELECT ASIN(0.2);", "SELECT ASIN('foo');"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/floor/"], "Title": ["FLOOR"], "Feature": ["FLOOR(X)\n"], "Description": ["Returns the largest integer value not greater than X."], "Examples": ["SELECT FLOOR(1.23);", "SELECT FLOOR(-1.23);"], "Category": ["Numeric Functions"]}
{"HTML": ["https://mariadb.com//kb/en/atan/"], "Title": ["ATAN"], "Feature": ["ATAN(X)\n"], "Description": ["Returns the arc tangent of X, that is, the value whose tangent is X."], "Examples": ["SELECT ATAN(2);", "SELECT ATAN(-2);"], "Category": ["Numeric Functions"]}
