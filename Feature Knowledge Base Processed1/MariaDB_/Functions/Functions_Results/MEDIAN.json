{
    "HTML": "https://mariadb.com//kb/en/median/",
    "Title": "MEDIAN",
    "Feature": [
        "MEDIAN(median expression) OVER (\n  [ PARTITION BY partition_expression ] \n)\n"
    ],
    "Description": [
        "MEDIAN() is a window function that returns the median value of a range of values.",
        "It is a specific case of PERCENTILE_CONT, with an argument of 0.5 and the ORDER BY column the one in MEDIAN's argument. ",
        "MEDIAN(<median-arg>) OVER ( [ PARTITION BY partition_expression] )\n",
        "Is equivalent to:",
        "PERCENTILE_CONT(0.5) WITHIN \n  GROUP (ORDER BY <median-arg>) OVER ( [ PARTITION BY partition_expression ])\n"
    ],
    "Examples": [
        "CREATE TABLE book_rating (name CHAR(30), star_rating TINYINT);\n\nINSERT INTO book_rating VALUES ('Lord of the Ladybirds', 5);\nINSERT INTO book_rating VALUES ('Lord of the Ladybirds', 3);\nINSERT INTO book_rating VALUES ('Lady of the Flies', 1);\nINSERT INTO book_rating VALUES ('Lady of the Flies', 2);\nINSERT INTO book_rating VALUES ('Lady of the Flies', 5);\n\nSELECT name, median(star_rating) OVER (PARTITION BY name) FROM book_rating;\n+-----------------------+----------------------------------------------+\n| name                  | median(star_rating) OVER (PARTITION BY name) |\n+-----------------------+----------------------------------------------+\n| Lord of the Ladybirds |                                 4.0000000000 |\n| Lord of the Ladybirds |                                 4.0000000000 |\n| Lady of the Flies     |                                 2.0000000000 |\n| Lady of the Flies     |                                 2.0000000000 |\n| Lady of the Flies     |                                 2.0000000000 |\n+-----------------------+----------------------------------------------+\n"
    ],
    "Category": [
        "Window Functions"
    ],
    "Effective SQLs Refined": [],
    "Ineffective SQLs Refined": [
        "SELECT name, median(star_rating) OVER (PARTITION BY name) FROM book_rating;"
    ],
    "Wrong Messages from Ineffective SQLs Refined": [
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.book_rating' doesn't exist\")\n[SQL: SELECT name, median(star_rating) OVER (PARTITION BY name) FROM book_rating;]\n(Background on this error at: https://sqlalche.me/e/20/f405)"
    ],
    "SQLs Generated1": [
        {
            "Example SQL": "SELECT MEDIAN(column_name) OVER ()"
        },
        {
            "Example SQL": "SELECT MEDIAN(value) OVER ()"
        },
        {
            "Example SQL": "SELECT MEDIAN(some_column) OVER ()"
        },
        {
            "Example SQL": "SELECT MEDIAN(1) OVER ()"
        }
    ],
    "SQLs Generated Costs1": [
        {
            "Total Tokens": 383,
            "Prompt Tokens": 362,
            "Completion Tokens": 21,
            "Total Cost (USD)": 6.689999999999999e-05
        },
        {
            "Total Tokens": 531,
            "Prompt Tokens": 511,
            "Completion Tokens": 20,
            "Total Cost (USD)": 8.864999999999999e-05
        },
        {
            "Total Tokens": 680,
            "Prompt Tokens": 658,
            "Completion Tokens": 22,
            "Total Cost (USD)": 0.0001119
        },
        {
            "Total Tokens": 829,
            "Prompt Tokens": 808,
            "Completion Tokens": 21,
            "Total Cost (USD)": 0.0001338
        }
    ],
    "SQLs Generated ExecResults1": [
        "None",
        "None",
        "None",
        "[(1.0,)]"
    ],
    "SQLs Generated ExecTimes1": [
        "0",
        "0",
        "0",
        "0.027177095413208008"
    ],
    "SQLs Generated ErrorMessages1": [
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'column_name' in 'order clause'\")\n",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'value' in 'order clause'\")\n",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'some_column' in 'order clause'\")\n",
        "None"
    ],
    "Effective SQLs Generated1": [
        "SELECT MEDIAN(1) OVER ()"
    ]
}