{
    "HTML": "https://mariadb.com//kb/en/sum/",
    "Title": "SUM",
    "Feature": [
        "SUM([DISTINCT] expr)\n"
    ],
    "Description": [
        "Returns the sum of expr. If the return set has no rows, SUM() returns\nNULL. The DISTINCT keyword can be used to sum only the distinct values\nof expr.",
        "SUM() can be used as a window function, although not with the DISTINCT specifier."
    ],
    "Examples": [
        "CREATE TABLE sales (sales_value INT);\nINSERT INTO sales VALUES(10),(20),(20),(40);\n\nSELECT SUM(sales_value) FROM sales;\n+------------------+\n| SUM(sales_value) |\n+------------------+\n|               90 |\n+------------------+\n\nSELECT SUM(DISTINCT(sales_value)) FROM sales;\n+----------------------------+\n| SUM(DISTINCT(sales_value)) |\n+----------------------------+\n|                         70 |\n+----------------------------+\n",
        "CREATE TABLE sales (name CHAR(10), month CHAR(10), units INT);\n\nINSERT INTO sales VALUES \n  ('Chun', 'Jan', 75), ('Chun', 'Feb', 73),\n  ('Esben', 'Jan', 43), ('Esben', 'Feb', 31),\n  ('Kaolin', 'Jan', 56), ('Kaolin', 'Feb', 88),\n  ('Tatiana', 'Jan', 87), ('Tatiana', 'Feb', 83);\n\nSELECT name, SUM(units) FROM sales GROUP BY name;\n+---------+------------+\n| name    | SUM(units) |\n+---------+------------+\n| Chun    |        148 |\n| Esben   |         74 |\n| Kaolin  |        144 |\n| Tatiana |        170 |\n+---------+------------+\n",
        "SELECT name,SUM(units) FROM sales\n;+------+------------+\n| name | SUM(units) |\n+------+------------+\n| Chun |        536 |\n+------+------------+\n",
        "CREATE OR REPLACE TABLE student_test (name CHAR(10), test CHAR(10), score TINYINT);\nINSERT INTO student_test VALUES \n    ('Chun', 'SQL', 75), ('Chun', 'Tuning', 73), \n    ('Esben', 'SQL', 43), ('Esben', 'Tuning', 31), \n    ('Kaolin', 'SQL', 56), ('Kaolin', 'Tuning', 88), \n    ('Tatiana', 'SQL', 87);\n\nSELECT name, test, score, SUM(score) OVER (PARTITION BY name) AS total_score FROM student_test;\n+---------+--------+-------+-------------+\n| name    | test   | score | total_score |\n+---------+--------+-------+-------------+\n| Chun    | SQL    |    75 |         148 |\n| Chun    | Tuning |    73 |         148 |\n| Esben   | SQL    |    43 |          74 |\n| Esben   | Tuning |    31 |          74 |\n| Kaolin  | SQL    |    56 |         144 |\n| Kaolin  | Tuning |    88 |         144 |\n| Tatiana | SQL    |    87 |          87 |\n+---------+--------+-------+-------------+\n"
    ],
    "Category": [
        "Aggregate Functions"
    ],
    "Effective SQLs Refined": [],
    "Ineffective SQLs Refined": [
        "SELECT SUM(sales_value) FROM sales;",
        "SELECT SUM(DISTINCT(sales_value)) FROM sales;",
        "SELECT name, SUM(units) FROM sales GROUP BY name;",
        "SELECT name,SUM(units) FROM sales\n;",
        "SELECT name, test, score, SUM(score) OVER (PARTITION BY name) AS total_score FROM student_test;"
    ],
    "Wrong Messages from Ineffective SQLs Refined": [
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.sales' doesn't exist\")\n[SQL: SELECT SUM(sales_value) FROM sales;]\n(Background on this error at: https://sqlalche.me/e/20/f405)",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.sales' doesn't exist\")\n[SQL: SELECT SUM(DISTINCT(sales_value)) FROM sales;]\n(Background on this error at: https://sqlalche.me/e/20/f405)",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.sales' doesn't exist\")\n[SQL: SELECT name, SUM(units) FROM sales GROUP BY name;]\n(Background on this error at: https://sqlalche.me/e/20/f405)",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.sales' doesn't exist\")\n[SQL: SELECT name,SUM(units) FROM sales\n;]\n(Background on this error at: https://sqlalche.me/e/20/f405)",
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.student_test' doesn't exist\")\n[SQL: SELECT name, test, score, SUM(score) OVER (PARTITION BY name) AS total_score FROM student_test;]\n(Background on this error at: https://sqlalche.me/e/20/f405)"
    ],
    "SQLs Generated1": [
        {
            "Example SQL": "SELECT SUM(expr) FROM table_name;"
        },
        {
            "Example SQL": "SELECT SUM(expr);"
        },
        {
            "Example SQL": "SELECT SUM(1);"
        }
    ],
    "SQLs Generated Costs1": [
        {
            "Total Tokens": 308,
            "Prompt Tokens": 288,
            "Completion Tokens": 20,
            "Total Cost (USD)": 5.519999999999999e-05
        },
        {
            "Total Tokens": 455,
            "Prompt Tokens": 438,
            "Completion Tokens": 17,
            "Total Cost (USD)": 7.59e-05
        },
        {
            "Total Tokens": 599,
            "Prompt Tokens": 581,
            "Completion Tokens": 18,
            "Total Cost (USD)": 9.795e-05
        }
    ],
    "SQLs Generated ExecResults1": [
        "None",
        "None",
        "[(Decimal('1'),)]"
    ],
    "SQLs Generated ExecTimes1": [
        "0",
        "0",
        "0.029091358184814453"
    ],
    "SQLs Generated ErrorMessages1": [
        "(pymysql.err.ProgrammingError) (1146, \"Table 'PINOLO_MariaDB.table_name' doesn't exist\")\n",
        "(pymysql.err.OperationalError) (1054, \"Unknown column 'expr' in 'field list'\")\n",
        "None"
    ],
    "Effective SQLs Generated1": [
        "SELECT SUM(1);"
    ]
}