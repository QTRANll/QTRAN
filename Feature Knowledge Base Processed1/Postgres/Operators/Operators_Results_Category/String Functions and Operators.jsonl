{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text || text"], "Feature": ["text || text \u2192 text"], "Description": ["Concatenates the two strings."], "Examples": ["'Post' || 'greSQL' \u2192 PostgreSQL"], "Category": ["String Functions and Operators"]}
{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text || anynonarray"], "Feature": ["text || anynonarray \u2192 text", "anynonarray || text \u2192 text"], "Description": ["Converts the non-string input to text, then concatenates the two strings. (The non-string input cannot be of an array type, because that would create ambiguity with the array || operators. If you want to concatenate an array's text equivalent, cast it to text explicitly.)"], "Examples": ["'Value: ' || 42 \u2192 Value: 42"], "Category": ["String Functions and Operators"]}
{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text IS [NOT] [form] NORMALIZED"], "Feature": ["text IS [NOT] [form] NORMALIZED \u2192 boolean"], "Description": ["Checks whether the string is in the specified Unicode normalization form. The optional form key word specifies the form: NFC (the default), NFD, NFKC, or NFKD. This expression can only be used when the server encoding is UTF8. Note that checking for normalization using this expression is often faster than normalizing possibly already normalized strings."], "Examples": ["U&'\\0061\\0308bc' IS NFD NORMALIZED \u2192 t"], "Category": ["String Functions and Operators"]}
{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text ^@ text"], "Feature": ["text ^@ text \u2192 boolean"], "Description": ["Returns true if the first string starts with the second string (equivalent to the starts_with() function)."], "Examples": ["'alphabet' ^@ 'alph' \u2192 t"], "Category": ["String Functions and Operators"]}
