{"HTML": ["https://www.postgresql.org/docs/current/functions-comparison.html"], "Title": ["datatype < datatype"], "Feature": ["datatype < datatype \u2192 boolean"], "Description": ["Less than"], "Examples": [], "Category": ["Comparison Functions and Operators"], "index": 0, "vector_txt": "0:Feature: datatype < datatype \u2192 boolean\nDescription: Less than\nExamples: \nCategory: Comparison Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet && inet"], "Feature": ["inet && inet \u2192 boolean"], "Description": ["Does either subnet contain or equal the other?"], "Examples": ["inet '192.168.1/24' && inet '192.168.1.80/28' \u2192 t", "inet '192.168.1/24' && inet '192.168.2.0/28' \u2192 f"], "Category": ["Network Address Functions and Operators"], "index": 1, "vector_txt": "1:Feature: inet && inet \u2192 boolean\nDescription: Does either subnet contain or equal the other?\nExamples: inet '192.168.1/24' && inet '192.168.1.80/28' \u2192 tinet '192.168.1/24' && inet '192.168.2.0/28' \u2192 f\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["~ inet"], "Feature": ["~ inet \u2192 inet"], "Description": ["Computes bitwise NOT."], "Examples": ["~ inet '192.168.1.6' \u2192 63.87.254.249"], "Category": ["Network Address Functions and Operators"], "index": 2, "vector_txt": "2:Feature: ~ inet \u2192 inet\nDescription: Computes bitwise NOT.\nExamples: ~ inet '192.168.1.6' \u2192 63.87.254.249\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet & inet"], "Feature": ["inet & inet \u2192 inet"], "Description": ["Computes bitwise AND."], "Examples": ["inet '192.168.1.6' & inet '0.0.0.255' \u2192 0.0.0.6"], "Category": ["Network Address Functions and Operators"], "index": 3, "vector_txt": "3:Feature: inet & inet \u2192 inet\nDescription: Computes bitwise AND.\nExamples: inet '192.168.1.6' & inet '0.0.0.255' \u2192 0.0.0.6\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet | inet"], "Feature": ["inet | inet \u2192 inet"], "Description": ["Computes bitwise OR."], "Examples": ["inet '192.168.1.6' | inet '0.0.0.255' \u2192 192.168.1.255"], "Category": ["Network Address Functions and Operators"], "index": 4, "vector_txt": "4:Feature: inet | inet \u2192 inet\nDescription: Computes bitwise OR.\nExamples: inet '192.168.1.6' | inet '0.0.0.255' \u2192 192.168.1.255\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet + bigint"], "Feature": ["inet + bigint \u2192 inet"], "Description": ["Adds an offset to an address."], "Examples": ["inet '192.168.1.6' + 25 \u2192 192.168.1.31"], "Category": ["Network Address Functions and Operators"], "index": 5, "vector_txt": "5:Feature: inet + bigint \u2192 inet\nDescription: Adds an offset to an address.\nExamples: inet '192.168.1.6' + 25 \u2192 192.168.1.31\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["bigint + inet"], "Feature": ["bigint + inet \u2192 inet"], "Description": ["Adds an offset to an address."], "Examples": ["200 + inet '::ffff:fff0:1' \u2192 ::ffff:255.240.0.201"], "Category": ["Network Address Functions and Operators"], "index": 6, "vector_txt": "6:Feature: bigint + inet \u2192 inet\nDescription: Adds an offset to an address.\nExamples: 200 + inet '::ffff:fff0:1' \u2192 ::ffff:255.240.0.201\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet - bigint"], "Feature": ["inet - bigint \u2192 inet"], "Description": ["Subtracts an offset from an address."], "Examples": ["inet '192.168.1.43' - 36 \u2192 192.168.1.7"], "Category": ["Network Address Functions and Operators"], "index": 7, "vector_txt": "7:Feature: inet - bigint \u2192 inet\nDescription: Subtracts an offset from an address.\nExamples: inet '192.168.1.43' - 36 \u2192 192.168.1.7\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet - inet"], "Feature": ["inet - inet \u2192 bigint"], "Description": ["Computes the difference of two addresses."], "Examples": ["inet '192.168.1.43' - inet '192.168.1.19' \u2192 24", "inet '::1' - inet '::ffff:1' \u2192 -4294901760"], "Category": ["Network Address Functions and Operators"], "index": 8, "vector_txt": "8:Feature: inet - inet \u2192 bigint\nDescription: Computes the difference of two addresses.\nExamples: inet '192.168.1.43' - inet '192.168.1.19' \u2192 24inet '::1' - inet '::ffff:1' \u2192 -4294901760\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["tsvector @@ tsquery"], "Feature": ["tsvector @@ tsquery \u2192 boolean", "tsquery @@ tsvector \u2192 boolean"], "Description": ["Does tsvector match tsquery? (The arguments can be given in either order.)"], "Examples": ["to_tsvector('fat cats ate rats') @@ to_tsquery('cat & rat') \u2192 t"], "Category": ["Text Search Functions and Operators"], "index": 9, "vector_txt": "9:Feature: tsvector @@ tsquery \u2192 booleantsquery @@ tsvector \u2192 boolean\nDescription: Does tsvector match tsquery? (The arguments can be given in either order.)\nExamples: to_tsvector('fat cats ate rats') @@ to_tsquery('cat & rat') \u2192 t\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["text @@ tsquery"], "Feature": ["text @@ tsquery \u2192 boolean"], "Description": ["Does text string, after implicit invocation of to_tsvector(), match tsquery?"], "Examples": ["'fat cats ate rats' @@ to_tsquery('cat & rat') \u2192 t"], "Category": ["Text Search Functions and Operators"], "index": 10, "vector_txt": "10:Feature: text @@ tsquery \u2192 boolean\nDescription: Does text string, after implicit invocation of to_tsvector(), match tsquery?\nExamples: 'fat cats ate rats' @@ to_tsquery('cat & rat') \u2192 t\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["- numeric_type"], "Feature": ["- numeric_type \u2192 numeric_type"], "Description": ["Negation"], "Examples": ["- (-4) \u2192 4"], "Category": ["Mathematical Functions and Operators"], "index": 11, "vector_txt": "11:Feature: - numeric_type \u2192 numeric_type\nDescription: Negation\nExamples: - (-4) \u2192 4\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["tsvector || tsvector"], "Feature": ["tsvector || tsvector \u2192 tsvector"], "Description": ["Concatenates two tsvectors. If both inputs contain lexeme positions, the second input's positions are adjusted accordingly."], "Examples": ["'a:1 b:2'::tsvector || 'c:1 d:2 b:3'::tsvector \u2192 'a':1 'b':2,5 'c':3 'd':4"], "Category": ["Text Search Functions and Operators"], "index": 12, "vector_txt": "12:Feature: tsvector || tsvector \u2192 tsvector\nDescription: Concatenates two tsvectors. If both inputs contain lexeme positions, the second input's positions are adjusted accordingly.\nExamples: 'a:1 b:2'::tsvector || 'c:1 d:2 b:3'::tsvector \u2192 'a':1 'b':2,5 'c':3 'd':4\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["tsquery && tsquery"], "Feature": ["tsquery && tsquery \u2192 tsquery"], "Description": ["ANDs two tsquerys together, producing a query that matches documents that match both input queries."], "Examples": ["'fat | rat'::tsquery && 'cat'::tsquery \u2192 ( 'fat' | 'rat' ) & 'cat'"], "Category": ["Text Search Functions and Operators"], "index": 13, "vector_txt": "13:Feature: tsquery && tsquery \u2192 tsquery\nDescription: ANDs two tsquerys together, producing a query that matches documents that match both input queries.\nExamples: 'fat | rat'::tsquery && 'cat'::tsquery \u2192 ( 'fat' | 'rat' ) & 'cat'\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["tsquery || tsquery"], "Feature": ["tsquery || tsquery \u2192 tsquery"], "Description": ["ORs two tsquerys together, producing a query that matches documents that match either input query."], "Examples": ["'fat | rat'::tsquery || 'cat'::tsquery \u2192 'fat' | 'rat' | 'cat'"], "Category": ["Text Search Functions and Operators"], "index": 14, "vector_txt": "14:Feature: tsquery || tsquery \u2192 tsquery\nDescription: ORs two tsquerys together, producing a query that matches documents that match either input query.\nExamples: 'fat | rat'::tsquery || 'cat'::tsquery \u2192 'fat' | 'rat' | 'cat'\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["!! tsquery"], "Feature": ["!! tsquery \u2192 tsquery"], "Description": ["Negates a tsquery, producing a query that matches documents that do not match the input query."], "Examples": ["!! 'cat'::tsquery \u2192 !'cat'"], "Category": ["Text Search Functions and Operators"], "index": 15, "vector_txt": "15:Feature: !! tsquery \u2192 tsquery\nDescription: Negates a tsquery, producing a query that matches documents that do not match the input query.\nExamples: !! 'cat'::tsquery \u2192 !'cat'\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["tsquery <-> tsquery"], "Feature": ["tsquery <-> tsquery \u2192 tsquery"], "Description": ["Constructs a phrase query, which matches if the two input queries match at successive lexemes."], "Examples": ["to_tsquery('fat') <-> to_tsquery('rat') \u2192 'fat' <-> 'rat'"], "Category": ["Text Search Functions and Operators"], "index": 16, "vector_txt": "16:Feature: tsquery <-> tsquery \u2192 tsquery\nDescription: Constructs a phrase query, which matches if the two input queries match at successive lexemes.\nExamples: to_tsquery('fat') <-> to_tsquery('rat') \u2192 'fat' <-> 'rat'\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["tsquery @> tsquery"], "Feature": ["tsquery @> tsquery \u2192 boolean"], "Description": ["Does first tsquery contain the second? (This considers only whether all the lexemes appearing in one query appear in the other, ignoring the combining operators.)"], "Examples": ["'cat'::tsquery @> 'cat & rat'::tsquery \u2192 f"], "Category": ["Text Search Functions and Operators"], "index": 17, "vector_txt": "17:Feature: tsquery @> tsquery \u2192 boolean\nDescription: Does first tsquery contain the second? (This considers only whether all the lexemes appearing in one query appear in the other, ignoring the combining operators.)\nExamples: 'cat'::tsquery @> 'cat & rat'::tsquery \u2192 f\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-textsearch.html"], "Title": ["tsquery <@ tsquery"], "Feature": ["tsquery <@ tsquery \u2192 boolean"], "Description": ["Is first tsquery contained in the second? (This considers only whether all the lexemes appearing in one query appear in the other, ignoring the combining operators.)"], "Examples": ["'cat'::tsquery <@ 'cat & rat'::tsquery \u2192 t", "'cat'::tsquery <@ '!cat & rat'::tsquery \u2192 t"], "Category": ["Text Search Functions and Operators"], "index": 18, "vector_txt": "18:Feature: tsquery <@ tsquery \u2192 boolean\nDescription: Is first tsquery contained in the second? (This considers only whether all the lexemes appearing in one query appear in the other, ignoring the combining operators.)\nExamples: 'cat'::tsquery <@ 'cat & rat'::tsquery \u2192 t'cat'::tsquery <@ '!cat & rat'::tsquery \u2192 t\nCategory: Text Search Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["json -> integer"], "Feature": ["json -> integer \u2192 json", "jsonb -> integer \u2192 jsonb"], "Description": ["Extracts n'th element of JSON array (array elements are indexed from zero, but negative integers count from the end)."], "Examples": ["'[{\"a\":\"foo\"},{\"b\":\"bar\"},{\"c\":\"baz\"}]'::json -> 2 \u2192 {\"c\":\"baz\"}", "'[{\"a\":\"foo\"},{\"b\":\"bar\"},{\"c\":\"baz\"}]'::json -> -3 \u2192 {\"a\":\"foo\"}"], "Category": ["JSON Functions and Operators"], "index": 19, "vector_txt": "19:Feature: json -> integer \u2192 jsonjsonb -> integer \u2192 jsonb\nDescription: Extracts n'th element of JSON array (array elements are indexed from zero, but negative integers count from the end).\nExamples: '[{\"a\":\"foo\"},{\"b\":\"bar\"},{\"c\":\"baz\"}]'::json -> 2 \u2192 {\"c\":\"baz\"}'[{\"a\":\"foo\"},{\"b\":\"bar\"},{\"c\":\"baz\"}]'::json -> -3 \u2192 {\"a\":\"foo\"}\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["json -> text"], "Feature": ["json -> text \u2192 json", "jsonb -> text \u2192 jsonb"], "Description": ["Extracts JSON object field with the given key."], "Examples": ["'{\"a\": {\"b\":\"foo\"}}'::json -> 'a' \u2192 {\"b\":\"foo\"}"], "Category": ["JSON Functions and Operators"], "index": 20, "vector_txt": "20:Feature: json -> text \u2192 jsonjsonb -> text \u2192 jsonb\nDescription: Extracts JSON object field with the given key.\nExamples: '{\"a\": {\"b\":\"foo\"}}'::json -> 'a' \u2192 {\"b\":\"foo\"}\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["json ->> integer"], "Feature": ["json ->> integer \u2192 text", "jsonb ->> integer \u2192 text"], "Description": ["Extracts n'th element of JSON array, as text."], "Examples": ["'[1,2,3]'::json ->> 2 \u2192 3"], "Category": ["JSON Functions and Operators"], "index": 21, "vector_txt": "21:Feature: json ->> integer \u2192 textjsonb ->> integer \u2192 text\nDescription: Extracts n'th element of JSON array, as text.\nExamples: '[1,2,3]'::json ->> 2 \u2192 3\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["numeric_type * numeric_type"], "Feature": ["numeric_type * numeric_type \u2192 numeric_type"], "Description": ["Multiplication"], "Examples": ["2 * 3 \u2192 6"], "Category": ["Mathematical Functions and Operators"], "index": 22, "vector_txt": "22:Feature: numeric_type * numeric_type \u2192 numeric_type\nDescription: Multiplication\nExamples: 2 * 3 \u2192 6\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["json ->> text"], "Feature": ["json ->> text \u2192 text", "jsonb ->> text \u2192 text"], "Description": ["Extracts JSON object field with the given key, as text."], "Examples": ["'{\"a\":1,\"b\":2}'::json ->> 'b' \u2192 2"], "Category": ["JSON Functions and Operators"], "index": 23, "vector_txt": "23:Feature: json ->> text \u2192 textjsonb ->> text \u2192 text\nDescription: Extracts JSON object field with the given key, as text.\nExamples: '{\"a\":1,\"b\":2}'::json ->> 'b' \u2192 2\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["json #> text[]"], "Feature": ["json #> text[] \u2192 json", "jsonb #> text[] \u2192 jsonb"], "Description": ["Extracts JSON sub-object at the specified path, where path elements can be either field keys or array indexes."], "Examples": ["'{\"a\": {\"b\": [\"foo\",\"bar\"]}}'::json #> '{a,b,1}' \u2192 \"bar\""], "Category": ["JSON Functions and Operators"], "index": 24, "vector_txt": "24:Feature: json #> text[] \u2192 jsonjsonb #> text[] \u2192 jsonb\nDescription: Extracts JSON sub-object at the specified path, where path elements can be either field keys or array indexes.\nExamples: '{\"a\": {\"b\": [\"foo\",\"bar\"]}}'::json #> '{a,b,1}' \u2192 \"bar\"\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["json #>> text[]"], "Feature": ["json #>> text[] \u2192 text", "jsonb #>> text[] \u2192 text"], "Description": ["Extracts JSON sub-object at the specified path as text."], "Examples": ["'{\"a\": {\"b\": [\"foo\",\"bar\"]}}'::json #>> '{a,b,1}' \u2192 bar"], "Category": ["JSON Functions and Operators"], "index": 25, "vector_txt": "25:Feature: json #>> text[] \u2192 textjsonb #>> text[] \u2192 text\nDescription: Extracts JSON sub-object at the specified path as text.\nExamples: '{\"a\": {\"b\": [\"foo\",\"bar\"]}}'::json #>> '{a,b,1}' \u2192 bar\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb @> jsonb"], "Feature": ["jsonb @> jsonb \u2192 boolean"], "Description": ["Does the first JSON value contain the second? (See Section\u00a08.14.3 for details about containment.)"], "Examples": ["'{\"a\":1, \"b\":2}'::jsonb @> '{\"b\":2}'::jsonb \u2192 t"], "Category": ["JSON Functions and Operators"], "index": 26, "vector_txt": "26:Feature: jsonb @> jsonb \u2192 boolean\nDescription: Does the first JSON value contain the second? (See Section\u00a08.14.3 for details about containment.)\nExamples: '{\"a\":1, \"b\":2}'::jsonb @> '{\"b\":2}'::jsonb \u2192 t\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb <@ jsonb"], "Feature": ["jsonb <@ jsonb \u2192 boolean"], "Description": ["Is the first JSON value contained in the second?"], "Examples": ["'{\"b\":2}'::jsonb <@ '{\"a\":1, \"b\":2}'::jsonb \u2192 t"], "Category": ["JSON Functions and Operators"], "index": 27, "vector_txt": "27:Feature: jsonb <@ jsonb \u2192 boolean\nDescription: Is the first JSON value contained in the second?\nExamples: '{\"b\":2}'::jsonb <@ '{\"a\":1, \"b\":2}'::jsonb \u2192 t\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb ? text"], "Feature": ["jsonb ? text \u2192 boolean"], "Description": ["Does the text string exist as a top-level key or array element within the JSON value?"], "Examples": ["'{\"a\":1, \"b\":2}'::jsonb ? 'b' \u2192 t", "'[\"a\", \"b\", \"c\"]'::jsonb ? 'b' \u2192 t"], "Category": ["JSON Functions and Operators"], "index": 28, "vector_txt": "28:Feature: jsonb ? text \u2192 boolean\nDescription: Does the text string exist as a top-level key or array element within the JSON value?\nExamples: '{\"a\":1, \"b\":2}'::jsonb ? 'b' \u2192 t'[\"a\", \"b\", \"c\"]'::jsonb ? 'b' \u2192 t\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb ?| text[]"], "Feature": ["jsonb ?| text[] \u2192 boolean"], "Description": ["Do any of the strings in the text array exist as top-level keys or array elements?"], "Examples": ["'{\"a\":1, \"b\":2, \"c\":3}'::jsonb ?| array['b', 'd'] \u2192 t"], "Category": ["JSON Functions and Operators"], "index": 29, "vector_txt": "29:Feature: jsonb ?| text[] \u2192 boolean\nDescription: Do any of the strings in the text array exist as top-level keys or array elements?\nExamples: '{\"a\":1, \"b\":2, \"c\":3}'::jsonb ?| array['b', 'd'] \u2192 t\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb ?& text[]"], "Feature": ["jsonb ?& text[] \u2192 boolean"], "Description": ["Do all of the strings in the text array exist as top-level keys or array elements?"], "Examples": ["'[\"a\", \"b\", \"c\"]'::jsonb ?& array['a', 'b'] \u2192 t"], "Category": ["JSON Functions and Operators"], "index": 30, "vector_txt": "30:Feature: jsonb ?& text[] \u2192 boolean\nDescription: Do all of the strings in the text array exist as top-level keys or array elements?\nExamples: '[\"a\", \"b\", \"c\"]'::jsonb ?& array['a', 'b'] \u2192 t\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb || jsonb"], "Feature": ["jsonb || jsonb \u2192 jsonb"], "Description": ["Concatenates two jsonb values. Concatenating two arrays generates an array containing all the elements of each input. Concatenating two objects generates an object containing the union of their keys, taking the second object's value when there are duplicate keys. All other cases are treated by converting a non-array input into a single-element array, and then proceeding as for two arrays. Does not operate recursively: only the top-level array or object structure is merged.", "To append an array to another array as a single entry, wrap it in an additional layer of array, for example:"], "Examples": ["'[\"a\", \"b\"]'::jsonb || '[\"a\", \"d\"]'::jsonb \u2192 [\"a\", \"b\", \"a\", \"d\"]", "'{\"a\": \"b\"}'::jsonb || '{\"c\": \"d\"}'::jsonb \u2192 {\"a\": \"b\", \"c\": \"d\"}", "'[1, 2]'::jsonb || '3'::jsonb \u2192 [1, 2, 3]", "'{\"a\": \"b\"}'::jsonb || '42'::jsonb \u2192 [{\"a\": \"b\"}, 42]", "'[1, 2]'::jsonb || jsonb_build_array('[3, 4]'::jsonb) \u2192 [1, 2, [3, 4]]"], "Category": ["JSON Functions and Operators"], "index": 31, "vector_txt": "31:Feature: jsonb || jsonb \u2192 jsonb\nDescription: Concatenates two jsonb values. Concatenating two arrays generates an array containing all the elements of each input. Concatenating two objects generates an object containing the union of their keys, taking the second object's value when there are duplicate keys. All other cases are treated by converting a non-array input into a single-element array, and then proceeding as for two arrays. Does not operate recursively: only the top-level array or object structure is merged.To append an array to another array as a single entry, wrap it in an additional layer of array, for example:\nExamples: '[\"a\", \"b\"]'::jsonb || '[\"a\", \"d\"]'::jsonb \u2192 [\"a\", \"b\", \"a\", \"d\"]'{\"a\": \"b\"}'::jsonb || '{\"c\": \"d\"}'::jsonb \u2192 {\"a\": \"b\", \"c\": \"d\"}'[1, 2]'::jsonb || '3'::jsonb \u2192 [1, 2, 3]'{\"a\": \"b\"}'::jsonb || '42'::jsonb \u2192 [{\"a\": \"b\"}, 42]'[1, 2]'::jsonb || jsonb_build_array('[3, 4]'::jsonb) \u2192 [1, 2, [3, 4]]\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb - text"], "Feature": ["jsonb - text \u2192 jsonb"], "Description": ["Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array."], "Examples": ["'{\"a\": \"b\", \"c\": \"d\"}'::jsonb - 'a' \u2192 {\"c\": \"d\"}", "'[\"a\", \"b\", \"c\", \"b\"]'::jsonb - 'b' \u2192 [\"a\", \"c\"]"], "Category": ["JSON Functions and Operators"], "index": 32, "vector_txt": "32:Feature: jsonb - text \u2192 jsonb\nDescription: Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.\nExamples: '{\"a\": \"b\", \"c\": \"d\"}'::jsonb - 'a' \u2192 {\"c\": \"d\"}'[\"a\", \"b\", \"c\", \"b\"]'::jsonb - 'b' \u2192 [\"a\", \"c\"]\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["numeric_type / numeric_type"], "Feature": ["numeric_type / numeric_type \u2192 numeric_type"], "Description": ["Division (for integral types, division truncates the result towards zero)"], "Examples": ["5.0 / 2 \u2192 2.5000000000000000", "5 / 2 \u2192 2", "(-5) / 2 \u2192 -2"], "Category": ["Mathematical Functions and Operators"], "index": 33, "vector_txt": "33:Feature: numeric_type / numeric_type \u2192 numeric_type\nDescription: Division (for integral types, division truncates the result towards zero)\nExamples: 5.0 / 2 \u2192 2.50000000000000005 / 2 \u2192 2(-5) / 2 \u2192 -2\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb - text[]"], "Feature": ["jsonb - text[] \u2192 jsonb"], "Description": ["Deletes all matching keys or array elements from the left operand."], "Examples": ["'{\"a\": \"b\", \"c\": \"d\"}'::jsonb - '{a,c}'::text[] \u2192 {}"], "Category": ["JSON Functions and Operators"], "index": 34, "vector_txt": "34:Feature: jsonb - text[] \u2192 jsonb\nDescription: Deletes all matching keys or array elements from the left operand.\nExamples: '{\"a\": \"b\", \"c\": \"d\"}'::jsonb - '{a,c}'::text[] \u2192 {}\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb - integer"], "Feature": ["jsonb - integer \u2192 jsonb"], "Description": ["Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array."], "Examples": ["'[\"a\", \"b\"]'::jsonb - 1 \u2192 [\"a\"]"], "Category": ["JSON Functions and Operators"], "index": 35, "vector_txt": "35:Feature: jsonb - integer \u2192 jsonb\nDescription: Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.\nExamples: '[\"a\", \"b\"]'::jsonb - 1 \u2192 [\"a\"]\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb #- text[]"], "Feature": ["jsonb #- text[] \u2192 jsonb"], "Description": ["Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes."], "Examples": ["'[\"a\", {\"b\":1}]'::jsonb #- '{1,b}' \u2192 [\"a\", {}]"], "Category": ["JSON Functions and Operators"], "index": 36, "vector_txt": "36:Feature: jsonb #- text[] \u2192 jsonb\nDescription: Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.\nExamples: '[\"a\", {\"b\":1}]'::jsonb #- '{1,b}' \u2192 [\"a\", {}]\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb @? jsonpath"], "Feature": ["jsonb @? jsonpath \u2192 boolean"], "Description": ["Does JSON path return any item for the specified JSON value? (This is useful only with SQL-standard JSON path expressions, not predicate check expressions, since those always return a value.)"], "Examples": ["'{\"a\":[1,2,3,4,5]}'::jsonb @? '$.a[*] ? (@ > 2)' \u2192 t"], "Category": ["JSON Functions and Operators"], "index": 37, "vector_txt": "37:Feature: jsonb @? jsonpath \u2192 boolean\nDescription: Does JSON path return any item for the specified JSON value? (This is useful only with SQL-standard JSON path expressions, not predicate check expressions, since those always return a value.)\nExamples: '{\"a\":[1,2,3,4,5]}'::jsonb @? '$.a[*] ? (@ > 2)' \u2192 t\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["jsonb @@ jsonpath"], "Feature": ["jsonb @@ jsonpath \u2192 boolean"], "Description": ["Returns the result of a JSON path predicate check for the specified JSON value. (This is useful only with predicate check expressions, not SQL-standard JSON path expressions, since it will return NULL if the path result is not a single boolean value.)"], "Examples": ["'{\"a\":[1,2,3,4,5]}'::jsonb @@ '$.a[*] > 2' \u2192 t"], "Category": ["JSON Functions and Operators"], "index": 38, "vector_txt": "38:Feature: jsonb @@ jsonpath \u2192 boolean\nDescription: Returns the result of a JSON path predicate check for the specified JSON value. (This is useful only with predicate check expressions, not SQL-standard JSON path expressions, since it will return NULL if the path result is not a single boolean value.)\nExamples: '{\"a\":[1,2,3,4,5]}'::jsonb @@ '$.a[*] > 2' \u2192 t\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["number + number"], "Feature": ["number + number \u2192 number"], "Description": ["Addition"], "Examples": ["jsonb_path_query('[2]', '$[0] + 3') \u2192 5"], "Category": ["JSON Functions and Operators"], "index": 39, "vector_txt": "39:Feature: number + number \u2192 number\nDescription: Addition\nExamples: jsonb_path_query('[2]', '$[0] + 3') \u2192 5\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["+ number"], "Feature": ["+ number \u2192 number"], "Description": ["Unary plus (no operation); unlike addition, this can iterate over multiple values"], "Examples": ["jsonb_path_query_array('{\"x\": [2,3,4]}', '+ $.x') \u2192 [2, 3, 4]"], "Category": ["JSON Functions and Operators"], "index": 40, "vector_txt": "40:Feature: + number \u2192 number\nDescription: Unary plus (no operation); unlike addition, this can iterate over multiple values\nExamples: jsonb_path_query_array('{\"x\": [2,3,4]}', '+ $.x') \u2192 [2, 3, 4]\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["number - number"], "Feature": ["number - number \u2192 number"], "Description": ["Subtraction"], "Examples": ["jsonb_path_query('[2]', '7 - $[0]') \u2192 5"], "Category": ["JSON Functions and Operators"], "index": 41, "vector_txt": "41:Feature: number - number \u2192 number\nDescription: Subtraction\nExamples: jsonb_path_query('[2]', '7 - $[0]') \u2192 5\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["- number"], "Feature": ["- number \u2192 number"], "Description": ["Negation; unlike subtraction, this can iterate over multiple values"], "Examples": ["jsonb_path_query_array('{\"x\": [2,3,4]}', '- $.x') \u2192 [-2, -3, -4]"], "Category": ["JSON Functions and Operators"], "index": 42, "vector_txt": "42:Feature: - number \u2192 number\nDescription: Negation; unlike subtraction, this can iterate over multiple values\nExamples: jsonb_path_query_array('{\"x\": [2,3,4]}', '- $.x') \u2192 [-2, -3, -4]\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["number * number"], "Feature": ["number * number \u2192 number"], "Description": ["Multiplication"], "Examples": ["jsonb_path_query('[4]', '2 * $[0]') \u2192 8"], "Category": ["JSON Functions and Operators"], "index": 43, "vector_txt": "43:Feature: number * number \u2192 number\nDescription: Multiplication\nExamples: jsonb_path_query('[4]', '2 * $[0]') \u2192 8\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["numeric_type % numeric_type"], "Feature": ["numeric_type % numeric_type \u2192 numeric_type"], "Description": ["Modulo (remainder); available for smallint, integer, bigint, and numeric"], "Examples": ["5 % 4 \u2192 1"], "Category": ["Mathematical Functions and Operators"], "index": 44, "vector_txt": "44:Feature: numeric_type % numeric_type \u2192 numeric_type\nDescription: Modulo (remainder); available for smallint, integer, bigint, and numeric\nExamples: 5 % 4 \u2192 1\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["number / number"], "Feature": ["number / number \u2192 number"], "Description": ["Division"], "Examples": ["jsonb_path_query('[8.5]', '$[0] / 2') \u2192 4.2500000000000000"], "Category": ["JSON Functions and Operators"], "index": 45, "vector_txt": "45:Feature: number / number \u2192 number\nDescription: Division\nExamples: jsonb_path_query('[8.5]', '$[0] / 2') \u2192 4.2500000000000000\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-json.html"], "Title": ["number % number"], "Feature": ["number % number \u2192 number"], "Description": ["Modulo (remainder)"], "Examples": ["jsonb_path_query('[32]', '$[0] % 10') \u2192 2"], "Category": ["JSON Functions and Operators"], "index": 46, "vector_txt": "46:Feature: number % number \u2192 number\nDescription: Modulo (remainder)\nExamples: jsonb_path_query('[32]', '$[0] % 10') \u2192 2\nCategory: JSON Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-array.html"], "Title": ["anyarray @> anyarray"], "Feature": ["anyarray @> anyarray \u2192 boolean"], "Description": ["Does the first array contain the second, that is, does each element appearing in the second array equal some element of the first array? (Duplicates are not treated specially, thus ARRAY[1] and ARRAY[1,1] are each considered to contain the other.)"], "Examples": ["ARRAY[1,4,3] @> ARRAY[3,1,3] \u2192 t"], "Category": ["Array Functions and Operators"], "index": 47, "vector_txt": "47:Feature: anyarray @> anyarray \u2192 boolean\nDescription: Does the first array contain the second, that is, does each element appearing in the second array equal some element of the first array? (Duplicates are not treated specially, thus ARRAY[1] and ARRAY[1,1] are each considered to contain the other.)\nExamples: ARRAY[1,4,3] @> ARRAY[3,1,3] \u2192 t\nCategory: Array Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-array.html"], "Title": ["anyarray <@ anyarray"], "Feature": ["anyarray <@ anyarray \u2192 boolean"], "Description": ["Is the first array contained by the second?"], "Examples": ["ARRAY[2,2,7] <@ ARRAY[1,7,4,2,6] \u2192 t"], "Category": ["Array Functions and Operators"], "index": 48, "vector_txt": "48:Feature: anyarray <@ anyarray \u2192 boolean\nDescription: Is the first array contained by the second?\nExamples: ARRAY[2,2,7] <@ ARRAY[1,7,4,2,6] \u2192 t\nCategory: Array Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-array.html"], "Title": ["anyarray && anyarray"], "Feature": ["anyarray && anyarray \u2192 boolean"], "Description": ["Do the arrays overlap, that is, have any elements in common?"], "Examples": ["ARRAY[1,4,3] && ARRAY[2,1] \u2192 t"], "Category": ["Array Functions and Operators"], "index": 49, "vector_txt": "49:Feature: anyarray && anyarray \u2192 boolean\nDescription: Do the arrays overlap, that is, have any elements in common?\nExamples: ARRAY[1,4,3] && ARRAY[2,1] \u2192 t\nCategory: Array Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-array.html"], "Title": ["anycompatiblearray || anycompatiblearray"], "Feature": ["anycompatiblearray || anycompatiblearray \u2192 anycompatiblearray"], "Description": ["Concatenates the two arrays. Concatenating a null or empty array is a no-op; otherwise the arrays must have the same number of dimensions (as illustrated by the first example) or differ in number of dimensions by one (as illustrated by the second). If the arrays are not of identical element types, they will be coerced to a common type (see Section\u00a010.5)."], "Examples": ["ARRAY[1,2,3] || ARRAY[4,5,6,7] \u2192 {1,2,3,4,5,6,7}", "ARRAY[1,2,3] || ARRAY[[4,5,6],[7,8,9.9]] \u2192 {{1,2,3},{4,5,6},{7,8,9.9}}"], "Category": ["Array Functions and Operators"], "index": 50, "vector_txt": "50:Feature: anycompatiblearray || anycompatiblearray \u2192 anycompatiblearray\nDescription: Concatenates the two arrays. Concatenating a null or empty array is a no-op; otherwise the arrays must have the same number of dimensions (as illustrated by the first example) or differ in number of dimensions by one (as illustrated by the second). If the arrays are not of identical element types, they will be coerced to a common type (see Section\u00a010.5).\nExamples: ARRAY[1,2,3] || ARRAY[4,5,6,7] \u2192 {1,2,3,4,5,6,7}ARRAY[1,2,3] || ARRAY[[4,5,6],[7,8,9.9]] \u2192 {{1,2,3},{4,5,6},{7,8,9.9}}\nCategory: Array Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-array.html"], "Title": ["anycompatible || anycompatiblearray"], "Feature": ["anycompatible || anycompatiblearray \u2192 anycompatiblearray"], "Description": ["Concatenates an element onto the front of an array (which must be empty or one-dimensional)."], "Examples": ["3 || ARRAY[4,5,6] \u2192 {3,4,5,6}"], "Category": ["Array Functions and Operators"], "index": 51, "vector_txt": "51:Feature: anycompatible || anycompatiblearray \u2192 anycompatiblearray\nDescription: Concatenates an element onto the front of an array (which must be empty or one-dimensional).\nExamples: 3 || ARRAY[4,5,6] \u2192 {3,4,5,6}\nCategory: Array Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-array.html"], "Title": ["anycompatiblearray || anycompatible"], "Feature": ["anycompatiblearray || anycompatible \u2192 anycompatiblearray"], "Description": ["Concatenates an element onto the end of an array (which must be empty or one-dimensional)."], "Examples": ["ARRAY[4,5,6] || 7 \u2192 {4,5,6,7}"], "Category": ["Array Functions and Operators"], "index": 52, "vector_txt": "52:Feature: anycompatiblearray || anycompatible \u2192 anycompatiblearray\nDescription: Concatenates an element onto the end of an array (which must be empty or one-dimensional).\nExamples: ARRAY[4,5,6] || 7 \u2192 {4,5,6,7}\nCategory: Array Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange @> anyrange"], "Feature": ["anyrange @> anyrange \u2192 boolean"], "Description": ["Does the first range contain the second?"], "Examples": ["int4range(2,4) @> int4range(2,3) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 53, "vector_txt": "53:Feature: anyrange @> anyrange \u2192 boolean\nDescription: Does the first range contain the second?\nExamples: int4range(2,4) @> int4range(2,3) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange @> anyelement"], "Feature": ["anyrange @> anyelement \u2192 boolean"], "Description": ["Does the range contain the element?"], "Examples": ["'[2011-01-01,2011-03-01)'::tsrange @> '2011-01-10'::timestamp \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 54, "vector_txt": "54:Feature: anyrange @> anyelement \u2192 boolean\nDescription: Does the range contain the element?\nExamples: '[2011-01-01,2011-03-01)'::tsrange @> '2011-01-10'::timestamp \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["numeric ^ numeric"], "Feature": ["numeric ^ numeric \u2192 numeric", "double precision ^ double precision \u2192 double precision"], "Description": ["Exponentiation", "Unlike typical mathematical practice, multiple uses of ^ will associate left to right by default:"], "Examples": ["2 ^ 3 \u2192 8", "2 ^ 3 ^ 3 \u2192 512", "2 ^ (3 ^ 3) \u2192 134217728"], "Category": ["Mathematical Functions and Operators"], "index": 55, "vector_txt": "55:Feature: numeric ^ numeric \u2192 numericdouble precision ^ double precision \u2192 double precision\nDescription: ExponentiationUnlike typical mathematical practice, multiple uses of ^ will associate left to right by default:\nExamples: 2 ^ 3 \u2192 82 ^ 3 ^ 3 \u2192 5122 ^ (3 ^ 3) \u2192 134217728\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange <@ anyrange"], "Feature": ["anyrange <@ anyrange \u2192 boolean"], "Description": ["Is the first range contained by the second?"], "Examples": ["int4range(2,4) <@ int4range(1,7) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 56, "vector_txt": "56:Feature: anyrange <@ anyrange \u2192 boolean\nDescription: Is the first range contained by the second?\nExamples: int4range(2,4) <@ int4range(1,7) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyelement <@ anyrange"], "Feature": ["anyelement <@ anyrange \u2192 boolean"], "Description": ["Is the element contained in the range?"], "Examples": ["42 <@ int4range(1,7) \u2192 f"], "Category": ["Range divide Multirange Functions and Operators"], "index": 57, "vector_txt": "57:Feature: anyelement <@ anyrange \u2192 boolean\nDescription: Is the element contained in the range?\nExamples: 42 <@ int4range(1,7) \u2192 f\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange && anyrange"], "Feature": ["anyrange && anyrange \u2192 boolean"], "Description": ["Do the ranges overlap, that is, have any elements in common?"], "Examples": ["int8range(3,7) && int8range(4,12) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 58, "vector_txt": "58:Feature: anyrange && anyrange \u2192 boolean\nDescription: Do the ranges overlap, that is, have any elements in common?\nExamples: int8range(3,7) && int8range(4,12) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange << anyrange"], "Feature": ["anyrange << anyrange \u2192 boolean"], "Description": ["Is the first range strictly left of the second?"], "Examples": ["int8range(1,10) << int8range(100,110) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 59, "vector_txt": "59:Feature: anyrange << anyrange \u2192 boolean\nDescription: Is the first range strictly left of the second?\nExamples: int8range(1,10) << int8range(100,110) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange >> anyrange"], "Feature": ["anyrange >> anyrange \u2192 boolean"], "Description": ["Is the first range strictly right of the second?"], "Examples": ["int8range(50,60) >> int8range(20,30) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 60, "vector_txt": "60:Feature: anyrange >> anyrange \u2192 boolean\nDescription: Is the first range strictly right of the second?\nExamples: int8range(50,60) >> int8range(20,30) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange &< anyrange"], "Feature": ["anyrange &< anyrange \u2192 boolean"], "Description": ["Does the first range not extend to the right of the second?"], "Examples": ["int8range(1,20) &< int8range(18,20) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 61, "vector_txt": "61:Feature: anyrange &< anyrange \u2192 boolean\nDescription: Does the first range not extend to the right of the second?\nExamples: int8range(1,20) &< int8range(18,20) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange &> anyrange"], "Feature": ["anyrange &> anyrange \u2192 boolean"], "Description": ["Does the first range not extend to the left of the second?"], "Examples": ["int8range(7,20) &> int8range(5,10) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 62, "vector_txt": "62:Feature: anyrange &> anyrange \u2192 boolean\nDescription: Does the first range not extend to the left of the second?\nExamples: int8range(7,20) &> int8range(5,10) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange -|- anyrange"], "Feature": ["anyrange -|- anyrange \u2192 boolean"], "Description": ["Are the ranges adjacent?"], "Examples": ["numrange(1.1,2.2) -|- numrange(2.2,3.3) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 63, "vector_txt": "63:Feature: anyrange -|- anyrange \u2192 boolean\nDescription: Are the ranges adjacent?\nExamples: numrange(1.1,2.2) -|- numrange(2.2,3.3) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange + anyrange"], "Feature": ["anyrange + anyrange \u2192 anyrange"], "Description": ["Computes the union of the ranges. The ranges must overlap or be adjacent, so that the union is a single range (but see range_merge())."], "Examples": ["numrange(5,15) + numrange(10,20) \u2192 [5,20)"], "Category": ["Range divide Multirange Functions and Operators"], "index": 64, "vector_txt": "64:Feature: anyrange + anyrange \u2192 anyrange\nDescription: Computes the union of the ranges. The ranges must overlap or be adjacent, so that the union is a single range (but see range_merge()).\nExamples: numrange(5,15) + numrange(10,20) \u2192 [5,20)\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange * anyrange"], "Feature": ["anyrange * anyrange \u2192 anyrange"], "Description": ["Computes the intersection of the ranges."], "Examples": ["int8range(5,15) * int8range(10,20) \u2192 [10,15)"], "Category": ["Range divide Multirange Functions and Operators"], "index": 65, "vector_txt": "65:Feature: anyrange * anyrange \u2192 anyrange\nDescription: Computes the intersection of the ranges.\nExamples: int8range(5,15) * int8range(10,20) \u2192 [10,15)\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["|/ double precision"], "Feature": ["|/ double precision \u2192 double precision"], "Description": ["Square root"], "Examples": ["|/ 25.0 \u2192 5"], "Category": ["Mathematical Functions and Operators"], "index": 66, "vector_txt": "66:Feature: |/ double precision \u2192 double precision\nDescription: Square root\nExamples: |/ 25.0 \u2192 5\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange - anyrange"], "Feature": ["anyrange - anyrange \u2192 anyrange"], "Description": ["Computes the difference of the ranges. The second range must not be contained in the first in such a way that the difference would not be a single range."], "Examples": ["int8range(5,15) - int8range(10,20) \u2192 [5,10)"], "Category": ["Range divide Multirange Functions and Operators"], "index": 67, "vector_txt": "67:Feature: anyrange - anyrange \u2192 anyrange\nDescription: Computes the difference of the ranges. The second range must not be contained in the first in such a way that the difference would not be a single range.\nExamples: int8range(5,15) - int8range(10,20) \u2192 [5,10)\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange @> anymultirange"], "Feature": ["anymultirange @> anymultirange \u2192 boolean"], "Description": ["Does the first multirange contain the second?"], "Examples": ["'{[2,4)}'::int4multirange @> '{[2,3)}'::int4multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 68, "vector_txt": "68:Feature: anymultirange @> anymultirange \u2192 boolean\nDescription: Does the first multirange contain the second?\nExamples: '{[2,4)}'::int4multirange @> '{[2,3)}'::int4multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange @> anyrange"], "Feature": ["anymultirange @> anyrange \u2192 boolean"], "Description": ["Does the multirange contain the range?"], "Examples": ["'{[2,4)}'::int4multirange @> int4range(2,3) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 69, "vector_txt": "69:Feature: anymultirange @> anyrange \u2192 boolean\nDescription: Does the multirange contain the range?\nExamples: '{[2,4)}'::int4multirange @> int4range(2,3) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange @> anyelement"], "Feature": ["anymultirange @> anyelement \u2192 boolean"], "Description": ["Does the multirange contain the element?"], "Examples": ["'{[2011-01-01,2011-03-01)}'::tsmultirange @> '2011-01-10'::timestamp \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 70, "vector_txt": "70:Feature: anymultirange @> anyelement \u2192 boolean\nDescription: Does the multirange contain the element?\nExamples: '{[2011-01-01,2011-03-01)}'::tsmultirange @> '2011-01-10'::timestamp \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange @> anymultirange"], "Feature": ["anyrange @> anymultirange \u2192 boolean"], "Description": ["Does the range contain the multirange?"], "Examples": ["'[2,4)'::int4range @> '{[2,3)}'::int4multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 71, "vector_txt": "71:Feature: anyrange @> anymultirange \u2192 boolean\nDescription: Does the range contain the multirange?\nExamples: '[2,4)'::int4range @> '{[2,3)}'::int4multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange <@ anymultirange"], "Feature": ["anymultirange <@ anymultirange \u2192 boolean"], "Description": ["Is the first multirange contained by the second?"], "Examples": ["'{[2,4)}'::int4multirange <@ '{[1,7)}'::int4multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 72, "vector_txt": "72:Feature: anymultirange <@ anymultirange \u2192 boolean\nDescription: Is the first multirange contained by the second?\nExamples: '{[2,4)}'::int4multirange <@ '{[1,7)}'::int4multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange <@ anyrange"], "Feature": ["anymultirange <@ anyrange \u2192 boolean"], "Description": ["Is the multirange contained by the range?"], "Examples": ["'{[2,4)}'::int4multirange <@ int4range(1,7) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 73, "vector_txt": "73:Feature: anymultirange <@ anyrange \u2192 boolean\nDescription: Is the multirange contained by the range?\nExamples: '{[2,4)}'::int4multirange <@ int4range(1,7) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange <@ anymultirange"], "Feature": ["anyrange <@ anymultirange \u2192 boolean"], "Description": ["Is the range contained by the multirange?"], "Examples": ["int4range(2,4) <@ '{[1,7)}'::int4multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 74, "vector_txt": "74:Feature: anyrange <@ anymultirange \u2192 boolean\nDescription: Is the range contained by the multirange?\nExamples: int4range(2,4) <@ '{[1,7)}'::int4multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyelement <@ anymultirange"], "Feature": ["anyelement <@ anymultirange \u2192 boolean"], "Description": ["Is the element contained by the multirange?"], "Examples": ["4 <@ '{[1,7)}'::int4multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 75, "vector_txt": "75:Feature: anyelement <@ anymultirange \u2192 boolean\nDescription: Is the element contained by the multirange?\nExamples: 4 <@ '{[1,7)}'::int4multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange && anymultirange"], "Feature": ["anymultirange && anymultirange \u2192 boolean"], "Description": ["Do the multiranges overlap, that is, have any elements in common?"], "Examples": ["'{[3,7)}'::int8multirange && '{[4,12)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 76, "vector_txt": "76:Feature: anymultirange && anymultirange \u2192 boolean\nDescription: Do the multiranges overlap, that is, have any elements in common?\nExamples: '{[3,7)}'::int8multirange && '{[4,12)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["||/ double precision"], "Feature": ["||/ double precision \u2192 double precision"], "Description": ["Cube root"], "Examples": ["||/ 64.0 \u2192 4"], "Category": ["Mathematical Functions and Operators"], "index": 77, "vector_txt": "77:Feature: ||/ double precision \u2192 double precision\nDescription: Cube root\nExamples: ||/ 64.0 \u2192 4\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange && anyrange"], "Feature": ["anymultirange && anyrange \u2192 boolean"], "Description": ["Does the multirange overlap the range?"], "Examples": ["'{[3,7)}'::int8multirange && int8range(4,12) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 78, "vector_txt": "78:Feature: anymultirange && anyrange \u2192 boolean\nDescription: Does the multirange overlap the range?\nExamples: '{[3,7)}'::int8multirange && int8range(4,12) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange && anymultirange"], "Feature": ["anyrange && anymultirange \u2192 boolean"], "Description": ["Does the range overlap the multirange?"], "Examples": ["int8range(3,7) && '{[4,12)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 79, "vector_txt": "79:Feature: anyrange && anymultirange \u2192 boolean\nDescription: Does the range overlap the multirange?\nExamples: int8range(3,7) && '{[4,12)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange << anymultirange"], "Feature": ["anymultirange << anymultirange \u2192 boolean"], "Description": ["Is the first multirange strictly left of the second?"], "Examples": ["'{[1,10)}'::int8multirange << '{[100,110)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 80, "vector_txt": "80:Feature: anymultirange << anymultirange \u2192 boolean\nDescription: Is the first multirange strictly left of the second?\nExamples: '{[1,10)}'::int8multirange << '{[100,110)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange << anyrange"], "Feature": ["anymultirange << anyrange \u2192 boolean"], "Description": ["Is the multirange strictly left of the range?"], "Examples": ["'{[1,10)}'::int8multirange << int8range(100,110) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 81, "vector_txt": "81:Feature: anymultirange << anyrange \u2192 boolean\nDescription: Is the multirange strictly left of the range?\nExamples: '{[1,10)}'::int8multirange << int8range(100,110) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange << anymultirange"], "Feature": ["anyrange << anymultirange \u2192 boolean"], "Description": ["Is the range strictly left of the multirange?"], "Examples": ["int8range(1,10) << '{[100,110)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 82, "vector_txt": "82:Feature: anyrange << anymultirange \u2192 boolean\nDescription: Is the range strictly left of the multirange?\nExamples: int8range(1,10) << '{[100,110)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange >> anymultirange"], "Feature": ["anymultirange >> anymultirange \u2192 boolean"], "Description": ["Is the first multirange strictly right of the second?"], "Examples": ["'{[50,60)}'::int8multirange >> '{[20,30)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 83, "vector_txt": "83:Feature: anymultirange >> anymultirange \u2192 boolean\nDescription: Is the first multirange strictly right of the second?\nExamples: '{[50,60)}'::int8multirange >> '{[20,30)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange >> anyrange"], "Feature": ["anymultirange >> anyrange \u2192 boolean"], "Description": ["Is the multirange strictly right of the range?"], "Examples": ["'{[50,60)}'::int8multirange >> int8range(20,30) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 84, "vector_txt": "84:Feature: anymultirange >> anyrange \u2192 boolean\nDescription: Is the multirange strictly right of the range?\nExamples: '{[50,60)}'::int8multirange >> int8range(20,30) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange >> anymultirange"], "Feature": ["anyrange >> anymultirange \u2192 boolean"], "Description": ["Is the range strictly right of the multirange?"], "Examples": ["int8range(50,60) >> '{[20,30)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 85, "vector_txt": "85:Feature: anyrange >> anymultirange \u2192 boolean\nDescription: Is the range strictly right of the multirange?\nExamples: int8range(50,60) >> '{[20,30)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange &< anymultirange"], "Feature": ["anymultirange &< anymultirange \u2192 boolean"], "Description": ["Does the first multirange not extend to the right of the second?"], "Examples": ["'{[1,20)}'::int8multirange &< '{[18,20)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 86, "vector_txt": "86:Feature: anymultirange &< anymultirange \u2192 boolean\nDescription: Does the first multirange not extend to the right of the second?\nExamples: '{[1,20)}'::int8multirange &< '{[18,20)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange &< anyrange"], "Feature": ["anymultirange &< anyrange \u2192 boolean"], "Description": ["Does the multirange not extend to the right of the range?"], "Examples": ["'{[1,20)}'::int8multirange &< int8range(18,20) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 87, "vector_txt": "87:Feature: anymultirange &< anyrange \u2192 boolean\nDescription: Does the multirange not extend to the right of the range?\nExamples: '{[1,20)}'::int8multirange &< int8range(18,20) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["@ numeric_type"], "Feature": ["@ numeric_type \u2192 numeric_type"], "Description": ["Absolute value"], "Examples": ["@ -5.0 \u2192 5.0"], "Category": ["Mathematical Functions and Operators"], "index": 88, "vector_txt": "88:Feature: @ numeric_type \u2192 numeric_type\nDescription: Absolute value\nExamples: @ -5.0 \u2192 5.0\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange &< anymultirange"], "Feature": ["anyrange &< anymultirange \u2192 boolean"], "Description": ["Does the range not extend to the right of the multirange?"], "Examples": ["int8range(1,20) &< '{[18,20)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 89, "vector_txt": "89:Feature: anyrange &< anymultirange \u2192 boolean\nDescription: Does the range not extend to the right of the multirange?\nExamples: int8range(1,20) &< '{[18,20)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange &> anymultirange"], "Feature": ["anymultirange &> anymultirange \u2192 boolean"], "Description": ["Does the first multirange not extend to the left of the second?"], "Examples": ["'{[7,20)}'::int8multirange &> '{[5,10)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 90, "vector_txt": "90:Feature: anymultirange &> anymultirange \u2192 boolean\nDescription: Does the first multirange not extend to the left of the second?\nExamples: '{[7,20)}'::int8multirange &> '{[5,10)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange &> anyrange"], "Feature": ["anymultirange &> anyrange \u2192 boolean"], "Description": ["Does the multirange not extend to the left of the range?"], "Examples": ["'{[7,20)}'::int8multirange &> int8range(5,10) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 91, "vector_txt": "91:Feature: anymultirange &> anyrange \u2192 boolean\nDescription: Does the multirange not extend to the left of the range?\nExamples: '{[7,20)}'::int8multirange &> int8range(5,10) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange &> anymultirange"], "Feature": ["anyrange &> anymultirange \u2192 boolean"], "Description": ["Does the range not extend to the left of the multirange?"], "Examples": ["int8range(7,20) &> '{[5,10)}'::int8multirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 92, "vector_txt": "92:Feature: anyrange &> anymultirange \u2192 boolean\nDescription: Does the range not extend to the left of the multirange?\nExamples: int8range(7,20) &> '{[5,10)}'::int8multirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange -|- anymultirange"], "Feature": ["anymultirange -|- anymultirange \u2192 boolean"], "Description": ["Are the multiranges adjacent?"], "Examples": ["'{[1.1,2.2)}'::nummultirange -|- '{[2.2,3.3)}'::nummultirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 93, "vector_txt": "93:Feature: anymultirange -|- anymultirange \u2192 boolean\nDescription: Are the multiranges adjacent?\nExamples: '{[1.1,2.2)}'::nummultirange -|- '{[2.2,3.3)}'::nummultirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange -|- anyrange"], "Feature": ["anymultirange -|- anyrange \u2192 boolean"], "Description": ["Is the multirange adjacent to the range?"], "Examples": ["'{[1.1,2.2)}'::nummultirange -|- numrange(2.2,3.3) \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 94, "vector_txt": "94:Feature: anymultirange -|- anyrange \u2192 boolean\nDescription: Is the multirange adjacent to the range?\nExamples: '{[1.1,2.2)}'::nummultirange -|- numrange(2.2,3.3) \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anyrange -|- anymultirange"], "Feature": ["anyrange -|- anymultirange \u2192 boolean"], "Description": ["Is the range adjacent to the multirange?"], "Examples": ["numrange(1.1,2.2) -|- '{[2.2,3.3)}'::nummultirange \u2192 t"], "Category": ["Range divide Multirange Functions and Operators"], "index": 95, "vector_txt": "95:Feature: anyrange -|- anymultirange \u2192 boolean\nDescription: Is the range adjacent to the multirange?\nExamples: numrange(1.1,2.2) -|- '{[2.2,3.3)}'::nummultirange \u2192 t\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange + anymultirange"], "Feature": ["anymultirange + anymultirange \u2192 anymultirange"], "Description": ["Computes the union of the multiranges. The multiranges need not overlap or be adjacent."], "Examples": ["'{[5,10)}'::nummultirange + '{[15,20)}'::nummultirange \u2192 {[5,10), [15,20)}"], "Category": ["Range divide Multirange Functions and Operators"], "index": 96, "vector_txt": "96:Feature: anymultirange + anymultirange \u2192 anymultirange\nDescription: Computes the union of the multiranges. The multiranges need not overlap or be adjacent.\nExamples: '{[5,10)}'::nummultirange + '{[15,20)}'::nummultirange \u2192 {[5,10), [15,20)}\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange * anymultirange"], "Feature": ["anymultirange * anymultirange \u2192 anymultirange"], "Description": ["Computes the intersection of the multiranges."], "Examples": ["'{[5,15)}'::int8multirange * '{[10,20)}'::int8multirange \u2192 {[10,15)}"], "Category": ["Range divide Multirange Functions and Operators"], "index": 97, "vector_txt": "97:Feature: anymultirange * anymultirange \u2192 anymultirange\nDescription: Computes the intersection of the multiranges.\nExamples: '{[5,15)}'::int8multirange * '{[10,20)}'::int8multirange \u2192 {[10,15)}\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-range.html"], "Title": ["anymultirange - anymultirange"], "Feature": ["anymultirange - anymultirange \u2192 anymultirange"], "Description": ["Computes the difference of the multiranges."], "Examples": ["'{[5,20)}'::int8multirange - '{[10,15)}'::int8multirange \u2192 {[5,10), [15,20)}"], "Category": ["Range divide Multirange Functions and Operators"], "index": 98, "vector_txt": "98:Feature: anymultirange - anymultirange \u2192 anymultirange\nDescription: Computes the difference of the multiranges.\nExamples: '{[5,20)}'::int8multirange - '{[10,15)}'::int8multirange \u2192 {[5,10), [15,20)}\nCategory: Range divide Multirange Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["integral_type & integral_type"], "Feature": ["integral_type & integral_type \u2192 integral_type"], "Description": ["Bitwise AND"], "Examples": ["91 & 15 \u2192 11"], "Category": ["Mathematical Functions and Operators"], "index": 99, "vector_txt": "99:Feature: integral_type & integral_type \u2192 integral_type\nDescription: Bitwise AND\nExamples: 91 & 15 \u2192 11\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-info.html"], "Title": ["aclitem = aclitem"], "Feature": ["aclitem = aclitem \u2192 boolean"], "Description": ["Are aclitems equal? (Notice that type aclitem lacks the usual set of comparison operators; it has only equality. In turn, aclitem arrays can only be compared for equality.)"], "Examples": ["'calvin=r*w/hobbes'::aclitem = 'calvin=r*w*/hobbes'::aclitem \u2192 f"], "Category": ["System Information Functions and Operators"], "index": 100, "vector_txt": "100:Feature: aclitem = aclitem \u2192 boolean\nDescription: Are aclitems equal? (Notice that type aclitem lacks the usual set of comparison operators; it has only equality. In turn, aclitem arrays can only be compared for equality.)\nExamples: 'calvin=r*w/hobbes'::aclitem = 'calvin=r*w*/hobbes'::aclitem \u2192 f\nCategory: System Information Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-info.html"], "Title": ["aclitem[] @> aclitem"], "Feature": ["aclitem[] @> aclitem \u2192 boolean"], "Description": ["Does array contain the specified privileges? (This is true if there is an array entry that matches the aclitem's grantee and grantor, and has at least the specified set of privileges.)"], "Examples": ["'{calvin=r*w/hobbes,hobbes=r*w*/postgres}'::aclitem[] @> 'calvin=r*/hobbes'::aclitem \u2192 t"], "Category": ["System Information Functions and Operators"], "index": 101, "vector_txt": "101:Feature: aclitem[] @> aclitem \u2192 boolean\nDescription: Does array contain the specified privileges? (This is true if there is an array entry that matches the aclitem's grantee and grantor, and has at least the specified set of privileges.)\nExamples: '{calvin=r*w/hobbes,hobbes=r*w*/postgres}'::aclitem[] @> 'calvin=r*/hobbes'::aclitem \u2192 t\nCategory: System Information Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-info.html"], "Title": ["aclitem[] ~ aclitem"], "Feature": ["aclitem[] ~ aclitem \u2192 boolean"], "Description": ["This is a deprecated alias for @>."], "Examples": ["'{calvin=r*w/hobbes,hobbes=r*w*/postgres}'::aclitem[] ~ 'calvin=r*/hobbes'::aclitem \u2192 t"], "Category": ["System Information Functions and Operators"], "index": 102, "vector_txt": "102:Feature: aclitem[] ~ aclitem \u2192 boolean\nDescription: This is a deprecated alias for @>.\nExamples: '{calvin=r*w/hobbes,hobbes=r*w*/postgres}'::aclitem[] ~ 'calvin=r*/hobbes'::aclitem \u2192 t\nCategory: System Information Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["integral_type | integral_type"], "Feature": ["integral_type | integral_type \u2192 integral_type"], "Description": ["Bitwise OR"], "Examples": ["32 | 3 \u2192 35"], "Category": ["Mathematical Functions and Operators"], "index": 103, "vector_txt": "103:Feature: integral_type | integral_type \u2192 integral_type\nDescription: Bitwise OR\nExamples: 32 | 3 \u2192 35\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-comparison.html"], "Title": ["datatype > datatype"], "Feature": ["datatype > datatype \u2192 boolean"], "Description": ["Greater than"], "Examples": [], "Category": ["Comparison Functions and Operators"], "index": 104, "vector_txt": "104:Feature: datatype > datatype \u2192 boolean\nDescription: Greater than\nExamples: \nCategory: Comparison Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["integral_type # integral_type"], "Feature": ["integral_type # integral_type \u2192 integral_type"], "Description": ["Bitwise exclusive OR"], "Examples": ["17 # 5 \u2192 20"], "Category": ["Mathematical Functions and Operators"], "index": 105, "vector_txt": "105:Feature: integral_type # integral_type \u2192 integral_type\nDescription: Bitwise exclusive OR\nExamples: 17 # 5 \u2192 20\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["~ integral_type"], "Feature": ["~ integral_type \u2192 integral_type"], "Description": ["Bitwise NOT"], "Examples": ["~1 \u2192 -2"], "Category": ["Mathematical Functions and Operators"], "index": 106, "vector_txt": "106:Feature: ~ integral_type \u2192 integral_type\nDescription: Bitwise NOT\nExamples: ~1 \u2192 -2\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["integral_type << integer"], "Feature": ["integral_type << integer \u2192 integral_type"], "Description": ["Bitwise shift left"], "Examples": ["1 << 4 \u2192 16"], "Category": ["Mathematical Functions and Operators"], "index": 107, "vector_txt": "107:Feature: integral_type << integer \u2192 integral_type\nDescription: Bitwise shift left\nExamples: 1 << 4 \u2192 16\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["integral_type >> integer"], "Feature": ["integral_type >> integer \u2192 integral_type"], "Description": ["Bitwise shift right"], "Examples": ["8 >> 2 \u2192 2"], "Category": ["Mathematical Functions and Operators"], "index": 108, "vector_txt": "108:Feature: integral_type >> integer \u2192 integral_type\nDescription: Bitwise shift right\nExamples: 8 >> 2 \u2192 2\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text || text"], "Feature": ["text || text \u2192 text"], "Description": ["Concatenates the two strings."], "Examples": ["'Post' || 'greSQL' \u2192 PostgreSQL"], "Category": ["String Functions and Operators"], "index": 109, "vector_txt": "109:Feature: text || text \u2192 text\nDescription: Concatenates the two strings.\nExamples: 'Post' || 'greSQL' \u2192 PostgreSQL\nCategory: String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text || anynonarray"], "Feature": ["text || anynonarray \u2192 text", "anynonarray || text \u2192 text"], "Description": ["Converts the non-string input to text, then concatenates the two strings. (The non-string input cannot be of an array type, because that would create ambiguity with the array || operators. If you want to concatenate an array's text equivalent, cast it to text explicitly.)"], "Examples": ["'Value: ' || 42 \u2192 Value: 42"], "Category": ["String Functions and Operators"], "index": 110, "vector_txt": "110:Feature: text || anynonarray \u2192 textanynonarray || text \u2192 text\nDescription: Converts the non-string input to text, then concatenates the two strings. (The non-string input cannot be of an array type, because that would create ambiguity with the array || operators. If you want to concatenate an array's text equivalent, cast it to text explicitly.)\nExamples: 'Value: ' || 42 \u2192 Value: 42\nCategory: String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text IS [NOT] [form] NORMALIZED"], "Feature": ["text IS [NOT] [form] NORMALIZED \u2192 boolean"], "Description": ["Checks whether the string is in the specified Unicode normalization form. The optional form key word specifies the form: NFC (the default), NFD, NFKC, or NFKD. This expression can only be used when the server encoding is UTF8. Note that checking for normalization using this expression is often faster than normalizing possibly already normalized strings."], "Examples": ["U&'\\0061\\0308bc' IS NFD NORMALIZED \u2192 t"], "Category": ["String Functions and Operators"], "index": 111, "vector_txt": "111:Feature: text IS [NOT] [form] NORMALIZED \u2192 boolean\nDescription: Checks whether the string is in the specified Unicode normalization form. The optional form key word specifies the form: NFC (the default), NFD, NFKC, or NFKD. This expression can only be used when the server encoding is UTF8. Note that checking for normalization using this expression is often faster than normalizing possibly already normalized strings.\nExamples: U&'\\0061\\0308bc' IS NFD NORMALIZED \u2192 t\nCategory: String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-string.html"], "Title": ["text ^@ text"], "Feature": ["text ^@ text \u2192 boolean"], "Description": ["Returns true if the first string starts with the second string (equivalent to the starts_with() function)."], "Examples": ["'alphabet' ^@ 'alph' \u2192 t"], "Category": ["String Functions and Operators"], "index": 112, "vector_txt": "112:Feature: text ^@ text \u2192 boolean\nDescription: Returns true if the first string starts with the second string (equivalent to the starts_with() function).\nExamples: 'alphabet' ^@ 'alph' \u2192 t\nCategory: String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-binarystring.html"], "Title": ["bytea || bytea"], "Feature": ["bytea || bytea \u2192 bytea"], "Description": ["Concatenates the two binary strings."], "Examples": ["'\\x123456'::bytea || '\\x789a00bcde'::bytea \u2192 \\x123456789a00bcde"], "Category": ["Binary String Functions and Operators"], "index": 113, "vector_txt": "113:Feature: bytea || bytea \u2192 bytea\nDescription: Concatenates the two binary strings.\nExamples: '\\x123456'::bytea || '\\x789a00bcde'::bytea \u2192 \\x123456789a00bcde\nCategory: Binary String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-bitstring.html"], "Title": ["bit || bit"], "Feature": ["bit || bit \u2192 bit"], "Description": ["Concatenation"], "Examples": ["B'10001' || B'011' \u2192 10001011"], "Category": ["Bit String Functions and Operators"], "index": 114, "vector_txt": "114:Feature: bit || bit \u2192 bit\nDescription: Concatenation\nExamples: B'10001' || B'011' \u2192 10001011\nCategory: Bit String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-comparison.html"], "Title": ["datatype <= datatype"], "Feature": ["datatype <= datatype \u2192 boolean"], "Description": ["Less than or equal to"], "Examples": [], "Category": ["Comparison Functions and Operators"], "index": 115, "vector_txt": "115:Feature: datatype <= datatype \u2192 boolean\nDescription: Less than or equal to\nExamples: \nCategory: Comparison Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-bitstring.html"], "Title": ["bit & bit"], "Feature": ["bit & bit \u2192 bit"], "Description": ["Bitwise AND (inputs must be of equal length)"], "Examples": ["B'10001' & B'01101' \u2192 00001"], "Category": ["Bit String Functions and Operators"], "index": 116, "vector_txt": "116:Feature: bit & bit \u2192 bit\nDescription: Bitwise AND (inputs must be of equal length)\nExamples: B'10001' & B'01101' \u2192 00001\nCategory: Bit String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-bitstring.html"], "Title": ["bit | bit"], "Feature": ["bit | bit \u2192 bit"], "Description": ["Bitwise OR (inputs must be of equal length)"], "Examples": ["B'10001' | B'01101' \u2192 11101"], "Category": ["Bit String Functions and Operators"], "index": 117, "vector_txt": "117:Feature: bit | bit \u2192 bit\nDescription: Bitwise OR (inputs must be of equal length)\nExamples: B'10001' | B'01101' \u2192 11101\nCategory: Bit String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-bitstring.html"], "Title": ["bit # bit"], "Feature": ["bit # bit \u2192 bit"], "Description": ["Bitwise exclusive OR (inputs must be of equal length)"], "Examples": ["B'10001' # B'01101' \u2192 11100"], "Category": ["Bit String Functions and Operators"], "index": 118, "vector_txt": "118:Feature: bit # bit \u2192 bit\nDescription: Bitwise exclusive OR (inputs must be of equal length)\nExamples: B'10001' # B'01101' \u2192 11100\nCategory: Bit String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-bitstring.html"], "Title": ["~ bit"], "Feature": ["~ bit \u2192 bit"], "Description": ["Bitwise NOT"], "Examples": ["~ B'10001' \u2192 01110"], "Category": ["Bit String Functions and Operators"], "index": 119, "vector_txt": "119:Feature: ~ bit \u2192 bit\nDescription: Bitwise NOT\nExamples: ~ B'10001' \u2192 01110\nCategory: Bit String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-bitstring.html"], "Title": ["bit << integer"], "Feature": ["bit << integer \u2192 bit"], "Description": ["Bitwise shift left (string length is preserved)"], "Examples": ["B'10001' << 3 \u2192 01000"], "Category": ["Bit String Functions and Operators"], "index": 120, "vector_txt": "120:Feature: bit << integer \u2192 bit\nDescription: Bitwise shift left (string length is preserved)\nExamples: B'10001' << 3 \u2192 01000\nCategory: Bit String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-bitstring.html"], "Title": ["bit >> integer"], "Feature": ["bit >> integer \u2192 bit"], "Description": ["Bitwise shift right (string length is preserved)"], "Examples": ["B'10001' >> 2 \u2192 00100"], "Category": ["Bit String Functions and Operators"], "index": 121, "vector_txt": "121:Feature: bit >> integer \u2192 bit\nDescription: Bitwise shift right (string length is preserved)\nExamples: B'10001' >> 2 \u2192 00100\nCategory: Bit String Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-matching.html"], "Title": ["text ~ text"], "Feature": ["text ~ text \u2192 boolean"], "Description": ["String matches regular expression, case sensitively"], "Examples": ["'thomas' ~ 't.*ma' \u2192 t"], "Category": ["Pattern Matching"], "index": 122, "vector_txt": "122:Feature: text ~ text \u2192 boolean\nDescription: String matches regular expression, case sensitively\nExamples: 'thomas' ~ 't.*ma' \u2192 t\nCategory: Pattern Matching\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-matching.html"], "Title": ["text ~* text"], "Feature": ["text ~* text \u2192 boolean"], "Description": ["String matches regular expression, case-insensitively"], "Examples": ["'thomas' ~* 'T.*ma' \u2192 t"], "Category": ["Pattern Matching"], "index": 123, "vector_txt": "123:Feature: text ~* text \u2192 boolean\nDescription: String matches regular expression, case-insensitively\nExamples: 'thomas' ~* 'T.*ma' \u2192 t\nCategory: Pattern Matching\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-matching.html"], "Title": ["text !~ text"], "Feature": ["text !~ text \u2192 boolean"], "Description": ["String does not match regular expression, case sensitively"], "Examples": ["'thomas' !~ 't.*max' \u2192 t"], "Category": ["Pattern Matching"], "index": 124, "vector_txt": "124:Feature: text !~ text \u2192 boolean\nDescription: String does not match regular expression, case sensitively\nExamples: 'thomas' !~ 't.*max' \u2192 t\nCategory: Pattern Matching\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-matching.html"], "Title": ["text !~* text"], "Feature": ["text !~* text \u2192 boolean"], "Description": ["String does not match regular expression, case-insensitively"], "Examples": ["'thomas' !~* 'T.*ma' \u2192 f"], "Category": ["Pattern Matching"], "index": 125, "vector_txt": "125:Feature: text !~* text \u2192 boolean\nDescription: String does not match regular expression, case-insensitively\nExamples: 'thomas' !~* 'T.*ma' \u2192 f\nCategory: Pattern Matching\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-comparison.html"], "Title": ["datatype >= datatype"], "Feature": ["datatype >= datatype \u2192 boolean"], "Description": ["Greater than or equal to"], "Examples": [], "Category": ["Comparison Functions and Operators"], "index": 126, "vector_txt": "126:Feature: datatype >= datatype \u2192 boolean\nDescription: Greater than or equal to\nExamples: \nCategory: Comparison Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["date + integer"], "Feature": ["date + integer \u2192 date"], "Description": ["Add a number of days to a date"], "Examples": ["date '2001-09-28' + 7 \u2192 2001-10-05"], "Category": ["Date divide Time Functions and Operators"], "index": 127, "vector_txt": "127:Feature: date + integer \u2192 date\nDescription: Add a number of days to a date\nExamples: date '2001-09-28' + 7 \u2192 2001-10-05\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["date + interval"], "Feature": ["date + interval \u2192 timestamp"], "Description": ["Add an interval to a date"], "Examples": ["date '2001-09-28' + interval '1 hour' \u2192 2001-09-28 01:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 128, "vector_txt": "128:Feature: date + interval \u2192 timestamp\nDescription: Add an interval to a date\nExamples: date '2001-09-28' + interval '1 hour' \u2192 2001-09-28 01:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["date + time"], "Feature": ["date + time \u2192 timestamp"], "Description": ["Add a time-of-day to a date"], "Examples": ["date '2001-09-28' + time '03:00' \u2192 2001-09-28 03:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 129, "vector_txt": "129:Feature: date + time \u2192 timestamp\nDescription: Add a time-of-day to a date\nExamples: date '2001-09-28' + time '03:00' \u2192 2001-09-28 03:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["interval + interval"], "Feature": ["interval + interval \u2192 interval"], "Description": ["Add intervals"], "Examples": ["interval '1 day' + interval '1 hour' \u2192 1 day 01:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 130, "vector_txt": "130:Feature: interval + interval \u2192 interval\nDescription: Add intervals\nExamples: interval '1 day' + interval '1 hour' \u2192 1 day 01:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["timestamp + interval"], "Feature": ["timestamp + interval \u2192 timestamp"], "Description": ["Add an interval to a timestamp"], "Examples": ["timestamp '2001-09-28 01:00' + interval '23 hours' \u2192 2001-09-29 00:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 131, "vector_txt": "131:Feature: timestamp + interval \u2192 timestamp\nDescription: Add an interval to a timestamp\nExamples: timestamp '2001-09-28 01:00' + interval '23 hours' \u2192 2001-09-29 00:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["time + interval"], "Feature": ["time + interval \u2192 time"], "Description": ["Add an interval to a time"], "Examples": ["time '01:00' + interval '3 hours' \u2192 04:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 132, "vector_txt": "132:Feature: time + interval \u2192 time\nDescription: Add an interval to a time\nExamples: time '01:00' + interval '3 hours' \u2192 04:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["- interval"], "Feature": ["- interval \u2192 interval"], "Description": ["Negate an interval"], "Examples": ["- interval '23 hours' \u2192 -23:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 133, "vector_txt": "133:Feature: - interval \u2192 interval\nDescription: Negate an interval\nExamples: - interval '23 hours' \u2192 -23:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["date - date"], "Feature": ["date - date \u2192 integer"], "Description": ["Subtract dates, producing the number of days elapsed"], "Examples": ["date '2001-10-01' - date '2001-09-28' \u2192 3"], "Category": ["Date divide Time Functions and Operators"], "index": 134, "vector_txt": "134:Feature: date - date \u2192 integer\nDescription: Subtract dates, producing the number of days elapsed\nExamples: date '2001-10-01' - date '2001-09-28' \u2192 3\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["date - integer"], "Feature": ["date - integer \u2192 date"], "Description": ["Subtract a number of days from a date"], "Examples": ["date '2001-10-01' - 7 \u2192 2001-09-24"], "Category": ["Date divide Time Functions and Operators"], "index": 135, "vector_txt": "135:Feature: date - integer \u2192 date\nDescription: Subtract a number of days from a date\nExamples: date '2001-10-01' - 7 \u2192 2001-09-24\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["date - interval"], "Feature": ["date - interval \u2192 timestamp"], "Description": ["Subtract an interval from a date"], "Examples": ["date '2001-09-28' - interval '1 hour' \u2192 2001-09-27 23:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 136, "vector_txt": "136:Feature: date - interval \u2192 timestamp\nDescription: Subtract an interval from a date\nExamples: date '2001-09-28' - interval '1 hour' \u2192 2001-09-27 23:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-comparison.html"], "Title": ["datatype = datatype"], "Feature": ["datatype = datatype \u2192 boolean"], "Description": ["Equal"], "Examples": [], "Category": ["Comparison Functions and Operators"], "index": 137, "vector_txt": "137:Feature: datatype = datatype \u2192 boolean\nDescription: Equal\nExamples: \nCategory: Comparison Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["time - time"], "Feature": ["time - time \u2192 interval"], "Description": ["Subtract times"], "Examples": ["time '05:00' - time '03:00' \u2192 02:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 138, "vector_txt": "138:Feature: time - time \u2192 interval\nDescription: Subtract times\nExamples: time '05:00' - time '03:00' \u2192 02:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["time - interval"], "Feature": ["time - interval \u2192 time"], "Description": ["Subtract an interval from a time"], "Examples": ["time '05:00' - interval '2 hours' \u2192 03:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 139, "vector_txt": "139:Feature: time - interval \u2192 time\nDescription: Subtract an interval from a time\nExamples: time '05:00' - interval '2 hours' \u2192 03:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["timestamp - interval"], "Feature": ["timestamp - interval \u2192 timestamp"], "Description": ["Subtract an interval from a timestamp"], "Examples": ["timestamp '2001-09-28 23:00' - interval '23 hours' \u2192 2001-09-28 00:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 140, "vector_txt": "140:Feature: timestamp - interval \u2192 timestamp\nDescription: Subtract an interval from a timestamp\nExamples: timestamp '2001-09-28 23:00' - interval '23 hours' \u2192 2001-09-28 00:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["interval - interval"], "Feature": ["interval - interval \u2192 interval"], "Description": ["Subtract intervals"], "Examples": ["interval '1 day' - interval '1 hour' \u2192 1 day -01:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 141, "vector_txt": "141:Feature: interval - interval \u2192 interval\nDescription: Subtract intervals\nExamples: interval '1 day' - interval '1 hour' \u2192 1 day -01:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["timestamp - timestamp"], "Feature": ["timestamp - timestamp \u2192 interval"], "Description": ["Subtract timestamps (converting 24-hour intervals into days, similarly to justify_hours())"], "Examples": ["timestamp '2001-09-29 03:00' - timestamp '2001-07-27 12:00' \u2192 63 days 15:00:00"], "Category": ["Date divide Time Functions and Operators"], "index": 142, "vector_txt": "142:Feature: timestamp - timestamp \u2192 interval\nDescription: Subtract timestamps (converting 24-hour intervals into days, similarly to justify_hours())\nExamples: timestamp '2001-09-29 03:00' - timestamp '2001-07-27 12:00' \u2192 63 days 15:00:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["interval * double precision"], "Feature": ["interval * double precision \u2192 interval"], "Description": ["Multiply an interval by a scalar"], "Examples": ["interval '1 second' * 900 \u2192 00:15:00", "interval '1 day' * 21 \u2192 21 days", "interval '1 hour' * 3.5 \u2192 03:30:00"], "Category": ["Date divide Time Functions and Operators"], "index": 143, "vector_txt": "143:Feature: interval * double precision \u2192 interval\nDescription: Multiply an interval by a scalar\nExamples: interval '1 second' * 900 \u2192 00:15:00interval '1 day' * 21 \u2192 21 daysinterval '1 hour' * 3.5 \u2192 03:30:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["interval / double precision"], "Feature": ["interval / double precision \u2192 interval"], "Description": ["Divide an interval by a scalar"], "Examples": ["interval '1 hour' / 1.5 \u2192 00:40:00"], "Category": ["Date divide Time Functions and Operators"], "index": 144, "vector_txt": "144:Feature: interval / double precision \u2192 interval\nDescription: Divide an interval by a scalar\nExamples: interval '1 hour' / 1.5 \u2192 00:40:00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["timestamp without time zone AT TIME ZONE zone"], "Feature": ["timestamp without time zone AT TIME ZONE zone \u2192 timestamp with time zone"], "Description": ["Converts given time stamp without time zone to time stamp with time zone, assuming the given value is in the named time zone."], "Examples": ["timestamp '2001-02-16 20:38:40' at time zone 'America/Denver' \u2192 2001-02-17 03:38:40+00"], "Category": ["Date divide Time Functions and Operators"], "index": 145, "vector_txt": "145:Feature: timestamp without time zone AT TIME ZONE zone \u2192 timestamp with time zone\nDescription: Converts given time stamp without time zone to time stamp with time zone, assuming the given value is in the named time zone.\nExamples: timestamp '2001-02-16 20:38:40' at time zone 'America/Denver' \u2192 2001-02-17 03:38:40+00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["timestamp without time zone AT LOCAL"], "Feature": ["timestamp without time zone AT LOCAL \u2192 timestamp with time zone"], "Description": ["Converts given time stamp without time zone to time stamp with the session's TimeZone value as time zone."], "Examples": ["timestamp '2001-02-16 20:38:40' at local \u2192 2001-02-17 03:38:40+00"], "Category": ["Date divide Time Functions and Operators"], "index": 146, "vector_txt": "146:Feature: timestamp without time zone AT LOCAL \u2192 timestamp with time zone\nDescription: Converts given time stamp without time zone to time stamp with the session's TimeZone value as time zone.\nExamples: timestamp '2001-02-16 20:38:40' at local \u2192 2001-02-17 03:38:40+00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["timestamp with time zone AT TIME ZONE zone"], "Feature": ["timestamp with time zone AT TIME ZONE zone \u2192 timestamp without time zone"], "Description": ["Converts given time stamp with time zone to time stamp without time zone, as the time would appear in that zone."], "Examples": ["timestamp with time zone '2001-02-16 20:38:40-05' at time zone 'America/Denver' \u2192 2001-02-16 18:38:40"], "Category": ["Date divide Time Functions and Operators"], "index": 147, "vector_txt": "147:Feature: timestamp with time zone AT TIME ZONE zone \u2192 timestamp without time zone\nDescription: Converts given time stamp with time zone to time stamp without time zone, as the time would appear in that zone.\nExamples: timestamp with time zone '2001-02-16 20:38:40-05' at time zone 'America/Denver' \u2192 2001-02-16 18:38:40\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-comparison.html"], "Title": ["datatype <> datatype"], "Feature": ["datatype <> datatype \u2192 boolean"], "Description": ["Not equal"], "Examples": [], "Category": ["Comparison Functions and Operators"], "index": 148, "vector_txt": "148:Feature: datatype <> datatype \u2192 boolean\nDescription: Not equal\nExamples: \nCategory: Comparison Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["timestamp with time zone AT LOCAL"], "Feature": ["timestamp with time zone AT LOCAL \u2192 timestamp without time zone"], "Description": ["Converts given time stamp with time zone to time stamp without time zone, as the time would appear with the session's TimeZone value as time zone."], "Examples": ["timestamp with time zone '2001-02-16 20:38:40-05' at local \u2192 2001-02-16 18:38:40"], "Category": ["Date divide Time Functions and Operators"], "index": 149, "vector_txt": "149:Feature: timestamp with time zone AT LOCAL \u2192 timestamp without time zone\nDescription: Converts given time stamp with time zone to time stamp without time zone, as the time would appear with the session's TimeZone value as time zone.\nExamples: timestamp with time zone '2001-02-16 20:38:40-05' at local \u2192 2001-02-16 18:38:40\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["time with time zone AT TIME ZONE zone"], "Feature": ["time with time zone AT TIME ZONE zone \u2192 time with time zone"], "Description": ["Converts given time with time zone to a new time zone. Since no date is supplied, this uses the currently active UTC offset for the named destination zone."], "Examples": ["time with time zone '05:34:17-05' at time zone 'UTC' \u2192 10:34:17+00"], "Category": ["Date divide Time Functions and Operators"], "index": 150, "vector_txt": "150:Feature: time with time zone AT TIME ZONE zone \u2192 time with time zone\nDescription: Converts given time with time zone to a new time zone. Since no date is supplied, this uses the currently active UTC offset for the named destination zone.\nExamples: time with time zone '05:34:17-05' at time zone 'UTC' \u2192 10:34:17+00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-datetime.html"], "Title": ["time with time zone AT LOCAL"], "Feature": ["time with time zone AT LOCAL \u2192 time with time zone"], "Description": ["Converts given time with time zone to a new time zone. Since no date is supplied, this uses the currently active UTC offset for the session's TimeZone value.", "Assuming the session's TimeZone is set to UTC:"], "Examples": ["time with time zone '05:34:17-05' at local \u2192 10:34:17+00"], "Category": ["Date divide Time Functions and Operators"], "index": 151, "vector_txt": "151:Feature: time with time zone AT LOCAL \u2192 time with time zone\nDescription: Converts given time with time zone to a new time zone. Since no date is supplied, this uses the currently active UTC offset for the session's TimeZone value.Assuming the session's TimeZone is set to UTC:\nExamples: time with time zone '05:34:17-05' at local \u2192 10:34:17+00\nCategory: Date divide Time Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type + point"], "Feature": ["geometric_type + point \u2192 geometric_type"], "Description": ["Adds the coordinates of the second point to those of each point of the first argument, thus performing translation. Available for point, box, path, circle."], "Examples": ["box '(1,1),(0,0)' + point '(2,0)' \u2192 (3,1),(2,0)"], "Category": ["Geometric Functions and Operators"], "index": 152, "vector_txt": "152:Feature: geometric_type + point \u2192 geometric_type\nDescription: Adds the coordinates of the second point to those of each point of the first argument, thus performing translation. Available for point, box, path, circle.\nExamples: box '(1,1),(0,0)' + point '(2,0)' \u2192 (3,1),(2,0)\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["path + path"], "Feature": ["path + path \u2192 path"], "Description": ["Concatenates two open paths (returns NULL if either path is closed)."], "Examples": ["path '[(0,0),(1,1)]' + path '[(2,2),(3,3),(4,4)]' \u2192 [(0,0),(1,1),(2,2),(3,3),(4,4)]"], "Category": ["Geometric Functions and Operators"], "index": 153, "vector_txt": "153:Feature: path + path \u2192 path\nDescription: Concatenates two open paths (returns NULL if either path is closed).\nExamples: path '[(0,0),(1,1)]' + path '[(2,2),(3,3),(4,4)]' \u2192 [(0,0),(1,1),(2,2),(3,3),(4,4)]\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type - point"], "Feature": ["geometric_type - point \u2192 geometric_type"], "Description": ["Subtracts the coordinates of the second point from those of each point of the first argument, thus performing translation. Available for point, box, path, circle."], "Examples": ["box '(1,1),(0,0)' - point '(2,0)' \u2192 (-1,1),(-2,0)"], "Category": ["Geometric Functions and Operators"], "index": 154, "vector_txt": "154:Feature: geometric_type - point \u2192 geometric_type\nDescription: Subtracts the coordinates of the second point from those of each point of the first argument, thus performing translation. Available for point, box, path, circle.\nExamples: box '(1,1),(0,0)' - point '(2,0)' \u2192 (-1,1),(-2,0)\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type * point"], "Feature": ["geometric_type * point \u2192 geometric_type"], "Description": ["Multiplies each point of the first argument by the second point (treating a point as being a complex number represented by real and imaginary parts, and performing standard complex multiplication). If one interprets the second point as a vector, this is equivalent to scaling the object's size and distance from the origin by the length of the vector, and rotating it counterclockwise around the origin by the vector's angle from the x axis. Available for point, box,[a] path, circle."], "Examples": ["path '((0,0),(1,0),(1,1))' * point '(3.0,0)' \u2192 ((0,0),(3,0),(3,3))", "path '((0,0),(1,0),(1,1))' * point(cosd(45), sind(45)) \u2192 ((0,0),\u200b(0.7071067811865475,0.7071067811865475),\u200b(0,1.414213562373095))"], "Category": ["Geometric Functions and Operators"], "index": 155, "vector_txt": "155:Feature: geometric_type * point \u2192 geometric_type\nDescription: Multiplies each point of the first argument by the second point (treating a point as being a complex number represented by real and imaginary parts, and performing standard complex multiplication). If one interprets the second point as a vector, this is equivalent to scaling the object's size and distance from the origin by the length of the vector, and rotating it counterclockwise around the origin by the vector's angle from the x axis. Available for point, box,[a] path, circle.\nExamples: path '((0,0),(1,0),(1,1))' * point '(3.0,0)' \u2192 ((0,0),(3,0),(3,3))path '((0,0),(1,0),(1,1))' * point(cosd(45), sind(45)) \u2192 ((0,0),\u200b(0.7071067811865475,0.7071067811865475),\u200b(0,1.414213562373095))\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type / point"], "Feature": ["geometric_type / point \u2192 geometric_type"], "Description": ["Divides each point of the first argument by the second point (treating a point as being a complex number represented by real and imaginary parts, and performing standard complex division). If one interprets the second point as a vector, this is equivalent to scaling the object's size and distance from the origin down by the length of the vector, and rotating it clockwise around the origin by the vector's angle from the x axis. Available for point, box,[a] path, circle."], "Examples": ["path '((0,0),(1,0),(1,1))' / point '(2.0,0)' \u2192 ((0,0),(0.5,0),(0.5,0.5))", "path '((0,0),(1,0),(1,1))' / point(cosd(45), sind(45)) \u2192 ((0,0),\u200b(0.7071067811865476,-0.7071067811865476),\u200b(1.4142135623730951,0))"], "Category": ["Geometric Functions and Operators"], "index": 156, "vector_txt": "156:Feature: geometric_type / point \u2192 geometric_type\nDescription: Divides each point of the first argument by the second point (treating a point as being a complex number represented by real and imaginary parts, and performing standard complex division). If one interprets the second point as a vector, this is equivalent to scaling the object's size and distance from the origin down by the length of the vector, and rotating it clockwise around the origin by the vector's angle from the x axis. Available for point, box,[a] path, circle.\nExamples: path '((0,0),(1,0),(1,1))' / point '(2.0,0)' \u2192 ((0,0),(0.5,0),(0.5,0.5))path '((0,0),(1,0),(1,1))' / point(cosd(45), sind(45)) \u2192 ((0,0),\u200b(0.7071067811865476,-0.7071067811865476),\u200b(1.4142135623730951,0))\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["@-@ geometric_type"], "Feature": ["@-@ geometric_type \u2192 double precision"], "Description": ["Computes the total length. Available for lseg, path."], "Examples": ["@-@ path '[(0,0),(1,0),(1,1)]' \u2192 2"], "Category": ["Geometric Functions and Operators"], "index": 157, "vector_txt": "157:Feature: @-@ geometric_type \u2192 double precision\nDescription: Computes the total length. Available for lseg, path.\nExamples: @-@ path '[(0,0),(1,0),(1,1)]' \u2192 2\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["@@ geometric_type"], "Feature": ["@@ geometric_type \u2192 point"], "Description": ["Computes the center point. Available for box, lseg, polygon, circle."], "Examples": ["@@ box '(2,2),(0,0)' \u2192 (1,1)"], "Category": ["Geometric Functions and Operators"], "index": 158, "vector_txt": "158:Feature: @@ geometric_type \u2192 point\nDescription: Computes the center point. Available for box, lseg, polygon, circle.\nExamples: @@ box '(2,2),(0,0)' \u2192 (1,1)\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-comparison.html"], "Title": ["datatype != datatype"], "Feature": ["datatype != datatype \u2192 boolean"], "Description": ["Not equal"], "Examples": [], "Category": ["Comparison Functions and Operators"], "index": 159, "vector_txt": "159:Feature: datatype != datatype \u2192 boolean\nDescription: Not equal\nExamples: \nCategory: Comparison Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["# geometric_type"], "Feature": ["# geometric_type \u2192 integer"], "Description": ["Returns the number of points. Available for path, polygon."], "Examples": ["# path '((1,0),(0,1),(-1,0))' \u2192 3"], "Category": ["Geometric Functions and Operators"], "index": 160, "vector_txt": "160:Feature: # geometric_type \u2192 integer\nDescription: Returns the number of points. Available for path, polygon.\nExamples: # path '((1,0),(0,1),(-1,0))' \u2192 3\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type # geometric_type"], "Feature": ["geometric_type # geometric_type \u2192 point"], "Description": ["Computes the point of intersection, or NULL if there is none. Available for lseg, line."], "Examples": ["lseg '[(0,0),(1,1)]' # lseg '[(1,0),(0,1)]' \u2192 (0.5,0.5)"], "Category": ["Geometric Functions and Operators"], "index": 161, "vector_txt": "161:Feature: geometric_type # geometric_type \u2192 point\nDescription: Computes the point of intersection, or NULL if there is none. Available for lseg, line.\nExamples: lseg '[(0,0),(1,1)]' # lseg '[(1,0),(0,1)]' \u2192 (0.5,0.5)\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["box # box"], "Feature": ["box # box \u2192 box"], "Description": ["Computes the intersection of two boxes, or NULL if there is none."], "Examples": ["box '(2,2),(-1,-1)' # box '(1,1),(-2,-2)' \u2192 (1,1),(-1,-1)"], "Category": ["Geometric Functions and Operators"], "index": 162, "vector_txt": "162:Feature: box # box \u2192 box\nDescription: Computes the intersection of two boxes, or NULL if there is none.\nExamples: box '(2,2),(-1,-1)' # box '(1,1),(-2,-2)' \u2192 (1,1),(-1,-1)\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type ## geometric_type"], "Feature": ["geometric_type ## geometric_type \u2192 point"], "Description": ["Computes the closest point to the first object on the second object. Available for these pairs of types: (point, box), (point, lseg), (point, line), (lseg, box), (lseg, lseg), (line, lseg)."], "Examples": ["point '(0,0)' ## lseg '[(2,0),(0,2)]' \u2192 (1,1)"], "Category": ["Geometric Functions and Operators"], "index": 163, "vector_txt": "163:Feature: geometric_type ## geometric_type \u2192 point\nDescription: Computes the closest point to the first object on the second object. Available for these pairs of types: (point, box), (point, lseg), (point, line), (lseg, box), (lseg, lseg), (line, lseg).\nExamples: point '(0,0)' ## lseg '[(2,0),(0,2)]' \u2192 (1,1)\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type <-> geometric_type"], "Feature": ["geometric_type <-> geometric_type \u2192 double precision"], "Description": ["Computes the distance between the objects. Available for all seven geometric types, for all combinations of point with another geometric type, and for these additional pairs of types: (box, lseg), (lseg, line), (polygon, circle) (and the commutator cases)."], "Examples": ["circle '<(0,0),1>' <-> circle '<(5,0),1>' \u2192 3"], "Category": ["Geometric Functions and Operators"], "index": 164, "vector_txt": "164:Feature: geometric_type <-> geometric_type \u2192 double precision\nDescription: Computes the distance between the objects. Available for all seven geometric types, for all combinations of point with another geometric type, and for these additional pairs of types: (box, lseg), (lseg, line), (polygon, circle) (and the commutator cases).\nExamples: circle '<(0,0),1>' <-> circle '<(5,0),1>' \u2192 3\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type @> geometric_type"], "Feature": ["geometric_type @> geometric_type \u2192 boolean"], "Description": ["Does first object contain second? Available for these pairs of types: (box, point), (box, box), (path, point), (polygon, point), (polygon, polygon), (circle, point), (circle, circle)."], "Examples": ["circle '<(0,0),2>' @> point '(1,1)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 165, "vector_txt": "165:Feature: geometric_type @> geometric_type \u2192 boolean\nDescription: Does first object contain second? Available for these pairs of types: (box, point), (box, box), (path, point), (polygon, point), (polygon, polygon), (circle, point), (circle, circle).\nExamples: circle '<(0,0),2>' @> point '(1,1)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type <@ geometric_type"], "Feature": ["geometric_type <@ geometric_type \u2192 boolean"], "Description": ["Is first object contained in or on second? Available for these pairs of types: (point, box), (point, lseg), (point, line), (point, path), (point, polygon), (point, circle), (box, box), (lseg, box), (lseg, line), (polygon, polygon), (circle, circle)."], "Examples": ["point '(1,1)' <@ circle '<(0,0),2>' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 166, "vector_txt": "166:Feature: geometric_type <@ geometric_type \u2192 boolean\nDescription: Is first object contained in or on second? Available for these pairs of types: (point, box), (point, lseg), (point, line), (point, path), (point, polygon), (point, circle), (box, box), (lseg, box), (lseg, line), (polygon, polygon), (circle, circle).\nExamples: point '(1,1)' <@ circle '<(0,0),2>' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type && geometric_type"], "Feature": ["geometric_type && geometric_type \u2192 boolean"], "Description": ["Do these objects overlap? (One point in common makes this true.) Available for box, polygon, circle."], "Examples": ["box '(1,1),(0,0)' && box '(2,2),(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 167, "vector_txt": "167:Feature: geometric_type && geometric_type \u2192 boolean\nDescription: Do these objects overlap? (One point in common makes this true.) Available for box, polygon, circle.\nExamples: box '(1,1),(0,0)' && box '(2,2),(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type << geometric_type"], "Feature": ["geometric_type << geometric_type \u2192 boolean"], "Description": ["Is first object strictly left of second? Available for point, box, polygon, circle."], "Examples": ["circle '<(0,0),1>' << circle '<(5,0),1>' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 168, "vector_txt": "168:Feature: geometric_type << geometric_type \u2192 boolean\nDescription: Is first object strictly left of second? Available for point, box, polygon, circle.\nExamples: circle '<(0,0),1>' << circle '<(5,0),1>' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type >> geometric_type"], "Feature": ["geometric_type >> geometric_type \u2192 boolean"], "Description": ["Is first object strictly right of second? Available for point, box, polygon, circle."], "Examples": ["circle '<(5,0),1>' >> circle '<(0,0),1>' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 169, "vector_txt": "169:Feature: geometric_type >> geometric_type \u2192 boolean\nDescription: Is first object strictly right of second? Available for point, box, polygon, circle.\nExamples: circle '<(5,0),1>' >> circle '<(0,0),1>' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["numeric_type + numeric_type"], "Feature": ["numeric_type + numeric_type \u2192 numeric_type"], "Description": ["Addition"], "Examples": ["2 + 3 \u2192 5"], "Category": ["Mathematical Functions and Operators"], "index": 170, "vector_txt": "170:Feature: numeric_type + numeric_type \u2192 numeric_type\nDescription: Addition\nExamples: 2 + 3 \u2192 5\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type &< geometric_type"], "Feature": ["geometric_type &< geometric_type \u2192 boolean"], "Description": ["Does first object not extend to the right of second? Available for box, polygon, circle."], "Examples": ["box '(1,1),(0,0)' &< box '(2,2),(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 171, "vector_txt": "171:Feature: geometric_type &< geometric_type \u2192 boolean\nDescription: Does first object not extend to the right of second? Available for box, polygon, circle.\nExamples: box '(1,1),(0,0)' &< box '(2,2),(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type &> geometric_type"], "Feature": ["geometric_type &> geometric_type \u2192 boolean"], "Description": ["Does first object not extend to the left of second? Available for box, polygon, circle."], "Examples": ["box '(3,3),(0,0)' &> box '(2,2),(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 172, "vector_txt": "172:Feature: geometric_type &> geometric_type \u2192 boolean\nDescription: Does first object not extend to the left of second? Available for box, polygon, circle.\nExamples: box '(3,3),(0,0)' &> box '(2,2),(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type <<| geometric_type"], "Feature": ["geometric_type <<| geometric_type \u2192 boolean"], "Description": ["Is first object strictly below second? Available for point, box, polygon, circle."], "Examples": ["box '(3,3),(0,0)' <<| box '(5,5),(3,4)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 173, "vector_txt": "173:Feature: geometric_type <<| geometric_type \u2192 boolean\nDescription: Is first object strictly below second? Available for point, box, polygon, circle.\nExamples: box '(3,3),(0,0)' <<| box '(5,5),(3,4)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type |>> geometric_type"], "Feature": ["geometric_type |>> geometric_type \u2192 boolean"], "Description": ["Is first object strictly above second? Available for point, box, polygon, circle."], "Examples": ["box '(5,5),(3,4)' |>> box '(3,3),(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 174, "vector_txt": "174:Feature: geometric_type |>> geometric_type \u2192 boolean\nDescription: Is first object strictly above second? Available for point, box, polygon, circle.\nExamples: box '(5,5),(3,4)' |>> box '(3,3),(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type &<| geometric_type"], "Feature": ["geometric_type &<| geometric_type \u2192 boolean"], "Description": ["Does first object not extend above second? Available for box, polygon, circle."], "Examples": ["box '(1,1),(0,0)' &<| box '(2,2),(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 175, "vector_txt": "175:Feature: geometric_type &<| geometric_type \u2192 boolean\nDescription: Does first object not extend above second? Available for box, polygon, circle.\nExamples: box '(1,1),(0,0)' &<| box '(2,2),(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type |&> geometric_type"], "Feature": ["geometric_type |&> geometric_type \u2192 boolean"], "Description": ["Does first object not extend below second? Available for box, polygon, circle."], "Examples": ["box '(3,3),(0,0)' |&> box '(2,2),(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 176, "vector_txt": "176:Feature: geometric_type |&> geometric_type \u2192 boolean\nDescription: Does first object not extend below second? Available for box, polygon, circle.\nExamples: box '(3,3),(0,0)' |&> box '(2,2),(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["box <^ box"], "Feature": ["box <^ box \u2192 boolean"], "Description": ["Is first object below second (allows edges to touch)?"], "Examples": ["box '((1,1),(0,0))' <^ box '((2,2),(1,1))' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 177, "vector_txt": "177:Feature: box <^ box \u2192 boolean\nDescription: Is first object below second (allows edges to touch)?\nExamples: box '((1,1),(0,0))' <^ box '((2,2),(1,1))' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["box >^ box"], "Feature": ["box >^ box \u2192 boolean"], "Description": ["Is first object above second (allows edges to touch)?"], "Examples": ["box '((2,2),(1,1))' >^ box '((1,1),(0,0))' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 178, "vector_txt": "178:Feature: box >^ box \u2192 boolean\nDescription: Is first object above second (allows edges to touch)?\nExamples: box '((2,2),(1,1))' >^ box '((1,1),(0,0))' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type ?# geometric_type"], "Feature": ["geometric_type ?# geometric_type \u2192 boolean"], "Description": ["Do these objects intersect? Available for these pairs of types: (box, box), (lseg, box), (lseg, lseg), (lseg, line), (line, box), (line, line), (path, path)."], "Examples": ["lseg '[(-1,0),(1,0)]' ?# box '(2,2),(-2,-2)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 179, "vector_txt": "179:Feature: geometric_type ?# geometric_type \u2192 boolean\nDescription: Do these objects intersect? Available for these pairs of types: (box, box), (lseg, box), (lseg, lseg), (lseg, line), (line, box), (line, line), (path, path).\nExamples: lseg '[(-1,0),(1,0)]' ?# box '(2,2),(-2,-2)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["?- line"], "Feature": ["?- line \u2192 boolean", "?- lseg \u2192 boolean"], "Description": ["Is line horizontal?"], "Examples": ["?- lseg '[(-1,0),(1,0)]' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 180, "vector_txt": "180:Feature: ?- line \u2192 boolean?- lseg \u2192 boolean\nDescription: Is line horizontal?\nExamples: ?- lseg '[(-1,0),(1,0)]' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["+ numeric_type"], "Feature": ["+ numeric_type \u2192 numeric_type"], "Description": ["Unary plus (no operation)"], "Examples": ["+ 3.5 \u2192 3.5"], "Category": ["Mathematical Functions and Operators"], "index": 181, "vector_txt": "181:Feature: + numeric_type \u2192 numeric_type\nDescription: Unary plus (no operation)\nExamples: + 3.5 \u2192 3.5\nCategory: Mathematical Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["point ?- point"], "Feature": ["point ?- point \u2192 boolean"], "Description": ["Are points horizontally aligned (that is, have same y coordinate)?"], "Examples": ["point '(1,0)' ?- point '(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 182, "vector_txt": "182:Feature: point ?- point \u2192 boolean\nDescription: Are points horizontally aligned (that is, have same y coordinate)?\nExamples: point '(1,0)' ?- point '(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["?| line"], "Feature": ["?| line \u2192 boolean", "?| lseg \u2192 boolean"], "Description": ["Is line vertical?"], "Examples": ["?| lseg '[(-1,0),(1,0)]' \u2192 f"], "Category": ["Geometric Functions and Operators"], "index": 183, "vector_txt": "183:Feature: ?| line \u2192 boolean?| lseg \u2192 boolean\nDescription: Is line vertical?\nExamples: ?| lseg '[(-1,0),(1,0)]' \u2192 f\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["point ?| point"], "Feature": ["point ?| point \u2192 boolean"], "Description": ["Are points vertically aligned (that is, have same x coordinate)?"], "Examples": ["point '(0,1)' ?| point '(0,0)' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 184, "vector_txt": "184:Feature: point ?| point \u2192 boolean\nDescription: Are points vertically aligned (that is, have same x coordinate)?\nExamples: point '(0,1)' ?| point '(0,0)' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["line ?-| line"], "Feature": ["line ?-| line \u2192 boolean", "lseg ?-| lseg \u2192 boolean"], "Description": ["Are lines perpendicular?"], "Examples": ["lseg '[(0,0),(0,1)]' ?-| lseg '[(0,0),(1,0)]' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 185, "vector_txt": "185:Feature: line ?-| line \u2192 booleanlseg ?-| lseg \u2192 boolean\nDescription: Are lines perpendicular?\nExamples: lseg '[(0,0),(0,1)]' ?-| lseg '[(0,0),(1,0)]' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["line ?|| line"], "Feature": ["line ?|| line \u2192 boolean", "lseg ?|| lseg \u2192 boolean"], "Description": ["Are lines parallel?"], "Examples": ["lseg '[(-1,0),(1,0)]' ?|| lseg '[(-1,2),(1,2)]' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 186, "vector_txt": "186:Feature: line ?|| line \u2192 booleanlseg ?|| lseg \u2192 boolean\nDescription: Are lines parallel?\nExamples: lseg '[(-1,0),(1,0)]' ?|| lseg '[(-1,2),(1,2)]' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-geometry.html"], "Title": ["geometric_type ~= geometric_type"], "Feature": ["geometric_type ~= geometric_type \u2192 boolean"], "Description": ["Are these objects the same? Available for point, box, polygon, circle."], "Examples": ["polygon '((0,0),(1,1))' ~= polygon '((1,1),(0,0))' \u2192 t"], "Category": ["Geometric Functions and Operators"], "index": 187, "vector_txt": "187:Feature: geometric_type ~= geometric_type \u2192 boolean\nDescription: Are these objects the same? Available for point, box, polygon, circle.\nExamples: polygon '((0,0),(1,1))' ~= polygon '((1,1),(0,0))' \u2192 t\nCategory: Geometric Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet << inet"], "Feature": ["inet << inet \u2192 boolean"], "Description": ["Is subnet strictly contained by subnet? This operator, and the next four, test for subnet inclusion. They consider only the network parts of the two addresses (ignoring any bits to the right of the netmasks) and determine whether one network is identical to or a subnet of the other."], "Examples": ["inet '192.168.1.5' << inet '192.168.1/24' \u2192 t", "inet '192.168.0.5' << inet '192.168.1/24' \u2192 f", "inet '192.168.1/24' << inet '192.168.1/24' \u2192 f"], "Category": ["Network Address Functions and Operators"], "index": 188, "vector_txt": "188:Feature: inet << inet \u2192 boolean\nDescription: Is subnet strictly contained by subnet? This operator, and the next four, test for subnet inclusion. They consider only the network parts of the two addresses (ignoring any bits to the right of the netmasks) and determine whether one network is identical to or a subnet of the other.\nExamples: inet '192.168.1.5' << inet '192.168.1/24' \u2192 tinet '192.168.0.5' << inet '192.168.1/24' \u2192 finet '192.168.1/24' << inet '192.168.1/24' \u2192 f\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet <<= inet"], "Feature": ["inet <<= inet \u2192 boolean"], "Description": ["Is subnet contained by or equal to subnet?"], "Examples": ["inet '192.168.1/24' <<= inet '192.168.1/24' \u2192 t"], "Category": ["Network Address Functions and Operators"], "index": 189, "vector_txt": "189:Feature: inet <<= inet \u2192 boolean\nDescription: Is subnet contained by or equal to subnet?\nExamples: inet '192.168.1/24' <<= inet '192.168.1/24' \u2192 t\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet >> inet"], "Feature": ["inet >> inet \u2192 boolean"], "Description": ["Does subnet strictly contain subnet?"], "Examples": ["inet '192.168.1/24' >> inet '192.168.1.5' \u2192 t"], "Category": ["Network Address Functions and Operators"], "index": 190, "vector_txt": "190:Feature: inet >> inet \u2192 boolean\nDescription: Does subnet strictly contain subnet?\nExamples: inet '192.168.1/24' >> inet '192.168.1.5' \u2192 t\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-net.html"], "Title": ["inet >>= inet"], "Feature": ["inet >>= inet \u2192 boolean"], "Description": ["Does subnet contain or equal subnet?"], "Examples": ["inet '192.168.1/24' >>= inet '192.168.1/24' \u2192 t"], "Category": ["Network Address Functions and Operators"], "index": 191, "vector_txt": "191:Feature: inet >>= inet \u2192 boolean\nDescription: Does subnet contain or equal subnet?\nExamples: inet '192.168.1/24' >>= inet '192.168.1/24' \u2192 t\nCategory: Network Address Functions and Operators\n"}
{"HTML": ["https://www.postgresql.org/docs/current/functions-math.html"], "Title": ["numeric_type - numeric_type"], "Feature": ["numeric_type - numeric_type \u2192 numeric_type"], "Description": ["Subtraction"], "Examples": ["2 - 3 \u2192 -1"], "Category": ["Mathematical Functions and Operators"], "index": 192, "vector_txt": "192:Feature: numeric_type - numeric_type \u2192 numeric_type\nDescription: Subtraction\nExamples: 2 - 3 \u2192 -1\nCategory: Mathematical Functions and Operators\n"}
