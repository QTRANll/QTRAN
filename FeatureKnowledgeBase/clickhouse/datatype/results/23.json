{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/data-types/geo"
    ],
    "Title": [
        "Geo"
    ],
    "Feature": [
        "Geo"
    ],
    "Description": [
        "Geometric",
        "ClickHouse supports data types for representing geographical objects \u2014 locations, lands, etc.",
        "See Also",
        "Representing simple geographical features.",
        "Point\u200b",
        "Point is represented by its X and Y coordinates, stored as a Tuple(Float64, Float64).",
        "Example",
        "Query:",
        "CREATE TABLE geo_point (p Point) ENGINE = Memory();INSERT INTO geo_point VALUES((10, 10));SELECT p, toTypeName(p) FROM geo_point;",
        "Result:",
        "\u250c\u2500p\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(p)\u2500\u2510\u2502 (10,10) \u2502 Point         \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "Ring\u200b",
        "Ring is a simple polygon without holes stored as an array of points: Array(Point).",
        "Example",
        "Query:",
        "CREATE TABLE geo_ring (r Ring) ENGINE = Memory();INSERT INTO geo_ring VALUES([(0, 0), (10, 0), (10, 10), (0, 10)]);SELECT r, toTypeName(r) FROM geo_ring;",
        "Result:",
        "\u250c\u2500r\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(r)\u2500\u2510\u2502 [(0,0),(10,0),(10,10),(0,10)] \u2502 Ring          \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "LineString\u200b",
        "LineString is a line stored as an array of points: Array(Point).",
        "Example",
        "Query:",
        "CREATE TABLE geo_linestring (l LineString) ENGINE = Memory();INSERT INTO geo_linestring VALUES([(0, 0), (10, 0), (10, 10), (0, 10)]);SELECT l, toTypeName(l) FROM geo_linestring;",
        "Result:",
        "\u250c\u2500r\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(r)\u2500\u2510\u2502 [(0,0),(10,0),(10,10),(0,10)] \u2502 LineString    \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "MultiLineString\u200b",
        "MultiLineString is multiple lines stored as an array of LineString: Array(LineString).",
        "Example",
        "Query:",
        "CREATE TABLE geo_multilinestring (l MultiLineString) ENGINE = Memory();INSERT INTO geo_multilinestring VALUES([[(0, 0), (10, 0), (10, 10), (0, 10)], [(1, 1), (2, 2), (3, 3)]]);SELECT l, toTypeName(l) FROM geo_multilinestring;",
        "Result:",
        "\u250c\u2500l\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(l)\u2500\u2500\u2500\u2510\u2502 [[(0,0),(10,0),(10,10),(0,10)],[(1,1),(2,2),(3,3)]] \u2502 MultiLineString \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "Polygon\u200b",
        "Polygon is a polygon with holes stored as an array of rings: Array(Ring). First element of outer array is the outer shape of polygon and all the following elements are holes.",
        "Example",
        "This is a polygon with one hole:",
        "CREATE TABLE geo_polygon (pg Polygon) ENGINE = Memory();INSERT INTO geo_polygon VALUES([[(20, 20), (50, 20), (50, 50), (20, 50)], [(30, 30), (50, 50), (50, 30)]]);SELECT pg, toTypeName(pg) FROM geo_polygon;",
        "Result:",
        "\u250c\u2500pg\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(pg)\u2500\u2510\u2502 [[(20,20),(50,20),(50,50),(20,50)],[(30,30),(50,50),(50,30)]] \u2502 Polygon        \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "MultiPolygon\u200b",
        "MultiPolygon consists of multiple polygons and is stored as an array of polygons: Array(Polygon).",
        "Example",
        "This multipolygon consists of two separate polygons \u2014 the first one without holes, and the second with one hole:",
        "CREATE TABLE geo_multipolygon (mpg MultiPolygon) ENGINE = Memory();INSERT INTO geo_multipolygon VALUES([[[(0, 0), (10, 0), (10, 10), (0, 10)]], [[(20, 20), (50, 20), (50, 50), (20, 50)],[(30, 30), (50, 50), (50, 30)]]]);SELECT mpg, toTypeName(mpg) FROM geo_multipolygon;",
        "Result:",
        "\u250c\u2500mpg\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(mpg)\u2500\u2510\u2502 [[[(0,0),(10,0),(10,10),(0,10)]],[[(20,20),(50,20),(50,50),(20,50)],[(30,30),(50,50),(50,30)]]] \u2502 MultiPolygon    \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "Related Content\u200b",
        "Exploring massive, real-world data sets: 100+ Years of Weather Records in ClickHouse"
    ],
    "Examples": [
        "CREATE TABLE geo_point (p Point) ENGINE = Memory();INSERT INTO geo_point VALUES((10, 10));SELECT p, toTypeName(p) FROM geo_point;",
        "CREATE TABLE geo_ring (r Ring) ENGINE = Memory();INSERT INTO geo_ring VALUES([(0, 0), (10, 0), (10, 10), (0, 10)]);SELECT r, toTypeName(r) FROM geo_ring;",
        "CREATE TABLE geo_linestring (l LineString) ENGINE = Memory();INSERT INTO geo_linestring VALUES([(0, 0), (10, 0), (10, 10), (0, 10)]);SELECT l, toTypeName(l) FROM geo_linestring;",
        "CREATE TABLE geo_multilinestring (l MultiLineString) ENGINE = Memory();INSERT INTO geo_multilinestring VALUES([[(0, 0), (10, 0), (10, 10), (0, 10)], [(1, 1), (2, 2), (3, 3)]]);SELECT l, toTypeName(l) FROM geo_multilinestring;",
        "CREATE TABLE geo_polygon (pg Polygon) ENGINE = Memory();INSERT INTO geo_polygon VALUES([[(20, 20), (50, 20), (50, 50), (20, 50)], [(30, 30), (50, 50), (50, 30)]]);SELECT pg, toTypeName(pg) FROM geo_polygon;",
        "CREATE TABLE geo_multipolygon (mpg MultiPolygon) ENGINE = Memory();INSERT INTO geo_multipolygon VALUES([[[(0, 0), (10, 0), (10, 10), (0, 10)]], [[(20, 20), (50, 20), (50, 50), (20, 50)],[(30, 30), (50, 50), (50, 30)]]]);SELECT mpg, toTypeName(mpg) FROM geo_multipolygon;"
    ],
    "Category": [
        "Geo"
    ],
    "EffectiveSQLsRefined": [
        "CREATE TABLE geo_point (p Point) ENGINE = Memory();",
        "INSERT INTO geo_point VALUES((10, 10));",
        "SELECT p, toTypeName(p) FROM geo_point;",
        "CREATE TABLE geo_ring (r Ring) ENGINE = Memory();",
        "INSERT INTO geo_ring VALUES([(0, 0), (10, 0), (10, 10), (0, 10)]);",
        "SELECT r, toTypeName(r) FROM geo_ring;",
        "CREATE TABLE geo_linestring (l LineString) ENGINE = Memory();",
        "INSERT INTO geo_linestring VALUES([(0, 0), (10, 0), (10, 10), (0, 10)]);",
        "SELECT l, toTypeName(l) FROM geo_linestring;",
        "CREATE TABLE geo_multilinestring (l MultiLineString) ENGINE = Memory();",
        "INSERT INTO geo_multilinestring VALUES([[(0, 0), (10, 0), (10, 10), (0, 10)], [(1, 1), (2, 2), (3, 3)]]);",
        "SELECT l, toTypeName(l) FROM geo_multilinestring;",
        "CREATE TABLE geo_polygon (pg Polygon) ENGINE = Memory();",
        "INSERT INTO geo_polygon VALUES([[(20, 20), (50, 20), (50, 50), (20, 50)], [(30, 30), (50, 50), (50, 30)]]);",
        "SELECT pg, toTypeName(pg) FROM geo_polygon;",
        "CREATE TABLE geo_multipolygon (mpg MultiPolygon) ENGINE = Memory();",
        "INSERT INTO geo_multipolygon VALUES([[[(0, 0), (10, 0), (10, 10), (0, 10)]], [[(20, 20), (50, 20), (50, 50), (20, 50)],[(30, 30), (50, 50), (50, 30)]]]);",
        "SELECT mpg, toTypeName(mpg) FROM geo_multipolygon;"
    ]
}