{"HTML": ["https://clickhouse.com/docs/en/sql-reference/data-types/lowcardinality"], "Title": ["LowCardinality(T)"], "Feature": ["LowCardinality(T)"], "Description": ["LowCardinality(T)", "Changes the internal representation of other data types to be dictionary-encoded.", "Syntax\u200b", "LowCardinality(data_type)", "Parameters", "data_type \u2014 String, FixedString, Date, DateTime, and numbers excepting Decimal. LowCardinality is not efficient for some data types, see the allow_suspicious_low_cardinality_types setting description.", "Description\u200b", "LowCardinality is a superstructure that changes a data storage method and rules of data processing. ClickHouse applies dictionary coding to LowCardinality-columns. Operating with dictionary encoded data significantly increases performance of SELECT queries for many applications.", "The efficiency of using LowCardinality data type depends on data diversity. If a dictionary contains less than 10,000 distinct values, then ClickHouse mostly shows higher efficiency of data reading and storing. If a dictionary contains more than 100,000 distinct values, then ClickHouse can perform worse in comparison with using ordinary data types.", "Consider using LowCardinality instead of Enum when working with strings. LowCardinality provides more flexibility in use and often reveals the same or higher efficiency.", "Example\u200b", "Create a table with a LowCardinality-column:", "CREATE TABLE lc_t(    `id` UInt16,    `strings` LowCardinality(String))ENGINE = MergeTree()ORDER BY id", "Related Settings and Functions\u200b", "Settings:", "low_cardinality_max_dictionary_sizelow_cardinality_use_single_dictionary_for_partlow_cardinality_allow_in_native_formatallow_suspicious_low_cardinality_typesoutput_format_arrow_low_cardinality_as_dictionary", "Functions:", "toLowCardinality", "Related content\u200b", "Blog: Optimizing ClickHouse with Schemas and CodecsBlog: Working with time series data in ClickHouseString Optimization (video presentation in Russian). Slides in English"], "Examples": ["LowCardinality(data_type)", "CREATE TABLE lc_t(    `id` UInt16,    `strings` LowCardinality(String))ENGINE = MergeTree()ORDER BY id"], "Category": ["LowCardinality(T)"]}
