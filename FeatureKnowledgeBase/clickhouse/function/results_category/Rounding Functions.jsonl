{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["floor"], "Feature": ["floor(x[, N])"], "Description": ["floor", "Returns the largest rounded number less than or equal x.\nA rounded number is a multiple of 1 / 10  N, or the nearest number of the appropriate data type if 1 / 10  N isn\u2019t exact.", "Integer arguments may be rounded with negative N argument, with non-negative N the function returns x, i.e. does nothing.", "If rounding causes an overflow (for example, floor(-128, -1)), the result is undefined.", "Syntax", "floor(x[, N])", "Parameters", "x - The value to round. Float*, Decimal*, or (U)Int*.N . (U)Int*. The default is zero, which means rounding to an integer. Can be negative.", "Returned value", "A rounded number of the same type as x."], "Examples": ["SELECT floor(123.45, 1) AS rounded", "SELECT floor(123.45, -1)"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["ceiling"], "Feature": ["ceiling(x[, N])"], "Description": ["ceiling", "Like floor but returns the smallest rounded number greater than or equal x.", "Syntax", "ceiling(x[, N])", "Alias: ceil"], "Examples": ["ceiling(x[, N])"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["truncate"], "Feature": ["truncate(x[, N])"], "Description": ["truncate", "Like floor but returns the rounded number with largest absolute value that has an absolute value less than or equal to x\u2018s.", "Syntax", "truncate(x[, N])", "Alias: trunc."], "Examples": ["SELECT truncate(123.499, 1) as res;"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["round"], "Feature": ["round(x[, N])"], "Description": ["round", "Rounds a value to a specified number of decimal places.", "The function returns the nearest number of the specified order.\nIf the input value has equal distance to two neighboring numbers, the function uses banker\u2019s rounding for Float* inputs and rounds away from zero for the other number types (Decimal*.", "Syntax", "round(x[, N])", "Arguments", "x \u2014 A number to round. Float*, Decimal*, or (U)Int*.N \u2014 The number of decimal places to round to. Integer. Defaults to 0.If N > 0, the function rounds to the right of the decimal point.If N < 0, the function rounds to the left of the decimal point.If N = 0, the function rounds to the next integer.", "Returned value:", "A rounded number of the same type as x."], "Examples": ["SELECT number / 2 AS x, round(x) FROM system.numbers LIMIT 3;", "SELECT cast(number / 2 AS  Decimal(10,4)) AS x, round(x) FROM system.numbers LIMIT 3;", "SELECT cast(number / 2 AS  Decimal(10,4)) AS x, round(x) FROM system.numbers LIMIT 3 settings output_format_decimal_trailing_zeros=1;"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["roundBankers"], "Feature": ["roundBankers(x [, N])"], "Description": ["roundBankers", "Rounds a number to a specified decimal position.", "If the rounding number is halfway between two numbers, the function uses banker\u2019s rounding.\nBanker's rounding is a method of rounding fractional numbers\nWhen the rounding number is halfway between two numbers, it's rounded to the nearest even digit at the specified decimal position.\nFor example: 3.5 rounds up to 4, 2.5 rounds down to 2.\nIt's the default rounding method for floating point numbers defined in IEEE 754.\nThe round function performs the same rounding for floating point numbers.\nThe roundBankers function also rounds integers the same way, for example, roundBankers(45, -1) = 40.", "In other cases, the function rounds numbers to the nearest integer.", "Using banker\u2019s rounding, you can reduce the effect that rounding numbers has on the results of summing or subtracting these numbers.", "For example, sum numbers 1.5, 2.5, 3.5, 4.5 with different rounding:", "No rounding: 1.5 + 2.5 + 3.5 + 4.5 = 12.Banker\u2019s rounding: 2 + 2 + 4 + 4 = 12.Rounding to the nearest integer: 2 + 3 + 4 + 5 = 14.", "Syntax", "roundBankers(x [, N])", "Arguments", "- `N > 0` \u2014 The function rounds the number to the given position right of the decimal point. Example: `roundBankers(3.55, 1) = 3.6`.- `N < 0` \u2014 The function rounds the number to the given position left of the decimal point. Example: `roundBankers(24.55, -1) = 20`.- `N = 0` \u2014 The function rounds the number to an integer. In this case the argument can be omitted. Example: `roundBankers(2.5) = 2`.", "x \u2014 A number to round. Float*, Decimal*, or (U)Int*.N \u2014 The number of decimal places to round to. Integer. Defaults to 0.If N > 0, the function rounds to the right of the decimal point.If N < 0, the function rounds to the left of the decimal point.If N = 0, the function rounds to the next integer.", "Returned value", "A value rounded by the banker\u2019s rounding method."], "Examples": [" SELECT number / 2 AS x, roundBankers(x, 0) AS b fROM system.numbers limit 10"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["roundToExp2"], "Feature": ["roundToExp2(num)"], "Description": ["roundToExp2", "Accepts a number. If the number is less than one, it returns 0. Otherwise, it rounds the number down to the nearest (whole non-negative) degree of two.", "Syntax", "roundToExp2(num)", "Parameters", "num: A number to round. UInt/Float.", "Returned value", "0, for num <1\\lt 1<1. UInt8.num rounded down to the nearest (whole non-negative) degree of two. UInt/Float equivalent to the input type."], "Examples": ["SELECT *, roundToExp2(*) FROM system.numbers WHERE number IN (0, 2, 5, 10, 19, 50)"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["roundDuration"], "Feature": ["roundDuration(num)"], "Description": ["roundDuration", "Accepts a number. If the number is less than one, it returns 0. Otherwise, it rounds the number down to numbers from the set of commonly used durations: 1, 10, 30, 60, 120, 180, 240, 300, 600, 1200, 1800, 3600, 7200, 18000, 36000.", "Syntax", "roundDuration(num)", "Parameters", "num: A number to round to one of the numbers in the set of common durations. UInt/Float.", "Returned value", "0, for num <1\\lt 1<1.Otherwise, one of: 1, 10, 30, 60, 120, 180, 240, 300, 600, 1200, 1800, 3600, 7200, 18000, 36000. UInt16."], "Examples": ["SELECT *, roundDuration(*) FROM system.numbers WHERE number IN (0, 9, 19, 47, 101, 149, 205, 271, 421, 789, 1423, 2345, 4567, 9876, 24680, 42573)"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["roundAge"], "Feature": ["roundAge(num)"], "Description": ["roundAge", "Accepts a number within various commonly used ranges of human age and returns either a maximum or a minimum within that range.", "Syntax", "roundAge(num)", "Parameters", "age: A number representing an age in years. UInt/Float.", "Returned value", "Returns 0, for age<1age \\lt 1age<1.Returns 17, for 1\u2264age\u2264171 \\leq age \\leq 171\u2264age\u226417.Returns 18, for 18\u2264age\u22642418 \\leq age \\leq 2418\u2264age\u226424.Returns 25, for 25\u2264age\u22643425 \\leq age \\leq 3425\u2264age\u226434.Returns 35, for 35\u2264age\u22644435 \\leq age \\leq 4435\u2264age\u226444.Returns 45, for 45\u2264age\u22645445 \\leq age \\leq 5445\u2264age\u226454.Returns 55, for age\u226555age \\geq 55age\u226555.", "Type: UInt8."], "Examples": ["SELECT *, roundAge(*) FROM system.numbers WHERE number IN (0, 5, 20, 31, 37, 54, 72);"], "Category": ["Rounding Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/rounding-functions"], "Title": ["roundDown"], "Feature": ["roundDown(num, arr)"], "Description": ["roundDown", "Accepts a number and rounds it down to an element in the specified array. If the value is less than the lowest bound, the lowest bound is returned.", "Syntax", "roundDown(num, arr)", "Parameters", "num: A number to round down. Numeric.arr: Array of elements to round age down to. Array of UInt/Float type.", "Returned value", "Number rounded down to an element in arr. If the value is less than the lowest bound, the lowest bound is returned. UInt/Float type deduced from the type of arr."], "Examples": ["SELECT *, roundDown(*, [3, 4, 5]) FROM system.numbers WHERE number IN (0, 1, 2, 3, 4, 5)"], "Category": ["Rounding Functions"]}
