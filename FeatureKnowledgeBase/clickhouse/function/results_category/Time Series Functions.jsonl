{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/time-series-functions"], "Title": ["seriesOutliersDetectTukey"], "Feature": ["seriesOutliersDetectTukey(series);seriesOutliersDetectTukey(series, min_percentile, max_percentile, K);"], "Description": ["seriesOutliersDetectTukey", "Detects outliers in series data using Tukey Fences.", "Syntax", "seriesOutliersDetectTukey(series);seriesOutliersDetectTukey(series, min_percentile, max_percentile, K);", "Arguments", "series - An array of numeric values.min_percentile - The minimum percentile to be used to calculate inter-quantile range (IQR). The value must be in range [0.02,0.98]. The default is 0.25.max_percentile - The maximum percentile to be used to calculate inter-quantile range (IQR). The value must be in range [0.02,0.98]. The default is 0.75.K - Non-negative constant value to detect mild or stronger outliers. The default value is 1.5.", "At least four data points are required in series to detect outliers.", "Returned value", "Returns an array of the same length as the input array where each value represents score of possible anomaly of corresponding element in the series. A non-zero score indicates a possible anomaly. Array."], "Examples": ["SELECT seriesOutliersDetectTukey([-3, 2, 15, 3, 5, 6, 4, 5, 12, 45, 12, 3, 3, 4, 5, 6]) AS print_0;", "SELECT seriesOutliersDetectTukey([-3, 2, 15, 3, 5, 6, 4.50, 5, 12, 45, 12, 3.40, 3, 4, 5, 6], 0.2, 0.8, 1.5) AS print_0;"], "Category": ["Time Series Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/time-series-functions"], "Title": ["seriesPeriodDetectFFT"], "Feature": ["seriesPeriodDetectFFT(series);"], "Description": ["seriesPeriodDetectFFT", "Finds the period of the given series data data using FFT\nFFT - Fast Fourier transform", "Syntax", "seriesPeriodDetectFFT(series);", "Arguments", "series - An array of numeric values", "Returned value", "A real value equal to the period of series data. NaN when number of data points are less than four. Float64."], "Examples": ["SELECT seriesPeriodDetectFFT([1, 4, 6, 1, 4, 6, 1, 4, 6, 1, 4, 6, 1, 4, 6, 1, 4, 6, 1, 4, 6]) AS print_0;", "SELECT seriesPeriodDetectFFT(arrayMap(x -> abs((x % 6) - 3), range(1000))) AS print_0;"], "Category": ["Time Series Functions"]}
{"HTML": ["https://clickhouse.com/docs/en/sql-reference/functions/time-series-functions"], "Title": ["seriesDecomposeSTL"], "Feature": ["seriesDecomposeSTL(series, period);"], "Description": ["seriesDecomposeSTL", "Decomposes a series data using STL (Seasonal-Trend Decomposition Procedure Based on Loess) into a season, a trend and a residual component. ", "Syntax", "seriesDecomposeSTL(series, period);", "Arguments", "series - An array of numeric valuesperiod - A positive integer", "The number of data points in series should be at least twice the value of period.", "Returned value", "An array of four arrays where the first array include seasonal components, the second array - trend,\nthe third array - residue component, and the fourth array - baseline(seasonal + trend) component. Array."], "Examples": ["SELECT seriesDecomposeSTL([10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34, 10.1, 20.45, 40.34], 3) AS print_0;"], "Category": ["Time Series Functions"]}
