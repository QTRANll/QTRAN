{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/string-functions"
    ],
    "Title": [
        "extractTextFromHTML"
    ],
    "Feature": [
        "extractTextFromHTML(x)"
    ],
    "Description": [
        "extractTextFromHTML",
        "This function extracts plain text from HTML or XHTML.",
        "It does not conform 100% to the HTML, XML or XHTML specification but the implementation is reasonably accurate and fast. The rules are the following:",
        "Comments are skipped. Example: <!-- test -->. Comment must end with -->. Nested comments are disallowed.\nNote: constructions like <!--> and <!---> are not valid comments in HTML but they are skipped by other rules.CDATA is pasted verbatim. Note: CDATA is XML/XHTML-specific  and processed on a \"best-effort\" basis.script and style elements are removed with all their content. Note: it is assumed that closing tag cannot appear inside content. For example, in JS string literal has to be escaped like \"<\\/script>\".\nNote: comments and CDATA are possible inside script or style - then closing tags are not searched inside CDATA. Example: <script><![CDATA[</script>]]></script>. But they are still searched inside comments. Sometimes it becomes complicated: <script>var x = \"<!--\"; </script> var y = \"-->\"; alert(x + y);</script>\nNote: script and style can be the names of XML namespaces - then they are not treated like usual script or style elements. Example: <script:a>Hello</script:a>.\nNote: whitespaces are possible after closing tag name: </script > but not before: < / script>.Other tags or tag-like elements are skipped without inner content. Example: <a>.</a>\nNote: it is expected that this HTML is illegal: <a test=\">\"></a>\nNote: it also skips something like tags: <>, <!>, etc.\nNote: tag without end is skipped to the end of input: <hello   HTML and XML entities are not decoded. They must be processed by separate function.Whitespaces in the text are collapsed or inserted by specific rules.Whitespaces at the beginning and at the end are removed.Consecutive whitespaces are collapsed.But if the text is separated by other elements and there is no whitespace, it is inserted.It may cause unnatural examples: Hello<b>world</b>, Hello<!-- -->world - there is no whitespace in HTML, but the function inserts it. Also consider: Hello<p>world</p>, Hello<br>world. This behavior is reasonable for data analysis, e.g. to convert HTML to a bag of words.Also note that correct handling of whitespaces requires the support of <pre></pre> and CSS display and white-space properties.",
        "Syntax",
        "extractTextFromHTML(x)",
        "Arguments",
        "x \u2014 input text. String.",
        "Returned value",
        "Extracted text. String."
    ],
    "Examples": [
        "SELECT extractTextFromHTML(' <p> A text <i>with</i><b>tags</b>. <!-- comments --> </p> ');SELECT extractTextFromHTML('<![CDATA[The content within <b>CDATA</b>]]> <script>alert(\"Script\");</script>');SELECT extractTextFromHTML(html) FROM url('http://www.donothingfor2minutes.com/', RawBLOB, 'html String');"
    ],
    "Category": [
        "Strings Functions"
    ]
}