{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/table-functions/s3"
    ],
    "Title": [
        "Usage"
    ],
    "Feature": [
        "Usage"
    ],
    "Description": [
        "Usage",
        "Suppose that we have several files with following URIs on S3:",
        "'https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/some_prefix/some_file_1.csv''https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/some_prefix/some_file_2.csv''https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/some_prefix/some_file_3.csv''https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/some_prefix/some_file_4.csv''https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/another_prefix/some_file_1.csv''https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/another_prefix/some_file_2.csv''https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/another_prefix/some_file_3.csv''https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/another_prefix/some_file_4.csv'",
        "Count the amount of rows in files ending with numbers from 1 to 3:",
        "SELECT count(*)FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/{some,another}_prefix/some_file_{1..3}.csv', 'CSV', 'name String, value UInt32')",
        "\u250c\u2500count()\u2500\u2510\u2502      18 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "Count the total amount of rows in all files in these two directories:",
        "SELECT count(*)FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/{some,another}_prefix/*', 'CSV', 'name String, value UInt32')",
        "\u250c\u2500count()\u2500\u2510\u2502      24 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "TipIf your listing of files contains number ranges with leading zeros, use the construction with braces for each digit separately or use ?.",
        "Count the total amount of rows in files named file-000.csv, file-001.csv, ... , file-999.csv:",
        "SELECT count(*)FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/big_prefix/file-{000..999}.csv', 'CSV', 'name String, value UInt32');",
        "\u250c\u2500count()\u2500\u2510\u2502      12 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "Insert data into file test-data.csv.gz:",
        "INSERT INTO FUNCTION s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip')VALUES ('test-data', 1), ('test-data-2', 2);",
        "Insert data into file test-data.csv.gz from existing table:",
        "INSERT INTO FUNCTION s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip')SELECT name, value FROM existing_table;",
        "Glob ** can be used for recursive directory traversal. Consider the below example, it will fetch all files from my-test-bucket-768 directory recursively:",
        "SELECT * FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/**', 'CSV', 'name String, value UInt32', 'gzip');",
        "The below get data from all test-data.csv.gz files from any folder inside my-test-bucket directory recursively:",
        "SELECT * FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/**/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip');",
        "Note. It is possible to specify custom URL mappers in the server configuration file. Example:",
        "SELECT * FROM s3('s3://clickhouse-public-datasets/my-test-bucket-768/**/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip');",
        "The URL 's3://clickhouse-public-datasets/my-test-bucket-768/**/test-data.csv.gz' would be replaced to 'http://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/**/test-data.csv.gz'",
        "Custom mapper can be added into config.xml:",
        "<url_scheme_mappers>   <s3>      <to>https://{bucket}.s3.amazonaws.com</to>   </s3>   <gs>      <to>https://{bucket}.storage.googleapis.com</to>   </gs>   <oss>      <to>https://{bucket}.oss.aliyuncs.com</to>   </oss></url_scheme_mappers>",
        "For production use cases it is recommended to use named collections. Here is the example:",
        "CREATE NAMED COLLECTION creds AS        access_key_id = '***',        secret_access_key = '***';SELECT count(*)FROM s3(creds, url='https://s3-object-url.csv')"
    ],
    "Examples": [
        "SELECT count(*)FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/{some,another}_prefix/some_file_{1..3}.csv', 'CSV', 'name String, value UInt32')",
        "SELECT count(*)FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/{some,another}_prefix/*', 'CSV', 'name String, value UInt32')",
        "SELECT count(*)FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/big_prefix/file-{000..999}.csv', 'CSV', 'name String, value UInt32');",
        "INSERT INTO FUNCTION s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip')VALUES ('test-data', 1), ('test-data-2', 2);",
        "INSERT INTO FUNCTION s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip')SELECT name, value FROM existing_table;",
        "SELECT * FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/**', 'CSV', 'name String, value UInt32', 'gzip');",
        "SELECT * FROM s3('https://clickhouse-public-datasets.s3.amazonaws.com/my-test-bucket-768/**/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip');",
        "SELECT * FROM s3('s3://clickhouse-public-datasets/my-test-bucket-768/**/test-data.csv.gz', 'CSV', 'name String, value UInt32', 'gzip');",
        "CREATE NAMED COLLECTION creds AS        access_key_id = '***',        secret_access_key = '***';SELECT count(*)FROM s3(creds, url='https://s3-object-url.csv')"
    ],
    "Category": [
        "Table Functions"
    ]
}