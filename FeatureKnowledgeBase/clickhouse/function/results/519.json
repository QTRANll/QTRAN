{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/json-functions"
    ],
    "Title": [
        "JSONExtract functions"
    ],
    "Feature": [
        "isValidJSON(json)"
    ],
    "Description": [
        "JSONExtract functions",
        "The following functions are based on simdjson, and designed for more complex JSON parsing requirements.",
        "isValidJSON",
        "Checks that passed string is valid JSON.",
        "Syntax",
        "isValidJSON(json)"
    ],
    "Examples": [
        "SELECT isValidJSON('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}') = 1SELECT isValidJSON('not a json') = 0",
        "JSONHas(json [, indices_or_keys]...)",
        "SELECT JSONHas('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b') = 1SELECT JSONHas('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', 4) = 0",
        "SELECT JSONExtractKey('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 1) = 'a'SELECT JSONExtractKey('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 2) = 'b'SELECT JSONExtractKey('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', -1) = 'b'SELECT JSONExtractKey('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', -2) = 'a'SELECT JSONExtractString('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 1) = 'hello'",
        "JSONLength(json [, indices_or_keys]...)",
        "SELECT JSONLength('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b') = 3SELECT JSONLength('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}') = 2",
        "JSONType(json [, indices_or_keys]...)",
        "SELECT JSONType('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}') = 'Object'SELECT JSONType('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'a') = 'String'SELECT JSONType('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b') = 'Array'",
        "JSONExtractUInt(json [, indices_or_keys]...)",
        "SELECT JSONExtractUInt('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', -1) as x, toTypeName(x);",
        "JSONExtractInt(json [, indices_or_keys]...)",
        "SELECT JSONExtractInt('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', -1) as x, toTypeName(x);",
        "JSONExtractFloat(json [, indices_or_keys]...)",
        "SELECT JSONExtractFloat('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', 2) as x, toTypeName(x);",
        "JSONExtractBool(json\\[, indices_or_keys\\]...)",
        "SELECT JSONExtractBool('{\"passed\": true}', 'passed');",
        "JSONExtractString(json [, indices_or_keys]...)",
        "SELECT JSONExtractString('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'a') = 'hello'SELECT JSONExtractString('{\"abc\":\"\\\\n\\\\u0000\"}', 'abc') = '\\n\\0'SELECT JSONExtractString('{\"abc\":\"\\\\u263a\"}', 'abc') = '\u263a'SELECT JSONExtractString('{\"abc\":\"\\\\u263\"}', 'abc') = ''SELECT JSONExtractString('{\"abc\":\"hello}', 'abc') = ''",
        "JSONExtract(json [, indices_or_keys...], return_type)",
        "SELECT JSONExtract('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'Tuple(String, Array(Float64))') = ('hello',[-100,200,300])SELECT JSONExtract('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'Tuple(b Array(Float64), a String)') = ([-100,200,300],'hello')SELECT JSONExtract('{\"a\": \"hello\", \"b\": \"world\"}', 'Map(String, String)') = map('a',  'hello', 'b', 'world');SELECT JSONExtract('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', 'Array(Nullable(Int8))') = [-100, NULL, NULL]SELECT JSONExtract('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', 4, 'Nullable(Int64)') = NULLSELECT JSONExtract('{\"passed\": true}', 'passed', 'UInt8') = 1SELECT JSONExtract('{\"day\": \"Thursday\"}', 'day', 'Enum8(\\'Sunday\\' = 0, \\'Monday\\' = 1, \\'Tuesday\\' = 2, \\'Wednesday\\' = 3, \\'Thursday\\' = 4, \\'Friday\\' = 5, \\'Saturday\\' = 6)') = 'Thursday'SELECT JSONExtract('{\"day\": 5}', 'day', 'Enum8(\\'Sunday\\' = 0, \\'Monday\\' = 1, \\'Tuesday\\' = 2, \\'Wednesday\\' = 3, \\'Thursday\\' = 4, \\'Friday\\' = 5, \\'Saturday\\' = 6)') = 'Friday'",
        "JSONExtractKeysAndValues(json [, indices_or_keys...], value_type)",
        "SELECT JSONExtractKeysAndValues('{\"x\": {\"a\": 5, \"b\": 7, \"c\": 11}}', 'x', 'Int8') = [('a',5),('b',7),('c',11)];",
        "JSONExtractKeys(json[, a, b, c...])",
        "SELECT JSONExtractKeys('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}');",
        "JSONExtractRaw(json [, indices_or_keys]...)",
        "SELECT JSONExtractRaw('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b') = '[-100, 200.0, 300]';",
        "JSONExtractArrayRaw(json [, indices_or_keys...])",
        "SELECT JSONExtractArrayRaw('{\"a\": \"hello\", \"b\": [-100, 200.0, \"hello\"]}', 'b') = ['-100', '200.0', '\"hello\"'];",
        "JSONExtractKeysAndValuesRaw(json[, p, a, t, h])",
        "SELECT JSONExtractKeysAndValuesRaw('{\"a\": [-100, 200.0], \"b\":{\"c\": {\"d\": \"hello\", \"f\": \"world\"}}}');",
        "SELECT JSONExtractKeysAndValuesRaw('{\"a\": [-100, 200.0], \"b\":{\"c\": {\"d\": \"hello\", \"f\": \"world\"}}}', 'b');",
        "SELECT JSONExtractKeysAndValuesRaw('{\"a\": [-100, 200.0], \"b\":{\"c\": {\"d\": \"hello\", \"f\": \"world\"}}}', -1, 'c');",
        "JSON_EXISTS(json, path)",
        "SELECT JSON_EXISTS('{\"hello\":1}', '$.hello');SELECT JSON_EXISTS('{\"hello\":{\"world\":1}}', '$.hello.world');SELECT JSON_EXISTS('{\"hello\":[\"world\"]}', '$.hello[*]');SELECT JSON_EXISTS('{\"hello\":[\"world\"]}', '$.hello[0]');",
        "JSON_QUERY(json, path)",
        "SELECT JSON_QUERY('{\"hello\":\"world\"}', '$.hello');SELECT JSON_QUERY('{\"array\":[[0, 1, 2, 3, 4, 5], [0, -1, -2, -3, -4, -5]]}', '$.array[*][0 to 2, 4]');SELECT JSON_QUERY('{\"hello\":2}', '$.hello');SELECT toTypeName(JSON_QUERY('{\"hello\":2}', '$.hello'));",
        "JSON_VALUE(json, path)",
        "SELECT JSON_VALUE('{\"hello\":\"world\"}', '$.hello');SELECT JSON_VALUE('{\"array\":[[0, 1, 2, 3, 4, 5], [0, -1, -2, -3, -4, -5]]}', '$.array[*][0 to 2, 4]');SELECT JSON_VALUE('{\"hello\":2}', '$.hello');SELECT toTypeName(JSON_VALUE('{\"hello\":2}', '$.hello'));select JSON_VALUE('{\"hello\":\"world\"}', '$.b') settings function_json_value_return_type_allow_nullable=true;select JSON_VALUE('{\"hello\":{\"world\":\"!\"}}', '$.hello') settings function_json_value_return_type_allow_complex=true;",
        "toJSONString(value)",
        "SELECT toJSONString(map('key1', 1, 'key2', 2));SELECT toJSONString(tuple(1.25, NULL, NaN, +inf, -inf, [])) SETTINGS output_format_json_quote_denormals = 1;",
        "JSONArrayLength(json)",
        "SELECT    JSONArrayLength(''),    JSONArrayLength('[1,2,3]')\u250c\u2500JSONArrayLength('')\u2500\u252c\u2500JSONArrayLength('[1,2,3]')\u2500\u2510\u2502                \u1d3a\u1d41\u1d38\u1d38 \u2502                          3 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "jsonMergePatch(json1, json2, ...)",
        "SELECT jsonMergePatch('{\"a\":1}', '{\"name\": \"joey\"}', '{\"name\": \"tom\"}', '{\"name\": \"zoey\"}') AS res\u250c\u2500res\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 {\"a\":1,\"name\":\"zoey\"} \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "JSONAllPaths(json)",
        "CREATE TABLE test (json JSON(max_dynamic_paths=1)) ENGINE = Memory;INSERT INTO test FORMAT JSONEachRow {\"json\" : {\"a\" : 42}}, {\"json\" : {\"b\" : \"Hello\"}}, {\"json\" : {\"a\" : [1, 2, 3], \"c\" : \"2020-01-01\"}}SELECT json, JSONAllPaths(json) FROM test;",
        "JSONAllPathsWithTypes(json)",
        "CREATE TABLE test (json JSON(max_dynamic_paths=1)) ENGINE = Memory;INSERT INTO test FORMAT JSONEachRow {\"json\" : {\"a\" : 42}}, {\"json\" : {\"b\" : \"Hello\"}}, {\"json\" : {\"a\" : [1, 2, 3], \"c\" : \"2020-01-01\"}}SELECT json, JSONAllPathsWithTypes(json) FROM test;",
        "JSONDynamicPaths(json)",
        "CREATE TABLE test (json JSON(max_dynamic_paths=1)) ENGINE = Memory;INSERT INTO test FORMAT JSONEachRow {\"json\" : {\"a\" : 42}}, {\"json\" : {\"b\" : \"Hello\"}}, {\"json\" : {\"a\" : [1, 2, 3], \"c\" : \"2020-01-01\"}}SELECT json, JSONDynamicPaths(json) FROM test;",
        "JSONAllPathsWithTypes(json)",
        "CREATE TABLE test (json JSON(max_dynamic_paths=1)) ENGINE = Memory;INSERT INTO test FORMAT JSONEachRow {\"json\" : {\"a\" : 42}}, {\"json\" : {\"b\" : \"Hello\"}}, {\"json\" : {\"a\" : [1, 2, 3], \"c\" : \"2020-01-01\"}}SELECT json, JSONDynamicPathsWithTypes(json) FROM test;",
        "JSONSharedDataPaths(json)",
        "CREATE TABLE test (json JSON(max_dynamic_paths=1)) ENGINE = Memory;INSERT INTO test FORMAT JSONEachRow {\"json\" : {\"a\" : 42}}, {\"json\" : {\"b\" : \"Hello\"}}, {\"json\" : {\"a\" : [1, 2, 3], \"c\" : \"2020-01-01\"}}SELECT json, JSONSharedDataPaths(json) FROM test;",
        "JSONSharedDataPathsWithTypes(json)",
        "CREATE TABLE test (json JSON(max_dynamic_paths=1)) ENGINE = Memory;INSERT INTO test FORMAT JSONEachRow {\"json\" : {\"a\" : 42}}, {\"json\" : {\"b\" : \"Hello\"}}, {\"json\" : {\"a\" : [1, 2, 3], \"c\" : \"2020-01-01\"}}SELECT json, JSONSharedDataPathsWithTypes(json) FROM test;"
    ],
    "Category": [
        "JSON Functions"
    ],
    "EffectiveSQLsRefined": [
        "SELECT JSONExtractUInt('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', -1) as x, toTypeName(x);",
        "SELECT JSONExtractInt('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', -1) as x, toTypeName(x);",
        "SELECT JSONExtractFloat('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b', 2) as x, toTypeName(x);",
        "SELECT JSONExtractBool('{\"passed\": true}', 'passed');",
        "SELECT JSONExtractKeysAndValues('{\"x\": {\"a\": 5, \"b\": 7, \"c\": 11}}', 'x', 'Int8') = [('a',5),('b',7),('c',11)];",
        "SELECT JSONExtractKeys('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}');",
        "SELECT JSONExtractRaw('{\"a\": \"hello\", \"b\": [-100, 200.0, 300]}', 'b') = '[-100, 200.0, 300]';",
        "SELECT JSONExtractArrayRaw('{\"a\": \"hello\", \"b\": [-100, 200.0, \"hello\"]}', 'b') = ['-100', '200.0', '\"hello\"'];",
        "SELECT JSONExtractKeysAndValuesRaw('{\"a\": [-100, 200.0], \"b\":{\"c\": {\"d\": \"hello\", \"f\": \"world\"}}}');",
        "SELECT JSONExtractKeysAndValuesRaw('{\"a\": [-100, 200.0], \"b\":{\"c\": {\"d\": \"hello\", \"f\": \"world\"}}}', 'b');",
        "SELECT JSONExtractKeysAndValuesRaw('{\"a\": [-100, 200.0], \"b\":{\"c\": {\"d\": \"hello\", \"f\": \"world\"}}}', -1, 'c');",
        "SELECT JSON_EXISTS('{\"hello\":[\"world\"]}', '$.hello[*]');",
        "SELECT JSON_EXISTS('{\"hello\":[\"world\"]}', '$.hello[0]');",
        "SELECT JSON_QUERY('{\"hello\":\"world\"}', '$.hello');",
        "SELECT JSON_QUERY('{\"array\":[[0, 1, 2, 3, 4, 5], [0, -1, -2, -3, -4, -5]]}', '$.array[*][0 to 2, 4]');",
        "SELECT JSON_VALUE('{\"hello\":\"world\"}', '$.hello');",
        "SELECT JSON_VALUE('{\"array\":[[0, 1, 2, 3, 4, 5], [0, -1, -2, -3, -4, -5]]}', '$.array[*][0 to 2, 4]');",
        "select JSON_VALUE('{\"hello\":\"world\"}', '$.b') settings function_json_value_return_type_allow_nullable=true;",
        "select JSON_VALUE('{\"hello\":{\"world\":\"!\"}}', '$.hello') settings function_json_value_return_type_allow_complex=true;",
        "SELECT toJSONString(map('key1', 1, 'key2', 2));",
        "SELECT toJSONString(tuple(1.25, NULL, NaN, +inf, -inf, [])) SETTINGS output_format_json_quote_denormals = 1;"
    ]
}