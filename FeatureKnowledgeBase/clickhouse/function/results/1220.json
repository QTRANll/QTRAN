{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/aggregate-functions/reference/summap"
    ],
    "Title": [
        "sumMap"
    ],
    "Feature": [
        "CREATE TABLE sum_map(    date Date,    timeslot DateTime,    statusMap Nested(        status UInt16,        requests UInt64    ),    statusMapTuple Tuple(Array(Int32), Array(Int32))) ENGINE = Log;"
    ],
    "Description": [
        "sumMap",
        "Totals a value array according to the keys specified in the key array. Returns a tuple of two arrays: keys in sorted order, and values summed for the corresponding keys without overflow.",
        "Syntax",
        "sumMap(key <Array>, value <Array>) Array type.sumMap(Tuple(key <Array>, value <Array>)) Tuple type.",
        "Alias: sumMappedArrays.",
        "Arguments ",
        "key: Array of keys.value: Array of values.",
        "Passing a tuple of key and value arrays is a synonym to passing separately an array of keys and an array of values.",
        "NoteThe number of elements in key and value must be the same for each row that is totaled.",
        "Returned Value ",
        "Returns a tuple of two arrays: keys in sorted order, and values summed for the corresponding keys."
    ],
    "Examples": [
        "CREATE TABLE sum_map(    date Date,    timeslot DateTime,    statusMap Nested(        status UInt16,        requests UInt64    ),    statusMapTuple Tuple(Array(Int32), Array(Int32))) ENGINE = Log;",
        "INSERT INTO sum_map VALUES    ('2000-01-01', '2000-01-01 00:00:00', [1, 2, 3], [10, 10, 10], ([1, 2, 3], [10, 10, 10])),    ('2000-01-01', '2000-01-01 00:00:00', [3, 4, 5], [10, 10, 10], ([3, 4, 5], [10, 10, 10])),    ('2000-01-01', '2000-01-01 00:01:00', [4, 5, 6], [10, 10, 10], ([4, 5, 6], [10, 10, 10])),    ('2000-01-01', '2000-01-01 00:01:00', [6, 7, 8], [10, 10, 10], ([6, 7, 8], [10, 10, 10]));",
        "SELECT    timeslot,    sumMap(statusMap.status, statusMap.requests),    sumMap(statusMapTuple)FROM sum_mapGROUP BY timeslot"
    ],
    "Category": [
        "Aggregate Functions"
    ],
    "EffectiveSQLsRefined": [
        "INSERT INTO sum_map VALUES    ('2000-01-01', '2000-01-01 00:00:00', [1, 2, 3], [10, 10, 10], ([1, 2, 3], [10, 10, 10])),    ('2000-01-01', '2000-01-01 00:00:00', [3, 4, 5], [10, 10, 10], ([3, 4, 5], [10, 10, 10])),    ('2000-01-01', '2000-01-01 00:01:00', [4, 5, 6], [10, 10, 10], ([4, 5, 6], [10, 10, 10])),    ('2000-01-01', '2000-01-01 00:01:00', [6, 7, 8], [10, 10, 10], ([6, 7, 8], [10, 10, 10]));"
    ]
}