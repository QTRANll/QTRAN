{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions"
    ],
    "Title": [
        "toStartOfInterval"
    ],
    "Feature": [
        "toStartOfInterval(value, INTERVAL x unit[, time_zone])toStartOfInterval(value, INTERVAL x unit[, origin[, time_zone]])"
    ],
    "Description": [
        "toStartOfInterval",
        "This function generalizes other toStartOf*() functions with toStartOfInterval(date_or_date_with_time, INTERVAL x unit [, time_zone]) syntax.\nFor example,",
        "toStartOfInterval(t, INTERVAL 1 YEAR) returns the same as toStartOfYear(t),toStartOfInterval(t, INTERVAL 1 MONTH) returns the same as toStartOfMonth(t),toStartOfInterval(t, INTERVAL 1 DAY) returns the same as toStartOfDay(t),toStartOfInterval(t, INTERVAL 15 MINUTE) returns the same as toStartOfFifteenMinutes(t).",
        "The calculation is performed relative to specific points in time:",
        "IntervalStartYEARyear 0QUARTER1900 Q1MONTH1900 JanuaryWEEK1970, 1st week (01-05)DAY1970-01-01HOUR(*)MINUTE1970-01-01 00:00:00SECOND1970-01-01 00:00:00MILLISECOND1970-01-01 00:00:00MICROSECOND1970-01-01 00:00:00NANOSECOND1970-01-01 00:00:00",
        "(*) hour intervals are special: the calculation is always performed relative to 00:00:00 (midnight) of the current day. As a result, only\nhour values between 1 and 23 are useful.",
        "If unit WEEK was specified, toStartOfInterval assumes that weeks start on Monday. Note that this behavior is different from that of function toStartOfWeek in which weeks start by default on Sunday.",
        "Syntax",
        "toStartOfInterval(value, INTERVAL x unit[, time_zone])toStartOfInterval(value, INTERVAL x unit[, origin[, time_zone]])",
        "Aliases: time_bucket, date_bin.",
        "The second overload emulates TimescaleDB's time_bucket() function, respectively PostgreSQL's date_bin() function, e.g.",
        "SELECT toStartOfInterval(toDateTime('2023-01-01 14:45:00'), INTERVAL 1 MINUTE, toDateTime('2023-01-01 14:35:30'));",
        "Result:",
        "\u250c\u2500\u2500\u2500toStartOfInterval(...)\u2500\u2510\u2502      2023-01-01 14:44:30 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "See Also",
        "date_trunc"
    ],
    "Examples": [
        "toStartOfInterval(value, INTERVAL x unit[, time_zone])toStartOfInterval(value, INTERVAL x unit[, origin[, time_zone]])"
    ],
    "Category": [
        "Dates and Times Functions"
    ],
    "EffectiveSQLsRefined": []
}