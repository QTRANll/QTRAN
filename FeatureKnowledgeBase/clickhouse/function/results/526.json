{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/tuple-map-functions"
    ],
    "Title": [
        "extractKeyValuePairs"
    ],
    "Feature": [
        "extractKeyValuePairs(data[, key_value_delimiter[, pair_delimiter[, quoting_character]]])"
    ],
    "Description": [
        "extractKeyValuePairs",
        "Converts a string of key-value pairs to a Map(String, String).\nParsing is tolerant towards noise (e.g. log files).\nKey-value pairs in the input string consist of a key, followed by a key-value delimiter, and a value.\nKey value pairs are separated by a pair delimiter.\nKeys and values can be quoted.",
        "Syntax",
        "extractKeyValuePairs(data[, key_value_delimiter[, pair_delimiter[, quoting_character]]])",
        "Alias:",
        "str_to_mapmapFromString",
        "Arguments",
        "data - String to extract key-value pairs from. String or FixedString.key_value_delimiter - Single character delimiting keys and values. Defaults to :. String or FixedString.pair_delimiters - Set of character delimiting pairs. Defaults to  , , and ;. String or FixedString.quoting_character - Single character used as quoting character. Defaults to \". String or FixedString.",
        "Returned values",
        "A of key-value pairs. Type: Map(String, String) "
    ],
    "Examples": [
        "SELECT extractKeyValuePairs('name:neymar, age:31 team:psg,nationality:brazil') as kv",
        "SELECT extractKeyValuePairs('name:\\'neymar\\';\\'age\\':31;team:psg;nationality:brazil,last_key:last_value', ':', ';,', '\\'') as kv",
        "SELECT extractKeyValuePairs('age:a\\\\x0A\\\\n\\\\0') AS kv",
        "SELECT    map('John', '33', 'Paula', '31') AS m,    toString(m) as map_serialized,    extractKeyValuePairs(map_serialized, ':', ',', '\\'') AS map_restoredFORMAT Vertical;"
    ],
    "Category": [
        "Maps Functions"
    ],
    "EffectiveSQLsRefined": []
}