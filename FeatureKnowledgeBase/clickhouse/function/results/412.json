{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/encoding-functions"
    ],
    "Title": [
        "hex"
    ],
    "Feature": [
        "hex(arg)"
    ],
    "Description": [
        "hex",
        "Returns a string containing the argument\u2019s hexadecimal representation.",
        "Alias: HEX.",
        "Syntax",
        "hex(arg)",
        "The function is using uppercase letters A-F and not using any prefixes (like 0x) or suffixes (like h).",
        "For integer arguments, it prints hex digits (\u201cnibbles\u201d) from the most significant to least significant (big-endian or \u201chuman-readable\u201d order). It starts with the most significant non-zero byte (leading zero bytes are omitted) but always prints both digits of every byte even if the leading digit is zero.",
        "Values of type Date and DateTime are formatted as corresponding integers (the number of days since Epoch for Date and the value of Unix Timestamp for DateTime).",
        "For String and FixedString, all bytes are simply encoded as two hexadecimal numbers. Zero bytes are not omitted.",
        "Values of Float and Decimal types are encoded as their representation in memory. As we support little-endian architecture, they are encoded in little-endian. Zero leading/trailing bytes are not omitted.",
        "Values of UUID type are encoded as big-endian order string.",
        "Arguments",
        "arg \u2014 A value to convert to hexadecimal. Types: String, UInt, Float, Decimal, Date or DateTime.",
        "Returned value",
        "A string with the hexadecimal representation of the argument. String."
    ],
    "Examples": [
        "SELECT hex(1);",
        "SELECT hex(toFloat32(number)) AS hex_presentation FROM numbers(15, 2);",
        "SELECT hex(toFloat64(number)) AS hex_presentation FROM numbers(15, 2);",
        "SELECT lower(hex(toUUID('61f0c404-5cb3-11e7-907b-a6006ad3dba0'))) as uuid_hex"
    ],
    "Category": [
        "Encoding Functions"
    ]
}