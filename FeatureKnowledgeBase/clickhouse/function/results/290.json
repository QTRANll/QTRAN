{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/ext-dict-functions"
    ],
    "Title": [
        "dictGet, dictGetOrDefault, dictGetOrNull"
    ],
    "Feature": [
        "dictGet, dictGetOrDefault, dictGetOrNull"
    ],
    "Description": [
        "dictGet, dictGetOrDefault, dictGetOrNull",
        "Retrieves values from a dictionary.",
        "dictGet('dict_name', attr_names, id_expr)dictGetOrDefault('dict_name', attr_names, id_expr, default_value_expr)dictGetOrNull('dict_name', attr_name, id_expr)",
        "Arguments",
        "dict_name \u2014 Name of the dictionary. String literal.attr_names \u2014 Name of the column of the dictionary, String literal, or tuple of column names, Tuple(String literal).id_expr \u2014 Key value. Expression returning dictionary key-type value or Tuple-type value depending on the dictionary configuration.default_value_expr \u2014 Values returned if the dictionary does not contain a row with the id_expr key. Expression or Tuple(Expression), returning the value (or values) in the data types configured for the attr_names attribute.",
        "Returned value",
        "If ClickHouse parses the attribute successfully in the attribute\u2019s data type, functions return the value of the dictionary attribute that corresponds to id_expr.If there is no the key, corresponding to id_expr, in the dictionary, then:  - `dictGet` returns the content of the `<null_value>` element specified for the attribute in the dictionary configuration.  - `dictGetOrDefault` returns the value passed as the `default_value_expr` parameter.  - `dictGetOrNull` returns `NULL` in case key was not found in dictionary.",
        "ClickHouse throws an exception if it cannot parse the value of the attribute or the value does not match the attribute data type.",
        "Example for simple key dictionary",
        "Create a text file ext-dict-test.csv containing the following:",
        "1,12,2",
        "The first column is id, the second column is c1.",
        "Configure the dictionary:",
        "<clickhouse>    <dictionary>        <name>ext-dict-test</name>        <source>            <file>                <path>/path-to/ext-dict-test.csv</path>                <format>CSV</format>            </file>        </source>        <layout>            <flat />        </layout>        <structure>            <id>                <name>id</name>            </id>            <attribute>                <name>c1</name>                <type>UInt32</type>                <null_value></null_value>            </attribute>        </structure>        <lifetime>0</lifetime>    </dictionary></clickhouse>",
        "Perform the query:",
        "SELECT    dictGetOrDefault('ext-dict-test', 'c1', number + 1, toUInt32(number * 10)) AS val,    toTypeName(val) AS typeFROM system.numbersLIMIT 3;",
        "\u250c\u2500val\u2500\u252c\u2500type\u2500\u2500\u2500\u2510\u2502   1 \u2502 UInt32 \u2502\u2502   2 \u2502 UInt32 \u2502\u2502  20 \u2502 UInt32 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "Example for complex key dictionary",
        "Create a text file ext-dict-mult.csv containing the following:",
        "1,1,'1'2,2,'2'3,3,'3'",
        "The first column is id, the second is c1, the third is c2.",
        "Configure the dictionary:",
        "<clickhouse>    <dictionary>        <name>ext-dict-mult</name>        <source>            <file>                <path>/path-to/ext-dict-mult.csv</path>                <format>CSV</format>            </file>        </source>        <layout>            <flat />        </layout>        <structure>            <id>                <name>id</name>            </id>            <attribute>                <name>c1</name>                <type>UInt32</type>                <null_value></null_value>            </attribute>            <attribute>                <name>c2</name>                <type>String</type>                <null_value></null_value>            </attribute>        </structure>        <lifetime>0</lifetime>    </dictionary></clickhouse>",
        "Perform the query:",
        "SELECT    dictGet('ext-dict-mult', ('c1','c2'), number + 1) AS val,    toTypeName(val) AS typeFROM system.numbersLIMIT 3;",
        "\u250c\u2500val\u2500\u2500\u2500\u2500\u2500\u252c\u2500type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502 (1,'1') \u2502 Tuple(UInt8, String)  \u2502\u2502 (2,'2') \u2502 Tuple(UInt8, String)  \u2502\u2502 (3,'3') \u2502 Tuple(UInt8, String)  \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518",
        "Example for range key dictionary",
        "Input table:",
        "CREATE TABLE range_key_dictionary_source_table(    key UInt64,    start_date Date,    end_date Date,    value String,    value_nullable Nullable(String))ENGINE = TinyLog();INSERT INTO range_key_dictionary_source_table VALUES(1, toDate('2019-05-20'), toDate('2019-05-20'), 'First', 'First');INSERT INTO range_key_dictionary_source_table VALUES(2, toDate('2019-05-20'), toDate('2019-05-20'), 'Second', NULL);INSERT INTO range_key_dictionary_source_table VALUES(3, toDate('2019-05-20'), toDate('2019-05-20'), 'Third', 'Third');",
        "Create the dictionary:",
        "CREATE DICTIONARY range_key_dictionary(    key UInt64,    start_date Date,    end_date Date,    value String,    value_nullable Nullable(String))PRIMARY KEY keySOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'range_key_dictionary_source_table'))LIFETIME(MIN 1 MAX 1000)LAYOUT(RANGE_HASHED())RANGE(MIN start_date MAX end_date);",
        "Perform the query:",
        "SELECT    (number, toDate('2019-05-20')),    dictHas('range_key_dictionary', number, toDate('2019-05-20')),    dictGetOrNull('range_key_dictionary', 'value', number, toDate('2019-05-20')),    dictGetOrNull('range_key_dictionary', 'value_nullable', number, toDate('2019-05-20')),    dictGetOrNull('range_key_dictionary', ('value', 'value_nullable'), number, toDate('2019-05-20'))FROM system.numbers LIMIT 5 FORMAT TabSeparated;",
        "Result:",
        "(0,'2019-05-20')        0       \\N      \\N      (NULL,NULL)(1,'2019-05-20')        1       First   First   ('First','First')(2,'2019-05-20')        1       Second  \\N      ('Second',NULL)(3,'2019-05-20')        1       Third   Third   ('Third','Third')(4,'2019-05-20')        0       \\N      \\N      (NULL,NULL)",
        "See Also",
        "Dictionaries"
    ],
    "Examples": [
        "dictGet('dict_name', attr_names, id_expr)dictGetOrDefault('dict_name', attr_names, id_expr, default_value_expr)dictGetOrNull('dict_name', attr_name, id_expr)",
        "SELECT    dictGetOrDefault('ext-dict-test', 'c1', number + 1, toUInt32(number * 10)) AS val,    toTypeName(val) AS typeFROM system.numbersLIMIT 3;",
        "SELECT    dictGet('ext-dict-mult', ('c1','c2'), number + 1) AS val,    toTypeName(val) AS typeFROM system.numbersLIMIT 3;",
        "CREATE TABLE range_key_dictionary_source_table(    key UInt64,    start_date Date,    end_date Date,    value String,    value_nullable Nullable(String))ENGINE = TinyLog();INSERT INTO range_key_dictionary_source_table VALUES(1, toDate('2019-05-20'), toDate('2019-05-20'), 'First', 'First');INSERT INTO range_key_dictionary_source_table VALUES(2, toDate('2019-05-20'), toDate('2019-05-20'), 'Second', NULL);INSERT INTO range_key_dictionary_source_table VALUES(3, toDate('2019-05-20'), toDate('2019-05-20'), 'Third', 'Third');",
        "CREATE DICTIONARY range_key_dictionary(    key UInt64,    start_date Date,    end_date Date,    value String,    value_nullable Nullable(String))PRIMARY KEY keySOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'range_key_dictionary_source_table'))LIFETIME(MIN 1 MAX 1000)LAYOUT(RANGE_HASHED())RANGE(MIN start_date MAX end_date);",
        "SELECT    (number, toDate('2019-05-20')),    dictHas('range_key_dictionary', number, toDate('2019-05-20')),    dictGetOrNull('range_key_dictionary', 'value', number, toDate('2019-05-20')),    dictGetOrNull('range_key_dictionary', 'value_nullable', number, toDate('2019-05-20')),    dictGetOrNull('range_key_dictionary', ('value', 'value_nullable'), number, toDate('2019-05-20'))FROM system.numbers LIMIT 5 FORMAT TabSeparated;"
    ],
    "Category": [
        "Dictionaries Functions"
    ]
}