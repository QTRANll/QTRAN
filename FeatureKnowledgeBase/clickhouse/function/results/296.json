{
    "HTML": [
        "https://clickhouse.com/docs/en/sql-reference/functions/ext-dict-functions"
    ],
    "Title": [
        "dictGetAll"
    ],
    "Feature": [
        "dictGetAll('dict_name', attr_names, id_expr[, limit])"
    ],
    "Description": [
        "dictGetAll",
        "Retrieves the attribute values of all nodes that matched each key in a regular expression tree dictionary.",
        "Besides returning values of type Array(T) instead of T, this function behaves similarly to dictGet.",
        "Syntax",
        "dictGetAll('dict_name', attr_names, id_expr[, limit])",
        "Arguments",
        "dict_name \u2014 Name of the dictionary. String literal.attr_names \u2014 Name of the column of the dictionary, String literal, or tuple of column names, Tuple(String literal).id_expr \u2014 Key value. Expression returning array of dictionary key-type value or Tuple-type value depending on the dictionary configuration.limit - Maximum length for each value array returned. When truncating, child nodes are given precedence over parent nodes, and otherwise the defined list order for the regexp tree dictionary is respected. If unspecified, array length is unlimited.",
        "Returned value",
        "If ClickHouse parses the attribute successfully in the attribute\u2019s data type as defined in the dictionary, returns an array of dictionary attribute values that correspond to id_expr for each attribute specified by attr_names.If there is no key corresponding to id_expr in the dictionary, then an empty array is returned.",
        "ClickHouse throws an exception if it cannot parse the value of the attribute or the value does not match the attribute data type."
    ],
    "Examples": [
        "CREATE DICTIONARY regexp_dict(    regexp String,    tag String)PRIMARY KEY(regexp)SOURCE(YAMLRegExpTree(PATH '/var/lib/clickhouse/user_files/regexp_tree.yaml'))LAYOUT(regexp_tree)...",
        "SELECT dictGetAll('regexp_dict', 'tag', 'foobarbaz');",
        "SELECT dictGetAll('regexp_dict', 'tag', 'foobarbaz', 2);"
    ],
    "Category": [
        "Dictionaries Functions"
    ],
    "EffectiveSQLsRefined": []
}