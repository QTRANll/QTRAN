{"HTML": ["https://mariadb.com//kb/en/assignment-operator/"], "Title": ["Assignment Operator (:=)"], "Feature": ["var_name := expr\n"], "Description": ["Assignment operator for assigning a value. The value on the right is assigned to the variable on left.", "Unlike the = operator, := can always be used to assign a value to a variable.", "This operator works with both user-defined variables and local variables.", "When assigning the same value to several variables, LAST_VALUE() can be useful."], "Examples": [" SELECT @x := 10;\n+----------+\n| @x := 10 |\n+----------+\n|       10 |\n+----------+\n\nSELECT @x, @y := @x;\n+------+----------+\n| @x   | @y := @x |\n+------+----------+\n|   10 |       10 |\n+------+----------+\n"], "Category": ["Assignment Operators"]}
{"HTML": ["https://mariadb.com//kb/en/assignment-operators-assignment-operator/"], "Title": ["Assignment Operator (=)"], "Feature": ["identifier = expr\n"], "Description": ["The equal sign is used as both an assignment operator in certain contexts, and as a comparison operator. When used as assignment operator, the value on the right is assigned to the variable (or column, in some contexts) on the left.", "Since its use can be ambiguous, unlike the := assignment operator, the = assignment operator cannot be used in all contexts, and is only valid as part of a SET statement, or the SET clause of an UPDATE statement", "This operator works with both user-defined variables and local variables."], "Examples": ["UPDATE table_name SET x = 2 WHERE x > 100;\n", "SET @x = 1, @y := 2;\n"], "Category": ["Assignment Operators"]}
