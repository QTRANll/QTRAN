{
    "HTML": [
        "https://mariadb.com/kb/en/double/"
    ],
    "Title": [
        "DOUBLE"
    ],
    "Feature": [
        "DOUBLE[(M,D)] [SIGNED | UNSIGNED | ZEROFILL]\nDOUBLE PRECISION[(M,D)] [SIGNED | UNSIGNED | ZEROFILL]\nREAL[(M,D)] [SIGNED | UNSIGNED | ZEROFILL]\n"
    ],
    "Description": [
        "A normal-size (double-precision) floating-point number (see FLOAT for a single-precision floating-point number).",
        "Allowable values are:",
        "-1.7976931348623157E+308 to -2.2250738585072014E-308\n0\n2.2250738585072014E-308 to 1.7976931348623157E+308\n",
        "These are the theoretical limits, based on the IEEE standard. The actual range\nmight be slightly smaller depending on your hardware or operating system.",
        "M is the total number of digits and D is the number of digits\nfollowing the decimal point. If M and D are omitted, values are stored\nto the limits allowed by the hardware. A double-precision\nfloating-point number is accurate to approximately 15 decimal places.",
        "UNSIGNED, if specified, disallows negative values.",
        "ZEROFILL, if specified, pads the number with zeros, up to the total number\nof digits specified by M.",
        "REAL and DOUBLE PRECISION are synonyms, unless the REAL_AS_FLOAT SQL mode is enabled, in which case REAL is a synonym for FLOAT rather than DOUBLE.",
        "See Floating Point Accuracy for issues when using floating-point numbers.",
        "For more details on the attributes, see Numeric Data Type Overview."
    ],
    "Examples": [
        "CREATE TABLE t1 (d DOUBLE(5,0) zerofill);\n\nINSERT INTO t1 VALUES (1),(2),(3),(4);\n\nSELECT * FROM t1;\n+-------+\n| d     |\n+-------+\n| 00001 |\n| 00002 |\n| 00003 |\n| 00004 |\n+-------+\n"
    ],
    "Category": [
        "Numeric Data Types"
    ],
    "EffectiveSQLsRefined": [
        "INSERT INTO t1 VALUES (1),(2),(3),(4);",
        "SELECT * FROM t1;"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "INSERT INTO t1 VALUES (1),(2),(3),(4);",
        "SELECT * FROM t1;"
    ]
}