{
    "HTML": [
        "https://mariadb.com//kb/en/column_create/"
    ],
    "Title": [
        "COLUMN_CREATE"
    ],
    "Feature": [
        "COLUMN_CREATE(column_nr, value [as type], [column_nr, value [as type]]...);\nCOLUMN_CREATE(column_name, value [as type], [column_name, value [as type]]...);\n"
    ],
    "Description": [
        "Returns a dynamic columns blob that stores the specified columns with values.",
        "The return value is suitable for ",
        "storing in a table\nfurther modification with other dynamic columns functions\n",
        "The as type part allows one to specify the value type. In most cases,\nthis is redundant because MariaDB will be able to deduce the type of the\nvalue. Explicit type specification may be needed when the type of the value is\nnot apparent. For example, a literal '2012-12-01' has a CHAR type by\ndefault, one will need to specify '2012-12-01' AS DATE to have it stored as\na date. See Dynamic Columns:Datatypes for further details."
    ],
    "Examples": [
        "INSERT INTO tbl SET dyncol_blob=COLUMN_CREATE(\"column_name\", \"value\");\n"
    ],
    "Category": [
        "Dynamic Columns Functions"
    ],
    "EffectiveSQLsRefined": [],
    "EffectiveSQLsGenerated": [
        "COLUMN_CREATE(1, 'value1', 2, 'value2' AS CHAR);",
        "SELECT COLUMN_CREATE(1, 'value1', 2, 'value2' AS CHAR);"
    ],
    "EffectiveSQLsGeneratedCosts": [
        {
            "Total Tokens": 459,
            "Prompt Tokens": 427,
            "Completion Tokens": 32,
            "Total Cost (USD)": 8.324999999999999e-05
        },
        {
            "Total Tokens": 664,
            "Prompt Tokens": 631,
            "Completion Tokens": 33,
            "Total Cost (USD)": 0.00011444999999999999
        }
    ],
    "EffectiveSQLsGeneratedErrors": [
        "(pymysql.err.ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'COLUMN_CREATE(1, 'value1', 2, 'value2' AS CHAR)' at line 1\")\n",
        "None"
    ],
    "EffectiveSQLs": [
        "SELECT COLUMN_CREATE(1, 'value1', 2, 'value2' AS CHAR);"
    ]
}