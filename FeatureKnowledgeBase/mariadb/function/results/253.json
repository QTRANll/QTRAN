{
    "HTML": [
        "https://mariadb.com//kb/en/regexp_replace/"
    ],
    "Title": [
        "REGEXP_REPLACE"
    ],
    "Feature": [
        "REGEXP_REPLACE(subject, pattern, replace)\n"
    ],
    "Description": [
        "REGEXP_REPLACE returns the string subject with all occurrences of the regular expression pattern replaced by the string replace. If no occurrences are found, then subject is returned as is.",
        "The replace string can have backreferences to the subexpressions in the form \\N, where N is a number from 1 to 9.",
        "The function follows the case sensitivity rules of the effective collation. Matching is performed case insensitively for case insensitive collations, and case sensitively for case sensitive collations and for binary data.",
        "The collation case sensitivity can be overwritten using the (?i) and (?-i) PCRE flags.",
        "MariaDB uses the PCRE regular expression library for enhanced regular expression performance, and REGEXP_REPLACE was introduced as part of this enhancement.",
        "The default_regex_flags variable addresses the remaining compatibilities between PCRE and the old regex library. "
    ],
    "Examples": [
        "SELECT REGEXP_REPLACE('ab12cd','[0-9]','') AS remove_digits;\n-> abcd\n\nSELECT REGEXP_REPLACE('<html><head><title>title</title><body>body</body></htm>', '<.+?>',' ')\nAS strip_html;\n-> title  body\n",
        "SELECT REGEXP_REPLACE('James Bond','^(.*) (.*)$','\\\\2, \\\\1') AS reorder_name;\n-> Bond, James\n",
        "SELECT REGEXP_REPLACE('ABC','b','-') AS case_insensitive;\n-> A-C\n\nSELECT REGEXP_REPLACE('ABC' COLLATE utf8_bin,'b','-') AS case_sensitive;\n-> ABC\n\nSELECT REGEXP_REPLACE(BINARY 'ABC','b','-') AS binary_data;\n-> ABC\n",
        "SELECT REGEXP_REPLACE('ABC','(?-i)b','-') AS force_case_sensitive;\n-> ABC\n\nSELECT REGEXP_REPLACE(BINARY 'ABC','(?i)b','-') AS force_case_insensitive;\n-> A-C\n"
    ],
    "Category": [
        "Regular Expressions Functions"
    ],
    "EffectiveSQLsRefined": [
        "SELECT REGEXP_REPLACE('ab12cd','[0-9]','') AS remove_digits;",
        "SELECT REGEXP_REPLACE('<html><head><title>title</title><body>body</body></htm>', '<.+?>',' ')\nAS strip_html;",
        "SELECT REGEXP_REPLACE('James Bond','^(.*) (.*)$','\\\\2, \\\\1') AS reorder_name;",
        "SELECT REGEXP_REPLACE('ABC','b','-') AS case_insensitive;",
        "SELECT REGEXP_REPLACE(BINARY 'ABC','b','-') AS binary_data;",
        "SELECT REGEXP_REPLACE('ABC','(?-i)b','-') AS force_case_sensitive;",
        "SELECT REGEXP_REPLACE(BINARY 'ABC','(?i)b','-') AS force_case_insensitive;"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "SELECT REGEXP_REPLACE('ab12cd','[0-9]','') AS remove_digits;",
        "SELECT REGEXP_REPLACE('<html><head><title>title</title><body>body</body></htm>', '<.+?>',' ')\nAS strip_html;",
        "SELECT REGEXP_REPLACE('James Bond','^(.*) (.*)$','\\\\2, \\\\1') AS reorder_name;",
        "SELECT REGEXP_REPLACE('ABC','b','-') AS case_insensitive;",
        "SELECT REGEXP_REPLACE(BINARY 'ABC','b','-') AS binary_data;",
        "SELECT REGEXP_REPLACE('ABC','(?-i)b','-') AS force_case_sensitive;",
        "SELECT REGEXP_REPLACE(BINARY 'ABC','(?i)b','-') AS force_case_insensitive;"
    ]
}