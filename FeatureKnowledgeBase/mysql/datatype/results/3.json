{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/bit-type.html"
    ],
    "Title": [
        "13.1.5 Bit-Value Type - BIT"
    ],
    "Feature": [
        "13.1.5 Bit-Value Type - BIT"
    ],
    "Description": [
        "\n\n\n\n13.1.5\u00a0Bit-Value Type - BIT\n\n\n\n\n        The BIT data type is used to store bit\n        values. A type of\n        BIT(M) enables\n        storage of M-bit values.\n        M can range from 1 to 64.\n      \n        To specify bit values,\n        b'value' notation\n        can be used. value is a binary value\n        written using zeros and ones. For example,\n        b'111' and b'10000000'\n        represent 7 and 128, respectively. See\n        Section\u00a011.1.5, \u201cBit-Value Literals\u201d.\n      \n        If you assign a value to a\n        BIT(M) column that\n        is less than M bits long, the value\n        is padded on the left with zeros. For example, assigning a value\n        of b'101' to a BIT(6)\n        column is, in effect, the same as assigning\n        b'000101'.\n      NDB Cluster.\u00a0\n          The maximum combined size of all BIT\n          columns used in a given NDB table\n          must not exceed 4096 bits.\n\n"
    ],
    "Examples": [],
    "Category": [
        "Bit-Value Type - BIT"
    ],
    "EffectiveSQLsRefined": [],
    "EffectiveSQLsGenerated": [
        "SELECT b'101' AS bit_value;"
    ],
    "EffectiveSQLsGeneratedCosts": [
        {
            "Total Tokens": 557,
            "Prompt Tokens": 536,
            "Completion Tokens": 21,
            "Total Cost (USD)": 9.3e-05
        }
    ],
    "EffectiveSQLsGeneratedErrors": [
        "None"
    ],
    "EffectiveSQLs": [
        "SELECT b'101' AS bit_value;"
    ]
}