{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference"
    ],
    "Name": "ST_Validate()",
    "Description": [
        "\nST_Validate(g)\n",
        "\n          Validates a geometry according to the OGC specification. A\n          geometry can be syntactically well-formed (WKB value plus\n          SRID) but geometrically invalid. For example, this polygon is\n          geometrically invalid: POLYGON((0 0, 0 0, 0 0, 0 0, 0\n          0))\n",
        "\nST_Validate() returns the\n          geometry if it is syntactically well-formed and is\n          geometrically valid, NULL if the argument\n          is not syntactically well-formed or is not geometrically valid\n          or is NULL.\n        ",
        "\nST_Validate() can be used to\n          filter out invalid geometry data, although at a cost. For\n          applications that require more precise results not tainted by\n          invalid data, this penalty may be worthwhile.\n        ",
        "\n          If the geometry argument is valid, it is returned as is,\n          except that if an input Polygon or\n          MultiPolygon has clockwise rings, those\n          rings are reversed before checking for validity. If the\n          geometry is valid, the value with the reversed rings is\n          returned.\n        ",
        "\n          The only valid empty geometry is represented in the form of an\n          empty geometry collection value.\n          ST_Validate() returns it\n          directly without further checks in this case.\n        ",
        "\n          As of MySQL 8.0.13,\n          ST_Validate() handles its\n          arguments as described in the introduction to this section,\n          with these exceptions:\n",
        "\n\n              If the geometry has a geographic SRS with a longitude or\n              latitude that is out of range, an error occurs:\n\n\n\n                  If a longitude value is not in the range (\u2212180,\n                  180], an\n                  ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE\n                  error occurs\n                  (ER_LONGITUDE_OUT_OF_RANGE\n                  prior to MySQL 8.0.12).\n                \n                  If a latitude value is not in the range [\u221290,\n                  90], an\n                  ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE\n                  error occurs\n                  (ER_LATITUDE_OUT_OF_RANGE\n                  prior to MySQL 8.0.12).\n\n\n\n              Ranges shown are in degrees. The exact range limits\n              deviate slightly due to floating-point arithmetic.\n\n",
        "\n          Prior to MySQL 8.0.13,\n          ST_Validate() handles its\n          arguments as described in the introduction to this section,\n          with these exceptions:\n",
        "\n\n              If the geometry is not syntactically well-formed, the\n              return value is NULL. An\n              ER_GIS_INVALID_DATA error\n              does not occur.\n            \n              If the geometry has an SRID value for a geographic spatial\n              reference system (SRS), an\n              ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS\n              error occurs.\n\n",
        "Press CTRL+C to copy mysql> SET @ls1 = ST_GeomFromText('LINESTRING(0 0)');\nmysql> SET @ls2 = ST_GeomFromText('LINESTRING(0 0, 1 1)');\nmysql> SELECT ST_AsText(ST_Validate(@ls1));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls1)) |\n+------------------------------+\n| NULL                         |\n+------------------------------+\nmysql> SELECT ST_AsText(ST_Validate(@ls2));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls2)) |\n+------------------------------+\n| LINESTRING(0 0,1 1)          |\n+------------------------------+"
    ],
    "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/spatial-convenience-functions.html#function_st-validate",
    "Feature": [
        "ST_Validate(g)"
    ],
    "Examples": [
        "mysql> SET @ls1 = ST_GeomFromText('LINESTRING(0 0)');\nmysql> SET @ls2 = ST_GeomFromText('LINESTRING(0 0, 1 1)');\nmysql> SELECT ST_AsText(ST_Validate(@ls1));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls1)) |\n+------------------------------+\n| NULL                         |\n+------------------------------+\nmysql> SELECT ST_AsText(ST_Validate(@ls2));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls2)) |\n+------------------------------+\n| LINESTRING(0 0,1 1)          |\n+------------------------------+"
    ],
    "Category": [
        "Built-In Functions and Operators",
        "Spatial Analysis Functions"
    ],
    "EffectiveSQLsRefined": [
        "SELECT ST_AsText(ST_Validate(@ls1));",
        "SELECT ST_AsText(ST_Validate(@ls2));"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "SELECT ST_AsText(ST_Validate(@ls1));",
        "SELECT ST_AsText(ST_Validate(@ls2));"
    ]
}