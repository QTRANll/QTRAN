{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference"
    ],
    "Name": "DATE_ADD()",
    "Description": [
        "\nDATE_ADD(date,INTERVAL\n          expr\nunit),\n          DATE_SUB(date,INTERVAL\n          expr\nunit)\n",
        "\n          These functions perform date arithmetic. The\n          date argument specifies the\n          starting date or datetime value.\n          expr is an expression specifying\n          the interval value to be added or subtracted from the starting\n          date. expr is evaluated as a\n          string; it may start with a - for negative\n          intervals. unit is a keyword\n          indicating the units in which the expression should be\n          interpreted.\n        ",
        "\n          For more information about temporal interval syntax, including\n          a full list of unit specifiers, the\n          expected form of the expr argument\n          for each unit value, and rules for\n          operand interpretation in temporal arithmetic, see\n          Temporal Intervals.\n        ",
        "\n          The return value depends on the arguments:\n",
        "\n\n              If date is\n              NULL, the function returns\n              NULL.\n            \nDATE if the\n              date argument is a\n              DATE value and your\n              calculations involve only YEAR,\n              MONTH, and DAY parts\n              (that is, no time parts).\n            \n              (MySQL 8.0.28 and later:)\n              TIME if the\n              date argument is a\n              TIME value and the calculations involve\n              only HOURS, MINUTES,\n              and SECONDS parts (that is, no date\n              parts).\n            \nDATETIME if the first\n              argument is a DATETIME (or\n              TIMESTAMP) value, or if the\n              first argument is a DATE\n              and the unit value uses\n              HOURS, MINUTES, or\n              SECONDS, or if the first argument is of\n              type TIME and the\n              unit value uses\n              YEAR, MONTH, or\n              DAY.\n            \n              (MySQL 8.0.28 and later:) If the\n              first argument is a dynamic parameter (for example, of a\n              prepared statement), its resolved type is\n              DATE if the second argument is an\n              interval that contains some combination of\n              YEAR, MONTH, or\n              DAY values only; otherwise, its type is\n              DATETIME.\n            \n              String otherwise (type\n              VARCHAR).\n\n",
        "\n\nNote\n\n\n            In MySQL 8.0.22 through 8.0.27, when used in prepared\n            statements, these functions returned\n            DATETIME values regardless of argument\n            types. (Bug #103781)\n\n",
        "\n          To ensure that the result is\n          DATETIME, you can use\n          CAST() to convert the first\n          argument to DATETIME.\n        ",
        "Press CTRL+C to copy mysql> SELECT DATE_ADD('2018-05-01',INTERVAL 1 DAY);\n        -> '2018-05-02'\nmysql> SELECT DATE_SUB('2018-05-01',INTERVAL 1 YEAR);\n        -> '2017-05-01'\nmysql> SELECT DATE_ADD('2020-12-31 23:59:59',\n    ->                 INTERVAL 1 SECOND);\n        -> '2021-01-01 00:00:00'\nmysql> SELECT DATE_ADD('2018-12-31 23:59:59',\n    ->                 INTERVAL 1 DAY);\n        -> '2019-01-01 23:59:59'\nmysql> SELECT DATE_ADD('2100-12-31 23:59:59',\n    ->                 INTERVAL '1:1' MINUTE_SECOND);\n        -> '2101-01-01 00:01:00'\nmysql> SELECT DATE_SUB('2025-01-01 00:00:00',\n    ->                 INTERVAL '1 1:1:1' DAY_SECOND);\n        -> '2024-12-30 22:58:59'\nmysql> SELECT DATE_ADD('1900-01-01 00:00:00',\n    ->                 INTERVAL '-1 10' DAY_HOUR);\n        -> '1899-12-30 14:00:00'\nmysql> SELECT DATE_SUB('1998-01-02', INTERVAL 31 DAY);\n        -> '1997-12-02'\nmysql> SELECT DATE_ADD('1992-12-31 23:59:59.000002',\n    ->            INTERVAL '1.999999' SECOND_MICROSECOND);\n        -> '1993-01-01 00:00:01.000001'",
        "\n          When adding a MONTH interval to a\n          DATE or DATETIME value,\n          and the resulting date includes a day that does not exist in\n          the given month, the day is adjusted to the last day of the\n          month, as shown here:\n        ",
        "Press CTRL+C to copy mysql> SELECT DATE_ADD('2024-03-30', INTERVAL 1 MONTH) AS d1, \n     >        DATE_ADD('2024-03-31', INTERVAL 1 MONTH) AS d2;\n+------------+------------+\n| d1         | d2         |\n+------------+------------+\n| 2024-04-30 | 2024-04-30 |\n+------------+------------+\n1 row in set (0.00 sec)"
    ],
    "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_date-add",
    "Feature": [
        "DATE_ADD(date,INTERVAL\n          expr\nunit)",
        "DATE_SUB(date,INTERVAL\n          expr\nunit)"
    ],
    "Examples": [
        "mysql> SELECT DATE_ADD('2018-05-01',INTERVAL 1 DAY);\n        -> '2018-05-02'\nmysql> SELECT DATE_SUB('2018-05-01',INTERVAL 1 YEAR);\n        -> '2017-05-01'\nmysql> SELECT DATE_ADD('2020-12-31 23:59:59',\n    ->                 INTERVAL 1 SECOND);\n        -> '2021-01-01 00:00:00'\nmysql> SELECT DATE_ADD('2018-12-31 23:59:59',\n    ->                 INTERVAL 1 DAY);\n        -> '2019-01-01 23:59:59'\nmysql> SELECT DATE_ADD('2100-12-31 23:59:59',\n    ->                 INTERVAL '1:1' MINUTE_SECOND);\n        -> '2101-01-01 00:01:00'\nmysql> SELECT DATE_SUB('2025-01-01 00:00:00',\n    ->                 INTERVAL '1 1:1:1' DAY_SECOND);\n        -> '2024-12-30 22:58:59'\nmysql> SELECT DATE_ADD('1900-01-01 00:00:00',\n    ->                 INTERVAL '-1 10' DAY_HOUR);\n        -> '1899-12-30 14:00:00'\nmysql> SELECT DATE_SUB('1998-01-02', INTERVAL 31 DAY);\n        -> '1997-12-02'\nmysql> SELECT DATE_ADD('1992-12-31 23:59:59.000002',\n    ->            INTERVAL '1.999999' SECOND_MICROSECOND);\n        -> '1993-01-01 00:00:01.000001'",
        "mysql> SELECT DATE_ADD('2024-03-30', INTERVAL 1 MONTH) AS d1, \n     >        DATE_ADD('2024-03-31', INTERVAL 1 MONTH) AS d2;\n+------------+------------+\n| d1         | d2         |\n+------------+------------+\n| 2024-04-30 | 2024-04-30 |\n+------------+------------+\n1 row in set (0.00 sec)"
    ],
    "Category": [
        "Built-In Functions and Operators",
        "Date and Time Functions"
    ],
    "EffectiveSQLsRefined": [
        "SELECT DATE_ADD('2018-05-01',INTERVAL 1 DAY);",
        "SELECT DATE_SUB('2018-05-01',INTERVAL 1 YEAR);",
        "SELECT DATE_SUB('1998-01-02', INTERVAL 31 DAY);"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "SELECT DATE_ADD('2018-05-01',INTERVAL 1 DAY);",
        "SELECT DATE_SUB('2018-05-01',INTERVAL 1 YEAR);",
        "SELECT DATE_SUB('1998-01-02', INTERVAL 31 DAY);"
    ]
}