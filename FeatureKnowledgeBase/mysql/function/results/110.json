{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference"
    ],
    "Name": "GROUPING()",
    "Description": [
        "\nGROUPING(expr\n          [, expr] ...)\n",
        "\n          For GROUP BY queries that include a\n          WITH ROLLUP modifier, the\n          ROLLUP operation produces super-aggregate\n          output rows where NULL represents the set\n          of all values. The GROUPING()\n          function enables you to distinguish NULL\n          values for super-aggregate rows from NULL\n          values in regular grouped rows.\n        ",
        "\nGROUPING() is permitted in the\n          select list, HAVING clause, and (as of\n          MySQL 8.0.12) ORDER BY clause.\n        ",
        "\n          Each argument to GROUPING()\n          must be an expression that exactly matches an expression in\n          the GROUP BY clause. The expression cannot\n          be a positional specifier. For each expression,\n          GROUPING() produces 1 if the\n          expression value in the current row is a\n          NULL representing a super-aggregate value.\n          Otherwise, GROUPING() produces\n          0, indicating that the expression value is a\n          NULL for a regular result row or is not\n          NULL.\n        ",
        "\n          Suppose that table t1 contains these rows,\n          where NULL indicates something like\n          \u201cother\u201d or \u201cunknown\u201d:\n        ",
        "Press CTRL+C to copy mysql> SELECT * FROM t1;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | small |       10 |\n| ball | large |       20 |\n| ball | NULL  |        5 |\n| hoop | small |       15 |\n| hoop | large |        5 |\n| hoop | NULL  |        3 |\n+------+-------+----------+",
        "\n          A summary of the table without WITH ROLLUP\n          looks like this:\n        ",
        "Press CTRL+C to copy mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | small |       10 |\n| ball | large |       20 |\n| ball | NULL  |        5 |\n| hoop | small |       15 |\n| hoop | large |        5 |\n| hoop | NULL  |        3 |\n+------+-------+----------+",
        "\n          The result contains NULL values, but those\n          do not represent super-aggregate rows because the query does\n          not include WITH ROLLUP.\n        ",
        "\n          Adding WITH ROLLUP produces super-aggregate\n          summary rows containing additional NULL\n          values. However, without comparing this result to the previous\n          one, it is not easy to see which NULL\n          values occur in super-aggregate rows and which occur in\n          regular grouped rows:\n        ",
        "Press CTRL+C to copy mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | NULL  |        5 |\n| ball | large |       20 |\n| ball | small |       10 |\n| ball | NULL  |       35 |\n| hoop | NULL  |        3 |\n| hoop | large |        5 |\n| hoop | small |       15 |\n| hoop | NULL  |       23 |\n| NULL | NULL  |       58 |\n+------+-------+----------+",
        "\n          To distinguish NULL values in\n          super-aggregate rows from those in regular grouped rows, use\n          GROUPING(), which returns 1\n          only for super-aggregate NULL values:\n        ",
        "Press CTRL+C to copy mysql> SELECT\n         name, size, SUM(quantity) AS quantity,\n         GROUPING(name) AS grp_name,\n         GROUPING(size) AS grp_size\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+----------+----------+\n| name | size  | quantity | grp_name | grp_size |\n+------+-------+----------+----------+----------+\n| ball | NULL  |        5 |        0 |        0 |\n| ball | large |       20 |        0 |        0 |\n| ball | small |       10 |        0 |        0 |\n| ball | NULL  |       35 |        0 |        1 |\n| hoop | NULL  |        3 |        0 |        0 |\n| hoop | large |        5 |        0 |        0 |\n| hoop | small |       15 |        0 |        0 |\n| hoop | NULL  |       23 |        0 |        1 |\n| NULL | NULL  |       58 |        1 |        1 |\n+------+-------+----------+----------+----------+",
        "\n          Common uses for GROUPING():\n",
        "\n\n              Substitute a label for super-aggregate\n              NULL values:\n            Press CTRL+C to copy mysql> SELECT\n         IF(GROUPING(name) = 1, 'All items', name) AS name,\n         IF(GROUPING(size) = 1, 'All sizes', size) AS size,\n         SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+-----------+-----------+----------+\n| name      | size      | quantity |\n+-----------+-----------+----------+\n| ball      | NULL      |        5 |\n| ball      | large     |       20 |\n| ball      | small     |       10 |\n| ball      | All sizes |       35 |\n| hoop      | NULL      |        3 |\n| hoop      | large     |        5 |\n| hoop      | small     |       15 |\n| hoop      | All sizes |       23 |\n| All items | All sizes |       58 |\n+-----------+-----------+----------+\n              Return only super-aggregate lines by filtering out the\n              regular grouped lines:\n            Press CTRL+C to copy mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP\n       HAVING GROUPING(name) = 1 OR GROUPING(size) = 1;\n+------+------+----------+\n| name | size | quantity |\n+------+------+----------+\n| ball | NULL |       35 |\n| hoop | NULL |       23 |\n| NULL | NULL |       58 |\n+------+------+----------+\n",
        "\nGROUPING() permits multiple\n          expression arguments. In this case, the\n          GROUPING() return value\n          represents a bitmask combined from the results for each\n          expression, where the lowest-order bit corresponds to the\n          result for the rightmost expression. For example, with three\n          expression arguments,\n          GROUPING(expr1,\n          expr2,\n          expr3) is evaluated like\n          this:\n        ",
        "Press CTRL+C to copy   result for GROUPING(expr3)\n+ result for GROUPING(expr2) << 1\n+ result for GROUPING(expr1) << 2",
        "\n          The following query shows how\n          GROUPING() results for single\n          arguments combine for a multiple-argument call to produce a\n          bitmask value:\n        ",
        "Press CTRL+C to copy mysql> SELECT\n         name, size, SUM(quantity) AS quantity,\n         GROUPING(name) AS grp_name,\n         GROUPING(size) AS grp_size,\n       GROUPING(name, size) AS grp_all\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+----------+----------+---------+\n| name | size  | quantity | grp_name | grp_size | grp_all |\n+------+-------+----------+----------+----------+---------+\n| ball | NULL  |        5 |        0 |        0 |       0 |\n| ball | large |       20 |        0 |        0 |       0 |\n| ball | small |       10 |        0 |        0 |       0 |\n| ball | NULL  |       35 |        0 |        1 |       1 |\n| hoop | NULL  |        3 |        0 |        0 |       0 |\n| hoop | large |        5 |        0 |        0 |       0 |\n| hoop | small |       15 |        0 |        0 |       0 |\n| hoop | NULL  |       23 |        0 |        1 |       1 |\n| NULL | NULL  |       58 |        1 |        1 |       3 |\n+------+-------+----------+----------+----------+---------+",
        "\n          With multiple expression arguments, the\n          GROUPING() return value is\n          nonzero if any expression represents a super-aggregate value.\n          Multiple-argument GROUPING()\n          syntax thus provides a simpler way to write the earlier query\n          that returned only super-aggregate rows, by using a single\n          multiple-argument GROUPING()\n          call rather than multiple single-argument calls:\n        ",
        "Press CTRL+C to copy mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP\n       HAVING GROUPING(name, size) <> 0;\n+------+------+----------+\n| name | size | quantity |\n+------+------+----------+\n| ball | NULL |       35 |\n| hoop | NULL |       23 |\n| NULL | NULL |       58 |\n+------+------+----------+",
        "\n          Use of GROUPING() is subject to\n          these limitations:\n",
        "\n\n              Do not use subquery GROUP BY\n              expressions as GROUPING()\n              arguments because matching might fail. For example,\n              matching fails for this query:\n            Press CTRL+C to copy mysql> SELECT GROUPING((SELECT MAX(name) FROM t1))\n       FROM t1\n       GROUP BY (SELECT MAX(name) FROM t1) WITH ROLLUP;\nERROR 3580 (HY000): Argument #1 of GROUPING function is not in GROUP BY\nGROUP BY literal expressions should not\n              be used within a HAVING clause as\n              GROUPING() arguments. Due\n              to differences between when the optimizer evaluates\n              GROUP BY and HAVING,\n              matching may succeed but\n              GROUPING() evaluation does\n              not produce the expected result. Consider this query:\n            Press CTRL+C to copy SELECT a AS f1, 'w' AS f2\nFROM t\nGROUP BY f1, f2 WITH ROLLUP\nHAVING GROUPING(f2) = 1;\nGROUPING() is evaluated\n              earlier for the literal constant expression than for the\n              HAVING clause as a whole and returns 0.\n              To check whether a query such as this is affected, use\n              EXPLAIN and look for\n              Impossible having in the\n              Extra column.\n\n",
        "\n          For more information about WITH ROLLUP and\n          GROUPING(), see\n          Section\u00a014.19.2, \u201cGROUP BY Modifiers\u201d.\n        "
    ],
    "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html#function_grouping",
    "Feature": [
        "GROUPING(expr\n          [, expr] ...)"
    ],
    "Examples": [
        "mysql> SELECT * FROM t1;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | small |       10 |\n| ball | large |       20 |\n| ball | NULL  |        5 |\n| hoop | small |       15 |\n| hoop | large |        5 |\n| hoop | NULL  |        3 |\n+------+-------+----------+",
        "mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | small |       10 |\n| ball | large |       20 |\n| ball | NULL  |        5 |\n| hoop | small |       15 |\n| hoop | large |        5 |\n| hoop | NULL  |        3 |\n+------+-------+----------+",
        "mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+\n| name | size  | quantity |\n+------+-------+----------+\n| ball | NULL  |        5 |\n| ball | large |       20 |\n| ball | small |       10 |\n| ball | NULL  |       35 |\n| hoop | NULL  |        3 |\n| hoop | large |        5 |\n| hoop | small |       15 |\n| hoop | NULL  |       23 |\n| NULL | NULL  |       58 |\n+------+-------+----------+",
        "mysql> SELECT\n         name, size, SUM(quantity) AS quantity,\n         GROUPING(name) AS grp_name,\n         GROUPING(size) AS grp_size\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+----------+----------+\n| name | size  | quantity | grp_name | grp_size |\n+------+-------+----------+----------+----------+\n| ball | NULL  |        5 |        0 |        0 |\n| ball | large |       20 |        0 |        0 |\n| ball | small |       10 |        0 |        0 |\n| ball | NULL  |       35 |        0 |        1 |\n| hoop | NULL  |        3 |        0 |        0 |\n| hoop | large |        5 |        0 |        0 |\n| hoop | small |       15 |        0 |        0 |\n| hoop | NULL  |       23 |        0 |        1 |\n| NULL | NULL  |       58 |        1 |        1 |\n+------+-------+----------+----------+----------+",
        "mysql> SELECT\n         IF(GROUPING(name) = 1, 'All items', name) AS name,\n         IF(GROUPING(size) = 1, 'All sizes', size) AS size,\n         SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+-----------+-----------+----------+\n| name      | size      | quantity |\n+-----------+-----------+----------+\n| ball      | NULL      |        5 |\n| ball      | large     |       20 |\n| ball      | small     |       10 |\n| ball      | All sizes |       35 |\n| hoop      | NULL      |        3 |\n| hoop      | large     |        5 |\n| hoop      | small     |       15 |\n| hoop      | All sizes |       23 |\n| All items | All sizes |       58 |\n+-----------+-----------+----------+",
        "mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP\n       HAVING GROUPING(name) = 1 OR GROUPING(size) = 1;\n+------+------+----------+\n| name | size | quantity |\n+------+------+----------+\n| ball | NULL |       35 |\n| hoop | NULL |       23 |\n| NULL | NULL |       58 |\n+------+------+----------+",
        "mysql> SELECT\n         name, size, SUM(quantity) AS quantity,\n         GROUPING(name) AS grp_name,\n         GROUPING(size) AS grp_size,\n       GROUPING(name, size) AS grp_all\n       FROM t1\n       GROUP BY name, size WITH ROLLUP;\n+------+-------+----------+----------+----------+---------+\n| name | size  | quantity | grp_name | grp_size | grp_all |\n+------+-------+----------+----------+----------+---------+\n| ball | NULL  |        5 |        0 |        0 |       0 |\n| ball | large |       20 |        0 |        0 |       0 |\n| ball | small |       10 |        0 |        0 |       0 |\n| ball | NULL  |       35 |        0 |        1 |       1 |\n| hoop | NULL  |        3 |        0 |        0 |       0 |\n| hoop | large |        5 |        0 |        0 |       0 |\n| hoop | small |       15 |        0 |        0 |       0 |\n| hoop | NULL  |       23 |        0 |        1 |       1 |\n| NULL | NULL  |       58 |        1 |        1 |       3 |\n+------+-------+----------+----------+----------+---------+",
        "mysql> SELECT name, size, SUM(quantity) AS quantity\n       FROM t1\n       GROUP BY name, size WITH ROLLUP\n       HAVING GROUPING(name, size) <> 0;\n+------+------+----------+\n| name | size | quantity |\n+------+------+----------+\n| ball | NULL |       35 |\n| hoop | NULL |       23 |\n| NULL | NULL |       58 |\n+------+------+----------+",
        "mysql> SELECT GROUPING((SELECT MAX(name) FROM t1))\n       FROM t1\n       GROUP BY (SELECT MAX(name) FROM t1) WITH ROLLUP;\nERROR 3580 (HY000): Argument #1 of GROUPING function is not in GROUP BY",
        "SELECT a AS f1, 'w' AS f2\nFROM t\nGROUP BY f1, f2 WITH ROLLUP\nHAVING GROUPING(f2) = 1;"
    ],
    "Category": [
        "Built-In Functions and Operators",
        "Miscellaneous Functions"
    ]
}