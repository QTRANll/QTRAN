{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference"
    ],
    "Name": "CHAR()",
    "Description": [
        "\nCHAR(N,...\n          [USING charset_name])\n",
        "\nCHAR() interprets each argument\n          N as an integer and returns a\n          string consisting of the characters given by the code values\n          of those integers. NULL values are skipped.\n        ",
        "Press CTRL+C to copy mysql> SELECT CHAR(77,121,83,81,'76');\n+--------------------------------------------------+\n| CHAR(77,121,83,81,'76')                          |\n+--------------------------------------------------+\n| 0x4D7953514C                                     |\n+--------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT CHAR(77,77.3,'77.3');\n+--------------------------------------------+\n| CHAR(77,77.3,'77.3')                       |\n+--------------------------------------------+\n| 0x4D4D4D                                   |\n+--------------------------------------------+\n1 row in set (0.00 sec)",
        "\n          By default, CHAR() returns a\n          binary string. To produce a string in a given character set,\n          use the optional USING clause:\n        ",
        "Press CTRL+C to copy mysql> SELECT CHAR(77,121,83,81,'76' USING utf8mb4);\n+---------------------------------------+\n| CHAR(77,121,83,81,'76' USING utf8mb4) |\n+---------------------------------------+\n| MySQL                                 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT CHAR(77,77.3,'77.3' USING utf8mb4);\n+------------------------------------+\n| CHAR(77,77.3,'77.3' USING utf8mb4) |\n+------------------------------------+\n| MMM                                |\n+------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-------------------------------------------+\n| Level   | Code | Message                                   |\n+---------+------+-------------------------------------------+\n| Warning | 1292 | Truncated incorrect INTEGER value: '77.3' |\n+---------+------+-------------------------------------------+\n1 row in set (0.00 sec)",
        "\n          If USING is given and the result string is\n          illegal for the given character set, a warning is issued.\n          Also, if strict SQL mode is enabled, the result from\n          CHAR() becomes\n          NULL.\n        ",
        "\n          If CHAR() is invoked from\n          within the mysql client, binary strings\n          display using hexadecimal notation, depending on the value of\n          the --binary-as-hex. For more\n          information about that option, see Section\u00a06.5.1, \u201cmysql \u2014 The MySQL Command-Line Client\u201d.\n        ",
        "\nCHAR() arguments larger than\n          255 are converted into multiple result bytes. For example,\n          CHAR(256) is equivalent to\n          CHAR(1,0), and\n          CHAR(256*256) is equivalent to\n          CHAR(1,0,0):\n        ",
        "Press CTRL+C to copy mysql> SELECT HEX(CHAR(1,0)), HEX(CHAR(256));\n+----------------+----------------+\n| HEX(CHAR(1,0)) | HEX(CHAR(256)) |\n+----------------+----------------+\n| 0100           | 0100           |\n+----------------+----------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT HEX(CHAR(1,0,0)), HEX(CHAR(256*256));\n+------------------+--------------------+\n| HEX(CHAR(1,0,0)) | HEX(CHAR(256*256)) |\n+------------------+--------------------+\n| 010000           | 010000             |\n+------------------+--------------------+\n1 row in set (0.00 sec)"
    ],
    "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_char",
    "Feature": [
        "CHAR(N,...\n          [USING charset_name])"
    ],
    "Examples": [
        "mysql> SELECT CHAR(77,121,83,81,'76');\n+--------------------------------------------------+\n| CHAR(77,121,83,81,'76')                          |\n+--------------------------------------------------+\n| 0x4D7953514C                                     |\n+--------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT CHAR(77,77.3,'77.3');\n+--------------------------------------------+\n| CHAR(77,77.3,'77.3')                       |\n+--------------------------------------------+\n| 0x4D4D4D                                   |\n+--------------------------------------------+\n1 row in set (0.00 sec)",
        "mysql> SELECT CHAR(77,121,83,81,'76' USING utf8mb4);\n+---------------------------------------+\n| CHAR(77,121,83,81,'76' USING utf8mb4) |\n+---------------------------------------+\n| MySQL                                 |\n+---------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT CHAR(77,77.3,'77.3' USING utf8mb4);\n+------------------------------------+\n| CHAR(77,77.3,'77.3' USING utf8mb4) |\n+------------------------------------+\n| MMM                                |\n+------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-------------------------------------------+\n| Level   | Code | Message                                   |\n+---------+------+-------------------------------------------+\n| Warning | 1292 | Truncated incorrect INTEGER value: '77.3' |\n+---------+------+-------------------------------------------+\n1 row in set (0.00 sec)",
        "mysql> SELECT HEX(CHAR(1,0)), HEX(CHAR(256));\n+----------------+----------------+\n| HEX(CHAR(1,0)) | HEX(CHAR(256)) |\n+----------------+----------------+\n| 0100           | 0100           |\n+----------------+----------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT HEX(CHAR(1,0,0)), HEX(CHAR(256*256));\n+------------------+--------------------+\n| HEX(CHAR(1,0,0)) | HEX(CHAR(256*256)) |\n+------------------+--------------------+\n| 010000           | 010000             |\n+------------------+--------------------+\n1 row in set (0.00 sec)"
    ],
    "Category": [
        "Built-In Functions and Operators",
        "String Functions and Operators"
    ],
    "EffectiveSQLsRefined": [
        "SELECT CHAR(77,121,83,81,'76');",
        "SELECT CHAR(77,121,83,81,'76' USING utf8mb4);",
        "SELECT HEX(CHAR(1,0)), HEX(CHAR(256));"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "SELECT CHAR(77,121,83,81,'76');",
        "SELECT CHAR(77,121,83,81,'76' USING utf8mb4);",
        "SELECT HEX(CHAR(1,0)), HEX(CHAR(256));"
    ]
}