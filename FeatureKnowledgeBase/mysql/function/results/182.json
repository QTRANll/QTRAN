{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference"
    ],
    "Name": "JSON_TYPE()",
    "Description": [
        "\nJSON_TYPE(json_val)\n",
        "\n          Returns a utf8mb4 string indicating the\n          type of a JSON value. This can be an object, an array, or a\n          scalar type, as shown here:\n        ",
        "Press CTRL+C to copy mysql> SET @j = '{\"a\": [10, true]}';\nmysql> SELECT JSON_TYPE(@j);\n+---------------+\n| JSON_TYPE(@j) |\n+---------------+\n| OBJECT        |\n+---------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a'));\n+------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, '$.a')) |\n+------------------------------------+\n| ARRAY                              |\n+------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[0]'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, '$.a[0]')) |\n+---------------------------------------+\n| INTEGER                               |\n+---------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[1]'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, '$.a[1]')) |\n+---------------------------------------+\n| BOOLEAN                               |\n+---------------------------------------+",
        "\nJSON_TYPE() returns\n          NULL if the argument is\n          NULL:\n        ",
        "Press CTRL+C to copy mysql> SELECT JSON_TYPE(NULL);\n+-----------------+\n| JSON_TYPE(NULL) |\n+-----------------+\n| NULL            |\n+-----------------+",
        "\n          An error occurs if the argument is not a valid JSON value:\n        ",
        "Press CTRL+C to copy mysql> SELECT JSON_TYPE(1);\nERROR 3146 (22032): Invalid data type for JSON data in argument 1\nto function json_type; a JSON string or JSON type is required.",
        "\n          For a non-NULL, non-error result, the\n          following list describes the possible\n          JSON_TYPE() return values:\n",
        "\n\n              Purely JSON types:\n\n\n\nOBJECT: JSON objects\n                \nARRAY: JSON arrays\n                \nBOOLEAN: The JSON true and false\n                  literals\n                \nNULL: The JSON null literal\n\n\n\n              Numeric types:\n\n\n\nINTEGER: MySQL\n                  TINYINT,\n                  SMALLINT,\n                  MEDIUMINT and\n                  INT and\n                  BIGINT scalars\n                \nDOUBLE: MySQL\n                  DOUBLE\nFLOAT scalars\n                \nDECIMAL: MySQL\n                  DECIMAL and\n                  NUMERIC scalars\n\n\n\n              Temporal types:\n\n\n\nDATETIME: MySQL\n                  DATETIME and\n                  TIMESTAMP scalars\n                \nDATE: MySQL\n                  DATE scalars\n                \nTIME: MySQL\n                  TIME scalars\n\n\n\n              String types:\n\n\n\nSTRING: MySQL\n                  utf8mb3 character type scalars:\n                  CHAR,\n                  VARCHAR,\n                  TEXT,\n                  ENUM, and\n                  SET\n\n\n\n              Binary types:\n\n\n\nBLOB: MySQL binary type scalars\n                  including BINARY,\n                  VARBINARY,\n                  BLOB, and\n                  BIT\n\n\n\n              All other types:\n\n\n\nOPAQUE (raw bits)\n\n\n\n"
    ],
    "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/json-attribute-functions.html#function_json-type",
    "Feature": [
        "JSON_TYPE(json_val)"
    ],
    "Examples": [
        "mysql> SET @j = '{\"a\": [10, true]}';\nmysql> SELECT JSON_TYPE(@j);\n+---------------+\n| JSON_TYPE(@j) |\n+---------------+\n| OBJECT        |\n+---------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a'));\n+------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, '$.a')) |\n+------------------------------------+\n| ARRAY                              |\n+------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[0]'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, '$.a[0]')) |\n+---------------------------------------+\n| INTEGER                               |\n+---------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[1]'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, '$.a[1]')) |\n+---------------------------------------+\n| BOOLEAN                               |\n+---------------------------------------+",
        "mysql> SELECT JSON_TYPE(NULL);\n+-----------------+\n| JSON_TYPE(NULL) |\n+-----------------+\n| NULL            |\n+-----------------+",
        "mysql> SELECT JSON_TYPE(1);\nERROR 3146 (22032): Invalid data type for JSON data in argument 1\nto function json_type; a JSON string or JSON type is required."
    ],
    "Category": [
        "Built-In Functions and Operators",
        "JSON Functions"
    ],
    "EffectiveSQLsRefined": [
        "SELECT JSON_TYPE(@j);",
        "SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a'));",
        "SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[0]'));",
        "SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[1]'));",
        "SELECT JSON_TYPE(NULL);"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "SELECT JSON_TYPE(@j);",
        "SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a'));",
        "SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[0]'));",
        "SELECT JSON_TYPE(JSON_EXTRACT(@j, '$.a[1]'));",
        "SELECT JSON_TYPE(NULL);"
    ]
}