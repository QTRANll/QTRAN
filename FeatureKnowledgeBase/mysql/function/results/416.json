{
    "HTML": [
        "https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"
    ],
    "Title": [
        "14.1 Built-In Function and Operator Reference"
    ],
    "Name": "WEEK()",
    "Description": [
        "\nWEEK(date[,mode])\n",
        "\n          This function returns the week number for\n          date. The two-argument form of\n          WEEK() enables you to specify\n          whether the week starts on Sunday or Monday and whether the\n          return value should be in the range from 0\n          to 53 or from 1 to\n          53. If the mode\n          argument is omitted, the value of the\n          default_week_format system\n          variable is used. See\n          Section\u00a07.1.8, \u201cServer System Variables\u201d. For a\n          NULL date value, the function returns\n          NULL.\n        ",
        "\n          The following table describes how the\n          mode argument works.\n",
        "\n\nMode\nFirst day of week\nRange\nWeek 1 is the first week \u2026\n\n0\nSunday\n0-53\nwith a Sunday in this year\n\n1\nMonday\n0-53\nwith 4 or more days this year\n\n2\nSunday\n1-53\nwith a Sunday in this year\n\n3\nMonday\n1-53\nwith 4 or more days this year\n\n4\nSunday\n0-53\nwith 4 or more days this year\n\n5\nMonday\n0-53\nwith a Monday in this year\n\n6\nSunday\n1-53\nwith 4 or more days this year\n\n7\nMonday\n1-53\nwith a Monday in this year\n\n",
        "\n          For mode values with a meaning of\n          \u201cwith 4 or more days this year,\u201d weeks are\n          numbered according to ISO 8601:1988:\n",
        "\n\n              If the week containing January 1 has 4 or more days in the\n              new year, it is week 1.\n            \n              Otherwise, it is the last week of the previous year, and\n              the next week is week 1.\n\n",
        "Press CTRL+C to copy mysql> SELECT WEEK('2008-02-20');\n        -> 7\nmysql> SELECT WEEK('2008-02-20',0);\n        -> 7\nmysql> SELECT WEEK('2008-02-20',1);\n        -> 8\nmysql> SELECT WEEK('2008-12-31',1);\n        -> 53",
        "\n          If a date falls in the last week of the previous year, MySQL\n          returns 0 if you do not use\n          2, 3,\n          6, or 7 as the optional\n          mode argument:\n        ",
        "Press CTRL+C to copy mysql> SELECT YEAR('2000-01-01'), WEEK('2000-01-01',0);\n        -> 2000, 0",
        "\n          One might argue that WEEK()\n          should return 52 because the given date\n          actually occurs in the 52nd week of 1999.\n          WEEK() returns\n          0 instead so that the return value is\n          \u201cthe week number in the given year.\u201d This makes\n          use of the WEEK() function\n          reliable when combined with other functions that extract a\n          date part from a date.\n        ",
        "\n          If you prefer a result evaluated with respect to the year that\n          contains the first day of the week for the given date, use\n          0, 2,\n          5, or 7 as the optional\n          mode argument.\n        ",
        "Press CTRL+C to copy mysql> SELECT WEEK('2000-01-01',2);\n        -> 52",
        "\n          Alternatively, use the\n          YEARWEEK() function:\n        ",
        "Press CTRL+C to copy mysql> SELECT YEARWEEK('2000-01-01');\n        -> 199952\nmysql> SELECT MID(YEARWEEK('2000-01-01'),5,2);\n        -> '52'"
    ],
    "Reference HTML": "https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_week",
    "Feature": [
        "WEEK(date[,mode])"
    ],
    "Examples": [
        "mysql> SELECT WEEK('2008-02-20');\n        -> 7\nmysql> SELECT WEEK('2008-02-20',0);\n        -> 7\nmysql> SELECT WEEK('2008-02-20',1);\n        -> 8\nmysql> SELECT WEEK('2008-12-31',1);\n        -> 53",
        "mysql> SELECT YEAR('2000-01-01'), WEEK('2000-01-01',0);\n        -> 2000, 0",
        "mysql> SELECT WEEK('2000-01-01',2);\n        -> 52",
        "mysql> SELECT YEARWEEK('2000-01-01');\n        -> 199952\nmysql> SELECT MID(YEARWEEK('2000-01-01'),5,2);\n        -> '52'"
    ],
    "Category": [
        "Built-In Functions and Operators",
        "Date and Time Functions"
    ],
    "EffectiveSQLsRefined": [
        "SELECT WEEK('2008-02-20');",
        "SELECT WEEK('2008-02-20',0);",
        "SELECT WEEK('2008-02-20',1);",
        "SELECT WEEK('2008-12-31',1);",
        "SELECT YEAR('2000-01-01'), WEEK('2000-01-01',0);",
        "SELECT WEEK('2000-01-01',2);",
        "SELECT YEARWEEK('2000-01-01');",
        "SELECT MID(YEARWEEK('2000-01-01'),5,2);"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "SELECT WEEK('2008-02-20');",
        "SELECT WEEK('2008-02-20',0);",
        "SELECT WEEK('2008-02-20',1);",
        "SELECT WEEK('2008-12-31',1);",
        "SELECT YEAR('2000-01-01'), WEEK('2000-01-01',0);",
        "SELECT WEEK('2000-01-01',2);",
        "SELECT YEARWEEK('2000-01-01');",
        "SELECT MID(YEARWEEK('2000-01-01'),5,2);"
    ]
}