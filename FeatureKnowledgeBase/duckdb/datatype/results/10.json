{
    "HTML": [
        "https://duckdb.org/docs/sql/data_types/nulls"
    ],
    "Title": [
        "NULL Values"
    ],
    "Feature": [
        "NULL Values"
    ],
    "Description": [
        "\n\n\nDocumentation\n/ SQL\n/ Data Types\n\n\n\n\n\nDark Mode\n\n\n1.1 (stable)\n\n\n\n1.1 (stable)\n\n1.0\n0.10\n0.9\n0.8\n0.7\n\n\n\n\nNULL Values\n",
        "NULL values are special values that are used to represent missing data in SQL. Columns of any type can contain NULL values. Logically, a NULL value can be seen as \u201cthe value of this field is unknown\u201d.",
        "A NULL value can be inserted to any field that does not have the NOT NULL qualifier:",
        "CREATE TABLE integers (i INTEGER);\nINSERT INTO integers VALUES (NULL);\n",
        "NULL values have special semantics in many parts of the query as well as in many functions:",
        "Note\nAny comparison with a NULL value returns NULL, including NULL = NULL.\n",
        "You can use IS NOT DISTINCT FROM to perform an equality comparison where NULL values compare equal to each other. Use IS (NOT) NULL to check if a value is NULL.",
        "SELECT NULL = NULL;\n",
        "NULL\n",
        "SELECT NULL IS NOT DISTINCT FROM NULL;\n",
        "true\n",
        "SELECT NULL IS NULL;\n",
        "true\n",
        "\nNULL and Functions\n",
        "A function that has input argument as NULL usually returns NULL.",
        "SELECT cos(NULL);\n",
        "NULL\n",
        "The coalesce function is an exception to this: it takes any number of arguments, and returns for each row the first argument that is not NULL. If all arguments are NULL, coalesce also returns NULL.",
        "SELECT coalesce(NULL, NULL, 1);\n",
        "1\n",
        "SELECT coalesce(10, 20);\n",
        "10\n",
        "SELECT coalesce(NULL, NULL);\n",
        "NULL\n",
        "The ifnull function is a two-argument version of coalesce.",
        "SELECT ifnull(NULL, 'default_string');\n",
        "default_string\n",
        "SELECT ifnull(1, 'default_string');\n",
        "1\n",
        "\nNULL and Conjunctions\n",
        "NULL values have special semantics in AND/OR conjunctions. For the ternary logic truth tables, see the Boolean Type documentation.",
        "\nNULL and Aggregate Functions\n",
        "NULL values are ignored in most aggregate functions.",
        "Aggregate functions that do not ignore NULL values include: first, last, list, and array_agg. To exclude NULL values from those aggregate functions, the FILTER clause can be used.",
        "CREATE TABLE integers (i INTEGER);\nINSERT INTO integers VALUES (1), (10), (NULL);\n",
        "SELECT min(i) FROM integers;\n",
        "1\n",
        "SELECT max(i) FROM integers;\n",
        "10\n",
        "\n\nAbout this page\n\nReport content issue\nEdit this page on GitHub\n\n\n"
    ],
    "Examples": [
        "CREATE TABLE integers (i INTEGER);\nINSERT INTO integers VALUES (NULL);\n",
        "SELECT NULL = NULL;\n",
        "NULL\n",
        "SELECT NULL IS NOT DISTINCT FROM NULL;\n",
        "true\n",
        "SELECT NULL IS NULL;\n",
        "true\n",
        "SELECT cos(NULL);\n",
        "NULL\n",
        "SELECT coalesce(NULL, NULL, 1);\n",
        "1\n",
        "SELECT coalesce(10, 20);\n",
        "10\n",
        "SELECT coalesce(NULL, NULL);\n",
        "NULL\n",
        "SELECT ifnull(NULL, 'default_string');\n",
        "default_string\n",
        "SELECT ifnull(1, 'default_string');\n",
        "1\n",
        "CREATE TABLE integers (i INTEGER);\nINSERT INTO integers VALUES (1), (10), (NULL);\n",
        "SELECT min(i) FROM integers;\n",
        "1\n",
        "SELECT max(i) FROM integers;\n",
        "10\n"
    ],
    "Category": [
        "NULL Values"
    ],
    "EffectiveSQLsRefined": [
        "CREATE TABLE integers (i INTEGER);",
        "INSERT INTO integers VALUES (NULL);",
        "SELECT NULL = NULL;",
        "SELECT NULL IS NOT DISTINCT FROM NULL;",
        "SELECT NULL IS NULL;",
        "SELECT cos(NULL);",
        "SELECT coalesce(NULL, NULL, 1);",
        "SELECT coalesce(10, 20);",
        "SELECT coalesce(NULL, NULL);",
        "SELECT ifnull(NULL, 'default_string');",
        "SELECT ifnull(1, 'default_string');",
        "INSERT INTO integers VALUES (1), (10), (NULL);",
        "SELECT min(i) FROM integers;",
        "SELECT max(i) FROM integers;"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "CREATE TABLE integers (i INTEGER);",
        "INSERT INTO integers VALUES (NULL);",
        "SELECT NULL = NULL;",
        "SELECT NULL IS NOT DISTINCT FROM NULL;",
        "SELECT NULL IS NULL;",
        "SELECT cos(NULL);",
        "SELECT coalesce(NULL, NULL, 1);",
        "SELECT coalesce(10, 20);",
        "SELECT coalesce(NULL, NULL);",
        "SELECT ifnull(NULL, 'default_string');",
        "SELECT ifnull(1, 'default_string');",
        "INSERT INTO integers VALUES (1), (10), (NULL);",
        "SELECT min(i) FROM integers;",
        "SELECT max(i) FROM integers;"
    ]
}