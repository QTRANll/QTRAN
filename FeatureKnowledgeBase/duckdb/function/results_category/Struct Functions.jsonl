{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct.entry"], "Feature": ["struct.entry"], "Description": ["Dot notation that serves as an alias for struct_extract from named STRUCTs."], "Examples": ["({'i': 3, 's': 'string'}).i"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct[entry]"], "Feature": ["struct[entry]"], "Description": ["Bracket notation that serves as an alias for struct_extract from named STRUCTs."], "Examples": ["({'i': 3, 's': 'string'})['i']"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct[idx]"], "Feature": ["struct[idx]"], "Description": ["Bracket notation that serves as an alias for struct_extract from unnamed STRUCTs (tuples), using an index (1-based)."], "Examples": ["(row(42, 84))[1]"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["row(any, ...)"], "Feature": ["row(any, ...)"], "Description": ["Create an unnamed STRUCT (tuple) containing the argument values."], "Examples": ["row(i, i % 4, i / 4)"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_extract(struct, 'entry')"], "Feature": ["struct_extract(struct, 'entry')"], "Description": ["Extract the named entry from the STRUCT."], "Examples": ["struct_extract({'i': 3, 'v2': 3, 'v3': 0}, 'i')"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_extract(struct, idx)"], "Feature": ["struct_extract(struct, idx)"], "Description": ["Extract the entry from an unnamed STRUCT (tuple) using an index (1-based)."], "Examples": ["struct_extract(row(42, 84), 1)"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_insert(struct, name := any, ...)"], "Feature": ["struct_insert(struct, name := any, ...)"], "Description": ["Add field(s)/value(s) to an existing STRUCT with the argument values. The entry name(s) will be the bound variable name(s)."], "Examples": ["struct_insert({'a': 1}, b := 2)"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_pack(name := any, ...)"], "Feature": ["struct_pack(name := any, ...)"], "Description": ["Create a STRUCT containing the argument values. The entry name will be the bound variable name."], "Examples": ["struct_pack(i := 4, s := 'string')"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct.entry"], "Feature": ["struct.entry"], "Description": ["Dot notation that serves as an alias for struct_extract from named STRUCTs."], "Examples": ["({'i': 3, 's': 'string'}).i"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct[entry]"], "Feature": ["struct[entry]"], "Description": ["Bracket notation that serves as an alias for struct_extract from named STRUCTs."], "Examples": ["({'i': 3, 's': 'string'})['i']"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct[idx]"], "Feature": ["struct[idx]"], "Description": ["Bracket notation that serves as an alias for struct_extract from unnamed STRUCTs (tuples), using an index (1-based)."], "Examples": ["(row(42, 84))[1]"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["row(any, ...)"], "Feature": ["row(any, ...)"], "Description": ["Create an unnamed STRUCT (tuple) containing the argument values."], "Examples": ["row(i, i % 4, i / 4)"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_extract(struct, 'entry')"], "Feature": ["struct_extract(struct, 'entry')"], "Description": ["Extract the named entry from the STRUCT."], "Examples": ["struct_extract({'i': 3, 'v2': 3, 'v3': 0}, 'i')"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_extract(struct, idx)"], "Feature": ["struct_extract(struct, idx)"], "Description": ["Extract the entry from an unnamed STRUCT (tuple) using an index (1-based)."], "Examples": ["struct_extract(row(42, 84), 1)"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_insert(struct, name := any, ...)"], "Feature": ["struct_insert(struct, name := any, ...)"], "Description": ["Add field(s)/value(s) to an existing STRUCT with the argument values. The entry name(s) will be the bound variable name(s)."], "Examples": ["struct_insert({'a': 1}, b := 2)"], "Category": ["Struct Functions"]}
{"HTML": ["https://duckdb.org/docs/sql/functions/struct"], "Title": ["struct_pack(name := any, ...)"], "Feature": ["struct_pack(name := any, ...)"], "Description": ["Create a STRUCT containing the argument values. The entry name will be the bound variable name."], "Examples": ["struct_pack(i := 4, s := 'string')"], "Category": ["Struct Functions"]}
