{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["row_number()\n"], "Feature": ["row_number()\n"], "Description": [" The number of the row within the current partition. Rows are\n       numbered starting from 1 in the order defined by the ORDER BY clause in\n       the window definition, or in arbitrary order otherwise.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["rank()\n"], "Feature": ["rank()\n"], "Description": [" The row_number() of the first peer in each group - the rank of the\n       current row with gaps. If there is no ORDER BY clause, then all rows\n       are considered peers and this function always returns 1.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["dense_rank()\n"], "Feature": ["dense_rank()\n"], "Description": [" The number of the current row's peer group within its partition - the\n       rank of the current row without gaps. Rows are numbered starting\n       from 1 in the order defined by the ORDER BY clause in the window\n       definition. If there is no ORDER BY clause, then all rows are\n       considered peers and this function always returns 1.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["percent_rank()\n"], "Feature": ["percent_rank()\n"], "Description": [" Despite the name, this function always returns a value between 0.0\n       and 1.0 equal to (rank - 1)/(partition-rows - 1), where\n       rank is the value returned by built-in window function rank()\n       and partition-rows is the total number of rows in the\n       partition. If the partition contains only one row, this function\n       returns 0.0.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["cume_dist()\n"], "Feature": ["cume_dist()\n"], "Description": [" The cumulative distribution. Calculated as\n       row-number/partition-rows, where row-number is\n       the value returned by row_number() for the last peer in the group\n       and partition-rows the number of rows in the partition.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["ntile(N)\n"], "Feature": ["ntile(N)\n"], "Description": [" Argument N is handled as an integer. This function divides the\n       partition into N groups as evenly as possible and assigns an integer\n       between 1 and N to each group, in the order defined by the ORDER\n       BY clause, or in arbitrary order otherwise. If necessary, larger groups\n       occur first. This function returns the integer value assigned to the\n       group that the current row is a part of.\n\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["lag(expr)lag(expr, offset)lag(expr, offset, default)\n"], "Feature": ["lag(expr)lag(expr, offset)lag(expr, offset, default)\n"], "Description": [" The first form of the lag() function returns the result of evaluating\n       expression expr against the previous row in the partition. Or, if\n       there is no previous row (because the current row is the first), NULL.\n\n       If the offset argument is provided, then it must be a\n       non-negative integer. In this case the value returned is the result\n       of evaluating expr against the row offset rows before the\n       current row within the partition. If offset is 0, then\n       expr is evaluated against the current row. If there is no row\n       offset rows before the current row, NULL is returned.\n\n       If default is also provided, then it is returned instead of\n      NULL if the row identified by offset does not exist.\n\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["lead(expr)lead(expr, offset)lead(expr, offset, default)\n"], "Feature": ["lead(expr)lead(expr, offset)lead(expr, offset, default)\n"], "Description": [" The first form of the lead() function returns the result of evaluating\n       expression expr against the next row in the partition. Or, if\n       there is no next row (because the current row is the last), NULL.\n\n       If the offset argument is provided, then it must be a\n       non-negative integer. In this case the value returned is the result\n       of evaluating expr against the row offset rows after the\n       current row within the partition. If offset is 0, then\n       expr is evaluated against the current row. If there is no row\n       offset rows after the current row, NULL is returned.\n\n       If default is also provided, then it is returned instead of\n      NULL if the row identified by offset does not exist.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["first_value(expr)\n"], "Feature": ["first_value(expr)\n"], "Description": [" This built-in window function calculates the window frame for each\n       row in the same way as an aggregate window function. It returns the\n       value of expr evaluated against the first row in the window frame\n       for each row.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["last_value(expr)\n"], "Feature": ["last_value(expr)\n"], "Description": [" This built-in window function calculates the window frame for each\n       row in the same way as an aggregate window function. It returns the\n       value of expr evaluated against the last row in the window frame\n       for each row.\n  "], "Examples": [], "Category": ["Window Functions"]}
{"HTML": ["https://sqlite.org/windowfunctions.html"], "Title": ["nth_value(expr, N)\n"], "Feature": ["nth_value(expr, N)\n"], "Description": [" This built-in window function calculates the window frame for each\n       row in the same way as an aggregate window function. It returns the\n       value of expr evaluated against the row N of the window\n       frame. Rows are numbered within the window frame starting from 1 in\n       the order defined by the ORDER BY clause if one is present, or in\n       arbitrary order otherwise. If there is no Nth row in the\n       partition, then NULL is returned.\n  "], "Examples": [], "Category": ["Window Functions"]}
