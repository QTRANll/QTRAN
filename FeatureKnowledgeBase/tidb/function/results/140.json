{
    "HTML": "https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_unix-timestamp",
    "Title": "UNIX_TIMESTAMP()",
    "Feature": [
        "UNIX_TIMESTAMP([date])"
    ],
    "Description": [
        "\nUNIX_TIMESTAMP([date])\n",
        "\n          If UNIX_TIMESTAMP() is called\n          with no date argument, it returns a\n          Unix timestamp representing seconds since '1970-01-01\n          00:00:00' UTC.\n        ",
        "\n          If UNIX_TIMESTAMP() is called\n          with a date argument, it returns\n          the value of the argument as seconds since\n          '1970-01-01 00:00:00' UTC. The server\n          interprets date as a value in the\n          session time zone and converts it to an internal Unix\n          timestamp value in UTC. (Clients can set the session time zone\n          as described in Section\u00a07.1.15, \u201cMySQL Server Time Zone Support\u201d.) The\n          date argument may be a\n          DATE,\n          DATETIME, or\n          TIMESTAMP string, or a number\n          in YYMMDD,\n          YYMMDDhhmmss,\n          YYYYMMDD, or\n          YYYYMMDDhhmmss format. If the\n          argument includes a time part, it may optionally include a\n          fractional seconds part.\n        ",
        "\n          The return value is an integer if no argument is given or the\n          argument does not include a fractional seconds part, or\n          DECIMAL if an argument is given\n          that includes a fractional seconds part.\n        ",
        "\n          When the date argument is a\n          TIMESTAMP column,\n          UNIX_TIMESTAMP() returns the\n          internal timestamp value directly, with no implicit\n          \u201cstring-to-Unix-timestamp\u201d conversion.\n        ",
        "\n          Prior to MySQL 8.0.28, the valid range of argument values is\n          the same as for the TIMESTAMP\n          data type: '1970-01-01 00:00:01.000000' UTC\n          to '2038-01-19 03:14:07.999999' UTC. This\n          is also the case in MySQL 8.0.28 and later for 32-bit\n          platforms. For MySQL 8.0.28 and later running on 64-bit\n          platforms, the valid range of argument values for\n          UNIX_TIMESTAMP() is '1970-01-01\n          00:00:01.000000' UTC to '3001-01-19\n          03:14:07.999999' UTC (corresponding to\n          32536771199.999999 seconds).\n        ",
        "\n          Regardless of MySQL version or platform architecture, if you\n          pass an out-of-range date to\n          UNIX_TIMESTAMP(), it returns\n          0. If date is\n          NULL, it returns NULL.\n        ",
        "Press CTRL+C to copy mysql> SELECT UNIX_TIMESTAMP();\n        -> 1447431666\nmysql> SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19');\n        -> 1447431619\nmysql> SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19.012');\n        -> 1447431619.012",
        "\n          If you use UNIX_TIMESTAMP() and\n          FROM_UNIXTIME() to convert\n          between values in a non-UTC time zone and Unix timestamp\n          values, the conversion is lossy because the mapping is not\n          one-to-one in both directions. For example, due to conventions\n          for local time zone changes such as Daylight Saving Time\n          (DST), it is possible for\n          UNIX_TIMESTAMP() to map two\n          values that are distinct in a non-UTC time zone to the same\n          Unix timestamp value.\n          FROM_UNIXTIME() maps that value\n          back to only one of the original values. Here is an example,\n          using values that are distinct in the MET\n          time zone:\n        ",
        "Press CTRL+C to copy mysql> SET time_zone = 'MET';\nmysql> SELECT UNIX_TIMESTAMP('2005-03-27 03:00:00');\n+---------------------------------------+\n| UNIX_TIMESTAMP('2005-03-27 03:00:00') |\n+---------------------------------------+\n|                            1111885200 |\n+---------------------------------------+\nmysql> SELECT UNIX_TIMESTAMP('2005-03-27 02:00:00');\n+---------------------------------------+\n| UNIX_TIMESTAMP('2005-03-27 02:00:00') |\n+---------------------------------------+\n|                            1111885200 |\n+---------------------------------------+\nmysql> SELECT FROM_UNIXTIME(1111885200);\n+---------------------------+\n| FROM_UNIXTIME(1111885200) |\n+---------------------------+\n| 2005-03-27 03:00:00       |\n+---------------------------+",
        "\n\nNote\n\n\n            To use named time zones such as 'MET' or\n            'Europe/Amsterdam', the time zone tables\n            must be properly set up. For instructions, see\n            Section\u00a07.1.15, \u201cMySQL Server Time Zone Support\u201d.\n\n",
        "\n          If you want to subtract\n          UNIX_TIMESTAMP() columns, you\n          might want to cast them to signed integers. See\n          Section\u00a014.10, \u201cCast Functions and Operators\u201d.\n        "
    ],
    "Examples": [
        "mysql> SELECT UNIX_TIMESTAMP();\n        -> 1447431666\nmysql> SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19');\n        -> 1447431619\nmysql> SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19.012');\n        -> 1447431619.012",
        "mysql> SET time_zone = 'MET';\nmysql> SELECT UNIX_TIMESTAMP('2005-03-27 03:00:00');\n+---------------------------------------+\n| UNIX_TIMESTAMP('2005-03-27 03:00:00') |\n+---------------------------------------+\n|                            1111885200 |\n+---------------------------------------+\nmysql> SELECT UNIX_TIMESTAMP('2005-03-27 02:00:00');\n+---------------------------------------+\n| UNIX_TIMESTAMP('2005-03-27 02:00:00') |\n+---------------------------------------+\n|                            1111885200 |\n+---------------------------------------+\nmysql> SELECT FROM_UNIXTIME(1111885200);\n+---------------------------+\n| FROM_UNIXTIME(1111885200) |\n+---------------------------+\n| 2005-03-27 03:00:00       |\n+---------------------------+"
    ],
    "Category": [
        "\u65e5\u671f\u548c\u65f6\u95f4\u51fd\u6570"
    ],
    "EffectiveSQLsRefined": [
        "SELECT UNIX_TIMESTAMP();",
        "SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19');",
        "SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19.012');",
        "SELECT UNIX_TIMESTAMP('2005-03-27 03:00:00');",
        "SELECT UNIX_TIMESTAMP('2005-03-27 02:00:00');",
        "SELECT FROM_UNIXTIME(1111885200);"
    ],
    "EffectiveSQLsGenerated": [],
    "EffectiveSQLsGeneratedCosts": [],
    "EffectiveSQLsGeneratedErrors": [],
    "EffectiveSQLs": [
        "SELECT UNIX_TIMESTAMP();",
        "SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19');",
        "SELECT UNIX_TIMESTAMP('2015-11-13 10:20:19.012');",
        "SELECT UNIX_TIMESTAMP('2005-03-27 03:00:00');",
        "SELECT UNIX_TIMESTAMP('2005-03-27 02:00:00');",
        "SELECT FROM_UNIXTIME(1111885200);"
    ]
}