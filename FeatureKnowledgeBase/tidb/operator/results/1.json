{
    "HTML": "https://dev.mysql.com/doc/refman/8.0/en/assignment-operators.html#operator_assign-equal",
    "Title": "=",
    "Feature": [
        "="
    ],
    "Description": [
        "\n=\n",
        "\n            This operator is used to perform value assignments in two\n            cases, described in the next two paragraphs.\n          ",
        "\n            Within a\n            SET\n            statement, = is treated as an assignment\n            operator that causes the user variable on the left hand side\n            of the operator to take on the value to its right. (In other\n            words, when used in a\n            SET\n            statement, = is treated identically to\n            :=.)\n            The value on the right hand side may be a literal value,\n            another variable storing a value, or any legal expression\n            that yields a scalar value, including the result of a query\n            (provided that this value is a scalar value). You can\n            perform multiple assignments in the same\n            SET\n            statement.\n          ",
        "\n            In the SET clause of an\n            UPDATE statement,\n            = also acts as an assignment operator; in\n            this case, however, it causes the column named on the left\n            hand side of the operator to assume the value given to the\n            right, provided any WHERE conditions that\n            are part of the UPDATE are\n            met. You can make multiple assignments in the same\n            SET clause of an\n            UPDATE statement.\n          ",
        "\n            In any other context, = is treated as a\n            comparison operator.\n          ",
        "Press CTRL+C to copy mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1",
        "\n            For more information, see Section 15.7.6.1, “SET Syntax for Variable Assignment”,\n            Section 15.2.17, “UPDATE Statement”, and Section 15.2.15, “Subqueries”.\n"
    ],
    "Examples": [
        "mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1"
    ],
    "Category": [
        "Assignment Operators"
    ]
}