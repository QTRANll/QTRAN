{
  "index": 0,
  "doc": "ABS(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 20,
      "doc": "ABS(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 288,
      "doc": "SIGN(X),Built-In Functions"
    },
    {
      "index": 379,
      "doc": "SUBDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 1,
  "doc": "ACOS(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 21,
      "doc": "ACOS(X),Built-In Functions"
    },
    {
      "index": 20,
      "doc": "ABS(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 92,
      "doc": "DEGREES(X),Built-In Functions"
    }
  ]
}
{
  "index": 2,
  "doc": "ADDDATE(date,INTERVAL expr unit), ADDDATE(expr,days)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 22,
      "doc": "ADDDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 379,
      "doc": "SUBDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 3,
  "doc": "ADDTIME(expr1,expr2)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 23,
      "doc": "ADDTIME(expr1,expr2),Built-In Functions"
    },
    {
      "index": 383,
      "doc": "SUBTIME(expr1,expr2),Built-In Functions"
    },
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 388,
      "doc": "TIME(expr),Built-In Functions"
    }
  ]
}
{
  "index": 4,
  "doc": "ADD_MONTHS(date, months)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 237,
      "doc": "MONTHNAME(date),Built-In Functions"
    },
    {
      "index": 236,
      "doc": "MONTH(date),Built-In Functions"
    },
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    },
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 5,
  "doc": "AES_DECRYPT(crypt_str,key_str)\nFrom MariaDB 11.2.0AES_ENCRYPT(crypt_str, key_str, [, iv [, mode]])\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 6,
  "doc": "AES_ENCRYPT(str,key_str)\nFrom MariaDB 11.2.0AES_ENCRYPT(str, key, [, iv [, mode]])\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 7,
  "doc": "ASCII(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 8,
  "doc": "ASIN(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 28,
      "doc": "ASIN(X),Built-In Functions"
    },
    {
      "index": 297,
      "doc": "ST_AsGeoJSON(g\n          [, max_dec_digits [,\n          options]]),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 247,
      "doc": "OCT(N),Built-In Functions"
    }
  ]
}
{
  "index": 9,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 10,
  "doc": "ATAN(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    },
    {
      "index": 34,
      "doc": "ATAN(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    }
  ]
}
{
  "index": 11,
  "doc": "ATAN(Y,X), ATAN2(Y,X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    },
    {
      "index": 34,
      "doc": "ATAN(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    }
  ]
}
{
  "index": 12,
  "doc": "AVG([DISTINCT] expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 0,
      "doc": "AVG([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 5,
      "doc": "COUNT(DISTINCT\n            expr,[expr...]),Aggregate Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 18,
      "doc": "VARIANCE(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 13,
  "doc": "BENCHMARK(count,expr)\n,Information Functions",
  "mapping docs": [
    {
      "index": 37,
      "doc": "BENCHMARK(count,expr),Built-In Functions"
    },
    {
      "index": 5,
      "doc": "COUNT(DISTINCT\n            expr,[expr...]),Aggregate Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 231,
      "doc": "MICROSECOND(expr),Built-In Functions"
    }
  ]
}
{
  "index": 14,
  "doc": "BIN(N)\n,String Functions",
  "mapping docs": [
    {
      "index": 38,
      "doc": "BIN(N),Built-In Functions"
    },
    {
      "index": 423,
      "doc": "WEIGHT_STRING(str\n          [AS {CHAR|BINARY}(N)]\n          [flags]),Built-In Functions"
    },
    {
      "index": 19,
      "doc": "BIT_COUNT(N),Bit Functions"
    },
    {
      "index": 412,
      "doc": "UUID_TO_BIN(string_uuid),Built-In Functions"
    }
  ]
}
{
  "index": 15,
  "doc": "BINARY\n,String Functions",
  "mapping docs": [
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    },
    {
      "index": 423,
      "doc": "WEIGHT_STRING(str\n          [AS {CHAR|BINARY}(N)]\n          [flags]),Built-In Functions"
    },
    {
      "index": 19,
      "doc": "BIT_COUNT(N),Bit Functions"
    },
    {
      "index": 38,
      "doc": "BIN(N),Built-In Functions"
    }
  ]
}
{
  "index": 16,
  "doc": "BINLOG_GTID_POS(binlog_filename,binlog_offset)\n,Information Functions",
  "mapping docs": [
    {
      "index": 38,
      "doc": "BIN(N),Built-In Functions"
    },
    {
      "index": 39,
      "doc": "BIN_TO_UUID(binary_uuid),Built-In Functions"
    },
    {
      "index": 19,
      "doc": "BIT_COUNT(N),Bit Functions"
    },
    {
      "index": 209,
      "doc": "LOG(X),Built-In Functions"
    }
  ]
}
{
  "index": 17,
  "doc": "BIT_AND(expr) [over_clause]\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 1,
      "doc": "BIT_AND(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 2,
      "doc": "BIT_OR(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 3,
      "doc": "BIT_XOR(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 11,
      "doc": "STD(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 18,
  "doc": "BIT_LENGTH(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 19,
      "doc": "BIT_COUNT(N),Bit Functions"
    },
    {
      "index": 55,
      "doc": "CHARACTER_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 19,
  "doc": "BIT_OR(expr) [over_clause]\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 2,
      "doc": "BIT_OR(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 1,
      "doc": "BIT_AND(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 3,
      "doc": "BIT_XOR(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 11,
      "doc": "STD(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 20,
  "doc": "BIT_XOR(expr) [over_clause]\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 3,
      "doc": "BIT_XOR(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 1,
      "doc": "BIT_AND(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 2,
      "doc": "BIT_OR(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 11,
      "doc": "STD(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 21,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 22,
  "doc": "CASE value WHEN [compare_value] THEN result [WHEN [compare_value] THEN\nresult ...] [ELSE result] END\n\nCASE WHEN [condition] THEN result [WHEN [condition] THEN result ...]\n[ELSE result] END\n,Control Flow Functions",
  "mapping docs": [
    {
      "index": 133,
      "doc": "IFNULL(expr1,expr2),Built-In Functions"
    },
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 200,
      "doc": "LEAST(value1,value2,...),Built-In Functions"
    },
    {
      "index": 116,
      "doc": "GREATEST(value1,value2,...),Built-In Functions"
    }
  ]
}
{
  "index": 23,
  "doc": "CAST(expr AS type)\n,String Functions",
  "mapping docs": [
    {
      "index": 50,
      "doc": "CAST(expr AS\n            type [ARRAY]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 383,
      "doc": "SUBTIME(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 24,
  "doc": "CEIL(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 51,
      "doc": "CEIL(X),Built-In Functions"
    },
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    },
    {
      "index": 204,
      "doc": "LN(X),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 25,
  "doc": "CEILING(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 52,
      "doc": "CEILING(X),Built-In Functions"
    },
    {
      "index": 102,
      "doc": "FLOOR(X),Built-In Functions"
    },
    {
      "index": 294,
      "doc": "SQRT(X),Built-In Functions"
    },
    {
      "index": 116,
      "doc": "GREATEST(value1,value2,...),Built-In Functions"
    }
  ]
}
{
  "index": 26,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 27,
  "doc": "CHAR(N,... [USING charset_name])\n,String Functions",
  "mapping docs": [
    {
      "index": 53,
      "doc": "CHAR(N,...\n          [USING charset_name]),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    }
  ]
}
{
  "index": 28,
  "doc": "CHARACTER_LENGTH(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 55,
      "doc": "CHARACTER_LENGTH(str),Built-In Functions"
    },
    {
      "index": 202,
      "doc": "LENGTH(str),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    }
  ]
}
{
  "index": 29,
  "doc": "CHARSET(str)\n,Information Functions",
  "mapping docs": [
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 53,
      "doc": "CHAR(N,...\n          [USING charset_name]),Built-In Functions"
    }
  ]
}
{
  "index": 30,
  "doc": "CHAR_LENGTH(str)\nCHARACTER_LENGTH(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 55,
      "doc": "CHARACTER_LENGTH(str),Built-In Functions"
    },
    {
      "index": 202,
      "doc": "LENGTH(str),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    }
  ]
}
{
  "index": 31,
  "doc": "CHR(N)\n,String Functions",
  "mapping docs": [
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 32,
  "doc": "COERCIBILITY(str)\n,Information Functions",
  "mapping docs": [
    {
      "index": 58,
      "doc": "COERCIBILITY(str),Built-In Functions"
    },
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 363,
      "doc": "ST_SymDifference(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 359,
      "doc": "ST_Simplify(g,\n          max_distance),Built-In Functions"
    }
  ]
}
{
  "index": 33,
  "doc": "COLLATION(str)\n,Information Functions",
  "mapping docs": [
    {
      "index": 59,
      "doc": "COLLATION(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 34,
  "doc": "COLUMN_ADD(dyncol_blob, column_nr, value [as type], [column_nr, value [as type]]...);\nCOLUMN_ADD(dyncol_blob, column_name, value [as type], [column_name, value [as type]]...);\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 45,
      "doc": "CAN_ACCESS_COLUMN(ARGS),Built-In Functions"
    },
    {
      "index": 111,
      "doc": "GET_DD_COLUMN_PRIVILEGES(ARGS),Built-In Functions"
    },
    {
      "index": 99,
      "doc": "FIELD(str,str1,str2,str3,...),Built-In Functions"
    }
  ]
}
{
  "index": 35,
  "doc": "COLUMN_CHECK(dyncol_blob);\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 45,
      "doc": "CAN_ACCESS_COLUMN(ARGS),Built-In Functions"
    },
    {
      "index": 111,
      "doc": "GET_DD_COLUMN_PRIVILEGES(ARGS),Built-In Functions"
    },
    {
      "index": 104,
      "doc": "FORMAT_BYTES(count),Built-In Functions"
    }
  ]
}
{
  "index": 36,
  "doc": "COLUMN_CREATE(column_nr, value [as type], [column_nr, value [as type]]...);\nCOLUMN_CREATE(column_name, value [as type], [column_name, value [as type]]...);\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 45,
      "doc": "CAN_ACCESS_COLUMN(ARGS),Built-In Functions"
    },
    {
      "index": 99,
      "doc": "FIELD(str,str1,str2,str3,...),Built-In Functions"
    },
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 37,
  "doc": "COLUMN_DELETE(dyncol_blob, column_nr, column_nr...);\nCOLUMN_DELETE(dyncol_blob, column_name, column_name...);\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 45,
      "doc": "CAN_ACCESS_COLUMN(ARGS),Built-In Functions"
    },
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    },
    {
      "index": 99,
      "doc": "FIELD(str,str1,str2,str3,...),Built-In Functions"
    }
  ]
}
{
  "index": 38,
  "doc": "COLUMN_EXISTS(dyncol_blob, column_nr);\nCOLUMN_EXISTS(dyncol_blob, column_name);\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 45,
      "doc": "CAN_ACCESS_COLUMN(ARGS),Built-In Functions"
    },
    {
      "index": 106,
      "doc": "FOUND_ROWS(),Built-In Functions"
    },
    {
      "index": 151,
      "doc": "INTERNAL_INDEX_COLUMN_CARDINALITY(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 39,
  "doc": "COLUMN_GET(dyncol_blob, column_nr as type);\nCOLUMN_GET(dyncol_blob, column_name as type);\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 45,
      "doc": "CAN_ACCESS_COLUMN(ARGS),Built-In Functions"
    },
    {
      "index": 111,
      "doc": "GET_DD_COLUMN_PRIVILEGES(ARGS),Built-In Functions"
    },
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 320,
      "doc": "ST_GeometryType(g),Built-In Functions"
    }
  ]
}
{
  "index": 40,
  "doc": "COLUMN_JSON(dyncol_blob)\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 181,
      "doc": "JSON_PRETTY(json_val),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 189,
      "doc": "JSON_STORAGE_FREE(json_val),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 41,
  "doc": "COLUMN_LIST(dyncol_blob);\n,Dynamic Columns Functions",
  "mapping docs": [
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 45,
      "doc": "CAN_ACCESS_COLUMN(ARGS),Built-In Functions"
    },
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    },
    {
      "index": 279,
      "doc": "ROW_NUMBER(),Built-In Functions"
    }
  ]
}
{
  "index": 42,
  "doc": "COMPRESS(string_to_compress)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 60,
      "doc": "COMPRESS(string_to_compress),Built-In Functions"
    },
    {
      "index": 401,
      "doc": "UNCOMPRESSED_LENGTH(compressed_string),Built-In Functions"
    },
    {
      "index": 400,
      "doc": "UNCOMPRESS(string_to_uncompress),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 43,
  "doc": "CONCAT(str1,str2,...)\n,String Functions",
  "mapping docs": [
    {
      "index": 61,
      "doc": "CONCAT(str1,str2,...),Built-In Functions"
    },
    {
      "index": 62,
      "doc": "CONCAT_WS(separator,str1,str2,...),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    }
  ]
}
{
  "index": 44,
  "doc": "CONCAT_WS(separator,str1,str2,...)\n,String Functions",
  "mapping docs": [
    {
      "index": 62,
      "doc": "CONCAT_WS(separator,str1,str2,...),Built-In Functions"
    },
    {
      "index": 61,
      "doc": "CONCAT(str1,str2,...),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 238,
      "doc": "MultiLineString(ls\n          [, ls] ...),Built-In Functions"
    }
  ]
}
{
  "index": 45,
  "doc": "CONNECTION_ID()\n,Information Functions",
  "mapping docs": [
    {
      "index": 63,
      "doc": "CONNECTION_ID(),Built-In Functions"
    },
    {
      "index": 260,
      "doc": "PS_THREAD_ID(connection_id),Built-In Functions"
    },
    {
      "index": 259,
      "doc": "PS_CURRENT_THREAD_ID(),Built-In Functions"
    },
    {
      "index": 196,
      "doc": "LAST_INSERT_ID(),Built-In Functions"
    }
  ]
}
{
  "index": 46,
  "doc": "Contains(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 303,
      "doc": "ST_Contains(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 313,
      "doc": "ST_Equals(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 47,
  "doc": "CONV(N,from_base,to_base)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 64,
      "doc": "CONV(N,from_base,to_base),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 241,
      "doc": "NAME_CONST(name,value),Built-In Functions"
    },
    {
      "index": 247,
      "doc": "OCT(N),Built-In Functions"
    }
  ]
}
{
  "index": 48,
  "doc": "CONVERT(expr,type), CONVERT(expr USING transcoding_name)\n,String Functions",
  "mapping docs": [
    {
      "index": 65,
      "doc": "CONVERT(expr\n            USING transcoding_name),Built-In Functions"
    },
    {
      "index": 273,
      "doc": "REPLACE(str,from_str,to_str),Built-In Functions"
    },
    {
      "index": 50,
      "doc": "CAST(expr AS\n            type [ARRAY]),Built-In Functions"
    },
    {
      "index": 59,
      "doc": "COLLATION(str),Built-In Functions"
    }
  ]
}
{
  "index": 49,
  "doc": "CONVERT_TZ(dt,from_tz,to_tz)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 66,
      "doc": "CONVERT_TZ(dt,from_tz,to_tz),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 388,
      "doc": "TIME(expr),Built-In Functions"
    },
    {
      "index": 105,
      "doc": "FORMAT_PICO_TIME(time_val),Built-In Functions"
    }
  ]
}
{
  "index": 50,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 51,
  "doc": "COS(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 67,
      "doc": "COS(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 289,
      "doc": "SIN(X),Built-In Functions"
    }
  ]
}
{
  "index": 52,
  "doc": "COT(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 68,
      "doc": "COT(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 289,
      "doc": "SIN(X),Built-In Functions"
    },
    {
      "index": 67,
      "doc": "COS(X),Built-In Functions"
    }
  ]
}
{
  "index": 53,
  "doc": "COUNT(DISTINCT expr,[expr...])\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 5,
      "doc": "COUNT(DISTINCT\n            expr,[expr...]),Aggregate Functions"
    },
    {
      "index": 4,
      "doc": "COUNT(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 54,
  "doc": "COUNT(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 5,
      "doc": "COUNT(DISTINCT\n            expr,[expr...]),Aggregate Functions"
    },
    {
      "index": 4,
      "doc": "COUNT(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 12,
      "doc": "STDDEV(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 55,
  "doc": "<= MariaDB 10.7CRC32(expr)\nFrom MariaDB 10.8CRC32([par,]expr)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 134,
      "doc": "expr\n            IN (value,...),Built-In Functions"
    },
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 56,
  "doc": "CRC32C([par,]expr)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 71,
      "doc": "CRC32(expr),Built-In Functions"
    },
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 231,
      "doc": "MICROSECOND(expr),Built-In Functions"
    }
  ]
}
{
  "index": 57,
  "doc": "Crosses(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 305,
      "doc": "ST_Crosses(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 58,
  "doc": "CUME_DIST() OVER ( \n  [ PARTITION BY partition_expression ] \n  [ ORDER BY order_list ]\n)\n,Window Functions",
  "mapping docs": [
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 3,
      "doc": "BIT_XOR(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 59,
  "doc": "CURDATE()\nCURRENT_DATE\nCURRENT_DATE()\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 74,
      "doc": "CURRENT_DATE,Built-In Functions"
    },
    {
      "index": 81,
      "doc": "DATE(expr),Built-In Functions"
    },
    {
      "index": 77,
      "doc": "CURRENT_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 86,
      "doc": "DAY(date),Built-In Functions"
    }
  ]
}
{
  "index": 60,
  "doc": "CURRENT_DATE, CURRENT_DATE()\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 74,
      "doc": "CURRENT_DATE,Built-In Functions"
    },
    {
      "index": 77,
      "doc": "CURRENT_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 81,
      "doc": "DATE(expr),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    }
  ]
}
{
  "index": 61,
  "doc": "CURRENT_ROLE, CURRENT_ROLE()\n,Information Functions",
  "mapping docs": [
    {
      "index": 75,
      "doc": "CURRENT_ROLE(),Built-In Functions"
    },
    {
      "index": 153,
      "doc": "INTERNAL_IS_ENABLED_ROLE(ARGS),Built-In Functions"
    },
    {
      "index": 276,
      "doc": "ROLES_GRAPHML(),Built-In Functions"
    },
    {
      "index": 147,
      "doc": "INTERNAL_GET_ENABLED_ROLE_JSON(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 62,
  "doc": "CURRENT_TIME\nCURRENT_TIME([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 76,
      "doc": "CURRENT_TIME,Built-In Functions"
    },
    {
      "index": 77,
      "doc": "CURRENT_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 74,
      "doc": "CURRENT_DATE,Built-In Functions"
    }
  ]
}
{
  "index": 63,
  "doc": "CURRENT_TIMESTAMP\nCURRENT_TIMESTAMP([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 77,
      "doc": "CURRENT_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 74,
      "doc": "CURRENT_DATE,Built-In Functions"
    },
    {
      "index": 392,
      "doc": "TIMESTAMP(expr),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    }
  ]
}
{
  "index": 64,
  "doc": "CURRENT_USER, CURRENT_USER()\n,Information Functions",
  "mapping docs": [
    {
      "index": 78,
      "doc": "CURRENT_USER,Built-In Functions"
    },
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 285,
      "doc": "SESSION_USER(),Built-In Functions"
    },
    {
      "index": 48,
      "doc": "CAN_ACCESS_USER(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 65,
  "doc": "CURTIME([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    },
    {
      "index": 85,
      "doc": "DATEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 81,
      "doc": "DATE(expr),Built-In Functions"
    }
  ]
}
{
  "index": 66,
  "doc": "DATABASE()\nSCHEMA()\n,Information Functions",
  "mapping docs": [
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 46,
      "doc": "CAN_ACCESS_DATABASE(ARGS),Built-In Functions"
    },
    {
      "index": 185,
      "doc": "JSON_SCHEMA_VALID(schema,document),Built-In Functions"
    }
  ]
}
{
  "index": 67,
  "doc": "DATE(expr)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 81,
      "doc": "DATE(expr),Built-In Functions"
    },
    {
      "index": 85,
      "doc": "DATEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 22,
      "doc": "ADDDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 68,
  "doc": "DATEDIFF(expr1,expr2)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 85,
      "doc": "DATEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 391,
      "doc": "TIMEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 81,
      "doc": "DATE(expr),Built-In Functions"
    }
  ]
}
{
  "index": 69,
  "doc": "DATE_ADD(date,INTERVAL expr unit)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 22,
      "doc": "ADDDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 379,
      "doc": "SUBDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 70,
  "doc": "DATE_FORMAT(date, format[, locale])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 377,
      "doc": "STR_TO_DATE(str,format),Built-In Functions"
    },
    {
      "index": 114,
      "doc": "GET_FORMAT({DATE|TIME|DATETIME},\n          {'EUR'|'USA'|'JIS'|'ISO'|'INTERNAL'}),Built-In Functions"
    }
  ]
}
{
  "index": 71,
  "doc": "DATE_SUB(date,INTERVAL expr unit)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 379,
      "doc": "SUBDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 22,
      "doc": "ADDDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 72,
  "doc": "DAY(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 86,
      "doc": "DAY(date),Built-In Functions"
    },
    {
      "index": 87,
      "doc": "DAYNAME(date),Built-In Functions"
    },
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    },
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    }
  ]
}
{
  "index": 73,
  "doc": "DAYNAME(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 87,
      "doc": "DAYNAME(date),Built-In Functions"
    },
    {
      "index": 86,
      "doc": "DAY(date),Built-In Functions"
    },
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    },
    {
      "index": 395,
      "doc": "TO_DAYS(date),Built-In Functions"
    }
  ]
}
{
  "index": 74,
  "doc": "DAYOFMONTH(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    },
    {
      "index": 237,
      "doc": "MONTHNAME(date),Built-In Functions"
    },
    {
      "index": 236,
      "doc": "MONTH(date),Built-In Functions"
    },
    {
      "index": 90,
      "doc": "DAYOFYEAR(date),Built-In Functions"
    }
  ]
}
{
  "index": 75,
  "doc": "DAYOFWEEK(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 89,
      "doc": "DAYOFWEEK(date),Built-In Functions"
    },
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    },
    {
      "index": 425,
      "doc": "YEARWEEK(date),Built-In Functions"
    },
    {
      "index": 420,
      "doc": "WEEK(date[,mode]),Built-In Functions"
    }
  ]
}
{
  "index": 76,
  "doc": "DAYOFYEAR(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 90,
      "doc": "DAYOFYEAR(date),Built-In Functions"
    },
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    },
    {
      "index": 424,
      "doc": "YEAR(date),Built-In Functions"
    },
    {
      "index": 86,
      "doc": "DAY(date),Built-In Functions"
    }
  ]
}
{
  "index": 77,
  "doc": "DECODE(crypt_str,pass_str)\nIn Oracle mode from MariaDB 10.3.2:DECODE(expr, search_expr, result_expr [, search_expr2, result_expr2 ...] [default_expr])\nIn all modes from MariaDB 10.3.2:DECODE_ORACLE(expr, search_expr, result_expr [, search_expr2, result_expr2 ...] [default_expr])\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    },
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 78,
  "doc": "DECODE_HISTOGRAM(hist_type,histogram)\n,Information Functions",
  "mapping docs": [
    {
      "index": 129,
      "doc": "HEX(str),Built-In Functions"
    },
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    },
    {
      "index": 38,
      "doc": "BIN(N),Built-In Functions"
    }
  ]
}
{
  "index": 79,
  "doc": "DEFAULT(col_name)\n,Information Functions",
  "mapping docs": [
    {
      "index": 91,
      "doc": "DEFAULT(col_name),Built-In Functions"
    },
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 241,
      "doc": "NAME_CONST(name,value),Built-In Functions"
    },
    {
      "index": 59,
      "doc": "COLLATION(str),Built-In Functions"
    }
  ]
}
{
  "index": 80,
  "doc": "DEGREES(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 92,
      "doc": "DEGREES(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    },
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    }
  ]
}
{
  "index": 81,
  "doc": "DENSE_RANK() OVER (\n  [ PARTITION BY partition_expression ]\n  [ ORDER BY order_list ]\n) \n,Window Functions",
  "mapping docs": [
    {
      "index": 93,
      "doc": "DENSE_RANK(),Built-In Functions"
    },
    {
      "index": 266,
      "doc": "RANK(),Built-In Functions"
    },
    {
      "index": 250,
      "doc": "PERCENT_RANK(),Built-In Functions"
    },
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 82,
  "doc": "DES_DECRYPT(crypt_str[,key_str])\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    },
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    }
  ]
}
{
  "index": 83,
  "doc": "DES_ENCRYPT(str[,{key_num|key_str}])\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    }
  ]
}
{
  "index": 84,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 85,
  "doc": "Disjoint(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 308,
      "doc": "ST_Disjoint(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 86,
  "doc": "ELT(N, str1[, str2, str3,...])\n,String Functions",
  "mapping docs": [
    {
      "index": 94,
      "doc": "ELT(N,str1,str2,str3,...),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 87,
  "doc": "ENCODE(str,pass_str)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    },
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    }
  ]
}
{
  "index": 88,
  "doc": "ENCRYPT(str[,salt])\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 89,
  "doc": "Equals(g1,g2)\nFrom MariaDB 10.2.3:MBREQUALS(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 224,
      "doc": "MBREquals(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 313,
      "doc": "ST_Equals(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 306,
      "doc": "ST_Difference(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 90,
  "doc": "EXP(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 95,
      "doc": "EXP(X),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    },
    {
      "index": 204,
      "doc": "LN(X),Built-In Functions"
    }
  ]
}
{
  "index": 91,
  "doc": "EXPORT_SET(bits, on, off[, separator[, number_of_bits]])\n,String Functions",
  "mapping docs": [
    {
      "index": 96,
      "doc": "EXPORT_SET(bits,on,off[,separator[,number_of_bits]]),Built-In Functions"
    },
    {
      "index": 215,
      "doc": "MAKE_SET(bits,str1,str2,...),Built-In Functions"
    },
    {
      "index": 19,
      "doc": "BIT_COUNT(N),Bit Functions"
    },
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 92,
  "doc": "EXTRACT(unit FROM date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 97,
      "doc": "EXTRACT(unit\n          FROM date),Built-In Functions"
    },
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    }
  ]
}
{
  "index": 93,
  "doc": "EXTRACTVALUE(xml_frag, xpath_expr)\n,String Functions",
  "mapping docs": [
    {
      "index": 98,
      "doc": "ExtractValue(xml_frag,\n          xpath_expr),Built-In Functions"
    },
    {
      "index": 404,
      "doc": "UpdateXML(xml_target,\n          xpath_expr,\n          new_xml),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    }
  ]
}
{
  "index": 94,
  "doc": "sys.extract_schema_from_file_name(path)\n,No Category",
  "mapping docs": [
    {
      "index": 205,
      "doc": "LOAD_FILE(file_name),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    },
    {
      "index": 185,
      "doc": "JSON_SCHEMA_VALID(schema,document),Built-In Functions"
    }
  ]
}
{
  "index": 95,
  "doc": "sys.extract_table_from_file_name(path)\n,No Category",
  "mapping docs": [
    {
      "index": 205,
      "doc": "LOAD_FILE(file_name),Built-In Functions"
    },
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    },
    {
      "index": 47,
      "doc": "CAN_ACCESS_TABLE(ARGS),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    }
  ]
}
{
  "index": 96,
  "doc": "FIELD(pattern, str1[,str2,...])\n,String Functions",
  "mapping docs": [
    {
      "index": 99,
      "doc": "FIELD(str,str1,str2,str3,...),Built-In Functions"
    },
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 97,
  "doc": "FIND_IN_SET(pattern, strlist)\n,String Functions",
  "mapping docs": [
    {
      "index": 100,
      "doc": "FIND_IN_SET(str,strlist),Built-In Functions"
    },
    {
      "index": 208,
      "doc": "LOCATE(substr,str),Built-In Functions"
    },
    {
      "index": 303,
      "doc": "ST_Contains(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 215,
      "doc": "MAKE_SET(bits,str1,str2,...),Built-In Functions"
    }
  ]
}
{
  "index": 98,
  "doc": "FLOOR(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 102,
      "doc": "FLOOR(X),Built-In Functions"
    },
    {
      "index": 52,
      "doc": "CEILING(X),Built-In Functions"
    },
    {
      "index": 159,
      "doc": "INTERVAL(N,N1,N2,N3,...),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 99,
  "doc": "FORMAT(num, decimal_position[, locale])\n,String Functions",
  "mapping docs": [
    {
      "index": 103,
      "doc": "FORMAT(X,D[,locale]),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 59,
      "doc": "COLLATION(str),Built-In Functions"
    }
  ]
}
{
  "index": 100,
  "doc": "sys.format_bytes(double)\n,No Category",
  "mapping docs": [
    {
      "index": 104,
      "doc": "FORMAT_BYTES(count),Built-In Functions"
    },
    {
      "index": 265,
      "doc": "RANDOM_BYTES(len),Built-In Functions"
    },
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    },
    {
      "index": 213,
      "doc": "LPAD(str,len,padstr),Built-In Functions"
    }
  ]
}
{
  "index": 101,
  "doc": "sys.format_path(path)\n,No Category",
  "mapping docs": [
    {
      "index": 103,
      "doc": "FORMAT(X,D[,locale]),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 114,
      "doc": "GET_FORMAT({DATE|TIME|DATETIME},\n          {'EUR'|'USA'|'JIS'|'ISO'|'INTERNAL'}),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    }
  ]
}
{
  "index": 102,
  "doc": "FORMAT_PICO_TIME(time_val)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 105,
      "doc": "FORMAT_PICO_TIME(time_val),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    }
  ]
}
{
  "index": 103,
  "doc": "sys.format_statement(statement)\n,No Category",
  "mapping docs": [
    {
      "index": 372,
      "doc": "STATEMENT_DIGEST_TEXT(statement),Built-In Functions"
    },
    {
      "index": 371,
      "doc": "STATEMENT_DIGEST(statement),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 103,
      "doc": "FORMAT(X,D[,locale]),Built-In Functions"
    }
  ]
}
{
  "index": 104,
  "doc": "sys.format_time(picoseconds)\n,No Category",
  "mapping docs": [
    {
      "index": 105,
      "doc": "FORMAT_PICO_TIME(time_val),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 108,
      "doc": "FROM_UNIXTIME(unix_timestamp[,format]),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    }
  ]
}
{
  "index": 105,
  "doc": "FOUND_ROWS()\n,Information Functions",
  "mapping docs": [
    {
      "index": 106,
      "doc": "FOUND_ROWS(),Built-In Functions"
    },
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    },
    {
      "index": 278,
      "doc": "ROW_COUNT(),Built-In Functions"
    },
    {
      "index": 279,
      "doc": "ROW_NUMBER(),Built-In Functions"
    }
  ]
}
{
  "index": 106,
  "doc": "FROM_BASE64(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 107,
  "doc": "FROM_DAYS(N)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 395,
      "doc": "TO_DAYS(date),Built-In Functions"
    },
    {
      "index": 107,
      "doc": "FROM_DAYS(N),Built-In Functions"
    },
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    },
    {
      "index": 89,
      "doc": "DAYOFWEEK(date),Built-In Functions"
    }
  ]
}
{
  "index": 108,
  "doc": "FROM_UNIXTIME(unix_timestamp), FROM_UNIXTIME(unix_timestamp,format)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 108,
      "doc": "FROM_UNIXTIME(unix_timestamp[,format]),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 403,
      "doc": "UNIX_TIMESTAMP([date]),Built-In Functions"
    }
  ]
}
{
  "index": 109,
  "doc": "GeometryCollection(g1,g2,...)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 110,
      "doc": "GeometryCollection(g\n          [, g] ...),Built-In Functions"
    },
    {
      "index": 109,
      "doc": "GeomCollection(g\n          [, g] ...),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    }
  ]
}
{
  "index": 110,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 111,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 112,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 113,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 114,
  "doc": "GET_FORMAT({DATE|DATETIME|TIME}, {'EUR'|'USA'|'JIS'|'ISO'|'INTERNAL'})\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 114,
      "doc": "GET_FORMAT({DATE|TIME|DATETIME},\n          {'EUR'|'USA'|'JIS'|'ISO'|'INTERNAL'}),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 377,
      "doc": "STR_TO_DATE(str,format),Built-In Functions"
    }
  ]
}
{
  "index": 115,
  "doc": "GET_LOCK(str,timeout)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 115,
      "doc": "GET_LOCK(str,timeout),Built-In Functions"
    },
    {
      "index": 666,
      "doc": "service_get_read_locks(namespace,\n                lock_name[,\n                lock_name] ...,\n                timeout),Loadable Functions"
    },
    {
      "index": 667,
      "doc": "service_get_write_locks(namespace,\n                lock_name[,\n                lock_name] ...,\n                timeout),Loadable Functions"
    },
    {
      "index": 270,
      "doc": "RELEASE_ALL_LOCKS(),Built-In Functions"
    }
  ]
}
{
  "index": 116,
  "doc": "GLength(ls)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 352,
      "doc": "ST_PointAtDistance(ls,\n          distance),Built-In Functions"
    },
    {
      "index": 350,
      "doc": "ST_NumPoints(ls),Built-In Functions"
    },
    {
      "index": 337,
      "doc": "ST_LineInterpolatePoint(ls,\n          fractional_distance),Built-In Functions"
    },
    {
      "index": 238,
      "doc": "MultiLineString(ls\n          [, ls] ...),Built-In Functions"
    }
  ]
}
{
  "index": 117,
  "doc": "GROUP_CONCAT(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 6,
      "doc": "GROUP_CONCAT(expr),Aggregate Functions"
    },
    {
      "index": 128,
      "doc": "GROUPING(expr\n          [, expr] ...),Built-In Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 4,
      "doc": "COUNT(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 118,
  "doc": "HEX(N_or_S)\n,String Functions",
  "mapping docs": [
    {
      "index": 129,
      "doc": "HEX(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    }
  ]
}
{
  "index": 119,
  "doc": "HOUR(time)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 130,
      "doc": "HOUR(time),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 217,
      "doc": "MAKETIME(hour,minute,second),Built-In Functions"
    },
    {
      "index": 388,
      "doc": "TIME(expr),Built-In Functions"
    }
  ]
}
{
  "index": 120,
  "doc": "IF(expr1,expr2,expr3)\n,Control Flow Functions",
  "mapping docs": [
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 133,
      "doc": "IFNULL(expr1,expr2),Built-In Functions"
    },
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 383,
      "doc": "SUBTIME(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 121,
  "doc": "IFNULL(expr1,expr2)\nNVL(expr1,expr2)\n,Control Flow Functions",
  "mapping docs": [
    {
      "index": 133,
      "doc": "IFNULL(expr1,expr2),Built-In Functions"
    },
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 122,
  "doc": "INET6_ATON(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 135,
      "doc": "INET_ATON(expr),Built-In Functions"
    },
    {
      "index": 136,
      "doc": "INET_NTOA(expr),Built-In Functions"
    },
    {
      "index": 28,
      "doc": "ASIN(X),Built-In Functions"
    },
    {
      "index": 134,
      "doc": "expr\n            IN (value,...),Built-In Functions"
    }
  ]
}
{
  "index": 123,
  "doc": "INET6_NTOA(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 136,
      "doc": "INET_NTOA(expr),Built-In Functions"
    },
    {
      "index": 135,
      "doc": "INET_ATON(expr),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 245,
      "doc": "NTILE(N),Built-In Functions"
    }
  ]
}
{
  "index": 124,
  "doc": "INET_ATON(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 135,
      "doc": "INET_ATON(expr),Built-In Functions"
    },
    {
      "index": 136,
      "doc": "INET_NTOA(expr),Built-In Functions"
    },
    {
      "index": 28,
      "doc": "ASIN(X),Built-In Functions"
    },
    {
      "index": 134,
      "doc": "expr\n            IN (value,...),Built-In Functions"
    }
  ]
}
{
  "index": 125,
  "doc": "INET_NTOA(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 136,
      "doc": "INET_NTOA(expr),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 135,
      "doc": "INET_ATON(expr),Built-In Functions"
    },
    {
      "index": 245,
      "doc": "NTILE(N),Built-In Functions"
    }
  ]
}
{
  "index": 126,
  "doc": "INSERT(str,pos,len,newstr)\n,String Functions",
  "mapping docs": [
    {
      "index": 137,
      "doc": "INSERT(str,pos,len,newstr),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 127,
  "doc": "INSTR(str,substr)\n,String Functions",
  "mapping docs": [
    {
      "index": 138,
      "doc": "INSTR(str,substr),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    }
  ]
}
{
  "index": 128,
  "doc": "INTERSECTS(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 364,
      "doc": "ST_Touches(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 129,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 130,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 131,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 132,
  "doc": "IS_FREE_LOCK(str)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 160,
      "doc": "IS_FREE_LOCK(str),Built-In Functions"
    },
    {
      "index": 161,
      "doc": "IS_USED_LOCK(str),Built-In Functions"
    },
    {
      "index": 270,
      "doc": "RELEASE_ALL_LOCKS(),Built-In Functions"
    },
    {
      "index": 271,
      "doc": "RELEASE_LOCK(str),Built-In Functions"
    }
  ]
}
{
  "index": 133,
  "doc": "IS_IPV4(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 133,
      "doc": "IFNULL(expr1,expr2),Built-In Functions"
    },
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 134,
  "doc": "IS_IPV4_COMPAT(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    },
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 135,
  "doc": "IS_IPV4_MAPPED(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 329,
      "doc": "ST_IsEmpty(g),Built-In Functions"
    }
  ]
}
{
  "index": 136,
  "doc": "IS_IPV6(expr)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 133,
      "doc": "IFNULL(expr1,expr2),Built-In Functions"
    },
    {
      "index": 136,
      "doc": "INET_NTOA(expr),Built-In Functions"
    },
    {
      "index": 134,
      "doc": "expr\n            IN (value,...),Built-In Functions"
    }
  ]
}
{
  "index": 137,
  "doc": "IS_USED_LOCK(str)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 161,
      "doc": "IS_USED_LOCK(str),Built-In Functions"
    },
    {
      "index": 160,
      "doc": "IS_FREE_LOCK(str),Built-In Functions"
    },
    {
      "index": 115,
      "doc": "GET_LOCK(str,timeout),Built-In Functions"
    },
    {
      "index": 270,
      "doc": "RELEASE_ALL_LOCKS(),Built-In Functions"
    }
  ]
}
{
  "index": 138,
  "doc": "JSON_ARRAY([value[, value2] ...])\n,JSON Functions",
  "mapping docs": [
    {
      "index": 164,
      "doc": "JSON_ARRAY([val[,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 230,
      "doc": "value\n          MEMBER OF(json_array),Built-In Functions"
    },
    {
      "index": 178,
      "doc": "JSON_OBJECT([key,\n          val[,\n          key,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    }
  ]
}
{
  "index": 139,
  "doc": "JSON_ARRAY_APPEND(json_doc, path, value[, path, value] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 166,
      "doc": "JSON_ARRAY_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 172,
      "doc": "JSON_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    }
  ]
}
{
  "index": 140,
  "doc": "JSON_ARRAY_INSERT(json_doc, path, value[, path, value] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 166,
      "doc": "JSON_ARRAY_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 172,
      "doc": "JSON_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    }
  ]
}
{
  "index": 141,
  "doc": "JSON_ARRAY_INTERSECT(arr1, arr2)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 180,
      "doc": "JSON_OVERLAPS(json_doc1,\n          json_doc2),Built-In Functions"
    },
    {
      "index": 7,
      "doc": "JSON_ARRAYAGG(col_or_expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 164,
      "doc": "JSON_ARRAY([val[,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 175,
      "doc": "JSON_MERGE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    }
  ]
}
{
  "index": 142,
  "doc": "JSON_COMPACT(json_doc)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    },
    {
      "index": 175,
      "doc": "JSON_MERGE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 143,
  "doc": "JSON_CONTAINS(json_doc, val[, path])\n,JSON Functions",
  "mapping docs": [
    {
      "index": 169,
      "doc": "JSON_CONTAINS_PATH(json_doc,\n          one_or_all,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 168,
      "doc": "JSON_CONTAINS(target,\n          candidate[,\n          path]),Built-In Functions"
    },
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 144,
  "doc": "JSON_CONTAINS_PATH(json_doc, return_arg, path[, path] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 169,
      "doc": "JSON_CONTAINS_PATH(json_doc,\n          one_or_all,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 168,
      "doc": "JSON_CONTAINS(target,\n          candidate[,\n          path]),Built-In Functions"
    },
    {
      "index": 187,
      "doc": "JSON_SEARCH(json_doc,\n          one_or_all,\n          search_str[,\n          escape_char[,\n          path] ...]),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    }
  ]
}
{
  "index": 145,
  "doc": "JSON_DEPTH(json_doc)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 180,
      "doc": "JSON_OVERLAPS(json_doc1,\n          json_doc2),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    }
  ]
}
{
  "index": 146,
  "doc": "JSON_DETAILED(json_doc[, tab_size])\nJSON_PRETTY(json_doc[, tab_size])\n,JSON Functions",
  "mapping docs": [
    {
      "index": 181,
      "doc": "JSON_PRETTY(json_val),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 175,
      "doc": "JSON_MERGE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    }
  ]
}
{
  "index": 147,
  "doc": "JSON_EQUALS(json1, json2)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 180,
      "doc": "JSON_OVERLAPS(json_doc1,\n          json_doc2),Built-In Functions"
    },
    {
      "index": 175,
      "doc": "JSON_MERGE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 313,
      "doc": "ST_Equals(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 181,
      "doc": "JSON_PRETTY(json_val),Built-In Functions"
    }
  ]
}
{
  "index": 148,
  "doc": ",JSON Functions",
  "mapping docs": [
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    },
    {
      "index": 181,
      "doc": "JSON_PRETTY(json_val),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 149,
  "doc": "JSON_EXTRACT(json_doc, path[, path] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 169,
      "doc": "JSON_CONTAINS_PATH(json_doc,\n          one_or_all,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    }
  ]
}
{
  "index": 150,
  "doc": "JSON_INSERT(json_doc, path, val[, path, val] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 172,
      "doc": "JSON_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 166,
      "doc": "JSON_ARRAY_INSERT(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    }
  ]
}
{
  "index": 151,
  "doc": "JSON_KEYS(json_doc[, path])\n,JSON Functions",
  "mapping docs": [
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    }
  ]
}
{
  "index": 152,
  "doc": "JSON_LENGTH(json_doc[, path])\n,JSON Functions",
  "mapping docs": [
    {
      "index": 174,
      "doc": "JSON_LENGTH(json_doc[,\n          path]),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    }
  ]
}
{
  "index": 153,
  "doc": "JSON_LOOSE(json_doc)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    },
    {
      "index": 177,
      "doc": "JSON_MERGE_PRESERVE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    }
  ]
}
{
  "index": 154,
  "doc": "JSON_MERGE(json_doc, json_doc[, json_doc] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 175,
      "doc": "JSON_MERGE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 177,
      "doc": "JSON_MERGE_PRESERVE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 176,
      "doc": "JSON_MERGE_PATCH(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 180,
      "doc": "JSON_OVERLAPS(json_doc1,\n          json_doc2),Built-In Functions"
    }
  ]
}
{
  "index": 155,
  "doc": "JSON_NORMALIZE(json)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 175,
      "doc": "JSON_MERGE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 192,
      "doc": "JSON_UNQUOTE(json_val),Built-In Functions"
    }
  ]
}
{
  "index": 156,
  "doc": "JSON_OBJECT([key, value[, key, value] ...])\n,JSON Functions",
  "mapping docs": [
    {
      "index": 178,
      "doc": "JSON_OBJECT([key,\n          val[,\n          key,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 164,
      "doc": "JSON_ARRAY([val[,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 230,
      "doc": "value\n          MEMBER OF(json_array),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    }
  ]
}
{
  "index": 157,
  "doc": "JSON_OBJECTAGG(key, value)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 8,
      "doc": "JSON_OBJECTAGG(key,\n            value)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 178,
      "doc": "JSON_OBJECT([key,\n          val[,\n          key,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    }
  ]
}
{
  "index": 158,
  "doc": "JSON_OBJECT_FILTER_KEYS(obj, array_keys)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 178,
      "doc": "JSON_OBJECT([key,\n          val[,\n          key,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    },
    {
      "index": 164,
      "doc": "JSON_ARRAY([val[,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 230,
      "doc": "value\n          MEMBER OF(json_array),Built-In Functions"
    }
  ]
}
{
  "index": 159,
  "doc": "JSON_OBJECT_TO_ARRAY(Obj)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 230,
      "doc": "value\n          MEMBER OF(json_array),Built-In Functions"
    },
    {
      "index": 164,
      "doc": "JSON_ARRAY([val[,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 178,
      "doc": "JSON_OBJECT([key,\n          val[,\n          key,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    }
  ]
}
{
  "index": 160,
  "doc": "JSON_OVERLAPS(json_doc1, json_doc2)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 180,
      "doc": "JSON_OVERLAPS(json_doc1,\n          json_doc2),Built-In Functions"
    },
    {
      "index": 175,
      "doc": "JSON_MERGE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 177,
      "doc": "JSON_MERGE_PRESERVE(json_doc,\n          json_doc[,\n          json_doc] ...),Built-In Functions"
    }
  ]
}
{
  "index": 161,
  "doc": ",JSON Functions",
  "mapping docs": [
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    },
    {
      "index": 181,
      "doc": "JSON_PRETTY(json_val),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 162,
  "doc": "JSON_QUERY(json_doc, path)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    }
  ]
}
{
  "index": 163,
  "doc": "JSON_QUOTE(json_value)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 182,
      "doc": "JSON_QUOTE(string),Built-In Functions"
    },
    {
      "index": 192,
      "doc": "JSON_UNQUOTE(json_val),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    }
  ]
}
{
  "index": 164,
  "doc": "JSON_REMOVE(json_doc, path[, path] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 183,
      "doc": "JSON_REMOVE(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 184,
      "doc": "JSON_REPLACE(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 169,
      "doc": "JSON_CONTAINS_PATH(json_doc,\n          one_or_all,\n          path[,\n          path] ...),Built-In Functions"
    }
  ]
}
{
  "index": 165,
  "doc": "JSON_REPLACE(json_doc, path, val[, path, val] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 184,
      "doc": "JSON_REPLACE(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 166,
  "doc": ",JSON Functions",
  "mapping docs": [
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    },
    {
      "index": 181,
      "doc": "JSON_PRETTY(json_val),Built-In Functions"
    },
    {
      "index": 170,
      "doc": "JSON_DEPTH(json_doc),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 167,
  "doc": "JSON_SEARCH(json_doc, return_arg, search_str[, escape_char[, path] ...])\n,JSON Functions",
  "mapping docs": [
    {
      "index": 187,
      "doc": "JSON_SEARCH(json_doc,\n          one_or_all,\n          search_str[,\n          escape_char[,\n          path] ...]),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 169,
      "doc": "JSON_CONTAINS_PATH(json_doc,\n          one_or_all,\n          path[,\n          path] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    }
  ]
}
{
  "index": 168,
  "doc": "JSON_SET(json_doc, path, val[, path, val] ...)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 184,
      "doc": "JSON_REPLACE(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    }
  ]
}
{
  "index": 169,
  "doc": "JSON_TABLE(json_doc, \n          context_path COLUMNS (column_list)\n) [AS] alias\ncolumn_list:\n    column[, column][, ...]\ncolumn:\n    name FOR ORDINALITY\n    |  name type PATH path_str [on_empty] [on_error]\n    |  name type EXISTS PATH path_str\n    |  NESTED PATH path_str COLUMNS (column_list)\non_empty:\n    {NULL | DEFAULT string | ERROR} ON EMPTY\non_error:\n    {NULL | DEFAULT string | ERROR} ON ERROR\n,JSON Functions",
  "mapping docs": [
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 165,
      "doc": "JSON_ARRAY_APPEND(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    }
  ]
}
{
  "index": 170,
  "doc": "JSON_TYPE(json_val)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    },
    {
      "index": 181,
      "doc": "JSON_PRETTY(json_val),Built-In Functions"
    },
    {
      "index": 164,
      "doc": "JSON_ARRAY([val[,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 193,
      "doc": "JSON_VALID(val),Built-In Functions"
    }
  ]
}
{
  "index": 171,
  "doc": "JSON_UNQUOTE(val)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 192,
      "doc": "JSON_UNQUOTE(json_val),Built-In Functions"
    },
    {
      "index": 182,
      "doc": "JSON_QUOTE(string),Built-In Functions"
    },
    {
      "index": 164,
      "doc": "JSON_ARRAY([val[,\n          val] ...]),Built-In Functions"
    },
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    }
  ]
}
{
  "index": 172,
  "doc": "JSON_VALID(value)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 193,
      "doc": "JSON_VALID(val),Built-In Functions"
    },
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 191,
      "doc": "JSON_TYPE(json_val),Built-In Functions"
    },
    {
      "index": 192,
      "doc": "JSON_UNQUOTE(json_val),Built-In Functions"
    }
  ]
}
{
  "index": 173,
  "doc": "JSON_VALUE(json_doc, path)\n,JSON Functions",
  "mapping docs": [
    {
      "index": 194,
      "doc": "JSON_VALUE(json_doc,\n          path),Built-In Functions"
    },
    {
      "index": 188,
      "doc": "JSON_SET(json_doc,\n          path,\n          val[,\n          path,\n          val] ...),Built-In Functions"
    },
    {
      "index": 173,
      "doc": "JSON_KEYS(json_doc[,\n          path]),Built-In Functions"
    },
    {
      "index": 171,
      "doc": "JSON_EXTRACT(json_doc,\n          path[,\n          path] ...),Built-In Functions"
    }
  ]
}
{
  "index": 174,
  "doc": "KDF(key_str, salt [, {info | iterations} [, kdf_name [, width ]]])\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 24,
      "doc": "AES_DECRYPT(crypt_str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 175,
  "doc": "LAST_DAY(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 86,
      "doc": "DAY(date),Built-In Functions"
    },
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    },
    {
      "index": 87,
      "doc": "DAYNAME(date),Built-In Functions"
    },
    {
      "index": 395,
      "doc": "TO_DAYS(date),Built-In Functions"
    }
  ]
}
{
  "index": 176,
  "doc": "LAST_INSERT_ID(), LAST_INSERT_ID(expr)\n,Information Functions",
  "mapping docs": [
    {
      "index": 196,
      "doc": "LAST_INSERT_ID(),Built-In Functions"
    },
    {
      "index": 197,
      "doc": "LAST_VALUE(expr),Built-In Functions"
    },
    {
      "index": 137,
      "doc": "INSERT(str,pos,len,newstr),Built-In Functions"
    },
    {
      "index": 63,
      "doc": "CONNECTION_ID(),Built-In Functions"
    }
  ]
}
{
  "index": 177,
  "doc": "LAST_VALUE(expr,[expr,...])\nLAST_VALUE(expr) OVER (\n  [ PARTITION BY partition_expression ]\n  [ ORDER BY order_list ]\n) \n,Information Functions",
  "mapping docs": [
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 12,
      "doc": "STDDEV(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 178,
  "doc": "LCASE(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 198,
      "doc": "LCASE(str),Built-In Functions"
    },
    {
      "index": 399,
      "doc": "UCASE(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 59,
      "doc": "COLLATION(str),Built-In Functions"
    }
  ]
}
{
  "index": 179,
  "doc": "LEFT(str,len)\n,String Functions",
  "mapping docs": [
    {
      "index": 201,
      "doc": "LEFT(str,len),Built-In Functions"
    },
    {
      "index": 275,
      "doc": "RIGHT(str,len),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 55,
      "doc": "CHARACTER_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 180,
  "doc": "LENGTH(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 55,
      "doc": "CHARACTER_LENGTH(str),Built-In Functions"
    },
    {
      "index": 202,
      "doc": "LENGTH(str),Built-In Functions"
    },
    {
      "index": 248,
      "doc": "OCTET_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 181,
  "doc": "expr LIKE pat [ESCAPE 'escape_char']\nexpr NOT LIKE pat [ESCAPE 'escape_char']\n,String Functions",
  "mapping docs": [
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    }
  ]
}
{
  "index": 182,
  "doc": "LineString(pt1,pt2,...)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 203,
      "doc": "LineString(pt\n          [, pt] ...),Built-In Functions"
    },
    {
      "index": 239,
      "doc": "MultiPoint(pt\n          [, pt2] ...),Built-In Functions"
    },
    {
      "index": 341,
      "doc": "ST_MakeEnvelope(pt1,\n          pt2),Built-In Functions"
    },
    {
      "index": 335,
      "doc": "ST_LineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 183,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 184,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 185,
  "doc": "sys.list_add(list,value)\n,No Category",
  "mapping docs": [
    {
      "index": 112,
      "doc": "GET_DD_CREATE_OPTIONS(ARGS),Built-In Functions"
    },
    {
      "index": 143,
      "doc": "INTERNAL_DATA_FREE(ARGS),Built-In Functions"
    },
    {
      "index": 657,
      "doc": "masking_dictionary_term_add(dictionary_name,\n              term_name),Loadable Functions"
    },
    {
      "index": 47,
      "doc": "CAN_ACCESS_TABLE(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 186,
  "doc": "sys.list_drop(list,value)\n,No Category",
  "mapping docs": [
    {
      "index": 622,
      "doc": "gen_dictionary_drop(dictionary_name),Loadable Functions"
    },
    {
      "index": 112,
      "doc": "GET_DD_CREATE_OPTIONS(ARGS),Built-In Functions"
    },
    {
      "index": 143,
      "doc": "INTERNAL_DATA_FREE(ARGS),Built-In Functions"
    },
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    }
  ]
}
{
  "index": 187,
  "doc": "LN(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 204,
      "doc": "LN(X),Built-In Functions"
    },
    {
      "index": 210,
      "doc": "LOG10(X),Built-In Functions"
    },
    {
      "index": 211,
      "doc": "LOG2(X),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 188,
  "doc": "LOAD_FILE(file_name)\n,String Functions",
  "mapping docs": [
    {
      "index": 205,
      "doc": "LOAD_FILE(file_name),Built-In Functions"
    },
    {
      "index": 660,
      "doc": "mysql_query_attribute_string(name),Loadable Functions"
    },
    {
      "index": 623,
      "doc": "gen_dictionary_load(dictionary_path,\n              dictionary_name),Loadable Functions"
    },
    {
      "index": 621,
      "doc": "gen_dictionary(dictionary_name),Loadable Functions"
    }
  ]
}
{
  "index": 189,
  "doc": "LOCALTIME\nLOCALTIME([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 206,
      "doc": "LOCALTIME,Built-In Functions"
    },
    {
      "index": 207,
      "doc": "LOCALTIMESTAMP,Built-In Functions"
    },
    {
      "index": 408,
      "doc": "UTC_TIME,Built-In Functions"
    },
    {
      "index": 409,
      "doc": "UTC_TIMESTAMP,Built-In Functions"
    }
  ]
}
{
  "index": 190,
  "doc": "LOCALTIMESTAMP\nLOCALTIMESTAMP([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 207,
      "doc": "LOCALTIMESTAMP,Built-In Functions"
    },
    {
      "index": 206,
      "doc": "LOCALTIME,Built-In Functions"
    },
    {
      "index": 408,
      "doc": "UTC_TIME,Built-In Functions"
    },
    {
      "index": 409,
      "doc": "UTC_TIMESTAMP,Built-In Functions"
    }
  ]
}
{
  "index": 191,
  "doc": "LOCATE(substr,str), LOCATE(substr,str,pos)\n,String Functions",
  "mapping docs": [
    {
      "index": 208,
      "doc": "LOCATE(substr,str),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 256,
      "doc": "POSITION(substr\n          IN str),Built-In Functions"
    }
  ]
}
{
  "index": 192,
  "doc": "LOG(X), LOG(B,X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 211,
      "doc": "LOG2(X),Built-In Functions"
    },
    {
      "index": 210,
      "doc": "LOG10(X),Built-In Functions"
    },
    {
      "index": 209,
      "doc": "LOG(X),Built-In Functions"
    },
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    }
  ]
}
{
  "index": 193,
  "doc": "LOG10(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 210,
      "doc": "LOG10(X),Built-In Functions"
    },
    {
      "index": 211,
      "doc": "LOG2(X),Built-In Functions"
    },
    {
      "index": 209,
      "doc": "LOG(X),Built-In Functions"
    },
    {
      "index": 204,
      "doc": "LN(X),Built-In Functions"
    }
  ]
}
{
  "index": 194,
  "doc": "LOG2(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 211,
      "doc": "LOG2(X),Built-In Functions"
    },
    {
      "index": 210,
      "doc": "LOG10(X),Built-In Functions"
    },
    {
      "index": 209,
      "doc": "LOG(X),Built-In Functions"
    },
    {
      "index": 204,
      "doc": "LN(X),Built-In Functions"
    }
  ]
}
{
  "index": 195,
  "doc": "LOWER(str)\nLCASE(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 198,
      "doc": "LCASE(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 399,
      "doc": "UCASE(str),Built-In Functions"
    },
    {
      "index": 212,
      "doc": "LOWER(str),Built-In Functions"
    }
  ]
}
{
  "index": 196,
  "doc": "LPAD(str, len [,padstr])\n,String Functions",
  "mapping docs": [
    {
      "index": 213,
      "doc": "LPAD(str,len,padstr),Built-In Functions"
    },
    {
      "index": 280,
      "doc": "RPAD(str,len,padstr),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 248,
      "doc": "OCTET_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 197,
  "doc": "LTRIM(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 214,
      "doc": "LTRIM(str),Built-In Functions"
    },
    {
      "index": 281,
      "doc": "RTRIM(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    }
  ]
}
{
  "index": 198,
  "doc": "MAKEDATE(year,dayofyear)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 216,
      "doc": "MAKEDATE(year,dayofyear),Built-In Functions"
    },
    {
      "index": 424,
      "doc": "YEAR(date),Built-In Functions"
    },
    {
      "index": 90,
      "doc": "DAYOFYEAR(date),Built-In Functions"
    },
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    }
  ]
}
{
  "index": 199,
  "doc": "MAKETIME(hour,minute,second)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 217,
      "doc": "MAKETIME(hour,minute,second),Built-In Functions"
    },
    {
      "index": 130,
      "doc": "HOUR(time),Built-In Functions"
    },
    {
      "index": 234,
      "doc": "MINUTE(time),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    }
  ]
}
{
  "index": 200,
  "doc": "MAKE_SET(bits,str1,str2,...)\n,String Functions",
  "mapping docs": [
    {
      "index": 215,
      "doc": "MAKE_SET(bits,str1,str2,...),Built-In Functions"
    },
    {
      "index": 96,
      "doc": "EXPORT_SET(bits,on,off[,separator[,number_of_bits]]),Built-In Functions"
    },
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    },
    {
      "index": 19,
      "doc": "BIT_COUNT(N),Bit Functions"
    }
  ]
}
{
  "index": 201,
  "doc": "MASTER_GTID_WAIT(gtid-list[, timeout)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 419,
      "doc": "WAIT_FOR_EXECUTED_GTID_SET(gtid_set[,\n            timeout]),Built-In Functions"
    },
    {
      "index": 218,
      "doc": "MASTER_POS_WAIT(log_name,log_pos[,timeout][,channel]),Built-In Functions"
    },
    {
      "index": 292,
      "doc": "SOURCE_POS_WAIT(log_name,log_pos[,timeout][,channel]),Built-In Functions"
    },
    {
      "index": 115,
      "doc": "GET_LOCK(str,timeout),Built-In Functions"
    }
  ]
}
{
  "index": 202,
  "doc": "MASTER_POS_WAIT(log_name,log_pos[,timeout,[\"connection_name\"]])\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 218,
      "doc": "MASTER_POS_WAIT(log_name,log_pos[,timeout][,channel]),Built-In Functions"
    },
    {
      "index": 292,
      "doc": "SOURCE_POS_WAIT(log_name,log_pos[,timeout][,channel]),Built-In Functions"
    },
    {
      "index": 115,
      "doc": "GET_LOCK(str,timeout),Built-In Functions"
    },
    {
      "index": 667,
      "doc": "service_get_write_locks(namespace,\n                lock_name[,\n                lock_name] ...,\n                timeout),Loadable Functions"
    }
  ]
}
{
  "index": 203,
  "doc": "MATCH (col1,col2,...) AGAINST (expr [search_modifier])\n,String Functions",
  "mapping docs": [
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 303,
      "doc": "ST_Contains(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 204,
  "doc": "MAX([DISTINCT] expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 5,
      "doc": "COUNT(DISTINCT\n            expr,[expr...]),Aggregate Functions"
    }
  ]
}
{
  "index": 205,
  "doc": "MBRContains(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 220,
      "doc": "MBRContains(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 222,
      "doc": "MBRCovers(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 225,
      "doc": "MBRIntersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 221,
      "doc": "MBRCoveredBy(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 206,
  "doc": "MBRDisjoint(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 223,
      "doc": "MBRDisjoint(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 222,
      "doc": "MBRCovers(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 221,
      "doc": "MBRCoveredBy(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 227,
      "doc": "MBRTouches(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 207,
  "doc": "MBREqual(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 224,
      "doc": "MBREquals(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 222,
      "doc": "MBRCovers(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 221,
      "doc": "MBRCoveredBy(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 225,
      "doc": "MBRIntersects(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 208,
  "doc": "MBRIntersects(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 225,
      "doc": "MBRIntersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 222,
      "doc": "MBRCovers(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 221,
      "doc": "MBRCoveredBy(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 220,
      "doc": "MBRContains(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 209,
  "doc": "MBROverlaps(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 226,
      "doc": "MBROverlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 222,
      "doc": "MBRCovers(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 221,
      "doc": "MBRCoveredBy(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 227,
      "doc": "MBRTouches(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 210,
  "doc": "MBRTouches(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 222,
      "doc": "MBRCovers(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 227,
      "doc": "MBRTouches(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 221,
      "doc": "MBRCoveredBy(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 225,
      "doc": "MBRIntersects(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 211,
  "doc": "MBRWithin(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 228,
      "doc": "MBRWithin(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 222,
      "doc": "MBRCovers(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 225,
      "doc": "MBRIntersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 220,
      "doc": "MBRContains(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 212,
  "doc": "MD5(str)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 229,
      "doc": "MD5(str),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    },
    {
      "index": 287,
      "doc": "SHA2(str,\n          hash_length),Built-In Functions"
    }
  ]
}
{
  "index": 213,
  "doc": "MEDIAN(median expression) OVER (\n  [ PARTITION BY partition_expression ] \n)\n,Window Functions",
  "mapping docs": [
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 0,
      "doc": "AVG([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 214,
  "doc": "MICROSECOND(expr)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 231,
      "doc": "MICROSECOND(expr),Built-In Functions"
    },
    {
      "index": 388,
      "doc": "TIME(expr),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    }
  ]
}
{
  "index": 215,
  "doc": "MID(str,pos,len)\n,String Functions",
  "mapping docs": [
    {
      "index": 232,
      "doc": "MID(str,pos,len),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 216,
  "doc": "MIN([DISTINCT] expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 5,
      "doc": "COUNT(DISTINCT\n            expr,[expr...]),Aggregate Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 217,
  "doc": "MINUTE(time)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 234,
      "doc": "MINUTE(time),Built-In Functions"
    },
    {
      "index": 130,
      "doc": "HOUR(time),Built-In Functions"
    },
    {
      "index": 217,
      "doc": "MAKETIME(hour,minute,second),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    }
  ]
}
{
  "index": 218,
  "doc": "MLineFromText(wkt[,srid])\nMultiLineStringFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 342,
      "doc": "ST_MLineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 335,
      "doc": "ST_LineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 346,
      "doc": "ST_MPolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 219,
  "doc": "MLineFromWKB(wkb[,srid])\nMultiLineStringFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 343,
      "doc": "ST_MLineFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 336,
      "doc": "ST_LineFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 347,
      "doc": "ST_MPolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 220,
  "doc": "MONTH(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 237,
      "doc": "MONTHNAME(date),Built-In Functions"
    },
    {
      "index": 236,
      "doc": "MONTH(date),Built-In Functions"
    },
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    }
  ]
}
{
  "index": 221,
  "doc": "MONTHNAME(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 237,
      "doc": "MONTHNAME(date),Built-In Functions"
    },
    {
      "index": 236,
      "doc": "MONTH(date),Built-In Functions"
    },
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    },
    {
      "index": 87,
      "doc": "DAYNAME(date),Built-In Functions"
    }
  ]
}
{
  "index": 222,
  "doc": "MPointFromText(wkt[,srid])\nMultiPointFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 354,
      "doc": "ST_PointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 344,
      "doc": "ST_MPointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 346,
      "doc": "ST_MPolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 223,
  "doc": "MPointFromWKB(wkb[,srid])\nMultiPointFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 345,
      "doc": "ST_MPointFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 355,
      "doc": "ST_PointFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 347,
      "doc": "ST_MPolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 224,
  "doc": "MPolyFromText(wkt[,srid])\nMultiPolygonFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 346,
      "doc": "ST_MPolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 357,
      "doc": "ST_PolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 317,
      "doc": "ST_GeomCollFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 225,
  "doc": "MPolyFromWKB(wkb[,srid])\nMultiPolygonFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 347,
      "doc": "ST_MPolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 358,
      "doc": "ST_PolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 345,
      "doc": "ST_MPointFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 226,
  "doc": "MultiLineString(ls1,ls2,...)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 238,
      "doc": "MultiLineString(ls\n          [, ls] ...),Built-In Functions"
    },
    {
      "index": 337,
      "doc": "ST_LineInterpolatePoint(ls,\n          fractional_distance),Built-In Functions"
    },
    {
      "index": 338,
      "doc": "ST_LineInterpolatePoints(ls,\n          fractional_distance),Built-In Functions"
    },
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 227,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 228,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 229,
  "doc": "MultiPoint(pt1,pt2,...)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 239,
      "doc": "MultiPoint(pt\n          [, pt2] ...),Built-In Functions"
    },
    {
      "index": 341,
      "doc": "ST_MakeEnvelope(pt1,\n          pt2),Built-In Functions"
    },
    {
      "index": 254,
      "doc": "Point(x,\n          y),Built-In Functions"
    },
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    }
  ]
}
{
  "index": 230,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 231,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 232,
  "doc": "MultiPolygon(poly1,poly2,...)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 240,
      "doc": "MultiPolygon(poly\n          [, poly] ...),Built-In Functions"
    },
    {
      "index": 295,
      "doc": "ST_Area({poly|mpoly}),Built-In Functions"
    },
    {
      "index": 255,
      "doc": "Polygon(ls [,\n          ls] ...),Built-In Functions"
    },
    {
      "index": 325,
      "doc": "ST_InteriorRingN(poly,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 233,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 234,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 235,
  "doc": "NAME_CONST(name,value)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 241,
      "doc": "NAME_CONST(name,value),Built-In Functions"
    },
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 61,
      "doc": "CONCAT(str1,str2,...),Built-In Functions"
    },
    {
      "index": 134,
      "doc": "expr\n            IN (value,...),Built-In Functions"
    }
  ]
}
{
  "index": 236,
  "doc": "NATURAL_SORT_KEY(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    },
    {
      "index": 349,
      "doc": "ST_NumInteriorRing(poly),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 641,
      "doc": "keyring_key_store(key_id,\n              key_type,\n              key),Loadable Functions"
    }
  ]
}
{
  "index": 237,
  "doc": "NEXT VALUE FOR sequence\norNEXTVAL(sequence_name)\nor in Oracle mode (SQL_MODE=ORACLE)sequence_name.nextval\nNEXT VALUE FOR is ANSI SQL syntax while NEXTVAL() is PostgreSQL syntax.,SEQUENCE Functions",
  "mapping docs": [
    {
      "index": 249,
      "doc": "ORD(str),Built-In Functions"
    },
    {
      "index": 137,
      "doc": "INSERT(str,pos,len,newstr),Built-In Functions"
    },
    {
      "index": 197,
      "doc": "LAST_VALUE(expr),Built-In Functions"
    },
    {
      "index": 213,
      "doc": "LPAD(str,len,padstr),Built-In Functions"
    }
  ]
}
{
  "index": 238,
  "doc": "expr NOT LIKE pat [ESCAPE 'escape_char']\n,String Functions",
  "mapping docs": [
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    }
  ]
}
{
  "index": 239,
  "doc": "expr NOT REGEXP pat, expr NOT RLIKE pat\n,String Functions",
  "mapping docs": [
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 268,
      "doc": "REGEXP_REPLACE(expr,\n              pat,\n              repl[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    }
  ]
}
{
  "index": 240,
  "doc": "NOW([precision])\nCURRENT_TIMESTAMP\nCURRENT_TIMESTAMP([precision])\nLOCALTIME, LOCALTIME([precision])\nLOCALTIMESTAMP\nLOCALTIMESTAMP([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 77,
      "doc": "CURRENT_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    },
    {
      "index": 207,
      "doc": "LOCALTIMESTAMP,Built-In Functions"
    },
    {
      "index": 409,
      "doc": "UTC_TIMESTAMP,Built-In Functions"
    }
  ]
}
{
  "index": 241,
  "doc": "NTILE (expr) OVER ( \n  [ PARTITION BY partition_expression ] \n  [ ORDER BY order_list ]\n)\n,Window Functions",
  "mapping docs": [
    {
      "index": 245,
      "doc": "NTILE(N),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 242,
  "doc": "NULLIF(expr1,expr2)\n,Control Flow Functions",
  "mapping docs": [
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 133,
      "doc": "IFNULL(expr1,expr2),Built-In Functions"
    },
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 243,
  "doc": "OCT(N)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 247,
      "doc": "OCT(N),Built-In Functions"
    },
    {
      "index": 248,
      "doc": "OCTET_LENGTH(str),Built-In Functions"
    },
    {
      "index": 297,
      "doc": "ST_AsGeoJSON(g\n          [, max_dec_digits [,\n          options]]),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 244,
  "doc": "OCTET_LENGTH(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 248,
      "doc": "OCTET_LENGTH(str),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 55,
      "doc": "CHARACTER_LENGTH(str),Built-In Functions"
    },
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 245,
  "doc": "OLD_PASSWORD(str)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 413,
      "doc": "VALIDATE_PASSWORD_STRENGTH(str),Built-In Functions"
    },
    {
      "index": 603,
      "doc": "audit_log_encryption_password_set(password),Loadable Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 246,
  "doc": "ORD(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 249,
      "doc": "ORD(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 247,
  "doc": "OVERLAPS(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 308,
      "doc": "ST_Disjoint(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 248,
  "doc": "PASSWORD(str)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 603,
      "doc": "audit_log_encryption_password_set(password),Loadable Functions"
    },
    {
      "index": 413,
      "doc": "VALIDATE_PASSWORD_STRENGTH(str),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 25,
      "doc": "AES_ENCRYPT(str,key_str[,init_vector][,kdf_name][,salt][,info\n          | iterations]),Built-In Functions"
    }
  ]
}
{
  "index": 249,
  "doc": ",Window Functions",
  "mapping docs": [
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 294,
      "doc": "SQRT(X),Built-In Functions"
    },
    {
      "index": 258,
      "doc": "POWER(X,Y),Built-In Functions"
    },
    {
      "index": 245,
      "doc": "NTILE(N),Built-In Functions"
    }
  ]
}
{
  "index": 250,
  "doc": ",Window Functions",
  "mapping docs": [
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 294,
      "doc": "SQRT(X),Built-In Functions"
    },
    {
      "index": 258,
      "doc": "POWER(X,Y),Built-In Functions"
    },
    {
      "index": 245,
      "doc": "NTILE(N),Built-In Functions"
    }
  ]
}
{
  "index": 251,
  "doc": "PERCENT_RANK() OVER (\n  [ PARTITION BY partition_expression ] \n  [ ORDER BY order_list ]\n)\n,Window Functions",
  "mapping docs": [
    {
      "index": 250,
      "doc": "PERCENT_RANK(),Built-In Functions"
    },
    {
      "index": 266,
      "doc": "RANK(),Built-In Functions"
    },
    {
      "index": 93,
      "doc": "DENSE_RANK(),Built-In Functions"
    },
    {
      "index": 116,
      "doc": "GREATEST(value1,value2,...),Built-In Functions"
    }
  ]
}
{
  "index": 252,
  "doc": "PERIOD_ADD(P,N)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 251,
      "doc": "PERIOD_ADD(P,N),Built-In Functions"
    },
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 252,
      "doc": "PERIOD_DIFF(P1,P2),Built-In Functions"
    },
    {
      "index": 22,
      "doc": "ADDDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 253,
  "doc": "PERIOD_DIFF(P1,P2)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 252,
      "doc": "PERIOD_DIFF(P1,P2),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 85,
      "doc": "DATEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 391,
      "doc": "TIMEDIFF(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 254,
  "doc": "PI()\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 253,
      "doc": "PI(),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 289,
      "doc": "SIN(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    }
  ]
}
{
  "index": 255,
  "doc": "Point(x,y)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 254,
      "doc": "Point(x,\n          y),Built-In Functions"
    },
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    },
    {
      "index": 340,
      "doc": "ST_Longitude(p\n            [, new_longitude_val]),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    }
  ]
}
{
  "index": 256,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 257,
  "doc": "Polygon(ls1,ls2,...)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 255,
      "doc": "Polygon(ls [,\n          ls] ...),Built-In Functions"
    },
    {
      "index": 240,
      "doc": "MultiPolygon(poly\n          [, poly] ...),Built-In Functions"
    },
    {
      "index": 361,
      "doc": "ST_StartPoint(ls),Built-In Functions"
    },
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 258,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 259,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 260,
  "doc": "POSITION(substr IN str)\n,String Functions",
  "mapping docs": [
    {
      "index": 256,
      "doc": "POSITION(substr\n          IN str),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 208,
      "doc": "LOCATE(substr,str),Built-In Functions"
    }
  ]
}
{
  "index": 261,
  "doc": "POW(X,Y)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    },
    {
      "index": 258,
      "doc": "POWER(X,Y),Built-In Functions"
    },
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    },
    {
      "index": 254,
      "doc": "Point(x,\n          y),Built-In Functions"
    }
  ]
}
{
  "index": 262,
  "doc": "POWER(X,Y)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 258,
      "doc": "POWER(X,Y),Built-In Functions"
    },
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    },
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    },
    {
      "index": 254,
      "doc": "Point(x,\n          y),Built-In Functions"
    }
  ]
}
{
  "index": 263,
  "doc": "PREVIOUS VALUE FOR sequence_name\norLASTVAL(sequence_name)\nor in Oracle mode (SQL_MODE=ORACLE)sequence_name.currval\nPREVIOUS VALUE FOR is IBM DB2 syntax while LASTVAL() is PostgreSQL syntax.,SEQUENCE Functions",
  "mapping docs": [
    {
      "index": 197,
      "doc": "LAST_VALUE(expr),Built-In Functions"
    },
    {
      "index": 196,
      "doc": "LAST_INSERT_ID(),Built-In Functions"
    },
    {
      "index": 137,
      "doc": "INSERT(str,pos,len,newstr),Built-In Functions"
    },
    {
      "index": 213,
      "doc": "LPAD(str,len,padstr),Built-In Functions"
    }
  ]
}
{
  "index": 264,
  "doc": "sys.ps_is_account_enabled(host,user)\n,No Category",
  "mapping docs": [
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 260,
      "doc": "PS_THREAD_ID(connection_id),Built-In Functions"
    },
    {
      "index": 48,
      "doc": "CAN_ACCESS_USER(ARGS),Built-In Functions"
    },
    {
      "index": 259,
      "doc": "PS_CURRENT_THREAD_ID(),Built-In Functions"
    }
  ]
}
{
  "index": 265,
  "doc": "sys.ps_is_consumer_enabled(consumer)\n,No Category",
  "mapping docs": [
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 119,
      "doc": "group_replication_enable_member_action(),Built-In Functions"
    },
    {
      "index": 118,
      "doc": "group_replication_disable_member_action(),Built-In Functions"
    },
    {
      "index": 153,
      "doc": "INTERNAL_IS_ENABLED_ROLE(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 266,
  "doc": "sys.ps_is_instrument_default_enabled(instrument)\n,No Category",
  "mapping docs": [
    {
      "index": 154,
      "doc": "INTERNAL_IS_MANDATORY_ROLE(ARGS),Built-In Functions"
    },
    {
      "index": 155,
      "doc": "INTERNAL_KEYS_DISABLED(ARGS),Built-In Functions"
    },
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 153,
      "doc": "INTERNAL_IS_ENABLED_ROLE(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 267,
  "doc": "sys.ps_is_instrument_default_timed(instrument)\n,No Category",
  "mapping docs": [
    {
      "index": 403,
      "doc": "UNIX_TIMESTAMP([date]),Built-In Functions"
    },
    {
      "index": 207,
      "doc": "LOCALTIMESTAMP,Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 141,
      "doc": "INTERNAL_CHECK_TIME(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 268,
  "doc": "sys.ps_is_thread_instrumented(connection_id)\n,No Category",
  "mapping docs": [
    {
      "index": 260,
      "doc": "PS_THREAD_ID(connection_id),Built-In Functions"
    },
    {
      "index": 259,
      "doc": "PS_CURRENT_THREAD_ID(),Built-In Functions"
    },
    {
      "index": 63,
      "doc": "CONNECTION_ID(),Built-In Functions"
    },
    {
      "index": 666,
      "doc": "service_get_read_locks(namespace,\n                lock_name[,\n                lock_name] ...,\n                timeout),Loadable Functions"
    }
  ]
}
{
  "index": 269,
  "doc": "sys.ps_thread_account(thread_id)\n,No Category",
  "mapping docs": [
    {
      "index": 260,
      "doc": "PS_THREAD_ID(connection_id),Built-In Functions"
    },
    {
      "index": 259,
      "doc": "PS_CURRENT_THREAD_ID(),Built-In Functions"
    },
    {
      "index": 63,
      "doc": "CONNECTION_ID(),Built-In Functions"
    },
    {
      "index": 614,
      "doc": "create_digest(digest_type,\n          str),Loadable Functions"
    }
  ]
}
{
  "index": 270,
  "doc": "sys.ps_thread_id(connection_id)\n,No Category",
  "mapping docs": [
    {
      "index": 260,
      "doc": "PS_THREAD_ID(connection_id),Built-In Functions"
    },
    {
      "index": 259,
      "doc": "PS_CURRENT_THREAD_ID(),Built-In Functions"
    },
    {
      "index": 63,
      "doc": "CONNECTION_ID(),Built-In Functions"
    },
    {
      "index": 633,
      "doc": "gen_rnd_uuid(),Loadable Functions"
    }
  ]
}
{
  "index": 271,
  "doc": "sys.ps_thread_stack(thread_id, verbose)\n,No Category",
  "mapping docs": [
    {
      "index": 614,
      "doc": "create_digest(digest_type,\n          str),Loadable Functions"
    },
    {
      "index": 371,
      "doc": "STATEMENT_DIGEST(statement),Built-In Functions"
    },
    {
      "index": 146,
      "doc": "INTERNAL_GET_COMMENT_OR_ERROR(ARGS),Built-In Functions"
    },
    {
      "index": 385,
      "doc": "SYSDATE([fsp]),Built-In Functions"
    }
  ]
}
{
  "index": 272,
  "doc": "sys.ps_thread_trx_info(thread_id)\n,No Category",
  "mapping docs": [
    {
      "index": 259,
      "doc": "PS_CURRENT_THREAD_ID(),Built-In Functions"
    },
    {
      "index": 260,
      "doc": "PS_THREAD_ID(connection_id),Built-In Functions"
    },
    {
      "index": 385,
      "doc": "SYSDATE([fsp]),Built-In Functions"
    },
    {
      "index": 614,
      "doc": "create_digest(digest_type,\n          str),Loadable Functions"
    }
  ]
}
{
  "index": 273,
  "doc": "QUARTER(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 261,
      "doc": "QUARTER(date),Built-In Functions"
    },
    {
      "index": 88,
      "doc": "DAYOFMONTH(date),Built-In Functions"
    },
    {
      "index": 90,
      "doc": "DAYOFYEAR(date),Built-In Functions"
    },
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 274,
  "doc": "QUOTE(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 262,
      "doc": "QUOTE(str),Built-In Functions"
    },
    {
      "index": 182,
      "doc": "JSON_QUOTE(string),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 275,
  "doc": "sys.quote_identifier(str)\n,No Category",
  "mapping docs": [
    {
      "index": 262,
      "doc": "QUOTE(str),Built-In Functions"
    },
    {
      "index": 182,
      "doc": "JSON_QUOTE(string),Built-In Functions"
    },
    {
      "index": 249,
      "doc": "ORD(str),Built-In Functions"
    },
    {
      "index": 229,
      "doc": "MD5(str),Built-In Functions"
    }
  ]
}
{
  "index": 276,
  "doc": "RADIANS(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    },
    {
      "index": 92,
      "doc": "DEGREES(X),Built-In Functions"
    }
  ]
}
{
  "index": 277,
  "doc": "RAND(), RAND(N)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 264,
      "doc": "RAND([N]),Built-In Functions"
    },
    {
      "index": 265,
      "doc": "RANDOM_BYTES(len),Built-In Functions"
    },
    {
      "index": 19,
      "doc": "BIT_COUNT(N),Bit Functions"
    },
    {
      "index": 247,
      "doc": "OCT(N),Built-In Functions"
    }
  ]
}
{
  "index": 278,
  "doc": "RANK() OVER (\n  [ PARTITION BY partition_expression ]\n  [ ORDER BY order_list ]\n) \n,Window Functions",
  "mapping docs": [
    {
      "index": 266,
      "doc": "RANK(),Built-In Functions"
    },
    {
      "index": 93,
      "doc": "DENSE_RANK(),Built-In Functions"
    },
    {
      "index": 250,
      "doc": "PERCENT_RANK(),Built-In Functions"
    },
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 279,
  "doc": "expr REGEXP pat, expr RLIKE pat\n,Regular Expressions Functions",
  "mapping docs": [
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 268,
      "doc": "REGEXP_REPLACE(expr,\n              pat,\n              repl[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    }
  ]
}
{
  "index": 280,
  "doc": "REGEXP_INSTR(subject, pattern)\nReturns the position of the first occurrence of the regular expression pattern in the string subject, or 0 if pattern was not found.The positions start with 1 and are measured in characters (i.e. not in bytes), which is important for multi-byte character sets. You can cast a multi-byte character set to BINARY to get offsets in bytes.The function follows the case sensitivity rules of the effective collation. Matching is performed case insensitively for case insensitive collations, and case sensitively for case sensitive collations and for binary data.The collation case sensitivity can be overwritten using the (?i) and (?-i) PCRE flags.MariaDB uses the PCRE regular expression library for enhanced regular expression performance, and REGEXP_INSTR was introduced as part of this enhancement.,Regular Expressions Functions",
  "mapping docs": [
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 138,
      "doc": "INSTR(str,substr),Built-In Functions"
    }
  ]
}
{
  "index": 281,
  "doc": "REGEXP_REPLACE(subject, pattern, replace)\n,Regular Expressions Functions",
  "mapping docs": [
    {
      "index": 268,
      "doc": "REGEXP_REPLACE(expr,\n              pat,\n              repl[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 273,
      "doc": "REPLACE(str,from_str,to_str),Built-In Functions"
    },
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    }
  ]
}
{
  "index": 282,
  "doc": "REGEXP_SUBSTR(subject,pattern)\n,Regular Expressions Functions",
  "mapping docs": [
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 268,
      "doc": "REGEXP_REPLACE(expr,\n              pat,\n              repl[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    }
  ]
}
{
  "index": 283,
  "doc": "RELEASE_LOCK(str)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 271,
      "doc": "RELEASE_LOCK(str),Built-In Functions"
    },
    {
      "index": 270,
      "doc": "RELEASE_ALL_LOCKS(),Built-In Functions"
    },
    {
      "index": 160,
      "doc": "IS_FREE_LOCK(str),Built-In Functions"
    },
    {
      "index": 161,
      "doc": "IS_USED_LOCK(str),Built-In Functions"
    }
  ]
}
{
  "index": 284,
  "doc": "REPEAT(str,count)\n,String Functions",
  "mapping docs": [
    {
      "index": 272,
      "doc": "REPEAT(str,count),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 285,
  "doc": "REPLACE(str,from_str,to_str)\n,String Functions",
  "mapping docs": [
    {
      "index": 273,
      "doc": "REPLACE(str,from_str,to_str),Built-In Functions"
    },
    {
      "index": 268,
      "doc": "REGEXP_REPLACE(expr,\n              pat,\n              repl[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 286,
  "doc": "REVERSE(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 274,
      "doc": "REVERSE(str),Built-In Functions"
    },
    {
      "index": 201,
      "doc": "LEFT(str,len),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 287,
  "doc": "RIGHT(str,len)\n,String Functions",
  "mapping docs": [
    {
      "index": 201,
      "doc": "LEFT(str,len),Built-In Functions"
    },
    {
      "index": 275,
      "doc": "RIGHT(str,len),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 55,
      "doc": "CHARACTER_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 288,
  "doc": "expr REGEXP pat, expr RLIKE pat\n,Regular Expressions Functions",
  "mapping docs": [
    {
      "index": 267,
      "doc": "REGEXP_LIKE(expr,\n              pat[,\n              match_type]),Built-In Functions"
    },
    {
      "index": 269,
      "doc": "REGEXP_SUBSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    },
    {
      "index": 892,
      "doc": "REGEXP_INSTR(expr,\n              pat[,\n              pos[,\n              occurrence[,\n              return_option[,\n              match_type]]]]),String Functions"
    },
    {
      "index": 268,
      "doc": "REGEXP_REPLACE(expr,\n              pat,\n              repl[,\n              pos[,\n              occurrence[,\n              match_type]]]),Built-In Functions"
    }
  ]
}
{
  "index": 289,
  "doc": "ROUND(X), ROUND(X,D)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 277,
      "doc": "ROUND(X),Built-In Functions"
    },
    {
      "index": 294,
      "doc": "SQRT(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 159,
      "doc": "INTERVAL(N,N1,N2,N3,...),Built-In Functions"
    }
  ]
}
{
  "index": 290,
  "doc": "ROW_COUNT()\n,Information Functions",
  "mapping docs": [
    {
      "index": 278,
      "doc": "ROW_COUNT(),Built-In Functions"
    },
    {
      "index": 279,
      "doc": "ROW_NUMBER(),Built-In Functions"
    },
    {
      "index": 104,
      "doc": "FORMAT_BYTES(count),Built-In Functions"
    },
    {
      "index": 4,
      "doc": "COUNT(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 291,
  "doc": "ROW_NUMBER() OVER (\n  [ PARTITION BY partition_expression ]\n  [ ORDER BY order_list ]\n) \n,Window Functions",
  "mapping docs": [
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 4,
      "doc": "COUNT(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 9,
      "doc": "MAX([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 292,
  "doc": "RPAD(str, len [, padstr])\n,String Functions",
  "mapping docs": [
    {
      "index": 280,
      "doc": "RPAD(str,len,padstr),Built-In Functions"
    },
    {
      "index": 213,
      "doc": "LPAD(str,len,padstr),Built-In Functions"
    },
    {
      "index": 201,
      "doc": "LEFT(str,len),Built-In Functions"
    },
    {
      "index": 275,
      "doc": "RIGHT(str,len),Built-In Functions"
    }
  ]
}
{
  "index": 293,
  "doc": "RTRIM(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 281,
      "doc": "RTRIM(str),Built-In Functions"
    },
    {
      "index": 214,
      "doc": "LTRIM(str),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    }
  ]
}
{
  "index": 294,
  "doc": "SCHEMA()\n,Information Functions",
  "mapping docs": [
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    },
    {
      "index": 185,
      "doc": "JSON_SCHEMA_VALID(schema,document),Built-In Functions"
    },
    {
      "index": 186,
      "doc": "JSON_SCHEMA_VALIDATION_REPORT(schema,document),Built-In Functions"
    },
    {
      "index": 371,
      "doc": "STATEMENT_DIGEST(statement),Built-In Functions"
    }
  ]
}
{
  "index": 295,
  "doc": "SECOND(time)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 23,
      "doc": "ADDTIME(expr1,expr2),Built-In Functions"
    },
    {
      "index": 388,
      "doc": "TIME(expr),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    }
  ]
}
{
  "index": 296,
  "doc": "SEC_TO_TIME(seconds)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 283,
      "doc": "SEC_TO_TIME(seconds),Built-In Functions"
    },
    {
      "index": 390,
      "doc": "TIME_TO_SEC(time),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 396,
      "doc": "TO_SECONDS(expr),Built-In Functions"
    }
  ]
}
{
  "index": 297,
  "doc": "SESSION_USER()\n,Information Functions",
  "mapping docs": [
    {
      "index": 285,
      "doc": "SESSION_USER(),Built-In Functions"
    },
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 78,
      "doc": "CURRENT_USER,Built-In Functions"
    },
    {
      "index": 406,
      "doc": "USER(),Built-In Functions"
    }
  ]
}
{
  "index": 298,
  "doc": "SETVAL(sequence_name, next_value, [is_used, [round]])\n,SEQUENCE Functions",
  "mapping docs": [
    {
      "index": 277,
      "doc": "ROUND(X),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    },
    {
      "index": 159,
      "doc": "INTERVAL(N,N1,N2,N3,...),Built-In Functions"
    },
    {
      "index": 133,
      "doc": "IFNULL(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 299,
  "doc": "SHA1(str), SHA(str)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 286,
      "doc": "SHA1(str),Built-In Functions"
    },
    {
      "index": 287,
      "doc": "SHA2(str,\n          hash_length),Built-In Functions"
    },
    {
      "index": 60,
      "doc": "COMPRESS(string_to_compress),Built-In Functions"
    },
    {
      "index": 363,
      "doc": "ST_SymDifference(g1,\n          g2),Built-In Functions"
    }
  ]
}
{
  "index": 300,
  "doc": "SHA2(str,hash_len)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 287,
      "doc": "SHA2(str,\n          hash_length),Built-In Functions"
    },
    {
      "index": 286,
      "doc": "SHA1(str),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    },
    {
      "index": 597,
      "doc": "asymmetric_decrypt(algorithm,\n          data_str,\n          priv_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 301,
  "doc": "SIGN(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 288,
      "doc": "SIGN(X),Built-In Functions"
    },
    {
      "index": 599,
      "doc": "asymmetric_sign(algorithm,\n          text,\n          priv_key_str,\n          digest_type),Loadable Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    }
  ]
}
{
  "index": 302,
  "doc": "SIN(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 289,
      "doc": "SIN(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 92,
      "doc": "DEGREES(X),Built-In Functions"
    }
  ]
}
{
  "index": 303,
  "doc": "SLEEP(duration)\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 290,
      "doc": "SLEEP(duration),Built-In Functions"
    },
    {
      "index": 130,
      "doc": "HOUR(time),Built-In Functions"
    },
    {
      "index": 234,
      "doc": "MINUTE(time),Built-In Functions"
    },
    {
      "index": 390,
      "doc": "TIME_TO_SEC(time),Built-In Functions"
    }
  ]
}
{
  "index": 304,
  "doc": "SOUNDEX(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 291,
      "doc": "SOUNDEX(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    }
  ]
}
{
  "index": 305,
  "doc": "expr1 SOUNDS LIKE expr2\n,String Functions",
  "mapping docs": [
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 132,
      "doc": "IF(expr1,expr2,expr3),Built-In Functions"
    },
    {
      "index": 383,
      "doc": "SUBTIME(expr1,expr2),Built-In Functions"
    },
    {
      "index": 246,
      "doc": "NULLIF(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 306,
  "doc": "SPACE(N)\n,String Functions",
  "mapping docs": [
    {
      "index": 293,
      "doc": "SPACE(N),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    },
    {
      "index": 325,
      "doc": "ST_InteriorRingN(poly,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 307,
  "doc": "SPIDER_BG_DIRECT_SQL('sql', 'tmp_table_list', 'parameters')\n,Spider Functions",
  "mapping docs": [
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    },
    {
      "index": 47,
      "doc": "CAN_ACCESS_TABLE(ARGS),Built-In Functions"
    },
    {
      "index": 46,
      "doc": "CAN_ACCESS_DATABASE(ARGS),Built-In Functions"
    },
    {
      "index": 660,
      "doc": "mysql_query_attribute_string(name),Loadable Functions"
    }
  ]
}
{
  "index": 308,
  "doc": "SPIDER_COPY_TABLES(spider_table_name, \n  source_link_id, destination_link_id_list [,parameters])\n,Spider Functions",
  "mapping docs": [
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    },
    {
      "index": 47,
      "doc": "CAN_ACCESS_TABLE(ARGS),Built-In Functions"
    },
    {
      "index": 619,
      "doc": "gen_blocklist(str,\n              from_dictionary_name,\n              to_dictionary_name),Loadable Functions"
    },
    {
      "index": 620,
      "doc": "gen_blocklist(str,\n              dictionary_name,\n              replacement_dictionary_name),Loadable Functions"
    }
  ]
}
{
  "index": 309,
  "doc": "SPIDER_DIRECT_SQL('sql', 'tmp_table_list', 'parameters')\n,Spider Functions",
  "mapping docs": [
    {
      "index": 157,
      "doc": "INTERNAL_TABLE_ROWS(ARGS),Built-In Functions"
    },
    {
      "index": 47,
      "doc": "CAN_ACCESS_TABLE(ARGS),Built-In Functions"
    },
    {
      "index": 660,
      "doc": "mysql_query_attribute_string(name),Loadable Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    }
  ]
}
{
  "index": 310,
  "doc": "SPIDER_FLUSH_TABLE_MON_CACHE()\n,Spider Functions",
  "mapping docs": [
    {
      "index": 655,
      "doc": "masking_dictionaries_flush(),Loadable Functions"
    },
    {
      "index": 659,
      "doc": "mysql_firewall_flush_status(),Loadable Functions"
    },
    {
      "index": 617,
      "doc": "flush_rewrite_rules(),Loadable Functions"
    },
    {
      "index": 604,
      "doc": "audit_log_filter_flush(),Loadable Functions"
    }
  ]
}
{
  "index": 311,
  "doc": "SQRT(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 294,
      "doc": "SQRT(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    },
    {
      "index": 204,
      "doc": "LN(X),Built-In Functions"
    },
    {
      "index": 257,
      "doc": "POW(X,Y),Built-In Functions"
    }
  ]
}
{
  "index": 312,
  "doc": "STD(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 11,
      "doc": "STD(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 12,
      "doc": "STDDEV(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 13,
      "doc": "STDDEV_POP(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 313,
  "doc": "STDDEV(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 12,
      "doc": "STDDEV(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 13,
      "doc": "STDDEV_POP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 11,
      "doc": "STD(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 314,
  "doc": "STDDEV_POP(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 13,
      "doc": "STDDEV_POP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 12,
      "doc": "STDDEV(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 16,
      "doc": "VAR_POP(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 315,
  "doc": "STDDEV_SAMP(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 12,
      "doc": "STDDEV(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 17,
      "doc": "VAR_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 13,
      "doc": "STDDEV_POP(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 316,
  "doc": "STRCMP(expr1,expr2)\n,String Functions",
  "mapping docs": [
    {
      "index": 378,
      "doc": "STRCMP(expr1,expr2),Built-In Functions"
    },
    {
      "index": 306,
      "doc": "ST_Difference(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 363,
      "doc": "ST_SymDifference(g1,\n          g2),Built-In Functions"
    }
  ]
}
{
  "index": 317,
  "doc": "STR_TO_DATE(str,format)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 377,
      "doc": "STR_TO_DATE(str,format),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 105,
      "doc": "FORMAT_PICO_TIME(time_val),Built-In Functions"
    }
  ]
}
{
  "index": 318,
  "doc": "ST_Area(poly)\nArea(poly)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 295,
      "doc": "ST_Area({poly|mpoly}),Built-In Functions"
    },
    {
      "index": 301,
      "doc": "ST_Centroid({poly|mpoly}),Built-In Functions"
    },
    {
      "index": 325,
      "doc": "ST_InteriorRingN(poly,\n            N),Built-In Functions"
    },
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 319,
  "doc": "ST_AsBinary(g)\nAsBinary(g)\nST_AsWKB(g)\nAsWKB(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 296,
      "doc": "ST_AsBinary(g\n          [, options]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 339,
      "doc": "ST_LongFromGeoHash(geohash_str),Built-In Functions"
    },
    {
      "index": 343,
      "doc": "ST_MLineFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 320,
  "doc": "ST_AsText(g)\nAsText(g)\nST_AsWKT(g)\nAsWKT(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 298,
      "doc": "ST_AsText(g [,\n          options]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    }
  ]
}
{
  "index": 321,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 322,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 323,
  "doc": "ST_BOUNDARY(g)\nBOUNDARY(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 324,
  "doc": "ST_BUFFER(g1,r)\nBUFFER(g1,r)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 299,
      "doc": "ST_Buffer(g,\n          d [,\n          strategy1 [,\n          strategy2 [,\n          strategy3]]]),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 300,
      "doc": "ST_Buffer_Strategy(strategy\n          [, points_per_circle]),Built-In Functions"
    }
  ]
}
{
  "index": 325,
  "doc": "ST_Centroid(mpoly)\nCentroid(mpoly)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 301,
      "doc": "ST_Centroid({poly|mpoly}),Built-In Functions"
    },
    {
      "index": 295,
      "doc": "ST_Area({poly|mpoly}),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    },
    {
      "index": 360,
      "doc": "ST_SRID(g [,\n            srid]),Built-In Functions"
    }
  ]
}
{
  "index": 326,
  "doc": "ST_CONTAINS(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 303,
      "doc": "ST_Contains(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    }
  ]
}
{
  "index": 327,
  "doc": "ST_ConvexHull(g)\nConvexHull(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 304,
      "doc": "ST_ConvexHull(g),Built-In Functions"
    },
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    },
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    }
  ]
}
{
  "index": 328,
  "doc": "ST_CROSSES(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 305,
      "doc": "ST_Crosses(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 329,
  "doc": "ST_DIFFERENCE(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 306,
      "doc": "ST_Difference(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 309,
      "doc": "ST_Distance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 330,
  "doc": "ST_Dimension(g)\nDimension(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 307,
      "doc": "ST_Dimension(g),Built-In Functions"
    },
    {
      "index": 320,
      "doc": "ST_GeometryType(g),Built-In Functions"
    },
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    },
    {
      "index": 324,
      "doc": "ST_HausdorffDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    }
  ]
}
{
  "index": 331,
  "doc": "ST_DISJOINT(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 308,
      "doc": "ST_Disjoint(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 332,
  "doc": "ST_DISTANCE(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 309,
      "doc": "ST_Distance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    },
    {
      "index": 324,
      "doc": "ST_HausdorffDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 315,
      "doc": "ST_FrechetDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    }
  ]
}
{
  "index": 333,
  "doc": "ST_DISTANCE_SPHERE(g1,g2,[r])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    },
    {
      "index": 309,
      "doc": "ST_Distance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 324,
      "doc": "ST_HausdorffDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 315,
      "doc": "ST_FrechetDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    }
  ]
}
{
  "index": 334,
  "doc": "ST_EndPoint(ls)\nEndPoint(ls)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 311,
      "doc": "ST_EndPoint(ls),Built-In Functions"
    },
    {
      "index": 361,
      "doc": "ST_StartPoint(ls),Built-In Functions"
    },
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    },
    {
      "index": 350,
      "doc": "ST_NumPoints(ls),Built-In Functions"
    }
  ]
}
{
  "index": 335,
  "doc": "ST_ENVELOPE(g)\nENVELOPE(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    },
    {
      "index": 324,
      "doc": "ST_HausdorffDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    },
    {
      "index": 304,
      "doc": "ST_ConvexHull(g),Built-In Functions"
    }
  ]
}
{
  "index": 336,
  "doc": "ST_EQUALS(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 313,
      "doc": "ST_Equals(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 303,
      "doc": "ST_Contains(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 337,
  "doc": "ST_ExteriorRing(poly)\nExteriorRing(poly)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 314,
      "doc": "ST_ExteriorRing(poly),Built-In Functions"
    },
    {
      "index": 325,
      "doc": "ST_InteriorRingN(poly,\n            N),Built-In Functions"
    },
    {
      "index": 349,
      "doc": "ST_NumInteriorRing(poly),Built-In Functions"
    },
    {
      "index": 321,
      "doc": "ST_GeomFromGeoJSON(str\n          [, options [,\n          srid]]),Built-In Functions"
    }
  ]
}
{
  "index": 338,
  "doc": "ST_GeomCollFromText(wkt[,srid])\nST_GeometryCollectionFromText(wkt[,srid])\nGeomCollFromText(wkt[,srid])\nGeometryCollectionFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 317,
      "doc": "ST_GeomCollFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 354,
      "doc": "ST_PointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 357,
      "doc": "ST_PolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 339,
  "doc": "ST_GeomCollFromWKB(wkb[,srid])\nST_GeometryCollectionFromWKB(wkb[,srid])\nGeomCollFromWKB(wkb[,srid])\nGeometryCollectionFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 318,
      "doc": "ST_GeomCollFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 317,
      "doc": "ST_GeomCollFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 355,
      "doc": "ST_PointFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 340,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 341,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 342,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 343,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 344,
  "doc": "ST_GeometryN(gc,N)\nGeometryN(gc,N)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    },
    {
      "index": 320,
      "doc": "ST_GeometryType(g),Built-In Functions"
    },
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    },
    {
      "index": 348,
      "doc": "ST_NumGeometries(gc),Built-In Functions"
    }
  ]
}
{
  "index": 345,
  "doc": "ST_GeometryType(g)\nGeometryType(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 320,
      "doc": "ST_GeometryType(g),Built-In Functions"
    },
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    },
    {
      "index": 348,
      "doc": "ST_NumGeometries(gc),Built-In Functions"
    },
    {
      "index": 307,
      "doc": "ST_Dimension(g),Built-In Functions"
    }
  ]
}
{
  "index": 346,
  "doc": "ST_GeomFromText(wkt[,srid])\nST_GeometryFromText(wkt[,srid])\nGeomFromText(wkt[,srid])\nGeometryFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 354,
      "doc": "ST_PointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 317,
      "doc": "ST_GeomCollFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 346,
      "doc": "ST_MPolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 347,
  "doc": "ST_GeomFromWKB(wkb[,srid])\nST_GeometryFromWKB(wkb[,srid])\nGeomFromWKB(wkb[,srid])\nGeometryFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 347,
      "doc": "ST_MPolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 358,
      "doc": "ST_PolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 345,
      "doc": "ST_MPointFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 348,
  "doc": "ST_InteriorRingN(poly,N)\nInteriorRingN(poly,N)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 325,
      "doc": "ST_InteriorRingN(poly,\n            N),Built-In Functions"
    },
    {
      "index": 314,
      "doc": "ST_ExteriorRing(poly),Built-In Functions"
    },
    {
      "index": 349,
      "doc": "ST_NumInteriorRing(poly),Built-In Functions"
    },
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 349,
  "doc": "ST_INTERSECTION(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 364,
      "doc": "ST_Touches(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 350,
  "doc": "ST_INTERSECTS(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 364,
      "doc": "ST_Touches(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 351,
  "doc": "ST_IsClosed(g)\nIsClosed(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 328,
      "doc": "ST_IsClosed(ls),Built-In Functions"
    },
    {
      "index": 329,
      "doc": "ST_IsEmpty(g),Built-In Functions"
    },
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    },
    {
      "index": 332,
      "doc": "ST_LatFromGeoHash(geohash_str),Built-In Functions"
    }
  ]
}
{
  "index": 352,
  "doc": "ST_IsEmpty(g)\nIsEmpty(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 329,
      "doc": "ST_IsEmpty(g),Built-In Functions"
    },
    {
      "index": 363,
      "doc": "ST_SymDifference(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    },
    {
      "index": 360,
      "doc": "ST_SRID(g [,\n            srid]),Built-In Functions"
    }
  ]
}
{
  "index": 353,
  "doc": "ST_IsRing(g)\nIsRing(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    },
    {
      "index": 332,
      "doc": "ST_LatFromGeoHash(geohash_str),Built-In Functions"
    },
    {
      "index": 339,
      "doc": "ST_LongFromGeoHash(geohash_str),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    }
  ]
}
{
  "index": 354,
  "doc": "ST_IsSimple(g)\nIsSimple(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 330,
      "doc": "ST_IsSimple(g),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 363,
      "doc": "ST_SymDifference(g1,\n          g2),Built-In Functions"
    }
  ]
}
{
  "index": 355,
  "doc": "ST_LENGTH(ls)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 334,
      "doc": "ST_Length(ls\n            [, unit]),Built-In Functions"
    },
    {
      "index": 352,
      "doc": "ST_PointAtDistance(ls,\n          distance),Built-In Functions"
    },
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    },
    {
      "index": 311,
      "doc": "ST_EndPoint(ls),Built-In Functions"
    }
  ]
}
{
  "index": 356,
  "doc": "ST_LineFromText(wkt[,srid])\nST_LineStringFromText(wkt[,srid])\nLineFromText(wkt[,srid])\nLineStringFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 335,
      "doc": "ST_LineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 354,
      "doc": "ST_PointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 346,
      "doc": "ST_MPolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 357,
  "doc": "ST_LineFromWKB(wkb[,srid])\nLineFromWKB(wkb[,srid])\nST_LineStringFromWKB(wkb[,srid])\nLineStringFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 336,
      "doc": "ST_LineFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 335,
      "doc": "ST_LineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 347,
      "doc": "ST_MPolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 358,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 359,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 360,
  "doc": "ST_NumGeometries(gc)\nNumGeometries(gc)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 348,
      "doc": "ST_NumGeometries(gc),Built-In Functions"
    },
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    },
    {
      "index": 320,
      "doc": "ST_GeometryType(g),Built-In Functions"
    },
    {
      "index": 363,
      "doc": "ST_SymDifference(g1,\n          g2),Built-In Functions"
    }
  ]
}
{
  "index": 361,
  "doc": "ST_NumInteriorRings(poly)\nNumInteriorRings(poly)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 349,
      "doc": "ST_NumInteriorRing(poly),Built-In Functions"
    },
    {
      "index": 325,
      "doc": "ST_InteriorRingN(poly,\n            N),Built-In Functions"
    },
    {
      "index": 314,
      "doc": "ST_ExteriorRing(poly),Built-In Functions"
    },
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    }
  ]
}
{
  "index": 362,
  "doc": "ST_NumPoints(ls)\nNumPoints(ls)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 350,
      "doc": "ST_NumPoints(ls),Built-In Functions"
    },
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    },
    {
      "index": 361,
      "doc": "ST_StartPoint(ls),Built-In Functions"
    },
    {
      "index": 311,
      "doc": "ST_EndPoint(ls),Built-In Functions"
    }
  ]
}
{
  "index": 363,
  "doc": "ST_OVERLAPS(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 364,
  "doc": "ST_PointFromText(wkt[,srid])\nPointFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 354,
      "doc": "ST_PointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 317,
      "doc": "ST_GeomCollFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 344,
      "doc": "ST_MPointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 365,
  "doc": "ST_PointFromWKB(wkb[,srid])\nPointFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 355,
      "doc": "ST_PointFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 345,
      "doc": "ST_MPointFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    }
  ]
}
{
  "index": 366,
  "doc": "ST_PointN(ls,N)\nPointN(ls,N)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    },
    {
      "index": 350,
      "doc": "ST_NumPoints(ls),Built-In Functions"
    },
    {
      "index": 361,
      "doc": "ST_StartPoint(ls),Built-In Functions"
    },
    {
      "index": 311,
      "doc": "ST_EndPoint(ls),Built-In Functions"
    }
  ]
}
{
  "index": 367,
  "doc": "ST_PointOnSurface(g)\nPointOnSurface(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    },
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    },
    {
      "index": 319,
      "doc": "ST_GeometryN(gc,\n            N),Built-In Functions"
    },
    {
      "index": 360,
      "doc": "ST_SRID(g [,\n            srid]),Built-In Functions"
    }
  ]
}
{
  "index": 368,
  "doc": "ST_PolyFromText(wkt[,srid])\nST_PolygonFromText(wkt[,srid])\nPolyFromText(wkt[,srid])\nPolygonFromText(wkt[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 357,
      "doc": "ST_PolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 322,
      "doc": "ST_GeomFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 317,
      "doc": "ST_GeomCollFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 346,
      "doc": "ST_MPolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 369,
  "doc": "ST_PolyFromWKB(wkb[,srid])\nST_PolygonFromWKB(wkb[,srid])\nPolyFromWKB(wkb[,srid])\nPolygonFromWKB(wkb[,srid])\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 358,
      "doc": "ST_PolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 323,
      "doc": "ST_GeomFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 347,
      "doc": "ST_MPolyFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 318,
      "doc": "ST_GeomCollFromWKB(wkb\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 370,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 371,
  "doc": ",No Category",
  "mapping docs": [
    {
      "index": 57,
      "doc": "COALESCE(value,...),Built-In Functions"
    },
    {
      "index": 80,
      "doc": "DATABASE(),Built-In Functions"
    },
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 282,
      "doc": "SCHEMA(),Built-In Functions"
    }
  ]
}
{
  "index": 372,
  "doc": "ST_Relate(g1, g2, i)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 309,
      "doc": "ST_Distance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    }
  ]
}
{
  "index": 373,
  "doc": "ST_SRID(g)\nSRID(g)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 360,
      "doc": "ST_SRID(g [,\n            srid]),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    },
    {
      "index": 321,
      "doc": "ST_GeomFromGeoJSON(str\n          [, options [,\n          srid]]),Built-In Functions"
    },
    {
      "index": 316,
      "doc": "ST_GeoHash(longitude,\n          latitude,\n          max_length),Built-In Functions"
    }
  ]
}
{
  "index": 374,
  "doc": "ST_StartPoint(ls)\nStartPoint(ls)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 361,
      "doc": "ST_StartPoint(ls),Built-In Functions"
    },
    {
      "index": 311,
      "doc": "ST_EndPoint(ls),Built-In Functions"
    },
    {
      "index": 356,
      "doc": "ST_PointN(ls,\n            N),Built-In Functions"
    },
    {
      "index": 350,
      "doc": "ST_NumPoints(ls),Built-In Functions"
    }
  ]
}
{
  "index": 375,
  "doc": "ST_SYMDIFFERENCE(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 363,
      "doc": "ST_SymDifference(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 324,
      "doc": "ST_HausdorffDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    },
    {
      "index": 315,
      "doc": "ST_FrechetDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    }
  ]
}
{
  "index": 376,
  "doc": "ST_TOUCHES(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 364,
      "doc": "ST_Touches(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 377,
  "doc": "ST_UNION(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 366,
      "doc": "ST_Union(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    }
  ]
}
{
  "index": 378,
  "doc": "ST_WITHIN(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 306,
      "doc": "ST_Difference(g1,\n          g2),Built-In Functions"
    }
  ]
}
{
  "index": 379,
  "doc": "ST_X(p)\nX(p)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 369,
      "doc": "ST_X(p [,\n            new_x_val]),Built-In Functions"
    },
    {
      "index": 340,
      "doc": "ST_Longitude(p\n            [, new_longitude_val]),Built-In Functions"
    },
    {
      "index": 333,
      "doc": "ST_Latitude(p\n            [, new_latitude_val]),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    }
  ]
}
{
  "index": 380,
  "doc": "ST_Y(p)\nY(p)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 370,
      "doc": "ST_Y(p [,\n            new_y_val]),Built-In Functions"
    },
    {
      "index": 340,
      "doc": "ST_Longitude(p\n            [, new_longitude_val]),Built-In Functions"
    },
    {
      "index": 333,
      "doc": "ST_Latitude(p\n            [, new_latitude_val]),Built-In Functions"
    },
    {
      "index": 353,
      "doc": "ST_PointFromGeoHash(geohash_str,\n          srid),Built-In Functions"
    }
  ]
}
{
  "index": 381,
  "doc": "SUBDATE(date,INTERVAL expr unit), SUBDATE(expr,days)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 379,
      "doc": "SUBDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 22,
      "doc": "ADDDATE(date,INTERVAL\n          expr\nunit),Built-In Functions"
    },
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 382,
  "doc": ",String Functions",
  "mapping docs": [
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 238,
      "doc": "MultiLineString(ls\n          [, ls] ...),Built-In Functions"
    }
  ]
}
{
  "index": 383,
  "doc": "SUBSTRING(str,pos), \nSUBSTRING(str FROM pos), \nSUBSTRING(str,pos,len),\nSUBSTRING(str FROM pos FOR len)\n\nSUBSTR(str,pos), \nSUBSTR(str FROM pos), \nSUBSTR(str,pos,len),\nSUBSTR(str FROM pos FOR len)\n,String Functions",
  "mapping docs": [
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    },
    {
      "index": 232,
      "doc": "MID(str,pos,len),Built-In Functions"
    }
  ]
}
{
  "index": 384,
  "doc": "SUBSTRING_INDEX(str,delim,count)\n,String Functions",
  "mapping docs": [
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 272,
      "doc": "REPEAT(str,count),Built-In Functions"
    }
  ]
}
{
  "index": 385,
  "doc": "SUBTIME(expr1,expr2)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 383,
      "doc": "SUBTIME(expr1,expr2),Built-In Functions"
    },
    {
      "index": 23,
      "doc": "ADDTIME(expr1,expr2),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 386,
  "doc": "SUM([DISTINCT] expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 5,
      "doc": "COUNT(DISTINCT\n            expr,[expr...]),Aggregate Functions"
    },
    {
      "index": 0,
      "doc": "AVG([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 10,
      "doc": "MIN([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 387,
  "doc": "SYSDATE([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 81,
      "doc": "DATE(expr),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    },
    {
      "index": 108,
      "doc": "FROM_UNIXTIME(unix_timestamp[,format]),Built-In Functions"
    },
    {
      "index": 84,
      "doc": "DATE_SUB(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 388,
  "doc": "SYSTEM_USER()\n,Information Functions",
  "mapping docs": [
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 78,
      "doc": "CURRENT_USER,Built-In Functions"
    },
    {
      "index": 285,
      "doc": "SESSION_USER(),Built-In Functions"
    },
    {
      "index": 149,
      "doc": "INTERNAL_GET_USERNAME(ARGS),Built-In Functions"
    }
  ]
}
{
  "index": 389,
  "doc": "sys.sys_get_config(name,default)\n,No Category",
  "mapping docs": [
    {
      "index": 148,
      "doc": "INTERNAL_GET_HOSTNAME(ARGS),Built-In Functions"
    },
    {
      "index": 91,
      "doc": "DEFAULT(col_name),Built-In Functions"
    },
    {
      "index": 112,
      "doc": "GET_DD_CREATE_OPTIONS(ARGS),Built-In Functions"
    },
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    }
  ]
}
{
  "index": 390,
  "doc": "SYS_GUID()\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 136,
      "doc": "INET_NTOA(expr),Built-In Functions"
    },
    {
      "index": 410,
      "doc": "UUID(),Built-In Functions"
    },
    {
      "index": 259,
      "doc": "PS_CURRENT_THREAD_ID(),Built-In Functions"
    }
  ]
}
{
  "index": 391,
  "doc": "TAN(X)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 387,
      "doc": "TAN(X),Built-In Functions"
    },
    {
      "index": 35,
      "doc": "ATAN(Y,X),Built-In Functions"
    },
    {
      "index": 34,
      "doc": "ATAN(X),Built-In Functions"
    },
    {
      "index": 263,
      "doc": "RADIANS(X),Built-In Functions"
    }
  ]
}
{
  "index": 392,
  "doc": "TIME(expr)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 388,
      "doc": "TIME(expr),Built-In Functions"
    },
    {
      "index": 23,
      "doc": "ADDTIME(expr1,expr2),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 383,
      "doc": "SUBTIME(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 393,
  "doc": "TIMEDIFF(expr1,expr2)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 391,
      "doc": "TIMEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 85,
      "doc": "DATEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 23,
      "doc": "ADDTIME(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 394,
  "doc": "TIMESTAMP(expr), TIMESTAMP(expr1,expr2)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 392,
      "doc": "TIMESTAMP(expr),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    },
    {
      "index": 383,
      "doc": "SUBTIME(expr1,expr2),Built-In Functions"
    }
  ]
}
{
  "index": 395,
  "doc": "TIMESTAMPADD(unit,interval,datetime_expr)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 392,
      "doc": "TIMESTAMP(expr),Built-In Functions"
    },
    {
      "index": 82,
      "doc": "DATE_ADD(date,INTERVAL\n          expr\nunit),Built-In Functions"
    }
  ]
}
{
  "index": 396,
  "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 391,
      "doc": "TIMEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 85,
      "doc": "DATEDIFF(expr1,expr2),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    }
  ]
}
{
  "index": 397,
  "doc": "TIME_FORMAT(time,format)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 105,
      "doc": "FORMAT_PICO_TIME(time_val),Built-In Functions"
    },
    {
      "index": 108,
      "doc": "FROM_UNIXTIME(unix_timestamp[,format]),Built-In Functions"
    }
  ]
}
{
  "index": 398,
  "doc": "TIME_TO_SEC(time)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 390,
      "doc": "TIME_TO_SEC(time),Built-In Functions"
    },
    {
      "index": 283,
      "doc": "SEC_TO_TIME(seconds),Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    },
    {
      "index": 105,
      "doc": "FORMAT_PICO_TIME(time_val),Built-In Functions"
    }
  ]
}
{
  "index": 399,
  "doc": "Touches(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 364,
      "doc": "ST_Touches(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 327,
      "doc": "ST_Intersects(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    }
  ]
}
{
  "index": 400,
  "doc": "TO_BASE64(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 42,
      "doc": "BIT_LENGTH(str),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    }
  ]
}
{
  "index": 401,
  "doc": "TO_CHAR(expr[, fmt])\n,String Functions",
  "mapping docs": [
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    },
    {
      "index": 54,
      "doc": "CHAR_LENGTH(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 214,
      "doc": "LTRIM(str),Built-In Functions"
    }
  ]
}
{
  "index": 402,
  "doc": "TO_DAYS(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 395,
      "doc": "TO_DAYS(date),Built-In Functions"
    },
    {
      "index": 86,
      "doc": "DAY(date),Built-In Functions"
    },
    {
      "index": 87,
      "doc": "DAYNAME(date),Built-In Functions"
    },
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    }
  ]
}
{
  "index": 403,
  "doc": "TO_SECONDS(expr)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 396,
      "doc": "TO_SECONDS(expr),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 283,
      "doc": "SEC_TO_TIME(seconds),Built-In Functions"
    },
    {
      "index": 388,
      "doc": "TIME(expr),Built-In Functions"
    }
  ]
}
{
  "index": 404,
  "doc": "TRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr FROM] str)\nFrom MariaDB 10.3.6TRIM_ORACLE([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr FROM] str)\n,String Functions",
  "mapping docs": [
    {
      "index": 397,
      "doc": "TRIM([{BOTH | LEADING | TRAILING}\n          [remstr] FROM]\n          str),Built-In Functions"
    },
    {
      "index": 62,
      "doc": "CONCAT_WS(separator,str1,str2,...),Built-In Functions"
    },
    {
      "index": 201,
      "doc": "LEFT(str,len),Built-In Functions"
    },
    {
      "index": 232,
      "doc": "MID(str,pos,len),Built-In Functions"
    }
  ]
}
{
  "index": 405,
  "doc": "TRUNCATE(X,D)\n,Numeric Functions",
  "mapping docs": [
    {
      "index": 398,
      "doc": "TRUNCATE(X,D),Built-In Functions"
    },
    {
      "index": 297,
      "doc": "ST_AsGeoJSON(g\n          [, max_dec_digits [,\n          options]]),Built-In Functions"
    },
    {
      "index": 359,
      "doc": "ST_Simplify(g,\n          max_distance),Built-In Functions"
    },
    {
      "index": 244,
      "doc": "NTH_VALUE(expr,\n            N),Built-In Functions"
    }
  ]
}
{
  "index": 406,
  "doc": "UCASE(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 399,
      "doc": "UCASE(str),Built-In Functions"
    },
    {
      "index": 198,
      "doc": "LCASE(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    }
  ]
}
{
  "index": 407,
  "doc": "UNCOMPRESS(string_to_uncompress)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 400,
      "doc": "UNCOMPRESS(string_to_uncompress),Built-In Functions"
    },
    {
      "index": 60,
      "doc": "COMPRESS(string_to_compress),Built-In Functions"
    },
    {
      "index": 401,
      "doc": "UNCOMPRESSED_LENGTH(compressed_string),Built-In Functions"
    },
    {
      "index": 598,
      "doc": "asymmetric_encrypt(algorithm,\n          data_str,\n          pub_key_str),Loadable Functions"
    }
  ]
}
{
  "index": 408,
  "doc": "UNCOMPRESSED_LENGTH(compressed_string)\n,Encryption, Hashing and Compression Functions",
  "mapping docs": [
    {
      "index": 401,
      "doc": "UNCOMPRESSED_LENGTH(compressed_string),Built-In Functions"
    },
    {
      "index": 60,
      "doc": "COMPRESS(string_to_compress),Built-In Functions"
    },
    {
      "index": 400,
      "doc": "UNCOMPRESS(string_to_uncompress),Built-In Functions"
    },
    {
      "index": 287,
      "doc": "SHA2(str,\n          hash_length),Built-In Functions"
    }
  ]
}
{
  "index": 409,
  "doc": "UNHEX(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 402,
      "doc": "UNHEX(str),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 56,
      "doc": "CHARSET(str),Built-In Functions"
    }
  ]
}
{
  "index": 410,
  "doc": "UNIX_TIMESTAMP()\nUNIX_TIMESTAMP(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 108,
      "doc": "FROM_UNIXTIME(unix_timestamp[,format]),Built-In Functions"
    },
    {
      "index": 403,
      "doc": "UNIX_TIMESTAMP([date]),Built-In Functions"
    },
    {
      "index": 394,
      "doc": "TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2),Built-In Functions"
    },
    {
      "index": 393,
      "doc": "TIMESTAMPADD(unit,interval,datetime_expr),Built-In Functions"
    }
  ]
}
{
  "index": 411,
  "doc": "UpdateXML(xml_target, xpath_expr, new_xml)\n,String Functions",
  "mapping docs": [
    {
      "index": 404,
      "doc": "UpdateXML(xml_target,\n          xpath_expr,\n          new_xml),Built-In Functions"
    },
    {
      "index": 98,
      "doc": "ExtractValue(xml_frag,\n          xpath_expr),Built-In Functions"
    },
    {
      "index": 369,
      "doc": "ST_X(p [,\n            new_x_val]),Built-In Functions"
    },
    {
      "index": 273,
      "doc": "REPLACE(str,from_str,to_str),Built-In Functions"
    }
  ]
}
{
  "index": 412,
  "doc": "UPPER(str)\nUCASE(str)\n,String Functions",
  "mapping docs": [
    {
      "index": 399,
      "doc": "UCASE(str),Built-In Functions"
    },
    {
      "index": 381,
      "doc": "SUBSTRING(str,pos),Built-In Functions"
    },
    {
      "index": 380,
      "doc": "SUBSTR(str,pos),Built-In Functions"
    },
    {
      "index": 198,
      "doc": "LCASE(str),Built-In Functions"
    }
  ]
}
{
  "index": 413,
  "doc": "USER()\n,Information Functions",
  "mapping docs": [
    {
      "index": 78,
      "doc": "CURRENT_USER,Built-In Functions"
    },
    {
      "index": 386,
      "doc": "SYSTEM_USER(),Built-In Functions"
    },
    {
      "index": 285,
      "doc": "SESSION_USER(),Built-In Functions"
    },
    {
      "index": 406,
      "doc": "USER(),Built-In Functions"
    }
  ]
}
{
  "index": 414,
  "doc": "UTC_DATE, UTC_DATE()\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 407,
      "doc": "UTC_DATE,Built-In Functions"
    },
    {
      "index": 408,
      "doc": "UTC_TIME,Built-In Functions"
    },
    {
      "index": 409,
      "doc": "UTC_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    }
  ]
}
{
  "index": 415,
  "doc": "UTC_TIME\nUTC_TIME([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 408,
      "doc": "UTC_TIME,Built-In Functions"
    },
    {
      "index": 409,
      "doc": "UTC_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 407,
      "doc": "UTC_DATE,Built-In Functions"
    },
    {
      "index": 389,
      "doc": "TIME_FORMAT(time,format),Built-In Functions"
    }
  ]
}
{
  "index": 416,
  "doc": "UTC_TIMESTAMP\nUTC_TIMESTAMP([precision])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 409,
      "doc": "UTC_TIMESTAMP,Built-In Functions"
    },
    {
      "index": 408,
      "doc": "UTC_TIME,Built-In Functions"
    },
    {
      "index": 407,
      "doc": "UTC_DATE,Built-In Functions"
    },
    {
      "index": 108,
      "doc": "FROM_UNIXTIME(unix_timestamp[,format]),Built-In Functions"
    }
  ]
}
{
  "index": 417,
  "doc": "UUID()\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 162,
      "doc": "IS_UUID(string_uuid),Built-In Functions"
    },
    {
      "index": 410,
      "doc": "UUID(),Built-In Functions"
    },
    {
      "index": 412,
      "doc": "UUID_TO_BIN(string_uuid),Built-In Functions"
    },
    {
      "index": 39,
      "doc": "BIN_TO_UUID(binary_uuid),Built-In Functions"
    }
  ]
}
{
  "index": 418,
  "doc": "UUID_SHORT()\n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 411,
      "doc": "UUID_SHORT(),Built-In Functions"
    },
    {
      "index": 162,
      "doc": "IS_UUID(string_uuid),Built-In Functions"
    },
    {
      "index": 412,
      "doc": "UUID_TO_BIN(string_uuid),Built-In Functions"
    },
    {
      "index": 410,
      "doc": "UUID(),Built-In Functions"
    }
  ]
}
{
  "index": 419,
  "doc": "MariaDB starting with 10.3.3VALUE(col_name) \nMariaDB until 10.3.2VALUES(col_name) \n,Miscellaneous Functions",
  "mapping docs": [
    {
      "index": 414,
      "doc": "VALUES(col_name),Built-In Functions"
    },
    {
      "index": 91,
      "doc": "DEFAULT(col_name),Built-In Functions"
    },
    {
      "index": 660,
      "doc": "mysql_query_attribute_string(name),Loadable Functions"
    },
    {
      "index": 99,
      "doc": "FIELD(str,str1,str2,str3,...),Built-In Functions"
    }
  ]
}
{
  "index": 420,
  "doc": "VARIANCE(expr) \n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 18,
      "doc": "VARIANCE(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 17,
      "doc": "VAR_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 16,
      "doc": "VAR_POP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 15,
      "doc": "SUM([DISTINCT]\n            expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 421,
  "doc": "VAR_POP(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 16,
      "doc": "VAR_POP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 13,
      "doc": "STDDEV_POP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 17,
      "doc": "VAR_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 18,
      "doc": "VARIANCE(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 422,
  "doc": "VAR_SAMP(expr)\n,Aggregate Functions",
  "mapping docs": [
    {
      "index": 17,
      "doc": "VAR_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 14,
      "doc": "STDDEV_SAMP(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 18,
      "doc": "VARIANCE(expr)\n            [over_clause],Aggregate Functions"
    },
    {
      "index": 16,
      "doc": "VAR_POP(expr)\n            [over_clause],Aggregate Functions"
    }
  ]
}
{
  "index": 423,
  "doc": "VEC_DISTANCE(v, s)\n,Vector Functions",
  "mapping docs": [
    {
      "index": 352,
      "doc": "ST_PointAtDistance(ls,\n          distance),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    },
    {
      "index": 309,
      "doc": "ST_Distance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    },
    {
      "index": 315,
      "doc": "ST_FrechetDistance(g1,\n            g2 [,\n            unit]),Built-In Functions"
    }
  ]
}
{
  "index": 424,
  "doc": "VEC_FromText(s)\n,Vector Functions",
  "mapping docs": [
    {
      "index": 357,
      "doc": "ST_PolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 354,
      "doc": "ST_PointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 335,
      "doc": "ST_LineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 342,
      "doc": "ST_MLineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 425,
  "doc": "VEC_ToText(v)\n,Vector Functions",
  "mapping docs": [
    {
      "index": 357,
      "doc": "ST_PolyFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 354,
      "doc": "ST_PointFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    },
    {
      "index": 298,
      "doc": "ST_AsText(g [,\n          options]),Built-In Functions"
    },
    {
      "index": 342,
      "doc": "ST_MLineFromText(wkt\n          [, srid [,\n          options]]),Built-In Functions"
    }
  ]
}
{
  "index": 426,
  "doc": "VERSION()\n,Information Functions",
  "mapping docs": [
    {
      "index": 418,
      "doc": "VERSION(),Built-In Functions"
    },
    {
      "index": 676,
      "doc": "version_tokens_show(),Loadable Functions"
    },
    {
      "index": 131,
      "doc": "ICU_VERSION(),Built-In Functions"
    },
    {
      "index": 672,
      "doc": "version_tokens_edit(token_list),Loadable Functions"
    }
  ]
}
{
  "index": 427,
  "doc": "sys.version_major()\n,No Category",
  "mapping docs": [
    {
      "index": 418,
      "doc": "VERSION(),Built-In Functions"
    },
    {
      "index": 676,
      "doc": "version_tokens_show(),Loadable Functions"
    },
    {
      "index": 131,
      "doc": "ICU_VERSION(),Built-In Functions"
    },
    {
      "index": 671,
      "doc": "version_tokens_delete(name_list),Loadable Functions"
    }
  ]
}
{
  "index": 428,
  "doc": "sys.version_minor()\n,No Category",
  "mapping docs": [
    {
      "index": 418,
      "doc": "VERSION(),Built-In Functions"
    },
    {
      "index": 671,
      "doc": "version_tokens_delete(name_list),Loadable Functions"
    },
    {
      "index": 676,
      "doc": "version_tokens_show(),Loadable Functions"
    },
    {
      "index": 675,
      "doc": "version_tokens_set(token_list),Loadable Functions"
    }
  ]
}
{
  "index": 429,
  "doc": "sys.version_patch()\n,No Category",
  "mapping docs": [
    {
      "index": 418,
      "doc": "VERSION(),Built-In Functions"
    },
    {
      "index": 676,
      "doc": "version_tokens_show(),Loadable Functions"
    },
    {
      "index": 675,
      "doc": "version_tokens_set(token_list),Loadable Functions"
    },
    {
      "index": 271,
      "doc": "RELEASE_LOCK(str),Built-In Functions"
    }
  ]
}
{
  "index": 430,
  "doc": "WEEK(date[,mode])\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 420,
      "doc": "WEEK(date[,mode]),Built-In Functions"
    },
    {
      "index": 89,
      "doc": "DAYOFWEEK(date),Built-In Functions"
    },
    {
      "index": 425,
      "doc": "YEARWEEK(date),Built-In Functions"
    },
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    }
  ]
}
{
  "index": 431,
  "doc": "WEEKDAY(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 421,
      "doc": "WEEKDAY(date),Built-In Functions"
    },
    {
      "index": 89,
      "doc": "DAYOFWEEK(date),Built-In Functions"
    },
    {
      "index": 420,
      "doc": "WEEK(date[,mode]),Built-In Functions"
    },
    {
      "index": 425,
      "doc": "YEARWEEK(date),Built-In Functions"
    }
  ]
}
{
  "index": 432,
  "doc": "WEEKOFYEAR(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 422,
      "doc": "WEEKOFYEAR(date),Built-In Functions"
    },
    {
      "index": 425,
      "doc": "YEARWEEK(date),Built-In Functions"
    },
    {
      "index": 89,
      "doc": "DAYOFWEEK(date),Built-In Functions"
    },
    {
      "index": 420,
      "doc": "WEEK(date[,mode]),Built-In Functions"
    }
  ]
}
{
  "index": 433,
  "doc": "WEIGHT_STRING(str [AS {CHAR|BINARY}(N)] [LEVEL levels] [flags])\n  levels: N [ASC|DESC|REVERSE] [, N [ASC|DESC|REVERSE]] ... \n,String Functions",
  "mapping docs": [
    {
      "index": 423,
      "doc": "WEIGHT_STRING(str\n          [AS {CHAR|BINARY}(N)]\n          [flags]),Built-In Functions"
    },
    {
      "index": 27,
      "doc": "ASCII(str),Built-In Functions"
    },
    {
      "index": 274,
      "doc": "REVERSE(str),Built-In Functions"
    },
    {
      "index": 382,
      "doc": "SUBSTRING_INDEX(str,delim,count),Built-In Functions"
    }
  ]
}
{
  "index": 434,
  "doc": "Within(g1,g2)\n,Geographic Functions",
  "mapping docs": [
    {
      "index": 368,
      "doc": "ST_Within(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 351,
      "doc": "ST_Overlaps(g1,\n            g2),Built-In Functions"
    },
    {
      "index": 310,
      "doc": "ST_Distance_Sphere(g1,\n          g2 [,\n          radius]),Built-In Functions"
    },
    {
      "index": 326,
      "doc": "ST_Intersection(g1,\n          g2),Built-In Functions"
    }
  ]
}
{
  "index": 435,
  "doc": "WSREP_LAST_SEEN_GTID()\n,Galera Functions",
  "mapping docs": [
    {
      "index": 331,
      "doc": "ST_IsValid(g),Built-In Functions"
    },
    {
      "index": 196,
      "doc": "LAST_INSERT_ID(),Built-In Functions"
    },
    {
      "index": 197,
      "doc": "LAST_VALUE(expr),Built-In Functions"
    },
    {
      "index": 328,
      "doc": "ST_IsClosed(ls),Built-In Functions"
    }
  ]
}
{
  "index": 436,
  "doc": "WSREP_LAST_WRITTEN_GTID()\n,Galera Functions",
  "mapping docs": [
    {
      "index": 196,
      "doc": "LAST_INSERT_ID(),Built-In Functions"
    },
    {
      "index": 331,
      "doc": "ST_IsValid(g),Built-In Functions"
    },
    {
      "index": 197,
      "doc": "LAST_VALUE(expr),Built-In Functions"
    },
    {
      "index": 328,
      "doc": "ST_IsClosed(ls),Built-In Functions"
    }
  ]
}
{
  "index": 437,
  "doc": "WSREP_SYNC_WAIT_UPTO_GTID(gtid[,timeout])\n,Galera Functions",
  "mapping docs": [
    {
      "index": 419,
      "doc": "WAIT_FOR_EXECUTED_GTID_SET(gtid_set[,\n            timeout]),Built-In Functions"
    },
    {
      "index": 218,
      "doc": "MASTER_POS_WAIT(log_name,log_pos[,timeout][,channel]),Built-In Functions"
    },
    {
      "index": 292,
      "doc": "SOURCE_POS_WAIT(log_name,log_pos[,timeout][,channel]),Built-In Functions"
    },
    {
      "index": 666,
      "doc": "service_get_read_locks(namespace,\n                lock_name[,\n                lock_name] ...,\n                timeout),Loadable Functions"
    }
  ]
}
{
  "index": 438,
  "doc": "YEAR(date)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 424,
      "doc": "YEAR(date),Built-In Functions"
    },
    {
      "index": 90,
      "doc": "DAYOFYEAR(date),Built-In Functions"
    },
    {
      "index": 83,
      "doc": "DATE_FORMAT(date,format),Built-In Functions"
    },
    {
      "index": 425,
      "doc": "YEARWEEK(date),Built-In Functions"
    }
  ]
}
{
  "index": 439,
  "doc": "YEARWEEK(date), YEARWEEK(date,mode)\n,Date & Time Functions",
  "mapping docs": [
    {
      "index": 425,
      "doc": "YEARWEEK(date),Built-In Functions"
    },
    {
      "index": 420,
      "doc": "WEEK(date[,mode]),Built-In Functions"
    },
    {
      "index": 89,
      "doc": "DAYOFWEEK(date),Built-In Functions"
    },
    {
      "index": 422,
      "doc": "WEEKOFYEAR(date),Built-In Functions"
    }
  ]
}
